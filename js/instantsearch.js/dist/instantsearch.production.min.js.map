{"version":3,"file":"instantsearch.production.min.js","sources":["../src/lib/utils/addWidgetId.ts","../src/lib/utils/noop.ts","../src/lib/utils/logger.ts","../src/lib/utils/getObjectType.ts","../src/lib/utils/checkRendering.ts","../src/lib/utils/clearRefinements.ts","../src/lib/utils/escape-html.ts","../src/lib/utils/isPlainObject.ts","../src/lib/utils/escape-highlight.ts","../src/lib/utils/concatHighlightedParts.ts","../src/lib/utils/createSendEventForFacet.ts","../src/lib/utils/isFacetRefined.ts","../src/lib/utils/serializer.ts","../src/lib/utils/createSendEventForHits.ts","../src/lib/utils/isIndexWidget.ts","../src/lib/utils/setIndexHelperState.ts","../src/lib/utils/debounce.ts","../src/lib/utils/defer.ts","../src/lib/utils/documentation.ts","../src/lib/utils/escapeFacetValue.ts","../src/lib/utils/find.ts","../src/lib/utils/geo-search.ts","../src/lib/utils/getContainerNode.ts","../src/lib/utils/isDomElement.ts","../src/lib/utils/getHighlightedParts.ts","../src/lib/utils/getHighlightFromSiblings.ts","../src/lib/utils/getPropertyByPath.ts","../src/lib/utils/getRefinements.ts","../src/lib/utils/getWidgetAttribute.ts","../src/lib/utils/hits-absolute-position.ts","../src/lib/utils/hits-query-id.ts","../src/lib/utils/hydrateSearchClient.ts","../src/lib/utils/isEqual.ts","../src/lib/utils/isFiniteNumber.ts","../src/lib/utils/isSpecialClick.ts","../src/lib/utils/uniq.ts","../src/lib/utils/mergeSearchParameters.ts","../src/lib/utils/findIndex.ts","../src/lib/utils/omit.ts","../src/lib/utils/range.ts","../src/lib/utils/render-args.ts","../src/lib/utils/reverseHighlightedParts.ts","../src/lib/utils/safelyRunOnBrowser.ts","../src/lib/utils/toArray.ts","../src/connectors/answers/connectAnswers.ts","../src/lib/utils/createConcurrentSafePromise.ts","../src/connectors/dynamic-widgets/connectDynamicWidgets.ts","../src/connectors/clear-refinements/connectClearRefinements.ts","../src/connectors/current-refinements/connectCurrentRefinements.ts","../src/connectors/hierarchical-menu/connectHierarchicalMenu.ts","../src/connectors/hits/connectHits.ts","../src/lib/insights/client.ts","../../../node_modules/preact/dist/preact.module.js","../src/helpers/insights.ts","../src/lib/insights/listener.tsx","../src/connectors/hits-per-page/connectHitsPerPage.ts","../src/connectors/hits/connectHitsWithInsights.ts","../src/connectors/infinite-hits/connectInfiniteHits.ts","../src/lib/utils/walkIndex.ts","../src/connectors/menu/connectMenu.ts","../src/connectors/infinite-hits/connectInfiniteHitsWithInsights.ts","../src/connectors/numeric-menu/connectNumericMenu.ts","../src/connectors/pagination/connectPagination.ts","../src/connectors/pagination/Paginator.ts","../src/connectors/range/connectRange.ts","../src/connectors/refinement-list/connectRefinementList.ts","../src/connectors/related-products/connectRelatedProducts.ts","../src/connectors/search-box/connectSearchBox.ts","../src/connectors/sort-by/connectSortBy.ts","../src/connectors/rating-menu/connectRatingMenu.ts","../src/connectors/stats/connectStats.ts","../src/connectors/toggle-refinement/connectToggleRefinement.ts","../src/connectors/trending-items/connectTrendingItems.ts","../src/connectors/breadcrumb/connectBreadcrumb.ts","../src/connectors/geo-search/connectGeoSearch.ts","../src/connectors/powered-by/connectPoweredBy.ts","../../../node_modules/@algolia/events/events.js","../../algoliasearch-helper/src/functions/inherits.js","../../algoliasearch-helper/src/DerivedHelper/index.js","../../algoliasearch-helper/src/functions/escapeFacetValue.js","../../algoliasearch-helper/src/functions/merge.js","../../algoliasearch-helper/src/functions/objectHasKeys.js","../../algoliasearch-helper/src/functions/omit.js","../../algoliasearch-helper/src/RecommendParameters/index.js","../../algoliasearch-helper/src/RecommendResults/index.js","../../algoliasearch-helper/src/requestBuilder.js","../../algoliasearch-helper/src/functions/defaultsPure.js","../../algoliasearch-helper/src/functions/find.js","../../algoliasearch-helper/src/functions/intersection.js","../../algoliasearch-helper/src/functions/valToNumber.js","../../algoliasearch-helper/src/SearchParameters/RefinementList.js","../../algoliasearch-helper/src/SearchParameters/index.js","../../algoliasearch-helper/src/utils/isValidUserToken.js","../../algoliasearch-helper/src/functions/compact.js","../../algoliasearch-helper/src/functions/findIndex.js","../../algoliasearch-helper/src/functions/formatSort.js","../../algoliasearch-helper/src/functions/orderBy.js","../../algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","../../algoliasearch-helper/src/SearchResults/index.js","../../algoliasearch-helper/src/utils/sortAndMergeRecommendations.js","../../algoliasearch-helper/src/functions/flat.js","../../algoliasearch-helper/src/version.js","../../algoliasearch-helper/src/algoliasearch.helper.js","../../algoliasearch-helper/index.js","../src/connectors/configure/connectConfigure.ts","../src/connectors/configure-related-items/connectConfigureRelatedItems.ts","../src/connectors/autocomplete/connectAutocomplete.ts","../src/connectors/query-rules/connectQueryRules.ts","../src/lib/voiceSearchHelper/index.ts","../src/connectors/voice-search/connectVoiceSearch.ts","../src/connectors/relevant-sort/connectRelevantSort.ts","../src/connectors/frequently-bought-together/connectFrequentlyBoughtTogether.ts","../src/connectors/looking-similar/connectLookingSimilar.ts","../src/lib/suit.ts","../src/connectors/index.ts","../src/helpers/highlight.ts","../src/helpers/reverseHighlight.ts","../src/helpers/snippet.ts","../src/helpers/reverseSnippet.ts","../src/helpers/get-insights-anonymous-user-token.ts","../src/lib/infiniteHitsCache/sessionStorage.ts","../src/middlewares/createInsightsMiddleware.ts","../src/lib/utils/getAppIdAndApiKey.ts","../src/middlewares/createMetadataMiddleware.ts","../node_modules/qs/lib/utils.js","../node_modules/qs/lib/stringify.js","../src/lib/routers/history.ts","../node_modules/qs/lib/formats.js","../node_modules/qs/lib/parse.js","../node_modules/qs/lib/index.js","../src/lib/stateMappings/simple.ts","../src/middlewares/createRouterMiddleware.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../../../node_modules/@babel/runtime/helpers/typeof.js","../../../node_modules/@babel/runtime/helpers/toPrimitive.js","../../../node_modules/@babel/runtime/helpers/toPropertyKey.js","../../../node_modules/@babel/runtime/helpers/defineProperty.js","../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../../instantsearch-ui-components/dist/es/lib/cx.js","../../instantsearch-ui-components/dist/es/components/recommend-shared/DefaultEmpty.js","../../instantsearch-ui-components/dist/es/components/recommend-shared/DefaultHeader.js","../../instantsearch-ui-components/dist/es/components/recommend-shared/DefaultItem.js","../../instantsearch-ui-components/dist/es/components/recommend-shared/ListView.js","../../instantsearch-ui-components/dist/es/components/FrequentlyBoughtTogether.js","../../instantsearch-ui-components/dist/es/components/Highlight.js","../../instantsearch-ui-components/dist/es/components/Hits.js","../../instantsearch-ui-components/dist/es/components/LookingSimilar.js","../../instantsearch-ui-components/dist/es/components/RelatedProducts.js","../../instantsearch-ui-components/dist/es/components/TrendingItems.js","../src/lib/templating/prepareTemplateProps.ts","../../../node_modules/hogan.js/lib/compiler.js","../../../node_modules/hogan.js/lib/template.js","../../../node_modules/hogan.js/lib/hogan.js","../../../node_modules/htm/dist/htm.module.js","../../../node_modules/htm/preact/index.module.js","../src/components/InternalHighlight/InternalHighlight.tsx","../src/components/Highlight/Highlight.tsx","../src/helpers/components/Highlight.tsx","../src/components/ReverseHighlight/ReverseHighlight.tsx","../src/helpers/components/ReverseHighlight.tsx","../src/components/ReverseSnippet/ReverseSnippet.tsx","../src/helpers/components/ReverseSnippet.tsx","../src/components/Snippet/Snippet.tsx","../src/helpers/components/Snippet.tsx","../src/lib/templating/renderTemplate.ts","../src/components/Template/Template.tsx","../src/components/Answers/Answers.tsx","../src/widgets/answers/defaultTemplates.ts","../src/widgets/answers/answers.tsx","../src/widgets/dynamic-widgets/dynamic-widgets.ts","../src/widgets/current-refinements/current-refinements.tsx","../src/components/GeoSearchControls/GeoSearchButton.tsx","../src/components/GeoSearchControls/GeoSearchToggle.tsx","../src/widgets/geo-search/GeoSearchRenderer.js","../src/widgets/analytics/analytics.ts","../src/components/Breadcrumb/Breadcrumb.tsx","../src/widgets/breadcrumb/defaultTemplates.ts","../src/widgets/breadcrumb/breadcrumb.tsx","../src/components/ClearRefinements/ClearRefinements.tsx","../src/widgets/clear-refinements/defaultTemplates.ts","../src/widgets/clear-refinements/clear-refinements.tsx","../src/components/CurrentRefinements/CurrentRefinements.tsx","../src/lib/utils/capitalize.ts","../src/widgets/geo-search/defaultTemplates.tsx","../src/components/GeoSearchControls/GeoSearchControls.tsx","../src/widgets/geo-search/geo-search.ts","../src/components/SearchBox/SearchBox.tsx","../src/components/RefinementList/RefinementListItem.tsx","../src/components/RefinementList/RefinementList.tsx","../src/lib/formatNumber.ts","../src/widgets/hierarchical-menu/defaultTemplates.tsx","../src/widgets/hierarchical-menu/hierarchical-menu.tsx","../src/widgets/hits/defaultTemplates.ts","../src/widgets/hits/hits.tsx","../src/components/Selector/Selector.tsx","../src/widgets/hits-per-page/hits-per-page.tsx","../src/widgets/index/index.ts","../src/lib/utils/resolveSearchParameters.ts","../src/components/InfiniteHits/InfiniteHits.tsx","../src/widgets/infinite-hits/defaultTemplates.ts","../src/widgets/infinite-hits/infinite-hits.tsx","../src/widgets/menu/defaultTemplates.tsx","../src/widgets/menu/menu.tsx","../src/components/MenuSelect/MenuSelect.tsx","../src/widgets/menu-select/defaultTemplates.ts","../src/widgets/menu-select/menu-select.tsx","../src/widgets/numeric-menu/defaultTemplates.tsx","../src/widgets/numeric-menu/numeric-menu.tsx","../src/components/Pagination/Pagination.tsx","../src/widgets/pagination/pagination.tsx","../../../node_modules/preact/hooks/dist/hooks.module.js","../src/components/Panel/Panel.tsx","../src/widgets/panel/panel.tsx","../src/widgets/places/places.ts","../src/components/PoweredBy/PoweredBy.tsx","../src/widgets/powered-by/powered-by.tsx","../src/widgets/query-rule-context/query-rule-context.tsx","../src/components/QueryRuleCustomData/QueryRuleCustomData.tsx","../src/widgets/query-rule-custom-data/query-rule-custom-data.tsx","../src/widgets/related-products/related-products.tsx","../src/components/RangeInput/RangeInput.tsx","../src/components/Slider/Pit.tsx","../src/widgets/range-input/range-input.tsx","../src/components/Slider/Rheostat.tsx","../src/components/Slider/Slider.tsx","../src/widgets/range-slider/range-slider.tsx","../src/widgets/rating-menu/defaultTemplates.tsx","../src/widgets/rating-menu/rating-menu.tsx","../src/widgets/search-box/defaultTemplates.tsx","../src/widgets/refinement-list/defaultTemplates.tsx","../src/widgets/refinement-list/refinement-list.tsx","../src/components/RelevantSort/RelevantSort.tsx","../src/widgets/relevant-sort/defaultTemplates.ts","../src/widgets/relevant-sort/relevant-sort.tsx","../src/widgets/search-box/search-box.tsx","../src/widgets/sort-by/sort-by.tsx","../src/components/Stats/Stats.tsx","../src/widgets/stats/stats.tsx","../src/components/ToggleRefinement/ToggleRefinement.tsx","../src/widgets/toggle-refinement/defaultTemplates.ts","../src/widgets/toggle-refinement/toggle-refinement.tsx","../src/widgets/trending-items/trending-items.tsx","../src/widgets/voice-search/defaultTemplates.tsx","../src/components/VoiceSearch/VoiceSearch.tsx","../src/widgets/voice-search/voice-search.tsx","../src/widgets/frequently-bought-together/frequently-bought-together.tsx","../src/widgets/looking-similar/looking-similar.tsx","../src/widgets/index.ts","../src/widgets/configure/configure.ts","../src/widgets/configure-related-items/configure-related-items.ts","../src/widgets/geo-search/createHTMLMarker.ts","../src/lib/InstantSearch.ts","../src/lib/createHelpers.ts","../src/lib/version.ts","../src/lib/utils/hydrateRecommendCache.ts","../src/lib/stateMappings/singleIndex.ts","../src/index.ts"],"sourcesContent":["import type { Widget } from '../../types';\n\nlet id = 0;\n\nexport function addWidgetId(widget: Widget) {\n  if (widget.dependsOn !== 'recommend') {\n    return;\n  }\n\n  widget.$$id = id++;\n}\n\nexport function resetWidgetId() {\n  id = 0;\n}\n","export function noop(..._args: any[]): void {}\n","import { noop } from './noop';\n\ntype Warn = (message: string) => void;\n\ntype Warning = {\n  (condition: boolean, message: string): void;\n  cache: { [message: string]: boolean };\n};\n\n/**\n * Logs a warning when this function is called, in development environment only.\n */\nlet deprecate = <TCallback extends (...args: any[]) => any>(\n  fn: TCallback,\n  // @ts-ignore this parameter is used in the __DEV__ branch\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  message: string\n) => fn;\n\n/**\n * Logs a warning\n * This is used to log issues in development environment only.\n */\nlet warn: Warn = noop;\n\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\nlet warning = noop as Warning;\n\nif (__DEV__) {\n  warn = (message) => {\n    // eslint-disable-next-line no-console\n    console.warn(`[InstantSearch.js]: ${message.trim()}`);\n  };\n\n  deprecate = (fn, message) => {\n    let hasAlreadyPrinted = false;\n\n    return function (...args) {\n      if (!hasAlreadyPrinted) {\n        hasAlreadyPrinted = true;\n\n        warn(message);\n      }\n\n      return fn(...args);\n    } as typeof fn;\n  };\n\n  warning = ((condition, message) => {\n    if (condition) {\n      return;\n    }\n\n    const hasAlreadyPrinted = warning.cache[message];\n\n    if (!hasAlreadyPrinted) {\n      warning.cache[message] = true;\n\n      warn(message);\n    }\n  }) as Warning;\n\n  warning.cache = {};\n}\n\nexport { warn, deprecate, warning };\n","export function getObjectType(object: unknown): string {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}\n","import { getObjectType } from './getObjectType';\n\nimport type { Renderer } from '../../types/connector';\n\nexport function checkRendering(\n  rendering: any,\n  usage: string\n): asserts rendering is Renderer<any, any> {\n  if (rendering === undefined || typeof rendering !== 'function') {\n    throw new Error(`The render function is not valid (received type ${getObjectType(\n      rendering\n    )}).\n\n${usage}`);\n  }\n}\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\n/**\n * Clears the refinements of a SearchParameters object based on rules provided.\n * The included attributes list is applied before the excluded attributes list. If the list\n * is not provided, this list of all the currently refined attributes is used as included attributes.\n * @returns search parameters with refinements cleared\n */\nexport function clearRefinements({\n  helper,\n  attributesToClear = [],\n}: {\n  helper: AlgoliaSearchHelper;\n  attributesToClear?: string[];\n}): SearchParameters {\n  let finalState = helper.state.setPage(0);\n\n  finalState = attributesToClear.reduce((state, attribute) => {\n    if (finalState.isNumericRefined(attribute)) {\n      return state.removeNumericRefinement(attribute);\n    }\n    if (finalState.isHierarchicalFacet(attribute)) {\n      return state.removeHierarchicalFacetRefinement(attribute);\n    }\n    if (finalState.isDisjunctiveFacet(attribute)) {\n      return state.removeDisjunctiveFacetRefinement(attribute);\n    }\n    if (finalState.isConjunctiveFacet(attribute)) {\n      return state.removeFacetRefinement(attribute);\n    }\n\n    return state;\n  }, finalState);\n\n  if (attributesToClear.indexOf('query') !== -1) {\n    finalState = finalState.setQuery('');\n  }\n\n  return finalState;\n}\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/escape.js\n */\n\n// Used to map characters to HTML entities.\nconst htmlEntities = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexUnescapedHtml = /[&<>\"']/g;\nconst regexHasUnescapedHtml = RegExp(regexUnescapedHtml.source);\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n */\nexport function escape(value: string): string {\n  return value && regexHasUnescapedHtml.test(value)\n    ? value.replace(\n        regexUnescapedHtml,\n        (character) => htmlEntities[character as keyof typeof htmlEntities]\n      )\n    : value;\n}\n\n/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n\n// Used to map HTML entities to characters.\nconst htmlCharacters = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\",\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexEscapedHtml = /&(amp|quot|lt|gt|#39);/g;\nconst regexHasEscapedHtml = RegExp(regexEscapedHtml.source);\n\n/**\n * Converts the HTML entities \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * characters.\n */\nexport function unescape(value: string): string {\n  return value && regexHasEscapedHtml.test(value)\n    ? value.replace(\n        regexEscapedHtml,\n        (character) => htmlCharacters[character as keyof typeof htmlCharacters]\n      )\n    : value;\n}\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/master/isPlainObject.js\n */\n\nfunction getTag(value: any): string {\n  if (value === null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nfunction isObjectLike(value: any): boolean {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Checks if `value` is a plain object.\n *\n * A plain object is an object created by the `Object`\n * constructor or with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value: any): boolean {\n  if (!isObjectLike(value) || getTag(value) !== '[object Object]') {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n\n  let proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n","import { escape } from './escape-html';\nimport { isPlainObject } from './isPlainObject';\n\nimport type { Hit, FacetHit, EscapedHits } from '../../types';\n\nexport const TAG_PLACEHOLDER = {\n  highlightPreTag: '__ais-highlight__',\n  highlightPostTag: '__/ais-highlight__',\n};\n\nexport const TAG_REPLACEMENT = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\n// @MAJOR: in the future, this should only escape, not replace\nfunction replaceTagsAndEscape(value: string): string {\n  return escape(value)\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPreTag, 'g'),\n      TAG_REPLACEMENT.highlightPreTag\n    )\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPostTag, 'g'),\n      TAG_REPLACEMENT.highlightPostTag\n    );\n}\n\nfunction recursiveEscape(input: any): any {\n  if (isPlainObject(input) && typeof input.value !== 'string') {\n    return Object.keys(input).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: recursiveEscape(input[key]),\n      }),\n      {}\n    );\n  }\n\n  if (Array.isArray(input)) {\n    return input.map(recursiveEscape);\n  }\n\n  return {\n    ...input,\n    value: replaceTagsAndEscape(input.value),\n  };\n}\n\nexport function escapeHits<THit extends Hit>(\n  hits: THit[] | EscapedHits<THit>\n): EscapedHits<THit> {\n  if ((hits as EscapedHits).__escaped === undefined) {\n    // We don't override the value on hit because it will mutate the raw results\n    // instead we make a shallow copy and we assign the escaped values on it.\n    hits = hits.map(({ ...hit }) => {\n      if (hit._highlightResult) {\n        hit._highlightResult = recursiveEscape(hit._highlightResult);\n      }\n\n      if (hit._snippetResult) {\n        hit._snippetResult = recursiveEscape(hit._snippetResult);\n      }\n\n      return hit;\n    });\n\n    (hits as EscapedHits).__escaped = true;\n  }\n\n  return hits as EscapedHits<THit>;\n}\n\nexport function escapeFacets(facetHits: FacetHit[]): FacetHit[] {\n  return facetHits.map((h) => ({\n    ...h,\n    highlighted: replaceTagsAndEscape(h.highlighted),\n  }));\n}\n","import { TAG_REPLACEMENT } from './escape-highlight';\n\nimport type { HighlightedParts } from '../../types';\n\nexport function concatHighlightedParts(parts: HighlightedParts[]) {\n  const { highlightPreTag, highlightPostTag } = TAG_REPLACEMENT;\n\n  return parts\n    .map((part) =>\n      part.isHighlighted\n        ? highlightPreTag + part.value + highlightPostTag\n        : part.value\n    )\n    .join('');\n}\n","import { isFacetRefined } from './isFacetRefined';\n\nimport type { InstantSearch } from '../../types';\nimport type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\ntype BuiltInSendEventForFacet = (\n  eventType: string,\n  facetValue: string,\n  eventName?: string,\n  additionalData?: Record<string, any>\n) => void;\ntype CustomSendEventForFacet = (customPayload: any) => void;\n\nexport type SendEventForFacet = BuiltInSendEventForFacet &\n  CustomSendEventForFacet;\n\ntype CreateSendEventForFacetOptions = {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string | ((facetValue: string) => string);\n  widgetType: string;\n};\n\nexport function createSendEventForFacet({\n  instantSearchInstance,\n  helper,\n  attribute: attr,\n  widgetType,\n}: CreateSendEventForFacetOptions): SendEventForFacet {\n  const sendEventForFacet: SendEventForFacet = (...args: any[]) => {\n    const [, facetValue, eventName = 'Filter Applied', additionalData = {}] =\n      args;\n    const [eventType, eventModifier]: [string, string] = args[0].split(':');\n    const attribute = typeof attr === 'string' ? attr : attr(facetValue);\n\n    if (args.length === 1 && typeof args[0] === 'object') {\n      instantSearchInstance.sendEventToInsights(args[0]);\n    } else if (eventType === 'click' && args.length >= 2 && args.length <= 4) {\n      if (!isFacetRefined(helper, attribute, facetValue)) {\n        // send event only when the facet is being checked \"ON\"\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType,\n          eventType,\n          eventModifier,\n          payload: {\n            eventName,\n            index: helper.getIndex(),\n            filters: [`${attribute}:${facetValue}`],\n            ...additionalData,\n          },\n          attribute,\n        });\n      }\n    } else if (__DEV__) {\n      throw new Error(\n        `You need to pass between two and four arguments like:\n  sendEvent('click', facetValue, eventName?, additionalData?);\n\nIf you want to send a custom payload, you can pass one object: sendEvent(customPayload);\n`\n      );\n    }\n  };\n\n  return sendEventForFacet;\n}\n","import type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nexport function isFacetRefined(\n  helper: AlgoliaSearchHelper,\n  facet: string,\n  value: string\n) {\n  if (helper.state.isHierarchicalFacet(facet)) {\n    return helper.state.isHierarchicalFacetRefined(facet, value);\n  } else if (helper.state.isConjunctiveFacet(facet)) {\n    return helper.state.isFacetRefined(facet, value);\n  } else {\n    return helper.state.isDisjunctiveFacetRefined(facet, value);\n  }\n}\n","export function serializePayload<TPayload>(payload: TPayload): string {\n  return btoa(encodeURIComponent(JSON.stringify(payload)));\n}\n\nexport function deserializePayload<TPayload>(serialized: string): TPayload {\n  return JSON.parse(decodeURIComponent(atob(serialized)));\n}\n","import { serializePayload } from './serializer';\n\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\nimport type { InstantSearch, Hit, EscapedHits } from '../../types';\n\ntype BuiltInSendEventForHits = (\n  eventType: string,\n  hits: Hit | Hit[],\n  eventName?: string,\n  additionalData?: Record<string, any>\n) => void;\ntype CustomSendEventForHits = (customPayload: any) => void;\nexport type SendEventForHits = BuiltInSendEventForHits & CustomSendEventForHits;\n\nexport type BuiltInBindEventForHits = (\n  eventType: string,\n  hits: Hit | Hit[],\n  eventName?: string,\n  additionalData?: Record<string, any>\n) => string;\nexport type CustomBindEventForHits = (customPayload: any) => string;\nexport type BindEventForHits = BuiltInBindEventForHits & CustomBindEventForHits;\n\nfunction chunk<TItem>(arr: TItem[], chunkSize: number = 20): TItem[][] {\n  const chunks: TItem[][] = [];\n  for (let i = 0; i < Math.ceil(arr.length / chunkSize); i++) {\n    chunks.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n  }\n  return chunks;\n}\n\nexport function _buildEventPayloadsForHits({\n  getIndex,\n  widgetType,\n  methodName,\n  args,\n  instantSearchInstance,\n}: {\n  widgetType: string;\n  getIndex: () => string;\n  methodName: 'sendEvent' | 'bindEvent';\n  args: any[];\n  instantSearchInstance: InstantSearch;\n}): InsightsEvent[] {\n  // when there's only one argument, that means it's custom\n  if (args.length === 1 && typeof args[0] === 'object') {\n    return [args[0]];\n  }\n  const [eventType, eventModifier]: [string, string] = args[0].split(':');\n\n  const hits: Hit | Hit[] | EscapedHits = args[1];\n  const eventName: string | undefined = args[2];\n  const additionalData: Record<string, any> = args[3] || {};\n\n  if (!hits) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass hit or hits as the second argument like:\n  ${methodName}(eventType, hit);\n  `\n      );\n    } else {\n      return [];\n    }\n  }\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass eventName as the third argument for 'click' or 'conversion' events like:\n  ${methodName}('click', hit, 'Product Purchased');\n\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\n  `\n      );\n    } else {\n      return [];\n    }\n  }\n  const hitsArray: Hit[] = Array.isArray(hits) ? hits : [hits];\n\n  if (hitsArray.length === 0) {\n    return [];\n  }\n  const queryID = hitsArray[0].__queryID;\n  const hitsChunks = chunk(hitsArray);\n  const objectIDsByChunk = hitsChunks.map((batch) =>\n    batch.map((hit) => hit.objectID)\n  );\n  const positionsByChunk = hitsChunks.map((batch) =>\n    batch.map((hit) => hit.__position)\n  );\n\n  if (eventType === 'view') {\n    if (instantSearchInstance.status !== 'idle') {\n      return [];\n    }\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'viewedObjectIDs',\n        widgetType,\n        eventType,\n        payload: {\n          eventName: eventName || 'Hits Viewed',\n          index: getIndex(),\n          objectIDs: objectIDsByChunk[i],\n          ...additionalData,\n        },\n        hits: batch,\n        eventModifier,\n      };\n    });\n  } else if (eventType === 'click') {\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'clickedObjectIDsAfterSearch',\n        widgetType,\n        eventType,\n        payload: {\n          eventName: eventName || 'Hit Clicked',\n          index: getIndex(),\n          queryID,\n          objectIDs: objectIDsByChunk[i],\n          positions: positionsByChunk[i],\n          ...additionalData,\n        },\n        hits: batch,\n        eventModifier,\n      };\n    });\n  } else if (eventType === 'conversion') {\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'convertedObjectIDsAfterSearch',\n        widgetType,\n        eventType,\n        payload: {\n          eventName: eventName || 'Hit Converted',\n          index: getIndex(),\n          queryID,\n          objectIDs: objectIDsByChunk[i],\n          ...additionalData,\n        },\n        hits: batch,\n        eventModifier,\n      };\n    });\n  } else if (__DEV__) {\n    throw new Error(`eventType(\"${eventType}\") is not supported.\n    If you want to send a custom payload, you can pass one object: ${methodName}(customPayload);\n    `);\n  } else {\n    return [];\n  }\n}\n\nexport function createSendEventForHits({\n  instantSearchInstance,\n  getIndex,\n  widgetType,\n}: {\n  instantSearchInstance: InstantSearch;\n  getIndex: () => string;\n  widgetType: string;\n}): SendEventForHits {\n  let sentEvents: Record<InsightsEvent['eventType'], boolean> = {};\n  let timer: ReturnType<typeof setTimeout> | undefined = undefined;\n\n  const sendEventForHits: SendEventForHits = (...args: any[]) => {\n    const payloads = _buildEventPayloadsForHits({\n      widgetType,\n      getIndex,\n      methodName: 'sendEvent',\n      args,\n      instantSearchInstance,\n    });\n\n    payloads.forEach((payload) => {\n      if (\n        payload.eventType === 'click' &&\n        payload.eventModifier === 'internal' &&\n        sentEvents[payload.eventType]\n      ) {\n        return;\n      }\n\n      sentEvents[payload.eventType] = true;\n      instantSearchInstance.sendEventToInsights(payload);\n    });\n\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      sentEvents = {};\n    }, 0);\n  };\n  return sendEventForHits;\n}\n\nexport function createBindEventForHits({\n  getIndex,\n  widgetType,\n  instantSearchInstance,\n}: {\n  getIndex: () => string;\n  widgetType: string;\n  instantSearchInstance: InstantSearch;\n}): BindEventForHits {\n  const bindEventForHits: BindEventForHits = (...args: any[]) => {\n    const payloads = _buildEventPayloadsForHits({\n      widgetType,\n      getIndex,\n      methodName: 'bindEvent',\n      args,\n      instantSearchInstance,\n    });\n\n    return payloads.length\n      ? `data-insights-event=${serializePayload(payloads)}`\n      : '';\n  };\n  return bindEventForHits;\n}\n","import type { Widget, IndexWidget } from '../../types';\n\nexport function isIndexWidget(\n  widget: Widget | IndexWidget\n): widget is IndexWidget {\n  return widget.$$type === 'ais.index';\n}\n","import { checkIndexUiState } from './checkIndexUiState';\nimport { isIndexWidget } from './isIndexWidget';\n\nimport type { UiState, IndexWidget } from '../../types';\n\nexport function setIndexHelperState<TUiState extends UiState>(\n  finalUiState: TUiState,\n  indexWidget: IndexWidget\n) {\n  const nextIndexUiState = finalUiState[indexWidget.getIndexId()] || {};\n\n  if (__DEV__) {\n    checkIndexUiState({\n      index: indexWidget,\n      indexUiState: nextIndexUiState,\n    });\n  }\n\n  indexWidget.getHelper()!.setState(\n    indexWidget.getWidgetSearchParameters(indexWidget.getHelper()!.state, {\n      uiState: nextIndexUiState,\n    })\n  );\n\n  indexWidget\n    .getWidgets()\n    .filter(isIndexWidget)\n    .forEach((widget) => setIndexHelperState(finalUiState, widget));\n}\n","import type { Awaited } from '../../types';\n\ntype Func = (...args: any[]) => any;\n\nexport type DebouncedFunction<TFunction extends Func> = (\n  this: ThisParameterType<TFunction>,\n  ...args: Parameters<TFunction>\n) => Promise<Awaited<ReturnType<TFunction>>>;\n\n// Debounce a function call to the trailing edge.\n// The debounced function returns a promise.\nexport function debounce<TFunction extends Func>(\n  func: TFunction,\n  wait: number\n): DebouncedFunction<TFunction> {\n  let lastTimeout: ReturnType<typeof setTimeout> | null = null;\n  return function (...args) {\n    return new Promise((resolve, reject) => {\n      if (lastTimeout) {\n        clearTimeout(lastTimeout);\n      }\n      lastTimeout = setTimeout(() => {\n        lastTimeout = null;\n        Promise.resolve(func(...args))\n          .then(resolve)\n          .catch(reject);\n      }, wait);\n    });\n  };\n}\n","const nextMicroTask = Promise.resolve();\n\ntype Callback = (...args: any[]) => void;\ntype Defer = {\n  wait: () => Promise<void>;\n  cancel: () => void;\n};\n\nexport function defer<TCallback extends Callback>(\n  callback: TCallback\n): TCallback & Defer {\n  let progress: Promise<void> | null = null;\n  let cancelled = false;\n\n  const fn = ((...args: Parameters<TCallback>) => {\n    if (progress !== null) {\n      return;\n    }\n\n    progress = nextMicroTask.then(() => {\n      progress = null;\n\n      if (cancelled) {\n        cancelled = false;\n        return;\n      }\n\n      callback(...args);\n    });\n  }) as TCallback & Defer;\n\n  fn.wait = () => {\n    if (progress === null) {\n      throw new Error(\n        'The deferred function should be called before calling `wait()`'\n      );\n    }\n\n    return progress;\n  };\n\n  fn.cancel = () => {\n    if (progress === null) {\n      return;\n    }\n\n    cancelled = true;\n  };\n\n  return fn;\n}\n","type WidgetParam = {\n  name: string;\n  connector?: boolean;\n};\n\nexport function createDocumentationLink({\n  name,\n  connector = false,\n}: WidgetParam): string {\n  return [\n    'https://www.algolia.com/doc/api-reference/widgets/',\n    name,\n    '/js/',\n    connector ? '#connector' : '',\n  ].join('');\n}\n\ntype DocumentationMessageGenerator = (message?: string) => string;\n\nexport function createDocumentationMessageGenerator(\n  ...widgets: WidgetParam[]\n): DocumentationMessageGenerator {\n  const links = widgets\n    .map((widget) => createDocumentationLink(widget))\n    .join(', ');\n\n  return (message?: string) =>\n    [message, `See documentation: ${links}`].filter(Boolean).join('\\n\\n');\n}\n","type FacetValue = string | number | boolean | undefined;\n\nexport function unescapeFacetValue<TFacetValue extends FacetValue>(\n  value: TFacetValue\n): TFacetValue {\n  if (typeof value === 'string') {\n    return value.replace(/^\\\\-/, '-') as TFacetValue;\n  }\n\n  return value;\n}\n\nexport function escapeFacetValue<TFacetValue extends FacetValue>(\n  value: TFacetValue\n): TFacetValue {\n  if ((typeof value === 'number' && value < 0) || typeof value === 'string') {\n    return String(value).replace(/^-/, '\\\\-') as TFacetValue;\n  }\n\n  return value;\n}\n","// We aren't using the native `Array.prototype.find` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `find` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.find` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nexport function find<TItem>(\n  items: TItem[],\n  predicate: (value: TItem, index: number, obj: TItem[]) => boolean\n): TItem | undefined {\n  let value: TItem;\n  for (let i = 0; i < items.length; i++) {\n    value = items[i];\n    // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n    if (predicate(value, i, items)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n","const latLngRegExp = /^(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)$/;\n\nexport function aroundLatLngToPosition(value: string) {\n  const pattern = value.match(latLngRegExp);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!pattern) {\n    throw new Error(`Invalid value for \"aroundLatLng\" parameter: \"${value}\"`);\n  }\n\n  return {\n    lat: parseFloat(pattern[1]),\n    lng: parseFloat(pattern[2]),\n  };\n}\n\nexport type LatLng = Array<[number, number, number, number]>;\n\nfunction insideBoundingBoxArrayToBoundingBox(value: LatLng) {\n  const [\n    [neLat, neLng, swLat, swLng] = [undefined, undefined, undefined, undefined],\n  ] = value;\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: [${value}]`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nfunction insideBoundingBoxStringToBoundingBox(value: string) {\n  const [neLat, neLng, swLat, swLng] = value.split(',').map(parseFloat);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: \"${value}\"`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nexport function insideBoundingBoxToBoundingBox(value: string | LatLng) {\n  if (Array.isArray(value)) {\n    return insideBoundingBoxArrayToBoundingBox(value);\n  }\n\n  return insideBoundingBoxStringToBoundingBox(value);\n}\n","import { isDomElement } from './isDomElement';\n\n/**\n * Return the container. If it's a string, it is considered a\n * css selector and retrieves the first matching element. Otherwise\n * test if it validates that it's a correct DOMElement.\n *\n * @param {string|HTMLElement} selectorOrHTMLElement CSS Selector or container node.\n * @return {HTMLElement} Container node\n * @throws Error when the type is not correct\n */\nexport function getContainerNode(\n  selectorOrHTMLElement: string | HTMLElement\n): HTMLElement {\n  const isSelectorString = typeof selectorOrHTMLElement === 'string';\n  const domElement = isSelectorString\n    ? document.querySelector(selectorOrHTMLElement)\n    : selectorOrHTMLElement;\n\n  if (!isDomElement(domElement)) {\n    let errorMessage = 'Container must be `string` or `HTMLElement`.';\n\n    if (isSelectorString) {\n      errorMessage += ` Unable to find ${selectorOrHTMLElement}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n\n  return domElement;\n}\n","export function isDomElement(object: any): object is HTMLElement {\n  return (\n    object instanceof HTMLElement || (Boolean(object) && object.nodeType > 0)\n  );\n}\n","import { TAG_REPLACEMENT } from './escape-highlight';\n\nexport function getHighlightedParts(highlightedValue: string) {\n  // @MAJOR: this should use TAG_PLACEHOLDER\n  const { highlightPostTag, highlightPreTag } = TAG_REPLACEMENT;\n\n  const splitByPreTag = highlightedValue.split(highlightPreTag);\n  const firstValue = splitByPreTag.shift();\n  const elements = !firstValue\n    ? []\n    : [{ value: firstValue, isHighlighted: false }];\n\n  splitByPreTag.forEach((split) => {\n    const splitByPostTag = split.split(highlightPostTag);\n\n    elements.push({\n      value: splitByPostTag[0],\n      isHighlighted: true,\n    });\n\n    if (splitByPostTag[1] !== '') {\n      elements.push({\n        value: splitByPostTag[1],\n        isHighlighted: false,\n      });\n    }\n  });\n\n  return elements;\n}\n","import { unescape } from './escape-html';\n\nimport type { HighlightedParts } from '../../types';\n\nconst hasAlphanumeric = new RegExp(/\\w/i);\n\nexport function getHighlightFromSiblings(parts: HighlightedParts[], i: number) {\n  const current = parts[i];\n  const isNextHighlighted = parts[i + 1]?.isHighlighted || true;\n  const isPreviousHighlighted = parts[i - 1]?.isHighlighted || true;\n\n  if (\n    !hasAlphanumeric.test(unescape(current.value)) &&\n    isPreviousHighlighted === isNextHighlighted\n  ) {\n    return isPreviousHighlighted;\n  }\n\n  return current.isHighlighted;\n}\n","export function getPropertyByPath(\n  object: Record<string, any> | undefined,\n  path: string | string[]\n): any {\n  const parts = Array.isArray(path) ? path : path.split('.');\n\n  return parts.reduce((current, key) => current && current[key], object);\n}\n","import { unescapeFacetValue, escapeFacetValue } from './escapeFacetValue';\nimport { find } from './find';\n\nimport type { SearchParameters, SearchResults } from 'algoliasearch-helper';\n\nexport type FacetRefinement = {\n  type: 'facet' | 'disjunctive' | 'hierarchical';\n  attribute: string;\n  name: string;\n  escapedValue: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type TagRefinement = {\n  type: 'tag';\n  attribute: string;\n  name: string;\n};\n\nexport type QueryRefinement = {\n  type: 'query';\n  attribute: 'query';\n  query: string;\n  name: string;\n};\n\nexport type NumericRefinement = {\n  type: 'numeric';\n  numericValue: number;\n  operator: '<' | '<=' | '=' | '!=' | '>=' | '>';\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type FacetExcludeRefinement = {\n  type: 'exclude';\n  exclude: boolean;\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type Refinement =\n  | FacetRefinement\n  | QueryRefinement\n  | NumericRefinement\n  | FacetExcludeRefinement\n  | TagRefinement;\n\nfunction getRefinement(\n  state: SearchParameters,\n  type: FacetRefinement['type'],\n  attribute: FacetRefinement['attribute'],\n  name: FacetRefinement['name'],\n  resultsFacets: SearchResults['facets' | 'hierarchicalFacets'] = []\n): FacetRefinement {\n  const res: FacetRefinement = {\n    type,\n    attribute,\n    name,\n    escapedValue: escapeFacetValue(name),\n  };\n  let facet: any = find<SearchResults.Facet | SearchResults.HierarchicalFacet>(\n    resultsFacets,\n    (resultsFacet) => resultsFacet.name === attribute\n  );\n  let count: number;\n\n  if (type === 'hierarchical') {\n    const facetDeclaration = state.getHierarchicalFacetByName(attribute);\n    const nameParts = name.split(facetDeclaration.separator);\n\n    const getFacetRefinement =\n      (facetData: any): ((refinementKey: string) => any) =>\n      (refinementKey: string): any =>\n        facetData[refinementKey];\n\n    for (let i = 0; facet !== undefined && i < nameParts.length; ++i) {\n      facet =\n        facet &&\n        facet.data &&\n        find(\n          Object.keys(facet.data).map(getFacetRefinement(facet.data)),\n          (refinement) => refinement.name === nameParts[i]\n        );\n    }\n\n    count = facet && facet.count;\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n\n  if (count !== undefined) {\n    res.count = count;\n  }\n\n  if (facet && facet.exhaustive !== undefined) {\n    res.exhaustive = facet.exhaustive;\n  }\n\n  return res;\n}\n\nexport function getRefinements(\n  results: SearchResults | Record<string, never>,\n  state: SearchParameters,\n  includesQuery: boolean = false\n): Refinement[] {\n  const refinements: Refinement[] = [];\n  const {\n    facetsRefinements = {},\n    facetsExcludes = {},\n    disjunctiveFacetsRefinements = {},\n    hierarchicalFacetsRefinements = {},\n    numericRefinements = {},\n    tagRefinements = [],\n  } = state;\n\n  Object.keys(facetsRefinements).forEach((attribute) => {\n    const refinementNames = facetsRefinements[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push(\n        getRefinement(state, 'facet', attribute, refinementName, results.facets)\n      );\n    });\n  });\n\n  Object.keys(facetsExcludes).forEach((attribute) => {\n    const refinementNames = facetsExcludes[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push({\n        type: 'exclude',\n        attribute,\n        name: refinementName,\n        exclude: true,\n      });\n    });\n  });\n\n  Object.keys(disjunctiveFacetsRefinements).forEach((attribute) => {\n    const refinementNames = disjunctiveFacetsRefinements[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push(\n        getRefinement(\n          state,\n          'disjunctive',\n          attribute,\n          // We unescape any disjunctive refined values with `unescapeFacetValue` because\n          // they can be escaped on negative numeric values with `escapeFacetValue`.\n          unescapeFacetValue(refinementName),\n          results.disjunctiveFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(hierarchicalFacetsRefinements).forEach((attribute) => {\n    const refinementNames = hierarchicalFacetsRefinements[attribute];\n\n    refinementNames.forEach((refinement) => {\n      refinements.push(\n        getRefinement(\n          state,\n          'hierarchical',\n          attribute,\n          refinement,\n          results.hierarchicalFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(numericRefinements).forEach((attribute) => {\n    const operators = numericRefinements[attribute];\n\n    Object.keys(operators).forEach((operatorOriginal) => {\n      const operator = operatorOriginal as SearchParameters.Operator;\n      const valueOrValues = operators[operator];\n      const refinementNames = Array.isArray(valueOrValues)\n        ? valueOrValues\n        : [valueOrValues];\n\n      refinementNames.forEach((refinementName: any) => {\n        refinements.push({\n          type: 'numeric',\n          attribute,\n          name: `${refinementName}`,\n          numericValue: refinementName,\n          operator: operator as NumericRefinement['operator'],\n        });\n      });\n    });\n  });\n\n  tagRefinements.forEach((refinementName) => {\n    refinements.push({ type: 'tag', attribute: '_tags', name: refinementName });\n  });\n\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query,\n    });\n  }\n\n  return refinements;\n}\n","import type { InitOptions, Widget, IndexWidget } from '../../types';\n\nexport function getWidgetAttribute(\n  widget: Widget | IndexWidget,\n  initOptions: InitOptions\n): string {\n  const renderState = widget.getWidgetRenderState?.(initOptions);\n\n  let attribute = null;\n\n  if (renderState && renderState.widgetParams) {\n    // casting as widgetParams is checked just before\n    const widgetParams = renderState.widgetParams as Record<string, unknown>;\n\n    if (widgetParams.attribute) {\n      attribute = widgetParams.attribute;\n    } else if (Array.isArray(widgetParams.attributes)) {\n      attribute = widgetParams.attributes[0];\n    }\n  }\n\n  if (typeof attribute !== 'string') {\n    throw new Error(`Could not find the attribute of the widget:\n\n${JSON.stringify(widget)}\n\nPlease check whether the widget's getWidgetRenderState returns widgetParams.attribute correctly.`);\n  }\n\n  return attribute;\n}\n","import type { AlgoliaHit } from '../../types';\n\nexport function addAbsolutePosition<THit extends AlgoliaHit>(\n  hits: THit[],\n  page: number,\n  hitsPerPage: number\n): Array<THit & { __position: number }> {\n  return hits.map((hit, idx) => ({\n    ...hit,\n    __position: hitsPerPage * page + idx + 1,\n  }));\n}\n","import type { AlgoliaHit } from '../../types';\n\nexport function addQueryID<THit extends AlgoliaHit>(\n  hits: THit[],\n  queryID?: string\n): Array<THit & { __queryID?: string }> {\n  if (!queryID) {\n    return hits;\n  }\n  return hits.map((hit) => ({\n    ...hit,\n    __queryID: queryID,\n  }));\n}\n","import type {\n  SearchClient,\n  InitialResults,\n  ClientV3_4,\n  SearchOptions,\n  SearchResponse,\n} from '../../types';\n\ntype ClientWithCache = SearchClient & { cache: Record<string, string> };\ntype ClientWithTransporter = ClientV3_4 & {\n  transporter: { responsesCache: any };\n  search: (requests: any, ...args: any[]) => any;\n};\n\nexport function hydrateSearchClient(\n  client: SearchClient & {\n    _cacheHydrated?: boolean;\n    _useCache?: boolean;\n  },\n  results?: InitialResults\n) {\n  if (!results) {\n    return;\n  }\n\n  // Disable cache hydration on:\n  // - Algoliasearch API Client < v4 with cache disabled\n  // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n  if (\n    (!('transporter' in client) || client._cacheHydrated) &&\n    (!client._useCache || typeof client.addAlgoliaAgent !== 'function')\n  ) {\n    return;\n  }\n\n  const cachedRequest = [\n    Object.keys(results).reduce<\n      Array<{\n        params?: string;\n        indexName?: string;\n      }>\n    >((acc, key) => {\n      const { state, requestParams, results: serverResults } = results[key];\n      const mappedResults =\n        serverResults && state\n          ? serverResults.map((result, idx) => ({\n              indexName: state.index || result.index,\n              // We normalize the params received from the server as they can\n              // be serialized differently depending on the engine.\n              // We use search parameters from the server request to craft the cache\n              // if possible, and fallback to those from results if not.\n              ...(requestParams?.[idx] || result.params\n                ? {\n                    params: serializeQueryParameters(\n                      requestParams?.[idx] ||\n                        deserializeQueryParameters(result.params)\n                    ),\n                  }\n                : {}),\n            }))\n          : [];\n      return acc.concat(mappedResults);\n    }, []),\n  ];\n\n  const cachedResults = Object.keys(results).reduce<Array<SearchResponse<any>>>(\n    (acc, key) => {\n      const res = results[key].results;\n      if (!res) {\n        return acc;\n      }\n      return acc.concat(res);\n    },\n    []\n  );\n\n  // Algoliasearch API Client >= v4\n  // To hydrate the client we need to populate the cache with the data from\n  // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n  // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n  // for us to compute the key the same way as `algoliasearch-client` we need\n  // to populate it on a custom key and override the `search` method to\n  // search on it first.\n  if ('transporter' in client && !client._cacheHydrated) {\n    client._cacheHydrated = true;\n\n    const baseMethod = client.search as unknown as (\n      query: any,\n      ...args: any[]\n    ) => any;\n    // @ts-ignore wanting type checks for v3 on this would make this too complex\n    client.search = (requests, ...methodArgs) => {\n      const requestsWithSerializedParams = requests.map((request) => ({\n        ...request,\n        params: serializeQueryParameters(request.params!),\n      }));\n\n      return (client as ClientWithTransporter).transporter.responsesCache.get(\n        {\n          method: 'search',\n          args: [requestsWithSerializedParams, ...methodArgs],\n        },\n        () => {\n          return baseMethod(requests, ...methodArgs);\n        }\n      );\n    };\n\n    (client as ClientWithTransporter).transporter.responsesCache.set(\n      {\n        method: 'search',\n        args: cachedRequest,\n      },\n      {\n        results: cachedResults,\n      }\n    );\n  }\n\n  // Algoliasearch API Client < v4\n  // Prior to client v4 we didn't have a proper API to hydrate the client\n  // cache from the outside. The following code populates the cache with\n  // a single-index result. You can find more information about the\n  // computation of the key inside the client (see link below).\n  // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n  if (!('transporter' in client)) {\n    const cacheKey = `/1/indexes/*/queries_body_${JSON.stringify({\n      requests: cachedRequest,\n    })}`;\n\n    (client as ClientWithCache).cache = {\n      ...(client as ClientWithCache).cache,\n      [cacheKey]: JSON.stringify({\n        results: Object.keys(results).map((key) => results[key].results),\n      }),\n    };\n  }\n}\n\nfunction deserializeQueryParameters(parameters: string) {\n  return parameters.split('&').reduce<Record<string, any>>((acc, parameter) => {\n    const [key, value] = parameter.split('=');\n    acc[key] = value ? decodeURIComponent(value) : '';\n    return acc;\n  }, {});\n}\n\n// This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\nfunction serializeQueryParameters(parameters: SearchOptions) {\n  const isObjectOrArray = (value: any) =>\n    Object.prototype.toString.call(value) === '[object Object]' ||\n    Object.prototype.toString.call(value) === '[object Array]';\n\n  const encode = (format: string, ...args: [string, any]) => {\n    let i = 0;\n    return format.replace(/%s/g, () => encodeURIComponent(args[i++]));\n  };\n\n  return Object.keys(parameters)\n    .map((key) =>\n      encode(\n        '%s=%s',\n        key,\n        isObjectOrArray(parameters[key as keyof SearchOptions])\n          ? JSON.stringify(parameters[key as keyof SearchOptions])\n          : parameters[key as keyof SearchOptions]\n      )\n    )\n    .join('&');\n}\n","function isPrimitive(obj: any): boolean {\n  return obj !== Object(obj);\n}\n\nexport function isEqual(first: any, second: any): boolean {\n  if (first === second) {\n    return true;\n  }\n\n  if (\n    isPrimitive(first) ||\n    isPrimitive(second) ||\n    typeof first === 'function' ||\n    typeof second === 'function'\n  ) {\n    return first === second;\n  }\n\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n\n  // @TODO avoid for..of because of the large polyfill\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of Object.keys(first)) {\n    if (!(key in second)) {\n      return false;\n    }\n\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// This is the `Number.isFinite()` polyfill recommended by MDN.\n// We do not provide any tests for this function.\n// See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n// @MAJOR Replace with the native `Number.isFinite` method\nexport function isFiniteNumber(value: any): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n","export function isSpecialClick(event: MouseEvent): boolean {\n  const isMiddleClick = event.button === 1;\n\n  return (\n    isMiddleClick ||\n    event.altKey ||\n    event.ctrlKey ||\n    event.metaKey ||\n    event.shiftKey\n  );\n}\n","export function uniq<TItem>(array: TItem[]): TItem[] {\n  return array.filter((value, index, self) => self.indexOf(value) === index);\n}\n","import { findIndex } from './findIndex';\nimport { uniq } from './uniq';\n\nimport type { SearchParameters } from 'algoliasearch-helper';\n\ntype Merger = (\n  left: SearchParameters,\n  right: SearchParameters\n) => SearchParameters;\n\nconst mergeWithRest: Merger = (left, right) => {\n  const {\n    facets,\n    disjunctiveFacets,\n    facetsRefinements,\n    facetsExcludes,\n    disjunctiveFacetsRefinements,\n    numericRefinements,\n    tagRefinements,\n    hierarchicalFacets,\n    hierarchicalFacetsRefinements,\n    ruleContexts,\n    ...rest\n  } = right;\n\n  return left.setQueryParameters(rest);\n};\n\n// Merge facets\nconst mergeFacets: Merger = (left, right) =>\n  right.facets!.reduce((_, name) => _.addFacet(name), left);\n\nconst mergeDisjunctiveFacets: Merger = (left, right) =>\n  right.disjunctiveFacets.reduce(\n    (_, name) => _.addDisjunctiveFacet(name),\n    left\n  );\n\nconst mergeHierarchicalFacets: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacets: right.hierarchicalFacets.reduce((facets, facet) => {\n      const index = findIndex(facets, (_) => _.name === facet.name);\n\n      if (index === -1) {\n        return facets.concat(facet);\n      }\n\n      const nextFacets = facets.slice();\n      nextFacets.splice(index, 1, facet);\n\n      return nextFacets;\n    }, left.hierarchicalFacets),\n  });\n\n// Merge facet refinements\nconst mergeTagRefinements: Merger = (left, right) =>\n  right.tagRefinements.reduce((_, value) => _.addTagRefinement(value), left);\n\nconst mergeFacetRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsRefinements: {\n      ...left.facetsRefinements,\n      ...right.facetsRefinements,\n    },\n  });\n\nconst mergeFacetsExcludes: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsExcludes: {\n      ...left.facetsExcludes,\n      ...right.facetsExcludes,\n    },\n  });\n\nconst mergeDisjunctiveFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    disjunctiveFacetsRefinements: {\n      ...left.disjunctiveFacetsRefinements,\n      ...right.disjunctiveFacetsRefinements,\n    },\n  });\n\nconst mergeNumericRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    numericRefinements: {\n      ...left.numericRefinements,\n      ...right.numericRefinements,\n    },\n  });\n\nconst mergeHierarchicalFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacetsRefinements: {\n      ...left.hierarchicalFacetsRefinements,\n      ...right.hierarchicalFacetsRefinements,\n    },\n  });\n\nconst mergeRuleContexts: Merger = (left, right) => {\n  const ruleContexts: string[] = uniq(\n    ([] as any)\n      .concat(left.ruleContexts)\n      .concat(right.ruleContexts)\n      .filter(Boolean)\n  );\n\n  if (ruleContexts.length > 0) {\n    return left.setQueryParameters({\n      ruleContexts,\n    });\n  }\n\n  return left;\n};\n\nexport const mergeSearchParameters = (\n  ...parameters: SearchParameters[]\n): SearchParameters =>\n  parameters.reduce((left, right) => {\n    const hierarchicalFacetsRefinementsMerged =\n      mergeHierarchicalFacetsRefinements(left, right);\n    const hierarchicalFacetsMerged = mergeHierarchicalFacets(\n      hierarchicalFacetsRefinementsMerged,\n      right\n    );\n    const tagRefinementsMerged = mergeTagRefinements(\n      hierarchicalFacetsMerged,\n      right\n    );\n    const numericRefinementsMerged = mergeNumericRefinements(\n      tagRefinementsMerged,\n      right\n    );\n    const disjunctiveFacetsRefinementsMerged =\n      mergeDisjunctiveFacetsRefinements(numericRefinementsMerged, right);\n    const facetsExcludesMerged = mergeFacetsExcludes(\n      disjunctiveFacetsRefinementsMerged,\n      right\n    );\n    const facetRefinementsMerged = mergeFacetRefinements(\n      facetsExcludesMerged,\n      right\n    );\n    const disjunctiveFacetsMerged = mergeDisjunctiveFacets(\n      facetRefinementsMerged,\n      right\n    );\n    const ruleContextsMerged = mergeRuleContexts(\n      disjunctiveFacetsMerged,\n      right\n    );\n    const facetsMerged = mergeFacets(ruleContextsMerged, right);\n\n    return mergeWithRest(facetsMerged, right);\n  });\n","// We aren't using the native `Array.prototype.findIndex` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `findIndex` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.findIndex` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\nexport function findIndex<TItem>(\n  array: TItem[],\n  comparator: (value: TItem) => boolean\n): number {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (let i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n","/**\n * Creates a new object with the same keys as the original object, but without the excluded keys.\n * @param source original object\n * @param excluded keys to remove from the original object\n * @returns the new object\n */\nexport function omit<\n  TSource extends Record<string, unknown>,\n  TExcluded extends keyof TSource\n>(source: TSource, excluded: TExcluded[]): Omit<TSource, TExcluded> {\n  if (source === null || source === undefined) {\n    return source;\n  }\n\n  type Output = Omit<TSource, TExcluded>;\n  return Object.keys(source).reduce((target, key) => {\n    if ((excluded as Array<keyof TSource>).indexOf(key) >= 0) {\n      return target;\n    }\n\n    const validKey = key as keyof Output;\n    target[validKey] = source[validKey];\n\n    return target;\n  }, {} as unknown as Output);\n}\n","type RangeOptions = {\n  start?: number;\n  end: number;\n  step?: number;\n};\n\nexport function range({ start = 0, end, step = 1 }: RangeOptions): number[] {\n  // We can't divide by 0 so we re-assign the step to 1 if it happens.\n  const limitStep = step === 0 ? 1 : step;\n\n  // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n  const arrayLength = Math.round((end - start) / limitStep);\n\n  return [...Array(arrayLength)].map(\n    (_, current) => start + current * limitStep\n  );\n}\n","import type { InstantSearch, UiState, Widget, IndexWidget } from '../../types';\n\nexport function createInitArgs(\n  instantSearchInstance: InstantSearch,\n  parent: IndexWidget,\n  uiState: UiState\n) {\n  const helper = parent.getHelper()!;\n  return {\n    uiState,\n    helper,\n    parent,\n    instantSearchInstance,\n    state: helper.state,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    createURL: parent.createURL,\n    scopedResults: [],\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    },\n    status: instantSearchInstance.status,\n    error: instantSearchInstance.error,\n  };\n}\n\nexport function createRenderArgs(\n  instantSearchInstance: InstantSearch,\n  parent: IndexWidget,\n  widget: IndexWidget | Widget\n) {\n  const results = parent.getResultsForWidget(widget)!;\n  const helper = parent.getHelper()!;\n\n  return {\n    helper,\n    parent,\n    instantSearchInstance,\n    results,\n    scopedResults: parent.getScopedResults(),\n    state: results && '_state' in results ? results._state : helper.state,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    createURL: parent.createURL,\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    },\n    status: instantSearchInstance.status,\n    error: instantSearchInstance.error,\n  };\n}\n","import { getHighlightFromSiblings } from './getHighlightFromSiblings';\n\nimport type { HighlightedParts } from '../../types';\n\nexport function reverseHighlightedParts(parts: HighlightedParts[]) {\n  if (!parts.some((part) => part.isHighlighted)) {\n    return parts.map((part) => ({ ...part, isHighlighted: false }));\n  }\n\n  return parts.map((part, i) => ({\n    ...part,\n    isHighlighted: !getHighlightFromSiblings(parts, i),\n  }));\n}\n","// eslint-disable-next-line no-restricted-globals\ntype BrowserCallback<TReturn> = (params: { window: typeof window }) => TReturn;\ntype SafelyRunOnBrowserOptions<TReturn> = {\n  /**\n   * Fallback to run on server environments.\n   */\n  fallback: () => TReturn;\n};\n\n/**\n * Runs code on browser environments safely.\n */\nexport function safelyRunOnBrowser<TReturn>(\n  callback: BrowserCallback<TReturn>,\n  { fallback }: SafelyRunOnBrowserOptions<TReturn> = {\n    fallback: () => undefined as unknown as TReturn,\n  }\n): TReturn {\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof window === 'undefined') {\n    return fallback();\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  return callback({ window });\n}\n","type ToArray<T> = T extends unknown[] ? T : T[];\n\nexport function toArray<T>(value: T): ToArray<T> {\n  return (Array.isArray(value) ? value : [value]) as ToArray<T>;\n}\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createConcurrentSafePromise,\n  addQueryID,\n  debounce,\n  addAbsolutePosition,\n  noop,\n  escapeHits,\n} from '../../lib/utils';\n\nimport type { DebouncedFunction } from '../../lib/utils';\nimport type {\n  Connector,\n  Hit,\n  FindAnswersOptions,\n  FindAnswersResponse,\n  WidgetRenderState,\n  SearchClient,\n} from '../../types';\n\ntype IndexWithAnswers = {\n  readonly findAnswers: any;\n};\n\nfunction hasFindAnswersMethod(\n  answersIndex: IndexWithAnswers | any\n): answersIndex is IndexWithAnswers {\n  return typeof (answersIndex as IndexWithAnswers).findAnswers === 'function';\n}\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'answers',\n  connector: true,\n});\n\nexport type AnswersRenderState = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Hit[];\n\n  /**\n   * Whether it's still loading the results from the Answers API.\n   */\n  isLoading: boolean;\n};\n\nexport type AnswersConnectorParams = {\n  /**\n   * Attributes to use for predictions.\n   * If empty, we use all `searchableAttributes` to find answers.\n   * All your `attributesForPrediction` must be part of your `searchableAttributes`.\n   */\n  attributesForPrediction?: string[];\n\n  /**\n   * The languages in the query. Currently only supports `en`.\n   */\n  queryLanguages: ['en'];\n\n  /**\n   * Maximum number of answers to retrieve from the Answers Engine.\n   * Cannot be greater than 1000.\n   * @default 1\n   */\n  nbHits?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce render\n   * @default 100\n   */\n  renderDebounceTime?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce search\n   * @default 100\n   */\n  searchDebounceTime?: number;\n\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Extra parameters to pass to findAnswers method.\n   * @default {}\n   */\n  extraParameters?: FindAnswersOptions;\n};\n\nexport type AnswersWidgetDescription = {\n  $$type: 'ais.answers';\n  renderState: AnswersRenderState;\n  indexRenderState: {\n    answers: WidgetRenderState<AnswersRenderState, AnswersConnectorParams>;\n  };\n};\n\nexport type AnswersConnector = Connector<\n  AnswersWidgetDescription,\n  AnswersConnectorParams\n>;\n\n/**\n * @deprecated the answers service is no longer offered, and this widget will be removed in InstantSearch.js v5\n */\nconst connectAnswers: AnswersConnector = function connectAnswers(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      queryLanguages,\n      attributesForPrediction,\n      nbHits = 1,\n      renderDebounceTime = 100,\n      searchDebounceTime = 100,\n      // @MAJOR: this can default to false\n      escapeHTML = true,\n      extraParameters = {},\n    } = widgetParams || {};\n\n    // @ts-expect-error checking for the wrong value\n    if (!queryLanguages || queryLanguages.length === 0) {\n      throw new Error(\n        withUsage('The `queryLanguages` expects an array of strings.')\n      );\n    }\n\n    const runConcurrentSafePromise =\n      createConcurrentSafePromise<FindAnswersResponse<Hit>>();\n\n    let lastHits: FindAnswersResponse<Hit>['hits'] = [];\n    let isLoading = false;\n    const debouncedRender = debounce(renderFn, renderDebounceTime);\n\n    // this does not directly use DebouncedFunction<findAnswers>, since then the generic will disappear\n    let debouncedRefine: DebouncedFunction<\n      ReturnType<NonNullable<SearchClient['initIndex']>> extends {\n        findAnswers: infer FindAnswers;\n      }\n        ? FindAnswers\n        : any\n    >;\n\n    return {\n      $$type: 'ais.answers',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n        const answersIndex = instantSearchInstance.client.initIndex!(\n          state.index\n        );\n        if (!hasFindAnswersMethod(answersIndex)) {\n          throw new Error(withUsage('`algoliasearch` >= 4.8.0 required.'));\n        }\n        debouncedRefine = debounce(\n          answersIndex.findAnswers,\n          searchDebounceTime\n        );\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const query = renderOptions.state.query;\n        if (!query) {\n          // renders nothing with empty query\n          lastHits = [];\n          isLoading = false;\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n          return;\n        }\n\n        // render the loader\n        lastHits = [];\n        isLoading = true;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        // call /answers API\n        runConcurrentSafePromise(\n          debouncedRefine(query, queryLanguages, {\n            ...extraParameters,\n            nbHits,\n            attributesForPrediction,\n          }) as unknown as Promise<FindAnswersResponse<Hit>>\n        ).then((result) => {\n          if (!result) {\n            // It's undefined when it's debounced.\n            return;\n          }\n\n          if (escapeHTML && result.hits.length > 0) {\n            result.hits = escapeHits(result.hits);\n          }\n\n          const hitsWithAbsolutePosition = addAbsolutePosition(\n            result.hits,\n            0,\n            nbHits\n          );\n\n          const hitsWithAbsolutePositionAndQueryID = addQueryID(\n            hitsWithAbsolutePosition,\n            result.queryID\n          );\n\n          lastHits = hitsWithAbsolutePositionAndQueryID;\n          isLoading = false;\n          debouncedRender(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        });\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          answers: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          hits: lastHits,\n          isLoading,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state;\n      },\n\n      getWidgetSearchParameters(state) {\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectAnswers;\n","export type MaybePromise<TResolution> =\n  | Readonly<Promise<TResolution>>\n  | Promise<TResolution>\n  | TResolution;\n\n// copied from\n// https://github.com/algolia/autocomplete.js/blob/307a7acc4283e10a19cb7d067f04f1bea79dc56f/packages/autocomplete-core/src/utils/createConcurrentSafePromise.ts#L1:L1\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise<TValue>() {\n  let basePromiseId = -1;\n  let latestResolvedId = -1;\n  let latestResolvedValue: TValue | undefined = undefined;\n\n  return function runConcurrentSafePromise(promise: MaybePromise<TValue>) {\n    const currentPromiseId = ++basePromiseId;\n\n    return Promise.resolve(promise).then((x) => {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n\n      return x;\n    });\n  };\n}\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  getWidgetAttribute,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  TransformItemsMetadata,\n  Widget,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n  connector: true,\n});\n\nexport type DynamicWidgetsRenderState = {\n  attributesToRender: string[];\n};\n\nexport type DynamicWidgetsConnectorParams = {\n  /**\n   * An array of widgets, displayed in the order defined by `facetOrdering`.\n   */\n  widgets: Widget[];\n\n  /**\n   * Function to return a fallback widget when an attribute isn't found in\n   * `widgets`.\n   */\n  fallbackWidget?: (args: {\n    /** The attribute name to create a widget for. */\n    attribute: string;\n  }) => Widget;\n\n  /**\n   * Function to transform the items to render.\n   * The function also exposes the full search response.\n   */\n  transformItems?: TransformItems<\n    string,\n    Omit<TransformItemsMetadata, 'results'> & {\n      results: NonNullable<TransformItemsMetadata['results']>;\n    }\n  >;\n\n  /**\n   * To prevent unneeded extra network requests when widgets mount or unmount,\n   * we request all facet values by default. If you want to only request the\n   * facet values that are needed, you can set this option to the list of\n   * attributes you want to display.\n   *\n   * If `facets` is set to `['*']`, we request all facet values.\n   *\n   * Any facets that are requested due to the `facetOrdering` result are always\n   * requested by the widget that mounted itself.\n   *\n   * Setting `facets` to a value other than `['*']` will only prevent extra\n   * requests if all potential facets are listed.\n   *\n   * @default ['*']\n   */\n  facets?: ['*'] | string[];\n\n  /**\n   * If you have more than 20 facet values pinned, you need to increase the\n   * maxValuesPerFacet to at least that value.\n   *\n   * @default 20\n   */\n  maxValuesPerFacet?: number;\n};\n\nexport type DynamicWidgetsWidgetDescription = {\n  $$type: 'ais.dynamicWidgets';\n  renderState: DynamicWidgetsRenderState;\n  indexRenderState: {\n    dynamicWidgets: DynamicWidgetsRenderState;\n  };\n};\n\nexport type DynamicWidgetsConnector = Connector<\n  DynamicWidgetsWidgetDescription,\n  DynamicWidgetsConnectorParams\n>;\n\nconst MAX_WILDCARD_FACETS = 20;\n\nconst connectDynamicWidgets: DynamicWidgetsConnector =\n  function connectDynamicWidgets(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        widgets,\n        maxValuesPerFacet = 20,\n        facets = ['*'],\n        transformItems = (items) => items,\n        fallbackWidget,\n      } = widgetParams;\n\n      if (\n        !(\n          widgets &&\n          Array.isArray(widgets) &&\n          widgets.every((widget) => typeof widget === 'object')\n        )\n      ) {\n        throw new Error(\n          withUsage('The `widgets` option expects an array of widgets.')\n        );\n      }\n\n      if (!Array.isArray(facets)) {\n        throw new Error(\n          withUsage(\n            `The \\`facets\\` option only accepts an array of facets, you passed ${JSON.stringify(\n              facets\n            )}`\n          )\n        );\n      }\n\n      const localWidgets: Map<string, { widget: Widget; isMounted: boolean }> =\n        new Map();\n\n      return {\n        $$type: 'ais.dynamicWidgets',\n        init(initOptions) {\n          widgets.forEach((widget) => {\n            const attribute = getWidgetAttribute(widget, initOptions);\n            localWidgets.set(attribute, { widget, isMounted: false });\n          });\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance: initOptions.instantSearchInstance,\n            },\n            true\n          );\n        },\n        render(renderOptions) {\n          const { parent } = renderOptions;\n          const renderState = this.getWidgetRenderState(renderOptions);\n\n          const widgetsToUnmount: Widget[] = [];\n          const widgetsToMount: Widget[] = [];\n\n          if (fallbackWidget) {\n            renderState.attributesToRender.forEach((attribute) => {\n              if (!localWidgets.has(attribute)) {\n                const widget = fallbackWidget({ attribute });\n                localWidgets.set(attribute, { widget, isMounted: false });\n              }\n            });\n          }\n\n          localWidgets.forEach(({ widget, isMounted }, attribute) => {\n            const shouldMount =\n              renderState.attributesToRender.indexOf(attribute) > -1;\n\n            if (!isMounted && shouldMount) {\n              widgetsToMount.push(widget);\n              localWidgets.set(attribute, {\n                widget,\n                isMounted: true,\n              });\n            } else if (isMounted && !shouldMount) {\n              widgetsToUnmount.push(widget);\n              localWidgets.set(attribute, {\n                widget,\n                isMounted: false,\n              });\n            }\n          });\n\n          parent.addWidgets(widgetsToMount);\n          // make sure this only happens after the regular render, otherwise it\n          // happens too quick, since render is \"deferred\" for the next microtask,\n          // so this needs to be a whole task later\n          setTimeout(() => parent.removeWidgets(widgetsToUnmount), 0);\n\n          renderFn(\n            {\n              ...renderState,\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        },\n        dispose({ parent }) {\n          const toRemove: Widget[] = [];\n          localWidgets.forEach(({ widget, isMounted }) => {\n            if (isMounted) {\n              toRemove.push(widget);\n            }\n          });\n          parent.removeWidgets(toRemove);\n\n          unmountFn();\n        },\n        getWidgetSearchParameters(state) {\n          return facets.reduce(\n            (acc, curr) => acc.addFacet(curr),\n            state.setQueryParameters({\n              maxValuesPerFacet: Math.max(\n                maxValuesPerFacet || 0,\n                state.maxValuesPerFacet || 0\n              ),\n            })\n          );\n        },\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            dynamicWidgets: this.getWidgetRenderState(renderOptions),\n          };\n        },\n        getWidgetRenderState({ results, state }) {\n          if (!results) {\n            return { attributesToRender: [], widgetParams };\n          }\n\n          const attributesToRender = transformItems(\n            results.renderingContent?.facetOrdering?.facets?.order ?? [],\n            { results }\n          );\n\n          if (!Array.isArray(attributesToRender)) {\n            throw new Error(\n              withUsage(\n                'The `transformItems` option expects a function that returns an Array.'\n              )\n            );\n          }\n\n          warning(\n            maxValuesPerFacet >= (state.maxValuesPerFacet || 0),\n            `The maxValuesPerFacet set by dynamic widgets (${maxValuesPerFacet}) is smaller than one of the limits set by a widget (${state.maxValuesPerFacet}). This causes a mismatch in query parameters and thus an extra network request when that widget is mounted.`\n          );\n\n          warning(\n            attributesToRender.length <= MAX_WILDCARD_FACETS ||\n              widgetParams.facets !== undefined,\n            `More than ${MAX_WILDCARD_FACETS} facets are requested to be displayed without explicitly setting which facets to retrieve. This could have a performance impact. Set \"facets\" to [] to do two smaller network requests, or explicitly to ['*'] to avoid this warning.`\n          );\n\n          return {\n            attributesToRender,\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nexport default connectDynamicWidgets;\n","import {\n  checkRendering,\n  clearRefinements,\n  getRefinements,\n  createDocumentationMessageGenerator,\n  noop,\n  uniq,\n  mergeSearchParameters,\n} from '../../lib/utils';\n\nimport type {\n  TransformItems,\n  CreateURL,\n  Connector,\n  WidgetRenderState,\n  ScopedResult,\n} from '../../types';\nimport type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n  connector: true,\n});\n\nexport type ClearRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the refinements to clear (all by default). Cannot be used with `excludedAttributes`.\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the refinements to clear. Cannot be used with `includedAttributes`.\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<string>;\n};\n\nexport type ClearRefinementsRenderState = {\n  /**\n   * Triggers the clear of all the currently refined values.\n   */\n  refine: () => void;\n\n  /**\n   * Indicates if search state is refined.\n   * @deprecated prefer reading canRefine\n   */\n  hasRefinements: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Creates a url for the next state when refinements are cleared.\n   */\n  createURL: CreateURL<void>;\n};\n\nexport type ClearRefinementsWidgetDescription = {\n  $$type: 'ais.clearRefinements';\n  renderState: ClearRefinementsRenderState;\n  indexRenderState: {\n    clearRefinements: WidgetRenderState<\n      ClearRefinementsRenderState,\n      ClearRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type ClearRefinementsConnector = Connector<\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsConnectorParams\n>;\n\ntype AttributesToClear = {\n  helper: AlgoliaSearchHelper;\n  items: string[];\n};\n\nconst connectClearRefinements: ClearRefinementsConnector =\n  function connectClearRefinements(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        includedAttributes = [],\n        excludedAttributes = ['query'],\n        transformItems = ((items) => items) as NonNullable<\n          ClearRefinementsConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      if (\n        widgetParams &&\n        widgetParams.includedAttributes &&\n        widgetParams.excludedAttributes\n      ) {\n        throw new Error(\n          withUsage(\n            'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n          )\n        );\n      }\n\n      type ConnectorState = {\n        refine: () => void;\n        createURL: () => string;\n        attributesToClear: AttributesToClear[];\n      };\n\n      const connectorState: ConnectorState = {\n        refine: noop,\n        createURL: () => '',\n        attributesToClear: [],\n      };\n\n      const cachedRefine = () => connectorState.refine();\n      const cachedCreateURL = () => connectorState.createURL();\n\n      return {\n        $$type: 'ais.clearRefinements',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose() {\n          unmountFn();\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            clearRefinements: this.getWidgetRenderState(renderOptions),\n          };\n        },\n\n        getWidgetRenderState({ createURL, scopedResults, results }) {\n          connectorState.attributesToClear = scopedResults.reduce<\n            Array<ReturnType<typeof getAttributesToClear>>\n          >((attributesToClear, scopedResult) => {\n            return attributesToClear.concat(\n              getAttributesToClear({\n                scopedResult,\n                includedAttributes,\n                excludedAttributes,\n                transformItems,\n                results,\n              })\n            );\n          }, []);\n\n          connectorState.refine = () => {\n            connectorState.attributesToClear.forEach(\n              ({ helper: indexHelper, items }) => {\n                indexHelper\n                  .setState(\n                    clearRefinements({\n                      helper: indexHelper,\n                      attributesToClear: items,\n                    })\n                  )\n                  .search();\n              }\n            );\n          };\n\n          connectorState.createURL = () => {\n            return createURL(\n              mergeSearchParameters(\n                ...connectorState.attributesToClear.map(\n                  ({ helper: indexHelper, items }) => {\n                    return clearRefinements({\n                      helper: indexHelper,\n                      attributesToClear: items,\n                    });\n                  }\n                )\n              )\n            );\n          };\n\n          const canRefine = connectorState.attributesToClear.some(\n            (attributeToClear) => attributeToClear.items.length > 0\n          );\n\n          return {\n            canRefine,\n            hasRefinements: canRefine,\n            refine: cachedRefine,\n            createURL: cachedCreateURL,\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nfunction getAttributesToClear({\n  scopedResult,\n  includedAttributes,\n  excludedAttributes,\n  transformItems,\n  results,\n}: {\n  scopedResult: ScopedResult;\n  includedAttributes: string[];\n  excludedAttributes: string[];\n  transformItems: TransformItems<string>;\n  results: SearchResults | undefined;\n}): AttributesToClear {\n  const includesQuery =\n    includedAttributes.indexOf('query') !== -1 ||\n    excludedAttributes.indexOf('query') === -1;\n\n  return {\n    helper: scopedResult.helper,\n    items: transformItems(\n      uniq(\n        getRefinements(\n          scopedResult.results,\n          scopedResult.helper.state,\n          includesQuery\n        )\n          .map((refinement) => refinement.attribute)\n          .filter(\n            (attribute) =>\n              // If the array is empty (default case), we keep all the attributes\n              includedAttributes.length === 0 ||\n              // Otherwise, only add the specified attributes\n              includedAttributes.indexOf(attribute) !== -1\n          )\n          .filter(\n            (attribute) =>\n              // If the query is included, we ignore the default `excludedAttributes = ['query']`\n              (attribute === 'query' && includesQuery) ||\n              // Otherwise, ignore the excluded attributes\n              excludedAttributes.indexOf(attribute) === -1\n          )\n      ),\n      { results }\n    ),\n  };\n}\n\nexport default connectClearRefinements;\n","import {\n  getRefinements,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type {\n  Refinement,\n  FacetRefinement,\n  NumericRefinement,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\n\nexport type CurrentRefinementsConnectorParamsRefinement = {\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The type of the refinement.\n   */\n  type:\n    | 'facet'\n    | 'exclude'\n    | 'disjunctive'\n    | 'hierarchical'\n    | 'numeric'\n    | 'query'\n    | 'tag';\n\n  /**\n   * The raw value of the refinement.\n   */\n  value: string | number;\n\n  /**\n   * The label of the refinement to display.\n   */\n  label: string;\n\n  /**\n   * The value of the operator (only if applicable).\n   */\n  operator?: string;\n\n  /**\n   * The number of found items (only if applicable).\n   */\n  count?: number;\n\n  /**\n   * Whether the count is exhaustive (only if applicable).\n   */\n  exhaustive?: boolean;\n};\n\nexport type CurrentRefinementsConnectorParamsItem = {\n  /**\n   * The index name.\n   */\n  indexName: string;\n\n  /**\n   * The index id as provided to the index widget.\n   */\n  indexId: string;\n\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The textual representation of this attribute.\n   */\n  label: string;\n\n  /**\n   * Currently applied refinements.\n   */\n  refinements: CurrentRefinementsConnectorParamsRefinement[];\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine: (refinement: CurrentRefinementsConnectorParamsRefinement) => void;\n};\n\nexport type CurrentRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the widget (all by default).\n   * Cannot be used with `excludedAttributes`.\n   *\n   * @default `[]`\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the widget.\n   * Cannot be used with `includedAttributes`.\n   *\n   * @default `['query']`\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<CurrentRefinementsConnectorParamsItem>;\n};\n\nexport type CurrentRefinementsRenderState = {\n  /**\n   * All the currently refined items, grouped by attribute.\n   */\n  items: CurrentRefinementsConnectorParamsItem[];\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine: (refinement: CurrentRefinementsConnectorParamsRefinement) => void;\n\n  /**\n   * Generates a URL for the next state.\n   */\n  createURL: CreateURL<CurrentRefinementsConnectorParamsRefinement>;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n  connector: true,\n});\n\nexport type CurrentRefinementsWidgetDescription = {\n  $$type: 'ais.currentRefinements';\n  renderState: CurrentRefinementsRenderState;\n  indexRenderState: {\n    currentRefinements: WidgetRenderState<\n      CurrentRefinementsRenderState,\n      CurrentRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type CurrentRefinementsConnector = Connector<\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsConnectorParams\n>;\n\nconst connectCurrentRefinements: CurrentRefinementsConnector =\n  function connectCurrentRefinements(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      if (\n        (widgetParams || {}).includedAttributes &&\n        (widgetParams || {}).excludedAttributes\n      ) {\n        throw new Error(\n          withUsage(\n            'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n          )\n        );\n      }\n\n      const {\n        includedAttributes,\n        excludedAttributes = ['query'],\n        transformItems = ((items) => items) as NonNullable<\n          CurrentRefinementsConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      return {\n        $$type: 'ais.currentRefinements',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose() {\n          unmountFn();\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            currentRefinements: this.getWidgetRenderState(renderOptions),\n          };\n        },\n\n        getWidgetRenderState({ results, scopedResults, createURL, helper }) {\n          function getItems() {\n            if (!results) {\n              return transformItems(\n                getRefinementsItems({\n                  results: {},\n                  helper,\n                  indexId: helper.state.index,\n                  includedAttributes,\n                  excludedAttributes,\n                }),\n                { results }\n              );\n            }\n\n            return scopedResults.reduce<\n              CurrentRefinementsConnectorParamsItem[]\n            >((accResults, scopedResult) => {\n              return accResults.concat(\n                transformItems(\n                  getRefinementsItems({\n                    results: scopedResult.results,\n                    helper: scopedResult.helper,\n                    indexId: scopedResult.indexId,\n                    includedAttributes,\n                    excludedAttributes,\n                  }),\n                  { results }\n                )\n              );\n            }, []);\n          }\n\n          const items = getItems();\n\n          return {\n            items,\n            canRefine: items.length > 0,\n            refine: (refinement) => clearRefinement(helper, refinement),\n            createURL: (refinement) =>\n              createURL(clearRefinementFromState(helper.state, refinement)),\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nfunction getRefinementsItems({\n  results,\n  helper,\n  indexId,\n  includedAttributes,\n  excludedAttributes,\n}: {\n  results: SearchResults | Record<string, never>;\n  helper: AlgoliaSearchHelper;\n  indexId: string;\n  includedAttributes: CurrentRefinementsConnectorParams['includedAttributes'];\n  excludedAttributes: CurrentRefinementsConnectorParams['excludedAttributes'];\n}): CurrentRefinementsConnectorParamsItem[] {\n  const includesQuery =\n    (includedAttributes || []).indexOf('query') !== -1 ||\n    (excludedAttributes || []).indexOf('query') === -1;\n\n  const filterFunction = includedAttributes\n    ? (item: CurrentRefinementsConnectorParamsRefinement) =>\n        includedAttributes.indexOf(item.attribute) !== -1\n    : (item: CurrentRefinementsConnectorParamsRefinement) =>\n        excludedAttributes!.indexOf(item.attribute) === -1;\n\n  const items = getRefinements(results, helper.state, includesQuery)\n    .map(normalizeRefinement)\n    .filter(filterFunction);\n\n  return items.reduce<CurrentRefinementsConnectorParamsItem[]>(\n    (allItems, currentItem) => [\n      ...allItems.filter((item) => item.attribute !== currentItem.attribute),\n      {\n        indexName: helper.state.index,\n        indexId,\n        attribute: currentItem.attribute,\n        label: currentItem.attribute,\n        refinements: items\n          .filter((result) => result.attribute === currentItem.attribute)\n          // We want to keep the order of refinements except the numeric ones.\n          .sort((a, b) =>\n            a.type === 'numeric' ? (a.value as number) - (b.value as number) : 0\n          ),\n        refine: (refinement) => clearRefinement(helper, refinement),\n      },\n    ],\n    []\n  );\n}\n\nfunction clearRefinementFromState(\n  state: SearchParameters,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): SearchParameters {\n  state = state.resetPage();\n  switch (refinement.type) {\n    case 'facet':\n      return state.removeFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'disjunctive':\n      return state.removeDisjunctiveFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'hierarchical':\n      return state.removeHierarchicalFacetRefinement(refinement.attribute);\n    case 'exclude':\n      return state.removeExcludeRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'numeric':\n      return state.removeNumericRefinement(\n        refinement.attribute,\n        refinement.operator,\n        String(refinement.value)\n      );\n    case 'tag':\n      return state.removeTagRefinement(String(refinement.value));\n    case 'query':\n      return state.setQueryParameter('query', '');\n    default:\n      warning(\n        false,\n        `The refinement type \"${refinement.type}\" does not exist and cannot be cleared from the current refinements.`\n      );\n      return state;\n  }\n}\n\nfunction clearRefinement(\n  helper: AlgoliaSearchHelper,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): void {\n  helper.setState(clearRefinementFromState(helper.state, refinement)).search();\n}\n\nfunction getOperatorSymbol(operator: SearchParameters.Operator): string {\n  switch (operator) {\n    case '>=':\n      return '≥';\n    case '<=':\n      return '≤';\n    default:\n      return operator;\n  }\n}\n\nfunction normalizeRefinement(\n  refinement: Refinement\n): CurrentRefinementsConnectorParamsRefinement {\n  const value = getValue(refinement);\n  const label = (refinement as NumericRefinement).operator\n    ? `${getOperatorSymbol(\n        (refinement as NumericRefinement).operator as SearchParameters.Operator\n      )} ${refinement.name}`\n    : refinement.name;\n\n  const normalizedRefinement: CurrentRefinementsConnectorParamsRefinement = {\n    attribute: refinement.attribute,\n    type: refinement.type,\n    value,\n    label,\n  };\n\n  if ((refinement as NumericRefinement).operator !== undefined) {\n    normalizedRefinement.operator = (refinement as NumericRefinement).operator;\n  }\n  if ((refinement as FacetRefinement).count !== undefined) {\n    normalizedRefinement.count = (refinement as FacetRefinement).count;\n  }\n  if ((refinement as FacetRefinement).exhaustive !== undefined) {\n    normalizedRefinement.exhaustive = (\n      refinement as FacetRefinement\n    ).exhaustive;\n  }\n\n  return normalizedRefinement;\n}\n\nfunction getValue(refinement: Refinement) {\n  if (refinement.type === 'numeric') {\n    return Number(refinement.name);\n  }\n\n  if ('escapedValue' in refinement) {\n    return refinement.escapedValue;\n  }\n\n  return refinement.name;\n}\n\nexport default connectCurrentRefinements;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  isEqual,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  TransformItems,\n  RenderOptions,\n  Widget,\n  SortBy,\n  WidgetRenderState,\n  IndexUiState,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['name:asc'];\n\nexport type HierarchicalMenuItem = {\n  /**\n   * Value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n  /**\n   * n+1 level of items, same structure HierarchicalMenuItem\n   */\n  data: HierarchicalMenuItem[] | null;\n};\n\nexport type HierarchicalMenuConnectorParams = {\n  /**\n   *  Attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string | null;\n  /**\n   * Show the siblings of the selected parent levels of the current refined value. This\n   * does not impact the root level.\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.HierarchicalFacet>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n};\n\nexport type HierarchicalMenuRenderState = {\n  /**\n   * Creates an url for the next state for a clicked item.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Values to be rendered.\n   */\n  items: HierarchicalMenuItem[];\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore: () => void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type HierarchicalMenuWidgetDescription = {\n  $$type: 'ais.hierarchicalMenu';\n  renderState: HierarchicalMenuRenderState;\n  indexRenderState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: WidgetRenderState<\n        HierarchicalMenuRenderState,\n        HierarchicalMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: string[];\n    };\n  };\n};\n\nexport type HierarchicalMenuConnector = Connector<\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuConnectorParams\n>;\n\n/**\n * **HierarchicalMenu** connector provides the logic to build a custom widget\n * that will give the user the ability to explore facets in a tree-like structure.\n *\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two\n * levels deep.\n *\n * @type {Connector}\n * @param {function(HierarchicalMenuRenderingOptions, boolean)} renderFn Rendering function for the custom **HierarchicalMenu** widget.\n * @param {function} unmountFn Unmount function called when the widget is disposed.\n * @return {function(CustomHierarchicalMenuWidgetParams)} Re-usable widget factory for a custom **HierarchicalMenu** widget.\n */\nconst connectHierarchicalMenu: HierarchicalMenuConnector =\n  function connectHierarchicalMenu(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        attributes,\n        separator = ' > ',\n        rootPath = null,\n        showParentLevel = true,\n        limit = 10,\n        showMore = false,\n        showMoreLimit = 20,\n        sortBy = DEFAULT_SORT,\n        transformItems = ((items) => items) as NonNullable<\n          HierarchicalMenuConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      if (\n        !attributes ||\n        !Array.isArray(attributes) ||\n        attributes.length === 0\n      ) {\n        throw new Error(\n          withUsage('The `attributes` option expects an array of strings.')\n        );\n      }\n\n      if (showMore === true && showMoreLimit <= limit) {\n        throw new Error(\n          withUsage('The `showMoreLimit` option must be greater than `limit`.')\n        );\n      }\n\n      type ThisWidget = Widget<\n        HierarchicalMenuWidgetDescription & {\n          widgetParams: typeof widgetParams;\n        }\n      >;\n\n      // we need to provide a hierarchicalFacet name for the search state\n      // so that we can always map $hierarchicalFacetName => real attributes\n      // we use the first attribute name\n      const [hierarchicalFacetName] = attributes;\n\n      let sendEvent: HierarchicalMenuRenderState['sendEvent'];\n\n      // Provide the same function to the `renderFn` so that way the user\n      // has to only bind it once when `isFirstRendering` for instance\n      let toggleShowMore = () => {};\n      function cachedToggleShowMore() {\n        toggleShowMore();\n      }\n\n      let _refine: HierarchicalMenuRenderState['refine'] | undefined;\n\n      let isShowingMore = false;\n\n      function createToggleShowMore(\n        renderOptions: RenderOptions,\n        widget: ThisWidget\n      ) {\n        return () => {\n          isShowingMore = !isShowingMore;\n          widget.render!(renderOptions);\n        };\n      }\n\n      function getLimit() {\n        return isShowingMore ? showMoreLimit : limit;\n      }\n\n      function _prepareFacetValues(\n        facetValues: SearchResults.HierarchicalFacet[]\n      ): HierarchicalMenuItem[] {\n        return facetValues\n          .slice(0, getLimit())\n          .map(\n            ({ name: label, escapedValue: value, data, path, ...subValue }) => {\n              const item: HierarchicalMenuItem = {\n                ...subValue,\n                value,\n                label,\n                data: null,\n              };\n              if (Array.isArray(data)) {\n                item.data = _prepareFacetValues(data);\n              }\n              return item;\n            }\n          );\n      }\n\n      return {\n        $$type: 'ais.hierarchicalMenu',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          return state\n            .removeHierarchicalFacet(hierarchicalFacetName)\n            .setQueryParameter('maxValuesPerFacet', undefined);\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            hierarchicalMenu: {\n              ...renderState.hierarchicalMenu,\n              [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState({\n          results,\n          state,\n          createURL,\n          instantSearchInstance,\n          helper,\n        }) {\n          let items: HierarchicalMenuRenderState['items'] = [];\n          let canToggleShowMore = false;\n\n          // Bind createURL to this specific attribute\n          const _createURL = (facetValue: string) => {\n            return createURL((uiState) =>\n              this.getWidgetUiState(uiState, {\n                searchParameters: state\n                  .resetPage()\n                  .toggleFacetRefinement(hierarchicalFacetName, facetValue),\n                helper,\n              })\n            );\n          };\n\n          if (!sendEvent) {\n            sendEvent = createSendEventForFacet({\n              instantSearchInstance,\n              helper,\n              attribute(facetValue) {\n                const index = facetValue.split(separator).length - 1;\n\n                return attributes[index];\n              },\n              widgetType: this.$$type,\n            });\n          }\n\n          if (!_refine) {\n            _refine = function (facetValue) {\n              sendEvent('click:internal', facetValue);\n              helper\n                .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n                .search();\n            };\n          }\n\n          if (results) {\n            const facetValues = results.getFacetValues(hierarchicalFacetName, {\n              sortBy,\n              facetOrdering: sortBy === DEFAULT_SORT,\n            });\n            const facetItems =\n              facetValues && !Array.isArray(facetValues) && facetValues.data\n                ? facetValues.data\n                : [];\n\n            // If the limit is the max number of facet retrieved it is impossible to know\n            // if the facets are exhaustive. The only moment we are sure it is exhaustive\n            // is when it is strictly under the number requested unless we know that another\n            // widget has requested more values (maxValuesPerFacet > getLimit()).\n            // Because this is used for making the search of facets unable or not, it is important\n            // to be conservative here.\n            const hasExhaustiveItems =\n              (state.maxValuesPerFacet || 0) > getLimit()\n                ? facetItems.length <= getLimit()\n                : facetItems.length < getLimit();\n\n            canToggleShowMore =\n              showMore && (isShowingMore || !hasExhaustiveItems);\n\n            items = transformItems(_prepareFacetValues(facetItems), {\n              results,\n            });\n          }\n\n          return {\n            items,\n            refine: _refine,\n            canRefine: items.length > 0,\n            createURL: _createURL,\n            sendEvent,\n            widgetParams,\n            isShowingMore,\n            toggleShowMore: cachedToggleShowMore,\n            canToggleShowMore,\n          };\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const path = searchParameters.getHierarchicalFacetBreadcrumb(\n            hierarchicalFacetName\n          );\n\n          return removeEmptyRefinementsFromUiState(\n            {\n              ...uiState,\n              hierarchicalMenu: {\n                ...uiState.hierarchicalMenu,\n                [hierarchicalFacetName]: path,\n              },\n            },\n            hierarchicalFacetName\n          );\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          const values =\n            uiState.hierarchicalMenu &&\n            uiState.hierarchicalMenu[hierarchicalFacetName];\n\n          if (\n            searchParameters.isConjunctiveFacet(hierarchicalFacetName) ||\n            searchParameters.isDisjunctiveFacet(hierarchicalFacetName)\n          ) {\n            warning(\n              false,\n              `HierarchicalMenu: Attribute \"${hierarchicalFacetName}\" is already used by another widget applying conjunctive or disjunctive faceting.\nAs this is not supported, please make sure to remove this other widget or this HierarchicalMenu widget will not work at all.`\n            );\n\n            return searchParameters;\n          }\n\n          if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n            const facet = searchParameters.getHierarchicalFacetByName(\n              hierarchicalFacetName\n            );\n\n            warning(\n              isEqual(facet.attributes, attributes) &&\n                facet.separator === separator &&\n                facet.rootPath === rootPath,\n              'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n            );\n          }\n\n          const withFacetConfiguration = searchParameters\n            .removeHierarchicalFacet(hierarchicalFacetName)\n            .addHierarchicalFacet({\n              name: hierarchicalFacetName,\n              attributes,\n              separator,\n              rootPath,\n              showParentLevel,\n            });\n\n          const currentMaxValuesPerFacet =\n            withFacetConfiguration.maxValuesPerFacet || 0;\n\n          const nextMaxValuesPerFacet = Math.max(\n            currentMaxValuesPerFacet,\n            showMore ? showMoreLimit : limit\n          );\n\n          const withMaxValuesPerFacet =\n            withFacetConfiguration.setQueryParameter(\n              'maxValuesPerFacet',\n              nextMaxValuesPerFacet\n            );\n\n          if (!values) {\n            return withMaxValuesPerFacet.setQueryParameters({\n              hierarchicalFacetsRefinements: {\n                ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n                [hierarchicalFacetName]: [],\n              },\n            });\n          }\n\n          return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n            hierarchicalFacetName,\n            values.join(separator)\n          );\n        },\n      };\n    };\n  };\n\nfunction removeEmptyRefinementsFromUiState(\n  indexUiState: IndexUiState,\n  attribute: string\n): IndexUiState {\n  if (!indexUiState.hierarchicalMenu) {\n    return indexUiState;\n  }\n\n  if (\n    !indexUiState.hierarchicalMenu[attribute] ||\n    indexUiState.hierarchicalMenu[attribute].length === 0\n  ) {\n    delete indexUiState.hierarchicalMenu[attribute];\n  }\n\n  if (Object.keys(indexUiState.hierarchicalMenu).length === 0) {\n    delete indexUiState.hierarchicalMenu;\n  }\n\n  return indexUiState;\n}\n\nexport default connectHierarchicalMenu;\n","import {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  addAbsolutePosition,\n  addQueryID,\n  createSendEventForHits,\n  createBindEventForHits,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport type {\n  TransformItems,\n  Connector,\n  Hit,\n  WidgetRenderState,\n  BaseHit,\n  Unmounter,\n  Renderer,\n  IndexRenderState,\n} from '../../types';\nimport type { Banner, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits',\n  connector: true,\n});\n\nexport type HitsRenderState<THit extends NonNullable<object> = BaseHit> = {\n  /**\n   * The matched hits from Algolia API.\n   * @deprecated use `items` instead\n   */\n  hits: Array<Hit<THit>>;\n\n  /**\n   * The matched hits from Algolia API.\n   */\n  items: Array<Hit<THit>>;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<Hit<THit>>;\n\n  /**\n   * The banner to display above the hits.\n   */\n  banner?: Banner;\n\n  /**\n   * Sends an event to the Insights middleware.\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string for the `data-insights-event` attribute for the Insights middleware\n   */\n  bindEvent: BindEventForHits;\n};\n\nexport type HitsConnectorParams<THit extends NonNullable<object> = BaseHit> = {\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit<THit>>;\n};\n\nexport type HitsWidgetDescription<THit extends NonNullable<object> = BaseHit> =\n  {\n    $$type: 'ais.hits';\n    renderState: HitsRenderState<THit>;\n    indexRenderState: {\n      hits: WidgetRenderState<HitsRenderState<THit>, HitsConnectorParams<THit>>;\n    };\n  };\n\nexport type HitsConnector<THit extends NonNullable<object> = BaseHit> =\n  Connector<HitsWidgetDescription<THit>, HitsConnectorParams<THit>>;\n\nexport default (function connectHits<TWidgetParams>(\n  renderFn: Renderer<HitsRenderState, TWidgetParams & HitsConnectorParams>,\n  unmountFn: Unmounter = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return <THit extends NonNullable<object> = BaseHit>(\n    widgetParams: TWidgetParams & HitsConnectorParams<THit>\n  ) => {\n    const {\n      // @MAJOR: this can default to false\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        HitsConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n\n    return {\n      $$type: 'ais.hits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        renderState.sendEvent('view:internal', renderState.items);\n      },\n\n      getRenderState(\n        renderState,\n        renderOptions\n        // Type is explicitly redefined, to avoid having the TWidgetParams type in the definition\n      ): IndexRenderState & HitsWidgetDescription['indexRenderState'] {\n        return {\n          ...renderState,\n          hits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            getIndex: () => helper.getIndex(),\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!bindEvent) {\n          bindEvent = createBindEventForHits({\n            getIndex: () => helper.getIndex(),\n            widgetType: this.$$type,\n            instantSearchInstance,\n          });\n        }\n\n        if (!results) {\n          return {\n            hits: [],\n            items: [],\n            results: undefined,\n            banner: undefined,\n            sendEvent,\n            bindEvent,\n            widgetParams,\n          };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        const hitsWithAbsolutePosition = addAbsolutePosition(\n          results.hits,\n          results.page,\n          results.hitsPerPage\n        );\n\n        const hitsWithAbsolutePositionAndQueryID = addQueryID(\n          hitsWithAbsolutePosition,\n          results.queryID\n        );\n\n        const items = transformItems(hitsWithAbsolutePositionAndQueryID, {\n          results,\n        });\n\n        const banner = results.renderingContent?.widgets?.banners?.[0];\n\n        return {\n          hits: items,\n          items,\n          results,\n          banner,\n          sendEvent,\n          bindEvent,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetSearchParameters(state, _uiState) {\n        if (!escapeHTML) {\n          return state;\n        }\n\n        // @MAJOR: set this globally, not in the Hits widget to allow Hits to be conditionally used\n        return state.setQueryParameters(TAG_PLACEHOLDER);\n      },\n    };\n  };\n} satisfies HitsConnector);\n","import {\n  uniq,\n  find,\n  createDocumentationMessageGenerator,\n  warning,\n} from '../utils';\n\nimport type {\n  Hit,\n  InsightsClient,\n  InsightsClientMethod,\n  InsightsClientPayload,\n  Connector,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst getSelectedHits = (hits: Hit[], selectedObjectIDs: string[]): Hit[] => {\n  return selectedObjectIDs.map((objectID) => {\n    const hit = find(hits, (h) => h.objectID === objectID);\n    if (typeof hit === 'undefined') {\n      throw new Error(\n        `Could not find objectID \"${objectID}\" passed to \\`clickedObjectIDsAfterSearch\\` in the returned hits. This is necessary to infer the absolute position and the query ID.`\n      );\n    }\n    return hit;\n  });\n};\n\nconst getQueryID = (selectedHits: Hit[]): string => {\n  const queryIDs = uniq(selectedHits.map((hit) => hit.__queryID));\n  if (queryIDs.length > 1) {\n    throw new Error(\n      'Insights currently allows a single `queryID`. The `objectIDs` provided map to multiple `queryID`s.'\n    );\n  }\n  const queryID = queryIDs[0];\n  if (typeof queryID !== 'string') {\n    throw new Error(\n      `Could not infer \\`queryID\\`. Ensure InstantSearch \\`clickAnalytics: true\\` was added with the Configure widget.\n\nSee: https://alg.li/lNiZZ7`\n    );\n  }\n  return queryID;\n};\n\nconst getPositions = (selectedHits: Hit[]): number[] =>\n  selectedHits.map((hit) => hit.__position);\n\nexport const inferPayload = ({\n  method,\n  results,\n  hits,\n  objectIDs,\n}: {\n  method: InsightsClientMethod;\n  results: SearchResults;\n  hits: Hit[];\n  objectIDs: string[];\n}): Omit<InsightsClientPayload, 'eventName'> => {\n  const { index } = results;\n  const selectedHits = getSelectedHits(hits, objectIDs);\n  const queryID = getQueryID(selectedHits);\n\n  switch (method) {\n    case 'clickedObjectIDsAfterSearch': {\n      const positions = getPositions(selectedHits);\n      return { index, queryID, objectIDs, positions };\n    }\n\n    case 'convertedObjectIDsAfterSearch':\n      return { index, queryID, objectIDs };\n\n    default:\n      throw new Error(`Unsupported method passed to insights: \"${method}\".`);\n  }\n};\n\nconst wrapInsightsClient =\n  (\n    aa: InsightsClient | null,\n    results: SearchResults,\n    hits: Hit[]\n  ): InsightsClient =>\n  (method, ...payloads) => {\n    const [payload] = payloads;\n    warning(\n      false,\n      `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n    if (!aa) {\n      const withInstantSearchUsage = createDocumentationMessageGenerator({\n        name: 'instantsearch',\n      });\n      throw new Error(\n        withInstantSearchUsage(\n          'The `insightsClient` option has not been provided to `instantsearch`.'\n        )\n      );\n    }\n    if (!Array.isArray(payload.objectIDs)) {\n      throw new TypeError('Expected `objectIDs` to be an array.');\n    }\n    const inferredPayload = inferPayload({\n      method,\n      results,\n      hits,\n      objectIDs: payload.objectIDs,\n    });\n    aa(method, { ...inferredPayload, ...payload });\n  };\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n * It passes `insights` to `HitsWithInsightsListener` and `InfiniteHitsWithInsightsListener`.\n */\nexport default function withInsights<TConnector extends Connector<any, any>>(\n  connector: TConnector\n): TConnector {\n  return ((renderFn, unmountFn) =>\n    connector((renderOptions, isFirstRender) => {\n      const { results, hits, instantSearchInstance } = renderOptions;\n      if (results && hits && instantSearchInstance) {\n        const insights = wrapInsightsClient(\n          instantSearchInstance.insightsClient,\n          results,\n          hits\n        );\n        return renderFn({ ...renderOptions, insights }, isFirstRender);\n      }\n      return renderFn(renderOptions, isFirstRender);\n    }, unmountFn)) as TConnector;\n}\n","var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,k.ref?k.ref:null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&(\"function\"==typeof u.type&&null!=x[h].__e&&x[h].__e==u.__d&&(u.__d=_(i,h+1)),N(x[h],x[h]));if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof H){if(g=u.props,m=(a=H.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in H&&H.prototype.render?u.__c=h=new H(g,x):(u.__c=h=new d(g,x),h.constructor=H,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=H.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,H.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==H.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==H.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,A=l.__r,C=0,\"prototype\"in H&&H.prototype.render)h.state=h.__s,h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context);else do{h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++C<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),$=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray($)?$:[$],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{d as Component,p as Fragment,q as cloneElement,B as createContext,h as createElement,y as createRef,h,S as hydrate,i as isValidElement,l as options,P as render,x as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import { warning, serializePayload, deserializePayload } from '../lib/utils';\n\nimport type { InsightsClientMethod, InsightsClientPayload } from '../types';\n\n/** @deprecated use bindEvent instead */\nexport function readDataAttributes(domElement: HTMLElement): {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n} {\n  const method = domElement.getAttribute(\n    'data-insights-method'\n  ) as InsightsClientMethod;\n\n  const serializedPayload = domElement.getAttribute('data-insights-payload');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    const payload =\n      deserializePayload<Partial<InsightsClientPayload>>(serializedPayload);\n    return { method, payload };\n  } catch (error) {\n    throw new Error(\n      'The insights helper was unable to parse `data-insights-payload`.'\n    );\n  }\n}\n\n/** @deprecated use bindEvent instead */\nexport function writeDataAttributes({\n  method,\n  payload,\n}: {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n}): string {\n  if (typeof payload !== 'object') {\n    throw new Error(`The insights helper expects the payload to be an object.`);\n  }\n\n  let serializedPayload: string;\n\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(`Could not JSON serialize the payload object.`);\n  }\n\n  return `data-insights-method=\"${method}\" data-insights-payload=\"${serializedPayload}\"`;\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function insights(\n  method: InsightsClientMethod,\n  payload: Partial<InsightsClientPayload>\n): string {\n  warning(\n    false,\n    `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return writeDataAttributes({ method, payload });\n}\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport { readDataAttributes } from '../../helpers/insights';\nimport { deserializePayload, warning } from '../utils';\n\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\nimport type { InsightsClient } from '../../types';\n\nexport type InsightsEventHandlerOptions = {\n  insights?: InsightsClient;\n  sendEvent: (event: InsightsEvent) => void;\n};\n\nexport const createInsightsEventHandler =\n  ({ insights, sendEvent }: InsightsEventHandlerOptions) =>\n  (event: MouseEvent): void => {\n    // new way, e.g. bindEvent(\"click\", hit, \"Hit clicked\")\n    const insightsThroughSendEvent = findInsightsTarget(\n      event.target as HTMLElement | null,\n      event.currentTarget as HTMLElement | null,\n      (element) => element.hasAttribute('data-insights-event')\n    );\n\n    if (insightsThroughSendEvent) {\n      const payload = parseInsightsEvent(insightsThroughSendEvent);\n\n      payload.forEach((single) => sendEvent(single));\n    }\n\n    // old way, e.g. instantsearch.insights(\"clickedObjectIDsAfterSearch\", { .. })\n    const insightsThroughFunction = findInsightsTarget(\n      event.target as HTMLElement | null,\n      event.currentTarget as HTMLElement | null,\n      (element) =>\n        element.hasAttribute('data-insights-method') &&\n        element.hasAttribute('data-insights-payload')\n    );\n    if (insightsThroughFunction) {\n      const { method, payload } = readDataAttributes(insightsThroughFunction);\n      insights!(method, payload);\n    }\n  };\n\nfunction findInsightsTarget(\n  startElement: HTMLElement | null,\n  endElement: HTMLElement | null,\n  validator: (element: HTMLElement) => boolean\n): HTMLElement | null {\n  let element: HTMLElement | null = startElement;\n  while (element && !validator(element)) {\n    if (element === endElement) {\n      return null;\n    }\n    element = element.parentElement;\n  }\n  return element;\n}\n\nfunction parseInsightsEvent(element: HTMLElement): InsightsEvent[] {\n  const serializedPayload = element.getAttribute('data-insights-event');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights middleware expects `data-insights-event` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    return deserializePayload(serializedPayload);\n  } catch (error) {\n    throw new Error(\n      'The insights middleware was unable to parse `data-insights-event`.'\n    );\n  }\n}\n\n/**\n * @deprecated use `sendEvent` directly instead\n */\nexport default function withInsightsListener(BaseComponent: any) {\n  warning(\n    false,\n    'The `withInsightsListener` function is deprecated and will be removed in the next major version. Please use `sendEvent` directly instead.'\n  );\n\n  return function WithInsightsListener(\n    props: { [key: string]: any } & InsightsEventHandlerOptions\n  ) {\n    const handleClick = createInsightsEventHandler(props);\n\n    return (\n      <div onClick={handleClick}>\n        <BaseComponent {...props} />\n      </div>\n    );\n  };\n}\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  InitOptions,\n  RenderOptions,\n  WidgetRenderState,\n  Widget,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n  connector: true,\n});\n\nexport type HitsPerPageRenderStateItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * Indicates if it's the current refined value.\n   */\n  isRefined: boolean;\n};\n\nexport type HitsPerPageConnectorParamsItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * The default hits per page on first search.\n   *\n   * @default false\n   */\n  default?: boolean;\n};\n\nexport type HitsPerPageConnectorParams = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HitsPerPageRenderStateItem>;\n};\n\nexport type HitsPerPageRenderState = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageRenderStateItem[];\n\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<HitsPerPageConnectorParamsItem['value']>;\n\n  /**\n   * Sets the number of hits per page and triggers a search.\n   */\n  refine: (value: number) => void;\n\n  /**\n   * Indicates whether or not the search has results.\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n};\n\nexport type HitsPerPageWidgetDescription = {\n  $$type: 'ais.hitsPerPage';\n  renderState: HitsPerPageRenderState;\n  indexRenderState: {\n    hitsPerPage: WidgetRenderState<\n      HitsPerPageRenderState,\n      HitsPerPageConnectorParams\n    >;\n  };\n  indexUiState: {\n    hitsPerPage: number;\n  };\n};\n\nexport type HitsPerPageConnector = Connector<\n  HitsPerPageWidgetDescription,\n  HitsPerPageConnectorParams\n>;\n\nconst connectHitsPerPage: HitsPerPageConnector = function connectHitsPerPage(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      items: userItems,\n      transformItems = ((items) => items) as NonNullable<\n        HitsPerPageConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(userItems)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    let items = userItems;\n\n    const defaultItems = items.filter((item) => item.default === true);\n\n    if (defaultItems.length === 0) {\n      throw new Error(\n        withUsage(`A default value must be specified in \\`items\\`.`)\n      );\n    }\n\n    if (defaultItems.length > 1) {\n      throw new Error(\n        withUsage('More than one default value is specified in `items`.')\n      );\n    }\n\n    const defaultItem = defaultItems[0];\n\n    const normalizeItems = ({ hitsPerPage }: SearchParameters) => {\n      return items.map((item) => ({\n        ...item,\n        isRefined: Number(item.value) === Number(hitsPerPage),\n      }));\n    };\n\n    type ConnectorState = {\n      getRefine: (\n        helper: AlgoliaSearchHelper\n      ) => (value: HitsPerPageConnectorParamsItem['value']) => any;\n      createURLFactory: (props: {\n        state: SearchParameters;\n        createURL: (InitOptions | RenderOptions)['createURL'];\n        getWidgetUiState: NonNullable<Widget['getWidgetUiState']>;\n        helper: AlgoliaSearchHelper;\n      }) => HitsPerPageRenderState['createURL'];\n    };\n\n    const connectorState: ConnectorState = {\n      getRefine: (helper) => (value) => {\n        return !value && value !== 0\n          ? helper.setQueryParameter('hitsPerPage', undefined).search()\n          : helper.setQueryParameter('hitsPerPage', value).search();\n      },\n      createURLFactory:\n        ({ state, createURL, getWidgetUiState, helper }) =>\n        (value) =>\n          createURL((uiState) =>\n            getWidgetUiState(uiState, {\n              searchParameters: state\n                .resetPage()\n                .setQueryParameter(\n                  'hitsPerPage',\n                  !value && value !== 0 ? undefined : value\n                ),\n              helper,\n            })\n          ),\n    };\n\n    return {\n      $$type: 'ais.hitsPerPage',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n\n        const isCurrentInOptions = items.some(\n          (item) => Number(state.hitsPerPage) === Number(item.value)\n        );\n\n        if (!isCurrentInOptions) {\n          warning(\n            state.hitsPerPage !== undefined,\n            `\n\\`hitsPerPage\\` is not defined.\nThe option \\`hitsPerPage\\` needs to be set using the \\`configure\\` widget.\n\nLearn more: https://www.algolia.com/doc/api-reference/widgets/hits-per-page/js/\n            `\n          );\n\n          warning(\n            false,\n            `\nThe \\`items\\` option of \\`hitsPerPage\\` does not contain the \"hits per page\" value coming from the state: ${state.hitsPerPage}.\n\nYou may want to add another entry to the \\`items\\` option with this value.`\n          );\n\n          items = [\n            // The helper will convert the empty string to `undefined`.\n            { value: '' as unknown as number, label: '' },\n            ...items,\n          ];\n        }\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('hitsPerPage', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hitsPerPage: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ state, results, createURL, helper }) {\n        const canRefine = results ? results.nbHits > 0 : false;\n\n        return {\n          items: transformItems(normalizeItems(state), { results }),\n          refine: connectorState.getRefine(helper),\n          createURL: connectorState.createURLFactory({\n            state,\n            createURL,\n            getWidgetUiState: this.getWidgetUiState,\n            helper,\n          }),\n          hasNoResults: !canRefine,\n          canRefine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const hitsPerPage = searchParameters.hitsPerPage;\n\n        if (hitsPerPage === undefined || hitsPerPage === defaultItem.value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          hitsPerPage,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameters({\n          hitsPerPage: uiState.hitsPerPage || defaultItem.value,\n        });\n      },\n    };\n  };\n};\n\nexport default connectHitsPerPage;\n","import { withInsights } from '../../lib/insights';\n\nimport connectHits from './connectHits';\n\nimport type { Connector } from '../../types';\nimport type { HitsConnectorParams, HitsWidgetDescription } from './connectHits';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  HitsWidgetDescription,\n  HitsConnectorParams\n>;\n\nconst connectHitsWithInsights = withInsights(connectHits);\n\nexport default connectHitsWithInsights;\n","import {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isEqual,\n  addAbsolutePosition,\n  addQueryID,\n  noop,\n  createSendEventForHits,\n  createBindEventForHits,\n  walkIndex,\n} from '../../lib/utils';\n\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  Hit,\n  WidgetRenderState,\n  BaseHit,\n  Renderer,\n  Unmounter,\n  UnknownWidgetParams,\n  IndexRenderState,\n} from '../../types';\nimport type {\n  Banner,\n  AlgoliaSearchHelper as Helper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\n\nexport type InfiniteHitsCachedHits<THit extends NonNullable<object>> = {\n  [page: number]: Array<Hit<THit>>;\n};\n\ntype Read<THit extends NonNullable<object>> = ({\n  state,\n}: {\n  state: PlainSearchParameters;\n}) => InfiniteHitsCachedHits<THit> | null;\n\ntype Write<THit extends NonNullable<object>> = ({\n  state,\n  hits,\n}: {\n  state: PlainSearchParameters;\n  hits: InfiniteHitsCachedHits<THit>;\n}) => void;\n\nexport type InfiniteHitsCache<THit extends NonNullable<object> = BaseHit> = {\n  read: Read<THit>;\n  write: Write<THit>;\n};\n\nexport type InfiniteHitsConnectorParams<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Enable the button to load previous results.\n   *\n   * @default `false`\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Receives the items, and is called before displaying them.\n   * Useful for mapping over the items to transform, and remove or reorder them.\n   */\n  transformItems?: TransformItems<Hit<THit>>;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache<THit>;\n};\n\nexport type InfiniteHitsRenderState<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * Loads the previous results.\n   */\n  showPrevious: () => void;\n\n  /**\n   * Loads the next page of hits.\n   */\n  showMore: () => void;\n\n  /**\n   * Indicates whether the first page of hits has been reached.\n   */\n  isFirstPage: boolean;\n\n  /**\n   * Indicates whether the last page of hits has been reached.\n   */\n  isLastPage: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string of data-insights-event attribute for insights middleware\n   */\n  bindEvent: BindEventForHits;\n\n  /**\n   * Hits for the current page\n   */\n  currentPageHits: Array<Hit<THit>>;\n\n  /**\n   * Hits for current and cached pages\n   * @deprecated use `items` instead\n   */\n  hits: Array<Hit<THit>>;\n\n  /**\n   * Hits for current and cached pages\n   */\n  items: Array<Hit<THit>>;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<Hit<THit>>;\n\n  /**\n   * The banner to display above the hits.\n   */\n  banner?: Banner;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n  connector: true,\n});\n\nexport type InfiniteHitsWidgetDescription<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  $$type: 'ais.infiniteHits';\n  renderState: InfiniteHitsRenderState<THit>;\n  indexRenderState: {\n    infiniteHits: WidgetRenderState<\n      InfiniteHitsRenderState<THit>,\n      InfiniteHitsConnectorParams<THit>\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type InfiniteHitsConnector<THit extends NonNullable<object> = BaseHit> =\n  Connector<\n    InfiniteHitsWidgetDescription<THit>,\n    InfiniteHitsConnectorParams<THit>\n  >;\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nfunction normalizeState(state: PlainSearchParameters) {\n  const { clickAnalytics, userToken, ...rest } = state || {};\n  return rest;\n}\n\nfunction getInMemoryCache<\n  THit extends NonNullable<object>\n>(): InfiniteHitsCache<THit> {\n  let cachedHits: InfiniteHitsCachedHits<THit> | null = null;\n  let cachedState: PlainSearchParameters | null = null;\n  return {\n    read({ state }) {\n      return isEqual(cachedState, getStateWithoutPage(state))\n        ? cachedHits\n        : null;\n    },\n    write({ state, hits }) {\n      cachedState = getStateWithoutPage(state);\n      cachedHits = hits;\n    },\n  };\n}\n\nfunction extractHitsFromCachedHits<THit extends NonNullable<object>>(\n  cachedHits: InfiniteHitsCachedHits<THit>\n) {\n  return Object.keys(cachedHits)\n    .map(Number)\n    .sort((a, b) => a - b)\n    .reduce((acc: Array<Hit<THit>>, page) => {\n      return acc.concat(cachedHits[page]);\n    }, []);\n}\n\nexport default (function connectInfiniteHits<\n  TWidgetParams extends UnknownWidgetParams\n>(\n  renderFn: Renderer<InfiniteHitsRenderState, TWidgetParams>,\n  unmountFn: Unmounter = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return <THit extends NonNullable<object> = BaseHit>(\n    widgetParams: TWidgetParams & InfiniteHitsConnectorParams<THit>\n  ) => {\n    const {\n      // @MAJOR: this can default to false\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        InfiniteHitsConnectorParams<THit>['transformItems']\n      >,\n      cache = getInMemoryCache<THit>(),\n    } = widgetParams || {};\n    let showPrevious: () => void;\n    let showMore: () => void;\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n    const getFirstReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits<THit>\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.min(page, ...pages);\n      }\n    };\n    const getLastReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits<THit>\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.max(page, ...pages);\n      }\n    };\n\n    const getShowPrevious =\n      (helper: Helper): (() => void) =>\n      () => {\n        // Using the helper's `overrideStateWithoutTriggeringChangeEvent` method\n        // avoid updating the browser URL when the user displays the previous page.\n        helper\n          .overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            page:\n              getFirstReceivedPage(\n                helper.state,\n                cache.read({ state: normalizeState(helper.state) }) || {}\n              ) - 1,\n          })\n          .searchWithoutTriggeringOnStateChange();\n      };\n\n    const getShowMore =\n      (helper: Helper): (() => void) =>\n      () => {\n        helper\n          .setPage(\n            getLastReceivedPage(\n              helper.state,\n              cache.read({ state: normalizeState(helper.state) }) || {}\n            ) + 1\n          )\n          .search();\n      };\n\n    return {\n      $$type: 'ais.infiniteHits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          false\n        );\n\n        sendEvent('view:internal', widgetRenderState.currentPageHits);\n      },\n\n      getRenderState(\n        renderState,\n        renderOptions\n        // Type is explicitly redefined, to avoid having the TWidgetParams type in the definition\n      ): IndexRenderState & InfiniteHitsWidgetDescription['indexRenderState'] {\n        return {\n          ...renderState,\n          infiniteHits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({\n        results,\n        helper,\n        parent,\n        state: existingState,\n        instantSearchInstance,\n      }) {\n        let isFirstPage: boolean;\n        let currentPageHits: Array<Hit<THit>> = [];\n        /**\n         * We bail out of optimistic UI here, as the cache is based on search\n         * parameters, and we don't want to invalidate the cache when the search\n         * is loading.\n         */\n        const state = parent.getPreviousState() || existingState;\n\n        const cachedHits = cache.read({ state: normalizeState(state) }) || {};\n\n        const banner = results?.renderingContent?.widgets?.banners?.[0];\n\n        if (!results) {\n          showPrevious = getShowPrevious(helper);\n          showMore = getShowMore(helper);\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            getIndex: () => helper.getIndex(),\n            widgetType: this.$$type,\n          });\n          bindEvent = createBindEventForHits({\n            getIndex: () => helper.getIndex(),\n            widgetType: this.$$type,\n            instantSearchInstance,\n          });\n          isFirstPage =\n            state.page === undefined ||\n            getFirstReceivedPage(state, cachedHits) === 0;\n        } else {\n          const { page = 0 } = state;\n\n          if (escapeHTML && results.hits.length > 0) {\n            results.hits = escapeHits(results.hits);\n          }\n\n          const hitsWithAbsolutePosition = addAbsolutePosition(\n            results.hits,\n            results.page,\n            results.hitsPerPage\n          );\n\n          const hitsWithAbsolutePositionAndQueryID = addQueryID(\n            hitsWithAbsolutePosition,\n            results.queryID\n          );\n\n          const transformedHits = transformItems(\n            hitsWithAbsolutePositionAndQueryID,\n            { results }\n          );\n\n          /*\n            With dynamic widgets, facets are not included in the state before their relevant widgets are mounted. Until then, we need to bail out of writing this incomplete state representation in cache.\n          */\n          let hasDynamicWidgets = false;\n          walkIndex(instantSearchInstance.mainIndex, (indexWidget) => {\n            if (\n              !hasDynamicWidgets &&\n              indexWidget\n                .getWidgets()\n                .some(({ $$type }) => $$type === 'ais.dynamicWidgets')\n            ) {\n              hasDynamicWidgets = true;\n            }\n          });\n\n          const hasNoFacets =\n            !state.disjunctiveFacets?.length &&\n            !(state.facets || []).filter((f) => f !== '*').length &&\n            !state.hierarchicalFacets?.length;\n\n          if (\n            cachedHits[page] === undefined &&\n            !results.__isArtificial &&\n            instantSearchInstance.status === 'idle' &&\n            !(hasDynamicWidgets && hasNoFacets)\n          ) {\n            cachedHits[page] = transformedHits;\n            cache.write({ state: normalizeState(state), hits: cachedHits });\n          }\n          currentPageHits = transformedHits;\n\n          isFirstPage = getFirstReceivedPage(state, cachedHits) === 0;\n        }\n\n        const items = extractHitsFromCachedHits(cachedHits);\n        const isLastPage = results\n          ? results.nbPages <= getLastReceivedPage(state, cachedHits) + 1\n          : true;\n\n        return {\n          hits: items,\n          items,\n          currentPageHits,\n          sendEvent,\n          bindEvent,\n          banner,\n          results,\n          showPrevious,\n          showMore,\n          isFirstPage,\n          isLastPage,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutPage = state.setQueryParameter('page', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutPage;\n        }\n\n        return stateWithoutPage.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          // return without adding `page` to uiState\n          // because we don't want `page=1` in the URL\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          // The page in the UI state is incremented by one\n          // to expose the user value (not `0`).\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters;\n\n        if (escapeHTML) {\n          // @MAJOR: set this globally, not in the InfiniteHits widget to allow InfiniteHits to be conditionally used\n          widgetSearchParameters =\n            searchParameters.setQueryParameters(TAG_PLACEHOLDER);\n        }\n\n        // The page in the search parameters is decremented by one\n        // to get to the actual parameter value from the UI state.\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return widgetSearchParameters.setQueryParameter('page', page);\n      },\n    };\n  };\n} satisfies InfiniteHitsConnector);\n","import { isIndexWidget } from './isIndexWidget';\n\nimport type { IndexWidget } from '../../types';\n\n/**\n * Recurse over all child indices\n */\nexport function walkIndex(\n  indexWidget: IndexWidget,\n  callback: (widget: IndexWidget) => void\n) {\n  callback(indexWidget);\n\n  indexWidget.getWidgets().forEach((widget) => {\n    if (isIndexWidget(widget)) {\n      walkIndex(widget, callback);\n    }\n  });\n}\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  IndexUiState,\n  RenderOptions,\n  SortBy,\n  TransformItems,\n  Widget,\n  WidgetRenderState,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'menu',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['isRefined', 'name:asc'];\n\nexport type MenuItem = {\n  /**\n   * The value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type MenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * How many facets values to retrieve.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * How many facets values to retrieve when `toggleShowMore` is called, this value is meant to be greater than `limit` option.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.HierarchicalFacet>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<MenuItem>;\n};\n\nexport type MenuRenderState = {\n  /**\n   * The elements that can be refined for the current search results.\n   */\n  items: MenuItem[];\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Filter the search to item value.\n   */\n  refine: (value: string) => void;\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMore.limit`.\n   */\n  toggleShowMore: () => void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type MenuWidgetDescription = {\n  $$type: 'ais.menu';\n  renderState: MenuRenderState;\n  indexRenderState: {\n    menu: {\n      [attribute: string]: WidgetRenderState<\n        MenuRenderState,\n        MenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    menu: {\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type MenuConnector = Connector<\n  MenuWidgetDescription,\n  MenuConnectorParams\n>;\n\n/**\n * **Menu** connector provides the logic to build a widget that will give the user the ability to choose a single value for a specific facet. The typical usage of menu is for navigation in categories.\n *\n * This connector provides a `toggleShowMore()` function to display more or less items and a `refine()`\n * function to select an item. While selecting a new element, the `refine` will also unselect the\n * one that is currently selected.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in \"attributes for faceting\" on the Algolia dashboard or configured as attributesForFaceting via a set settings call to the Algolia API.\n */\nconst connectMenu: MenuConnector = function connectMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute,\n      limit = 10,\n      showMore = false,\n      showMoreLimit = 20,\n      sortBy = DEFAULT_SORT,\n      transformItems = ((items) => items) as NonNullable<\n        MenuConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(\n        withUsage('The `showMoreLimit` option must be greater than `limit`.')\n      );\n    }\n\n    type ThisWidget = Widget<\n      MenuWidgetDescription & { widgetParams: typeof widgetParams }\n    >;\n\n    let sendEvent: MenuRenderState['sendEvent'] | undefined;\n    let _createURL: MenuRenderState['createURL'] | undefined;\n    let _refine: MenuRenderState['refine'] | undefined;\n\n    // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n    let isShowingMore = false;\n    let toggleShowMore = () => {};\n    function createToggleShowMore(\n      renderOptions: RenderOptions,\n      widget: ThisWidget\n    ) {\n      return () => {\n        isShowingMore = !isShowingMore;\n        widget.render!(renderOptions);\n      };\n    }\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    return {\n      $$type: 'ais.menu' as const,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeHierarchicalFacet(attribute)\n          .setQueryParameter('maxValuesPerFacet', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          menu: {\n            ...renderState.menu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { results, createURL, instantSearchInstance, helper } =\n          renderOptions;\n\n        let items: MenuRenderState['items'] = [];\n        let canToggleShowMore = false;\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance,\n            helper,\n            attribute,\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!_createURL) {\n          _createURL = (facetValue: string) =>\n            createURL((uiState) =>\n              this.getWidgetUiState(uiState, {\n                searchParameters: helper.state\n                  .resetPage()\n                  .toggleFacetRefinement(attribute, facetValue),\n                helper,\n              })\n            );\n        }\n\n        if (!_refine) {\n          _refine = function (facetValue: string) {\n            const [refinedItem] =\n              helper.getHierarchicalFacetBreadcrumb(attribute);\n            sendEvent!('click:internal', facetValue ? facetValue : refinedItem);\n            helper\n              .toggleFacetRefinement(\n                attribute,\n                facetValue ? facetValue : refinedItem\n              )\n              .search();\n          };\n        }\n\n        if (renderOptions.results) {\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n        }\n\n        if (results) {\n          const facetValues = results.getFacetValues(attribute, {\n            sortBy,\n            facetOrdering: sortBy === DEFAULT_SORT,\n          });\n          const facetItems =\n            facetValues && !Array.isArray(facetValues) && facetValues.data\n              ? facetValues.data\n              : [];\n\n          canToggleShowMore =\n            showMore && (isShowingMore || facetItems.length > getLimit());\n\n          items = transformItems(\n            facetItems\n              .slice(0, getLimit())\n              .map(({ name: label, escapedValue: value, path, ...item }) => ({\n                ...item,\n                label,\n                value,\n              })),\n            { results }\n          );\n        }\n\n        return {\n          items,\n          createURL: _createURL,\n          refine: _refine,\n          sendEvent,\n          canRefine: items.length > 0,\n          widgetParams,\n          isShowingMore,\n          toggleShowMore: cachedToggleShowMore,\n          canToggleShowMore,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const [value] =\n          searchParameters.getHierarchicalFacetBreadcrumb(attribute);\n\n        return removeEmptyRefinementsFromUiState(\n          {\n            ...uiState,\n            menu: {\n              ...uiState.menu,\n              [attribute]: value,\n            },\n          },\n          attribute\n        );\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.menu && uiState.menu[attribute];\n\n        if (\n          searchParameters.isConjunctiveFacet(attribute) ||\n          searchParameters.isDisjunctiveFacet(attribute)\n        ) {\n          warning(\n            false,\n            `Menu: Attribute \"${attribute}\" is already used by another widget applying conjunctive or disjunctive faceting.\nAs this is not supported, please make sure to remove this other widget or this Menu widget will not work at all.`\n          );\n\n          return searchParameters;\n        }\n\n        const withFacetConfiguration = searchParameters\n          .removeHierarchicalFacet(attribute)\n          .addHierarchicalFacet({\n            name: attribute,\n            attributes: [attribute],\n          });\n\n        const currentMaxValuesPerFacet =\n          withFacetConfiguration.maxValuesPerFacet || 0;\n\n        const nextMaxValuesPerFacet = Math.max(\n          currentMaxValuesPerFacet,\n          showMore ? showMoreLimit : limit\n        );\n\n        const withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter(\n          'maxValuesPerFacet',\n          nextMaxValuesPerFacet\n        );\n\n        if (!value) {\n          return withMaxValuesPerFacet.setQueryParameters({\n            hierarchicalFacetsRefinements: {\n              ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        }\n\n        return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n          attribute,\n          value\n        );\n      },\n    };\n  };\n};\n\nfunction removeEmptyRefinementsFromUiState(\n  indexUiState: IndexUiState,\n  attribute: string\n): IndexUiState {\n  if (!indexUiState.menu) {\n    return indexUiState;\n  }\n\n  if (indexUiState.menu[attribute] === undefined) {\n    delete indexUiState.menu[attribute];\n  }\n\n  if (Object.keys(indexUiState.menu).length === 0) {\n    delete indexUiState.menu;\n  }\n\n  return indexUiState;\n}\n\nexport default connectMenu;\n","import { withInsights } from '../../lib/insights';\n\nimport connectInfiniteHits from './connectInfiniteHits';\n\nimport type { Connector } from '../../types';\nimport type {\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams,\n} from './connectInfiniteHits';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams\n>;\n\nconst connectInfiniteHitsWithInsights = withInsights(connectInfiniteHits);\n\nexport default connectInfiniteHitsWithInsights;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  IndexUiState,\n  InstantSearch,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\nimport type { SearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'numeric-menu',\n  connector: true,\n});\n\nexport type NumericMenuConnectorParamsItem = {\n  /**\n   * Name of the option\n   */\n  label: string;\n\n  /**\n   * Higher bound of the option (<=)\n   */\n  start?: number;\n\n  /**\n   * Lower bound of the option (>=)\n   */\n  end?: number;\n};\n\nexport type NumericMenuRenderStateItem = {\n  /**\n   *  Name of the option.\n   */\n  label: string;\n\n  /**\n   * URL encoded of the bounds object with the form `{start, end}`.\n   * This value can be used verbatim in the webpage and can be read by `refine`\n   * directly. If you want to inspect the value, you can do:\n   * `JSON.parse(decodeURI(value))` to get the object.\n   */\n  value: string;\n\n  /**\n   * True if the value is selected\n   */\n  isRefined: boolean;\n};\n\nexport type NumericMenuConnectorParams = {\n  /**\n   * Name of the attribute for filtering\n   */\n  attribute: string;\n\n  /**\n   * List of all the items\n   */\n  items: NumericMenuConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates\n   */\n  transformItems?: TransformItems<NumericMenuRenderStateItem>;\n};\n\nexport type NumericMenuRenderState = {\n  /**\n   * The list of available choices\n   */\n  items: NumericMenuRenderStateItem[];\n\n  /**\n   * Creates URLs for the next state, the string is the name of the selected option\n   */\n  createURL: CreateURL<NumericMenuRenderStateItem['value']>;\n\n  /**\n   * `true` if the last search contains no result\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   *\n   * This is `true` if the last search contains no result and\n   * \"All\" range is selected\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the selected value and trigger a new search\n   */\n  refine: (facetValue: string) => void;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type NumericMenuWidgetDescription = {\n  $$type: 'ais.numericMenu';\n  renderState: NumericMenuRenderState;\n  indexRenderState: {\n    numericMenu: {\n      [attribute: string]: WidgetRenderState<\n        NumericMenuRenderState,\n        NumericMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    numericMenu: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type NumericMenuConnector = Connector<\n  NumericMenuWidgetDescription,\n  NumericMenuConnectorParams\n>;\n\nconst $$type = 'ais.numericMenu';\n\nconst createSendEvent =\n  ({ instantSearchInstance }: { instantSearchInstance: InstantSearch }) =>\n  (...args: Parameters<SendEventForFacet>) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n  };\n\nconst connectNumericMenu: NumericMenuConnector = function connectNumericMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute = '',\n      items = [],\n      transformItems = ((item) => item) as NonNullable<\n        NumericMenuConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (attribute === '') {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (!items || items.length === 0) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?: (facetValue: string) => void;\n      createURL?: (state: SearchParameters) => (facetValue: string) => string;\n      sendEvent?: SendEventForFacet;\n    };\n\n    const prepareItems = (state: SearchParameters) =>\n      items.map(({ start, end, label }) => ({\n        label,\n        value: encodeURI(JSON.stringify({ start, end })),\n        isRefined: isRefined(state, attribute, { start, end, label }),\n      }));\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state.removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const values = searchParameters.getNumericRefinements(attribute);\n\n        const equal = values['='] && values['='][0];\n\n        if (equal || equal === 0) {\n          return {\n            ...uiState,\n            numericMenu: {\n              ...uiState.numericMenu,\n              [attribute]: `${values['=']}`,\n            },\n          };\n        }\n\n        const min = (values['>='] && values['>='][0]) || '';\n        const max = (values['<='] && values['<='][0]) || '';\n\n        return removeEmptyRefinementsFromUiState(\n          {\n            ...uiState,\n            numericMenu: {\n              ...uiState.numericMenu,\n              [attribute]: `${min}:${max}`,\n            },\n          },\n          attribute\n        );\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.numericMenu && uiState.numericMenu[attribute];\n\n        const withoutRefinements = searchParameters.setQueryParameters({\n          numericRefinements: {\n            ...searchParameters.numericRefinements,\n            [attribute]: {},\n          },\n        });\n\n        if (!value) {\n          return withoutRefinements;\n        }\n\n        const isExact = value.indexOf(':') === -1;\n\n        if (isExact) {\n          return withoutRefinements.addNumericRefinement(\n            attribute,\n            '=',\n            Number(value)\n          );\n        }\n\n        const [min, max] = value.split(':').map(parseFloat);\n\n        const withMinRefinement = isFiniteNumber(min)\n          ? withoutRefinements.addNumericRefinement(attribute, '>=', min)\n          : withoutRefinements;\n\n        const withMaxRefinement = isFiniteNumber(max)\n          ? withMinRefinement.addNumericRefinement(attribute, '<=', max)\n          : withMinRefinement;\n\n        return withMaxRefinement;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          numericMenu: {\n            ...renderState.numericMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        results,\n        state,\n        instantSearchInstance,\n        helper,\n        createURL,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (facetValue) => {\n            const refinedState = getRefinedState(\n              helper.state,\n              attribute,\n              facetValue\n            );\n            connectorState.sendEvent!('click:internal', facetValue);\n            helper.setState(refinedState).search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (newState) => (facetValue) =>\n            createURL((uiState) =>\n              this.getWidgetUiState(uiState, {\n                searchParameters: getRefinedState(\n                  newState,\n                  attribute,\n                  facetValue\n                ),\n                helper,\n              })\n            );\n        }\n\n        if (!connectorState.sendEvent) {\n          connectorState.sendEvent = createSendEvent({\n            instantSearchInstance,\n          });\n        }\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n        const preparedItems = prepareItems(state);\n        let allIsSelected = true;\n        // @TODO avoid for..of for polyfill reasons\n        // eslint-disable-next-line no-restricted-syntax\n        for (const item of preparedItems) {\n          if (item.isRefined && decodeURI(item.value) !== '{}') {\n            allIsSelected = false;\n            break;\n          }\n        }\n\n        return {\n          createURL: connectorState.createURL(state),\n          items: transformItems(preparedItems, { results }),\n          hasNoResults,\n          canRefine: !(hasNoResults && allIsSelected),\n          refine: connectorState.refine,\n          sendEvent: connectorState.sendEvent,\n          widgetParams,\n        };\n      },\n    };\n  };\n};\n\nfunction isRefined(\n  state: SearchParameters,\n  attribute: string,\n  option: NumericMenuConnectorParamsItem\n) {\n  // @TODO: same as another spot, why is this mixing arrays & elements?\n  const currentRefinements = state.getNumericRefinements(attribute);\n\n  if (option.start !== undefined && option.end !== undefined) {\n    if (option.start === option.end) {\n      return hasNumericRefinement(currentRefinements, '=', option.start);\n    } else {\n      return (\n        hasNumericRefinement(currentRefinements, '>=', option.start) &&\n        hasNumericRefinement(currentRefinements, '<=', option.end)\n      );\n    }\n  }\n\n  if (option.start !== undefined) {\n    return hasNumericRefinement(currentRefinements, '>=', option.start);\n  }\n\n  if (option.end !== undefined) {\n    return hasNumericRefinement(currentRefinements, '<=', option.end);\n  }\n\n  if (option.start === undefined && option.end === undefined) {\n    return (\n      Object.keys(currentRefinements) as SearchParameters.Operator[]\n    ).every((operator) => (currentRefinements[operator] || []).length === 0);\n  }\n\n  return false;\n}\n\nfunction getRefinedState(\n  state: SearchParameters,\n  attribute: string,\n  facetValue: string\n) {\n  let resolvedState = state;\n\n  const refinedOption = JSON.parse(decodeURI(facetValue));\n\n  // @TODO: why is array / element mixed here & hasRefinements; seems wrong?\n  const currentRefinements = resolvedState.getNumericRefinements(attribute);\n\n  if (refinedOption.start === undefined && refinedOption.end === undefined) {\n    return resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (!isRefined(resolvedState, attribute, refinedOption)) {\n    resolvedState = resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (refinedOption.start !== undefined && refinedOption.end !== undefined) {\n    if (refinedOption.start > refinedOption.end) {\n      throw new Error('option.start should be > to option.end');\n    }\n\n    if (refinedOption.start === refinedOption.end) {\n      if (hasNumericRefinement(currentRefinements, '=', refinedOption.start)) {\n        resolvedState = resolvedState.removeNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      } else {\n        resolvedState = resolvedState.addNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      }\n      return resolvedState;\n    }\n  }\n\n  if (refinedOption.start !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '>=', refinedOption.start)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '>=',\n        refinedOption.start\n      );\n    }\n    resolvedState = resolvedState.addNumericRefinement(\n      attribute,\n      '>=',\n      refinedOption.start\n    );\n  }\n\n  if (refinedOption.end !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '<=', refinedOption.end)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '<=',\n        refinedOption.end\n      );\n    }\n    resolvedState = resolvedState.addNumericRefinement(\n      attribute,\n      '<=',\n      refinedOption.end\n    );\n  }\n\n  if (typeof resolvedState.page === 'number') {\n    resolvedState.page = 0;\n  }\n\n  return resolvedState;\n}\n\nfunction hasNumericRefinement(\n  currentRefinements: SearchParameters.OperatorList,\n  operator: SearchParameters.Operator,\n  value: number\n) {\n  return (\n    currentRefinements[operator] !== undefined &&\n    currentRefinements[operator]!.includes(value)\n  );\n}\n\nfunction removeEmptyRefinementsFromUiState(\n  indexUiState: IndexUiState,\n  attribute: string\n): IndexUiState {\n  if (!indexUiState.numericMenu) {\n    return indexUiState;\n  }\n\n  if (indexUiState.numericMenu[attribute] === ':') {\n    delete indexUiState.numericMenu[attribute];\n  }\n\n  if (Object.keys(indexUiState.numericMenu).length === 0) {\n    delete indexUiState.numericMenu;\n  }\n\n  return indexUiState;\n}\n\nexport default connectNumericMenu;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport Paginator from './Paginator';\n\nimport type { Connector, CreateURL, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'pagination',\n  connector: true,\n});\n\nexport type PaginationConnectorParams = {\n  /**\n   * The total number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The padding of pages to show around the current page\n   * @default 3\n   */\n  padding?: number;\n};\n\nexport type PaginationRenderState = {\n  /** Creates URLs for the next state, the number is the page to generate the URL for. */\n  createURL: CreateURL<number>;\n\n  /** Sets the current page and triggers a search. */\n  refine: (page: number) => void;\n\n  /** true if this search returned more than one page */\n  canRefine: boolean;\n\n  /** The number of the page currently displayed. */\n  currentRefinement: number;\n\n  /** The number of hits computed for the last query (can be approximated). */\n  nbHits: number;\n\n  /** The number of pages for the result set. */\n  nbPages: number;\n\n  /** The actual pages relevant to the current situation and padding. */\n  pages: number[];\n\n  /** true if the current page is also the first page. */\n  isFirstPage: boolean;\n\n  /** true if the current page is also the last page. */\n  isLastPage: boolean;\n};\n\nexport type PaginationWidgetDescription = {\n  $$type: 'ais.pagination';\n  renderState: PaginationRenderState;\n  indexRenderState: {\n    pagination: WidgetRenderState<\n      PaginationRenderState,\n      PaginationConnectorParams\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type PaginationConnector = Connector<\n  PaginationWidgetDescription,\n  PaginationConnectorParams\n>;\n\n/**\n * **Pagination** connector provides the logic to build a widget that will let the user\n * choose the current page of the results.\n *\n * When using the pagination with Algolia, you should be aware that the engine won't provide you pages\n * beyond the 1000th hits by default. You can find more information on the [Algolia documentation](https://www.algolia.com/doc/guides/searching/pagination/#pagination-limitations).\n */\nconst connectPagination: PaginationConnector = function connectPagination(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { totalPages, padding = 3 } = widgetParams || {};\n\n    const pager = new Paginator({\n      currentPage: 0,\n      total: 0,\n      padding,\n    });\n\n    type ConnectorState = {\n      refine?: (page: number) => void;\n      createURL?: (page: number) => string;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function getMaxPage({ nbPages }: { nbPages: number }) {\n      return totalPages !== undefined ? Math.min(totalPages, nbPages) : nbPages;\n    }\n\n    return {\n      $$type: 'ais.pagination',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('page', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return searchParameters.setQueryParameter('page', page);\n      },\n\n      getWidgetRenderState({ results, helper, state, createURL }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (page) => {\n            helper.setPage(page);\n            helper.search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (page) =>\n            createURL((uiState) => ({\n              ...uiState,\n              page: page + 1,\n            }));\n        }\n\n        const page = state.page || 0;\n        const nbPages = getMaxPage(results || { nbPages: 0 });\n        pager.currentPage = page;\n        pager.total = nbPages;\n\n        return {\n          createURL: connectorState.createURL,\n          refine: connectorState.refine,\n          canRefine: nbPages > 1,\n          currentRefinement: page,\n          nbHits: results?.nbHits || 0,\n          nbPages,\n          pages: results ? pager.pages() : [],\n          isFirstPage: pager.isFirstPage(),\n          isLastPage: pager.isLastPage(),\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          pagination: this.getWidgetRenderState(renderOptions),\n        };\n      },\n    };\n  };\n};\n\nexport default connectPagination;\n","import { range } from '../../lib/utils';\n\nclass Paginator {\n  public currentPage: number;\n  public total: number;\n  public padding: number;\n\n  public constructor(params: {\n    currentPage: number;\n    total: number;\n    padding: number;\n  }) {\n    this.currentPage = params.currentPage;\n    this.total = params.total;\n    this.padding = params.padding;\n  }\n\n  public pages() {\n    const { total, currentPage, padding } = this;\n\n    if (total === 0) return [0];\n\n    const totalDisplayedPages = this.nbPagesDisplayed(padding, total);\n    if (totalDisplayedPages === total) {\n      return range({ end: total });\n    }\n\n    const paddingLeft = this.calculatePaddingLeft(\n      currentPage,\n      padding,\n      total,\n      totalDisplayedPages\n    );\n    const paddingRight = totalDisplayedPages - paddingLeft;\n\n    const first = currentPage - paddingLeft;\n    const last = currentPage + paddingRight;\n\n    return range({ start: first, end: last });\n  }\n\n  public nbPagesDisplayed(padding: number, total: number) {\n    return Math.min(2 * padding + 1, total);\n  }\n\n  public calculatePaddingLeft(\n    current: number,\n    padding: number,\n    total: number,\n    totalDisplayedPages: number\n  ) {\n    if (current <= padding) {\n      return current;\n    }\n\n    if (current >= total - padding) {\n      return totalDisplayedPages - (total - current);\n    }\n\n    return padding;\n  }\n\n  public isLastPage() {\n    return this.currentPage >= this.total - 1;\n  }\n\n  public isFirstPage() {\n    return this.currentPage <= 0;\n  }\n}\n\nexport default Paginator;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  find,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type { Connector, InstantSearch, WidgetRenderState } from '../../types';\nimport type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator(\n  { name: 'range-input', connector: true },\n  { name: 'range-slider', connector: true }\n);\n\nconst $$type = 'ais.range';\n\nexport type RangeMin = number | undefined;\nexport type RangeMax = number | undefined;\n\n// @MAJOR: potentially we should consolidate these types\nexport type RangeBoundaries = [RangeMin, RangeMax];\nexport type Range = {\n  min: RangeMin;\n  max: RangeMax;\n};\n\nexport type RangeRenderState = {\n  /**\n   * Sets a range to filter the results on. Both values\n   * are optional, and will default to the higher and lower bounds. You can use `undefined` to remove a\n   * previously set bound or to set an infinite bound.\n   * @param rangeValue tuple of [min, max] bounds\n   */\n  refine: (rangeValue: RangeBoundaries) => void;\n\n  /**\n   * Indicates whether this widget can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Send an event to the insights middleware\n   */\n  sendEvent: SendEventForFacet;\n\n  /**\n   * Maximum range possible for this search\n   */\n  range: Range;\n\n  /**\n   * Current refinement of the search\n   */\n  start: RangeBoundaries;\n\n  /**\n   * Transform for the rendering `from` and/or `to` values.\n   * Both functions take a `number` as input and should output a `string`.\n   */\n  format: {\n    from: (fromValue: number) => string;\n    to: (toValue: number) => string;\n  };\n};\n\nexport type RangeConnectorParams = {\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n\n  /**\n   * Minimal range value, default to automatically computed from the result set.\n   */\n  min?: number;\n\n  /**\n   * Maximal range value, default to automatically computed from the result set.\n   */\n  max?: number;\n\n  /**\n   * Number of digits after decimal point to use.\n   */\n  precision?: number;\n};\n\nexport type RangeWidgetDescription = {\n  $$type: 'ais.range';\n  renderState: RangeRenderState;\n  indexRenderState: {\n    range: {\n      [attribute: string]: WidgetRenderState<\n        RangeRenderState,\n        RangeConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    range: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type RangeConnector = Connector<\n  RangeWidgetDescription,\n  RangeConnectorParams\n>;\n\nfunction toPrecision({\n  min,\n  max,\n  precision,\n}: {\n  min?: number;\n  max?: number;\n  precision: number;\n}) {\n  const pow = Math.pow(10, precision);\n\n  return {\n    min: min ? Math.floor(min * pow) / pow : min,\n    max: max ? Math.ceil(max * pow) / pow : max,\n  };\n}\n\n/**\n * **Range** connector provides the logic to create custom widget that will let\n * the user refine results using a numeric range.\n *\n * This connectors provides a `refine()` function that accepts bounds. It will also provide\n * information about the min and max bounds for the current result set.\n */\nconst connectRange: RangeConnector = function connectRange(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute = '',\n      min: minBound,\n      max: maxBound,\n      precision = 0,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (\n      isFiniteNumber(minBound) &&\n      isFiniteNumber(maxBound) &&\n      minBound > maxBound\n    ) {\n      throw new Error(withUsage(\"The `max` option can't be lower than `min`.\"));\n    }\n\n    const formatToNumber = (v: string | number) =>\n      Number(Number(v).toFixed(precision));\n\n    const rangeFormatter = {\n      from: (v: number) => v.toLocaleString(),\n      to: (v: number) => formatToNumber(v).toLocaleString(),\n    };\n\n    // eslint-disable-next-line complexity\n    const getRefinedState = (\n      helper: AlgoliaSearchHelper,\n      currentRange: Range,\n      nextMin: RangeMin | string,\n      nextMax: RangeMax | string\n    ) => {\n      let resolvedState = helper.state;\n      const { min: currentRangeMin, max: currentRangeMax } = currentRange;\n\n      const [min] = resolvedState.getNumericRefinement(attribute, '>=') || [];\n      const [max] = resolvedState.getNumericRefinement(attribute, '<=') || [];\n\n      const isResetMin = nextMin === undefined || nextMin === '';\n      const isResetMax = nextMax === undefined || nextMax === '';\n\n      const { min: nextMinAsNumber, max: nextMaxAsNumber } = toPrecision({\n        min: !isResetMin ? parseFloat(nextMin as string) : undefined,\n        max: !isResetMax ? parseFloat(nextMax as string) : undefined,\n        precision,\n      });\n\n      let newNextMin: RangeMin;\n      if (!isFiniteNumber(minBound) && currentRangeMin === nextMinAsNumber) {\n        newNextMin = undefined;\n      } else if (isFiniteNumber(minBound) && isResetMin) {\n        newNextMin = minBound;\n      } else {\n        newNextMin = nextMinAsNumber;\n      }\n\n      let newNextMax: RangeMax;\n      if (!isFiniteNumber(maxBound) && currentRangeMax === nextMaxAsNumber) {\n        newNextMax = undefined;\n      } else if (isFiniteNumber(maxBound) && isResetMax) {\n        newNextMax = maxBound;\n      } else {\n        newNextMax = nextMaxAsNumber;\n      }\n\n      const isResetNewNextMin = newNextMin === undefined;\n\n      const isGreaterThanCurrentRange =\n        isFiniteNumber(currentRangeMin) && currentRangeMin <= newNextMin!;\n      const isMinValid =\n        isResetNewNextMin ||\n        (isFiniteNumber(newNextMin) &&\n          (!isFiniteNumber(currentRangeMin) || isGreaterThanCurrentRange));\n\n      const isResetNewNextMax = newNextMax === undefined;\n      const isLowerThanRange =\n        isFiniteNumber(newNextMax) && currentRangeMax! >= newNextMax;\n      const isMaxValid =\n        isResetNewNextMax ||\n        (isFiniteNumber(newNextMax) &&\n          (!isFiniteNumber(currentRangeMax) || isLowerThanRange));\n\n      const hasMinChange = min !== newNextMin;\n      const hasMaxChange = max !== newNextMax;\n\n      if ((hasMinChange || hasMaxChange) && isMinValid && isMaxValid) {\n        resolvedState = resolvedState.removeNumericRefinement(attribute);\n\n        if (isFiniteNumber(newNextMin)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '>=',\n            newNextMin\n          );\n        }\n\n        if (isFiniteNumber(newNextMax)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '<=',\n            newNextMax\n          );\n        }\n\n        return resolvedState.resetPage();\n      }\n\n      return null;\n    };\n\n    const createSendEvent =\n      (instantSearchInstance: InstantSearch) =>\n      (...args: Parameters<SendEventForFacet>) => {\n        if (args.length === 1) {\n          instantSearchInstance.sendEventToInsights(args[0]);\n          return;\n        }\n      };\n\n    function _getCurrentRange(\n      stats: Partial<NonNullable<SearchResults.Facet['stats']>>\n    ) {\n      let min: number;\n      if (isFiniteNumber(minBound)) {\n        min = minBound;\n      } else if (isFiniteNumber(stats.min)) {\n        min = stats.min;\n      } else {\n        min = 0;\n      }\n\n      let max: number;\n      if (isFiniteNumber(maxBound)) {\n        max = maxBound;\n      } else if (isFiniteNumber(stats.max)) {\n        max = stats.max;\n      } else {\n        max = 0;\n      }\n\n      return toPrecision({ min, max, precision });\n    }\n\n    function _getCurrentRefinement(\n      helper: AlgoliaSearchHelper\n    ): RangeBoundaries {\n      const [minValue] = helper.getNumericRefinement(attribute, '>=') || [];\n\n      const [maxValue] = helper.getNumericRefinement(attribute, '<=') || [];\n\n      const min = isFiniteNumber(minValue) ? minValue : -Infinity;\n      const max = isFiniteNumber(maxValue) ? maxValue : Infinity;\n\n      return [min, max];\n    }\n\n    function _refine(helper: AlgoliaSearchHelper, currentRange: Range) {\n      return ([nextMin, nextMax]: RangeBoundaries = [undefined, undefined]) => {\n        const refinedState = getRefinedState(\n          helper,\n          currentRange,\n          nextMin,\n          nextMax\n        );\n        if (refinedState) {\n          helper.setState(refinedState).search();\n        }\n      };\n    }\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          range: {\n            ...renderState.range,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        const facetsFromResults = (results && results.disjunctiveFacets) || [];\n        const facet = find(\n          facetsFromResults,\n          (facetResult) => facetResult.name === attribute\n        );\n        const stats = (facet && facet.stats) || {\n          min: undefined,\n          max: undefined,\n        };\n\n        const currentRange = _getCurrentRange(stats);\n        const start = _getCurrentRefinement(helper);\n\n        let refine: ReturnType<typeof _refine>;\n\n        if (!results) {\n          // On first render pass an empty range\n          // to be able to bypass the validation\n          // related to it\n          refine = _refine(helper, {\n            min: undefined,\n            max: undefined,\n          });\n        } else {\n          refine = _refine(helper, currentRange);\n        }\n\n        return {\n          refine,\n          canRefine: currentRange.min !== currentRange.max,\n          format: rangeFormatter,\n          range: currentRange,\n          sendEvent: createSendEvent(instantSearchInstance),\n          widgetParams: {\n            ...widgetParams,\n            precision,\n          },\n          start,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeDisjunctiveFacet(attribute)\n          .removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const { '>=': min = [], '<=': max = [] } =\n          searchParameters.getNumericRefinements(attribute);\n\n        if (min.length === 0 && max.length === 0) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          range: {\n            ...uiState.range,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters\n          .addDisjunctiveFacet(attribute)\n          .setQueryParameters({\n            numericRefinements: {\n              ...searchParameters.numericRefinements,\n              [attribute]: {},\n            },\n          });\n\n        if (isFiniteNumber(minBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            minBound\n          );\n        }\n\n        if (isFiniteNumber(maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            maxBound\n          );\n        }\n\n        const value = uiState.range && uiState.range[attribute];\n\n        if (!value || value.indexOf(':') === -1) {\n          return widgetSearchParameters;\n        }\n\n        const [lowerBound, upperBound] = value.split(':').map(parseFloat);\n\n        if (\n          isFiniteNumber(lowerBound) &&\n          (!isFiniteNumber(minBound) || minBound < lowerBound)\n        ) {\n          widgetSearchParameters =\n            widgetSearchParameters.removeNumericRefinement(attribute, '>=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            lowerBound\n          );\n        }\n\n        if (\n          isFiniteNumber(upperBound) &&\n          (!isFiniteNumber(maxBound) || upperBound < maxBound)\n        ) {\n          widgetSearchParameters =\n            widgetSearchParameters.removeNumericRefinement(attribute, '<=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            upperBound\n          );\n        }\n\n        return widgetSearchParameters;\n      },\n    };\n  };\n};\n\nexport default connectRange;\n","import {\n  escapeFacets,\n  TAG_PLACEHOLDER,\n  TAG_REPLACEMENT,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  SortBy,\n  RenderOptions,\n  Widget,\n  InitOptions,\n  FacetHit,\n  CreateURL,\n  WidgetRenderState,\n  IndexUiState,\n} from '../../types';\nimport type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['isRefined', 'count:desc', 'name:asc'];\n\nexport type RefinementListItem = {\n  /**\n   * The value of the refinement list item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the refinement list item.\n   */\n  label: string;\n  /**\n   * Human-readable value of the searched refinement list item.\n   */\n  highlighted?: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the list item is refined.\n   */\n  isRefined: boolean;\n};\n\nexport type RefinementListConnectorParams = {\n  /**\n   * The name of the attribute in the records.\n   */\n  attribute: string;\n  /**\n   * How the filters are combined together.\n   */\n  operator?: 'and' | 'or';\n  /**\n   * The max number of items to display when\n   * `showMoreLimit` is not set or if the widget is showing less value.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * The max number of items to display if the widget\n   * is showing more items.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.FacetValue>;\n  /**\n   * Escapes the content of the facet values.\n   */\n  escapeFacetValues?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<RefinementListItem>;\n};\n\nexport type RefinementListRenderState = {\n  /**\n   * The list of filtering values returned from Algolia API.\n   */\n  items: RefinementListItem[];\n  /**\n   * indicates whether the results are exhaustive (complete)\n   */\n  hasExhaustiveItems: boolean;\n  /**\n   * Creates the next state url for a selected refinement.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Action to apply selected refinements.\n   */\n  refine: (value: string) => void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n  /**\n   * Searches for values inside the list.\n   */\n  searchForItems: (query: string) => void;\n  /**\n   * `true` if the values are from an index search.\n   */\n  isFromSearch: boolean;\n  /**\n   * `true` if a refinement can be applied.\n   * @MAJOR: reconsider how `canRefine` is computed so it both accounts for the\n   * items returned in the main search and in SFFV.\n   */\n  canRefine: boolean;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore: () => void;\n};\n\nexport type RefinementListWidgetDescription = {\n  $$type: 'ais.refinementList';\n  renderState: RefinementListRenderState;\n  indexRenderState: {\n    refinementList: {\n      [attribute: string]: WidgetRenderState<\n        RefinementListRenderState,\n        RefinementListConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    refinementList: {\n      [attribute: string]: string[];\n    };\n  };\n};\n\nexport type RefinementListConnector = Connector<\n  RefinementListWidgetDescription,\n  RefinementListConnectorParams\n>;\n\n/**\n * **RefinementList** connector provides the logic to build a custom widget that\n * will let the user filter the results based on the values of a specific facet.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in\n * attributesForFaceting of the searched index.\n *\n * This connector provides:\n * - a `refine()` function to select an item.\n * - a `toggleShowMore()` function to display more or less items\n * - a `searchForItems()` function to search within the items.\n */\nconst connectRefinementList: RefinementListConnector =\n  function connectRefinementList(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        attribute,\n        operator = 'or',\n        limit = 10,\n        showMore = false,\n        showMoreLimit = 20,\n        sortBy = DEFAULT_SORT,\n        escapeFacetValues = true,\n        transformItems = ((items) => items) as NonNullable<\n          RefinementListConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      type ThisWidget = Widget<\n        RefinementListWidgetDescription & { widgetParams: typeof widgetParams }\n      >;\n\n      if (!attribute) {\n        throw new Error(withUsage('The `attribute` option is required.'));\n      }\n\n      if (!/^(and|or)$/.test(operator)) {\n        throw new Error(\n          withUsage(\n            `The \\`operator\\` must one of: \\`\"and\"\\`, \\`\"or\"\\` (got \"${operator}\").`\n          )\n        );\n      }\n\n      if (showMore === true && showMoreLimit <= limit) {\n        throw new Error(\n          withUsage('`showMoreLimit` should be greater than `limit`.')\n        );\n      }\n\n      const formatItems = ({\n        name: label,\n        escapedValue: value,\n        ...item\n      }: SearchResults.FacetValue): RefinementListItem => ({\n        ...item,\n        value,\n        label,\n        highlighted: label,\n      });\n\n      let lastResultsFromMainSearch: SearchResults;\n      let lastItemsFromMainSearch: RefinementListItem[] = [];\n      let hasExhaustiveItems = true;\n      let triggerRefine: RefinementListRenderState['refine'] | undefined;\n      let sendEvent: RefinementListRenderState['sendEvent'] | undefined;\n\n      let isShowingMore = false;\n      // Provide the same function to the `renderFn` so that way the user\n      // has to only bind it once when `isFirstRendering` for instance\n      let toggleShowMore = () => {};\n      function cachedToggleShowMore() {\n        toggleShowMore();\n      }\n\n      function createToggleShowMore(\n        renderOptions: RenderOptions,\n        widget: ThisWidget\n      ) {\n        return () => {\n          isShowingMore = !isShowingMore;\n          widget.render!(renderOptions);\n        };\n      }\n\n      function getLimit() {\n        return isShowingMore ? showMoreLimit : limit;\n      }\n\n      let searchForFacetValues: (\n        renderOptions: RenderOptions | InitOptions\n      ) => RefinementListRenderState['searchForItems'] = () => () => {};\n\n      const createSearchForFacetValues = function (\n        helper: AlgoliaSearchHelper,\n        widget: ThisWidget\n      ) {\n        return (renderOptions: RenderOptions | InitOptions) =>\n          (query: string) => {\n            const { instantSearchInstance, results: searchResults } =\n              renderOptions;\n            if (query === '' && lastItemsFromMainSearch) {\n              // render with previous data from the helper.\n              renderFn(\n                {\n                  ...widget.getWidgetRenderState({\n                    ...renderOptions,\n                    results: lastResultsFromMainSearch,\n                  }),\n                  instantSearchInstance,\n                },\n                false\n              );\n            } else {\n              const tags = {\n                highlightPreTag: escapeFacetValues\n                  ? TAG_PLACEHOLDER.highlightPreTag\n                  : TAG_REPLACEMENT.highlightPreTag,\n                highlightPostTag: escapeFacetValues\n                  ? TAG_PLACEHOLDER.highlightPostTag\n                  : TAG_REPLACEMENT.highlightPostTag,\n              };\n\n              helper\n                .searchForFacetValues(\n                  attribute,\n                  query,\n                  // We cap the `maxFacetHits` value to 100 because the Algolia API\n                  // doesn't support a greater number.\n                  // See https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits/\n                  Math.min(getLimit(), 100),\n                  tags\n                )\n                .then((results) => {\n                  const facetValues = escapeFacetValues\n                    ? escapeFacets(results.facetHits)\n                    : results.facetHits;\n\n                  const normalizedFacetValues = transformItems(\n                    facetValues.map(({ escapedValue, value, ...item }) => ({\n                      ...item,\n                      value: escapedValue,\n                      label: value,\n                    })),\n                    { results: searchResults }\n                  );\n\n                  renderFn(\n                    {\n                      ...widget.getWidgetRenderState({\n                        ...renderOptions,\n                        results: lastResultsFromMainSearch,\n                      }),\n                      items: normalizedFacetValues,\n                      canToggleShowMore: false,\n                      canRefine: true,\n                      isFromSearch: true,\n                      instantSearchInstance,\n                    },\n                    false\n                  );\n                });\n            }\n          };\n      };\n\n      return {\n        $$type: 'ais.refinementList' as const,\n\n        init(initOptions) {\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance: initOptions.instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            refinementList: {\n              ...renderState.refinementList,\n              [attribute]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState(renderOptions) {\n          const { results, state, createURL, instantSearchInstance, helper } =\n            renderOptions;\n          let items: RefinementListItem[] = [];\n          let facetValues: SearchResults.FacetValue[] | FacetHit[] = [];\n\n          if (!sendEvent || !triggerRefine || !searchForFacetValues) {\n            sendEvent = createSendEventForFacet({\n              instantSearchInstance,\n              helper,\n              attribute,\n              widgetType: this.$$type,\n            });\n\n            triggerRefine = (facetValue) => {\n              sendEvent!('click:internal', facetValue);\n              helper.toggleFacetRefinement(attribute, facetValue).search();\n            };\n\n            searchForFacetValues = createSearchForFacetValues(helper, this);\n          }\n\n          if (results) {\n            const values = results.getFacetValues(attribute, {\n              sortBy,\n              facetOrdering: sortBy === DEFAULT_SORT,\n            });\n            facetValues = values && Array.isArray(values) ? values : [];\n            items = transformItems(\n              facetValues.slice(0, getLimit()).map(formatItems),\n              { results }\n            );\n\n            const maxValuesPerFacetConfig = state.maxValuesPerFacet;\n            const currentLimit = getLimit();\n            // If the limit is the max number of facet retrieved it is impossible to know\n            // if the facets are exhaustive. The only moment we are sure it is exhaustive\n            // is when it is strictly under the number requested unless we know that another\n            // widget has requested more values (maxValuesPerFacet > getLimit()).\n            // Because this is used for making the search of facets unable or not, it is important\n            // to be conservative here.\n            hasExhaustiveItems =\n              maxValuesPerFacetConfig! > currentLimit\n                ? facetValues.length <= currentLimit\n                : facetValues.length < currentLimit;\n\n            lastResultsFromMainSearch = results;\n            lastItemsFromMainSearch = items;\n\n            if (renderOptions.results) {\n              toggleShowMore = createToggleShowMore(renderOptions, this);\n            }\n          }\n\n          // Do not mistake searchForFacetValues and searchFacetValues which is the actual search\n          // function\n          const searchFacetValues =\n            searchForFacetValues && searchForFacetValues(renderOptions);\n\n          const canShowLess =\n            isShowingMore && lastItemsFromMainSearch.length > limit;\n          const canShowMore = showMore && !hasExhaustiveItems;\n\n          const canToggleShowMore = canShowLess || canShowMore;\n\n          return {\n            createURL: (facetValue: string) => {\n              return createURL((uiState) =>\n                this.getWidgetUiState(uiState, {\n                  searchParameters: state\n                    .resetPage()\n                    .toggleFacetRefinement(attribute, facetValue),\n                  helper,\n                })\n              );\n            },\n            items,\n            refine: triggerRefine,\n            searchForItems: searchFacetValues,\n            isFromSearch: false,\n            canRefine: items.length > 0,\n            widgetParams,\n            isShowingMore,\n            canToggleShowMore,\n            toggleShowMore: cachedToggleShowMore,\n            sendEvent,\n            hasExhaustiveItems,\n          };\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          const withoutMaxValuesPerFacet = state.setQueryParameter(\n            'maxValuesPerFacet',\n            undefined\n          );\n          if (operator === 'and') {\n            return withoutMaxValuesPerFacet.removeFacet(attribute);\n          }\n          return withoutMaxValuesPerFacet.removeDisjunctiveFacet(attribute);\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const values =\n            operator === 'or'\n              ? searchParameters.getDisjunctiveRefinements(attribute)\n              : searchParameters.getConjunctiveRefinements(attribute);\n\n          return removeEmptyRefinementsFromUiState(\n            {\n              ...uiState,\n              refinementList: {\n                ...uiState.refinementList,\n                [attribute]: values,\n              },\n            },\n            attribute\n          );\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          const isDisjunctive = operator === 'or';\n\n          if (searchParameters.isHierarchicalFacet(attribute)) {\n            warning(\n              false,\n              `RefinementList: Attribute \"${attribute}\" is already used by another widget applying hierarchical faceting.\nAs this is not supported, please make sure to remove this other widget or this RefinementList widget will not work at all.`\n            );\n\n            return searchParameters;\n          }\n\n          if (\n            (isDisjunctive && searchParameters.isConjunctiveFacet(attribute)) ||\n            (!isDisjunctive && searchParameters.isDisjunctiveFacet(attribute))\n          ) {\n            warning(\n              false,\n              `RefinementList: Attribute \"${attribute}\" is used by another refinement list with a different operator.\nAs this is not supported, please make sure to only use this attribute with one of the two operators.`\n            );\n\n            return searchParameters;\n          }\n\n          const values =\n            uiState.refinementList && uiState.refinementList[attribute];\n\n          const withFacetConfiguration = isDisjunctive\n            ? searchParameters\n                .addDisjunctiveFacet(attribute)\n                .removeDisjunctiveFacetRefinement(attribute)\n            : searchParameters\n                .addFacet(attribute)\n                .removeFacetRefinement(attribute);\n\n          const currentMaxValuesPerFacet =\n            withFacetConfiguration.maxValuesPerFacet || 0;\n\n          const nextMaxValuesPerFacet = Math.max(\n            currentMaxValuesPerFacet,\n            showMore ? showMoreLimit : limit\n          );\n\n          const withMaxValuesPerFacet =\n            withFacetConfiguration.setQueryParameter(\n              'maxValuesPerFacet',\n              nextMaxValuesPerFacet\n            );\n\n          if (!values) {\n            const key = isDisjunctive\n              ? 'disjunctiveFacetsRefinements'\n              : 'facetsRefinements';\n\n            return withMaxValuesPerFacet.setQueryParameters({\n              [key]: {\n                ...withMaxValuesPerFacet[key],\n                [attribute]: [],\n              },\n            });\n          }\n\n          return values.reduce(\n            (parameters, value) =>\n              isDisjunctive\n                ? parameters.addDisjunctiveFacetRefinement(attribute, value)\n                : parameters.addFacetRefinement(attribute, value),\n            withMaxValuesPerFacet\n          );\n        },\n      };\n    };\n  };\n\nfunction removeEmptyRefinementsFromUiState(\n  indexUiState: IndexUiState,\n  attribute: string\n): IndexUiState {\n  if (!indexUiState.refinementList) {\n    return indexUiState;\n  }\n\n  if (\n    !indexUiState.refinementList[attribute] ||\n    indexUiState.refinementList[attribute].length === 0\n  ) {\n    delete indexUiState.refinementList[attribute];\n  }\n\n  if (Object.keys(indexUiState.refinementList).length === 0) {\n    delete indexUiState.refinementList;\n  }\n\n  return indexUiState;\n}\n\nexport default connectRefinementList;\n","import {\n  createDocumentationMessageGenerator,\n  checkRendering,\n  noop,\n  escapeHits,\n  TAG_PLACEHOLDER,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  Hit,\n  BaseHit,\n  Renderer,\n  Unmounter,\n  UnknownWidgetParams,\n} from '../../types';\nimport type {\n  PlainSearchParameters,\n  RecommendResultItem,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'related-products',\n  connector: true,\n});\n\nexport type RelatedProductsRenderState<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * The matched recommendations from the Algolia API.\n   */\n  items: Array<Hit<THit>>;\n};\n\nexport type RelatedProductsConnectorParams<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * The `objectIDs` of the items to get related products from.\n   */\n  objectIDs: string[];\n  /**\n   * The number of recommendations to retrieve.\n   */\n  limit?: number;\n  /**\n   * The threshold for the recommendations confidence score (between 0 and 100).\n   */\n  threshold?: number;\n  /**\n   * List of search parameters to send.\n   */\n  fallbackParameters?: Omit<\n    PlainSearchParameters,\n    'page' | 'hitsPerPage' | 'offset' | 'length'\n  >;\n  /**\n   * List of search parameters to send.\n   */\n  queryParameters?: Omit<\n    PlainSearchParameters,\n    'page' | 'hitsPerPage' | 'offset' | 'length'\n  >;\n  /**\n   * Whether to escape HTML tags from items string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit<THit>, { results: RecommendResultItem }>;\n};\n\nexport type RelatedProductsWidgetDescription<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  $$type: 'ais.relatedProducts';\n  renderState: RelatedProductsRenderState<THit>;\n};\n\nexport type RelatedProductsConnector<\n  THit extends NonNullable<object> = BaseHit\n> = Connector<\n  RelatedProductsWidgetDescription<THit>,\n  RelatedProductsConnectorParams<THit>\n>;\n\nexport default (function connectRelatedProducts<\n  TWidgetParams extends UnknownWidgetParams\n>(\n  renderFn: Renderer<\n    RelatedProductsRenderState,\n    RelatedProductsConnectorParams & TWidgetParams\n  >,\n  unmountFn: Unmounter = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return <THit extends NonNullable<object> = BaseHit>(\n    widgetParams: TWidgetParams & RelatedProductsConnectorParams<THit>\n  ) => {\n    const {\n      // @MAJOR: this can default to false\n      escapeHTML = true,\n      objectIDs,\n      limit,\n      threshold,\n      fallbackParameters,\n      queryParameters,\n      transformItems = ((items) => items) as NonNullable<\n        RelatedProductsConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!objectIDs || objectIDs.length === 0) {\n      throw new Error(withUsage('The `objectIDs` option is required.'));\n    }\n\n    return {\n      dependsOn: 'recommend',\n      $$type: 'ais.relatedProducts',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState) {\n        return renderState;\n      },\n\n      getWidgetRenderState({ results }) {\n        if (results === null || results === undefined) {\n          return { items: [], widgetParams };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        return {\n          items: transformItems(results.hits, {\n            results: results as RecommendResultItem,\n          }),\n          widgetParams,\n        };\n      },\n\n      dispose({ recommendState }) {\n        unmountFn();\n        return recommendState.removeParams(this.$$id!);\n      },\n\n      getWidgetParameters(state) {\n        return objectIDs.reduce(\n          (acc, objectID) =>\n            acc.addRelatedProducts({\n              objectID,\n              maxRecommendations: limit,\n              threshold,\n              fallbackParameters: {\n                ...fallbackParameters,\n                ...(escapeHTML ? TAG_PLACEHOLDER : {}),\n              },\n              queryParameters: {\n                ...queryParameters,\n                ...(escapeHTML ? TAG_PLACEHOLDER : {}),\n              },\n              $$id: this.$$id!,\n            }),\n          state.removeParams(this.$$id!)\n        );\n      },\n    };\n  };\n} satisfies RelatedProductsConnector);\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'search-box',\n  connector: true,\n});\n\nexport type SearchBoxConnectorParams = {\n  /**\n   * A function that will be called every time\n   * a new value for the query is set. The first parameter is the query and the second is a\n   * function to actually trigger the search. The function takes the query as the parameter.\n   *\n   * This queryHook can be used to debounce the number of searches done from the searchBox.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\n/**\n * @typedef {Object} CustomSearchBoxWidgetParams\n * @property {function(string, function(string))} [queryHook = undefined] A function that will be called every time\n * a new value for the query is set. The first parameter is the query and the second is a\n * function to actually trigger the search. The function takes the query as the parameter.\n *\n * This queryHook can be used to debounce the number of searches done from the searchBox.\n */\n\nexport type SearchBoxRenderState = {\n  /**\n   * The query from the last search.\n   */\n  query: string;\n  /**\n   * Sets a new query and searches.\n   */\n  refine: (value: string) => void;\n  /**\n   * Remove the query and perform search.\n   */\n  clear: () => void;\n  /**\n   * `true` if the search results takes more than a certain time to come back\n   * from Algolia servers. This can be configured on the InstantSearch constructor with the attribute\n   * `stalledSearchDelay` which is 200ms, by default.\n   * @deprecated use `instantSearchInstance.status` instead\n   */\n  isSearchStalled: boolean;\n};\n\nexport type SearchBoxWidgetDescription = {\n  $$type: 'ais.searchBox';\n  renderState: SearchBoxRenderState;\n  indexRenderState: {\n    searchBox: WidgetRenderState<\n      SearchBoxRenderState,\n      SearchBoxConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type SearchBoxConnector = Connector<\n  SearchBoxWidgetDescription,\n  SearchBoxConnectorParams\n>;\n\nconst defaultQueryHook: SearchBoxConnectorParams['queryHook'] = (query, hook) =>\n  hook(query);\n\n/**\n * **SearchBox** connector provides the logic to build a widget that will let the user search for a query.\n *\n * The connector provides to the rendering: `refine()` to set the query. The behaviour of this function\n * may be impacted by the `queryHook` widget parameter.\n */\nconst connectSearchBox: SearchBoxConnector = function connectSearchBox(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { queryHook = defaultQueryHook } = widgetParams || {};\n\n    let _refine: SearchBoxRenderState['refine'];\n    let _clear: SearchBoxRenderState['clear'];\n\n    return {\n      $$type: 'ais.searchBox',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('query', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          searchBox: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ helper, instantSearchInstance, state }) {\n        if (!_refine) {\n          _refine = (query) => {\n            queryHook(query, (q) => helper.setQuery(q).search());\n          };\n\n          _clear = () => {\n            helper.setQuery('').search();\n          };\n        }\n\n        return {\n          query: state.query || '',\n          refine: _refine,\n          clear: _clear,\n          widgetParams,\n          isSearchStalled: instantSearchInstance.status === 'stalled',\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectSearchBox;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  find,\n  warning,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, TransformItems, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'sort-by',\n  connector: true,\n});\n\n/**\n * The **SortBy** connector provides the logic to build a custom widget that will display a\n * list of indices. With Algolia, this is most commonly used for changing ranking strategy. This allows\n * a user to change how the hits are being sorted.\n */\n\nexport type SortByItem = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByConnectorParams = {\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByItem[];\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByRenderState = {\n  /**\n   * The initially selected index.\n   */\n  initialIndex?: string;\n  /**\n   * The currently selected index.\n   */\n  currentRefinement: string;\n  /**\n   * All the available indices\n   */\n  options: SortByItem[];\n  /**\n   * Switches indices and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   * `true` if the last search contains no result.\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n  /**\n   * `true` if we can refine.\n   */\n  canRefine: boolean;\n};\n\nexport type SortByWidgetDescription = {\n  $$type: 'ais.sortBy';\n  renderState: SortByRenderState;\n  indexRenderState: {\n    sortBy: WidgetRenderState<SortByRenderState, SortByConnectorParams>;\n  };\n  indexUiState: {\n    sortBy: string;\n  };\n};\n\nexport type SortByConnector = Connector<\n  SortByWidgetDescription,\n  SortByConnectorParams\n>;\n\nconst connectSortBy: SortByConnector = function connectSortBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const connectorState: ConnectorState = {};\n\n  type ConnectorState = {\n    setIndex?: (indexName: string) => void;\n    initialIndex?: string;\n  };\n\n  return (widgetParams) => {\n    const {\n      items,\n      transformItems = ((x) => x) as NonNullable<\n        SortByConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(items)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    return {\n      $$type: 'ais.sortBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(initOptions);\n        const currentIndex = widgetRenderState.currentRefinement;\n        const isCurrentIndexInItems = find(\n          items,\n          (item) => item.value === currentIndex\n        );\n\n        warning(\n          isCurrentIndexInItems !== undefined,\n          `The index named \"${currentIndex}\" is not listed in the \\`items\\` of \\`sortBy\\`.`\n        );\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return connectorState.initialIndex\n          ? state.setIndex(connectorState.initialIndex)\n          : state;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          sortBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, state, parent }) {\n        if (!connectorState.initialIndex && parent) {\n          connectorState.initialIndex = parent.getIndexName();\n        }\n        if (!connectorState.setIndex) {\n          connectorState.setIndex = (indexName) => {\n            helper.setIndex(indexName).search();\n          };\n        }\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n\n        return {\n          currentRefinement: state.index,\n          options: transformItems(items, { results }),\n          refine: connectorState.setIndex,\n          hasNoResults,\n          canRefine: !hasNoResults && items.length > 0,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const currentIndex = searchParameters.index;\n\n        return {\n          ...uiState,\n          sortBy:\n            currentIndex !== connectorState.initialIndex\n              ? currentIndex\n              : undefined,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter(\n          'index',\n          uiState.sortBy ||\n            connectorState.initialIndex ||\n            searchParameters.index\n        );\n      },\n    };\n  };\n};\n\nexport default connectSortBy;\n","import {\n  checkRendering,\n  createDocumentationLink,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type { InsightsEvent } from '../../middlewares';\nimport type {\n  Connector,\n  InstantSearch,\n  CreateURL,\n  WidgetRenderState,\n  Widget,\n  InitOptions,\n  RenderOptions,\n  IndexUiState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'rating-menu',\n  connector: true,\n});\n\nconst $$type = 'ais.ratingMenu';\n\nconst MAX_VALUES_PER_FACET_API_LIMIT = 1000;\nconst STEP = 1;\n\ntype SendEvent = (...args: [InsightsEvent] | [string, string, string?]) => void;\n\ntype CreateSendEvent = (createSendEventArgs: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  getRefinedStar: () => number | number[] | undefined;\n  attribute: string;\n}) => SendEvent;\n\nconst createSendEvent: CreateSendEvent =\n  ({ instantSearchInstance, helper, getRefinedStar, attribute }) =>\n  (...args) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [, facetValue, eventName = 'Filter Applied'] = args;\n    const [eventType, eventModifier] = args[0].split(':');\n    if (eventType !== 'click') {\n      return;\n    }\n    const isRefined = getRefinedStar() === Number(facetValue);\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        eventModifier,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: [`${attribute}>=${facetValue}`],\n        },\n        attribute,\n      });\n    }\n  };\n\ntype StarRatingItems = {\n  /**\n   * Name corresponding to the number of stars.\n   */\n  name: string;\n  /**\n   * Human-readable name corresponding to the number of stars.\n   */\n  label: string;\n  /**\n   * Number of stars as string.\n   */\n  value: string;\n  /**\n   * Count of matched results corresponding to the number of stars.\n   */\n  count: number;\n  /**\n   *  Array of length of maximum rating value with stars to display or not.\n   */\n  stars: boolean[];\n  /**\n   * Indicates if star rating refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type RatingMenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n};\n\nexport type RatingMenuRenderState = {\n  /**\n   * Possible star ratings the user can apply.\n   */\n  items: StarRatingItems[];\n\n  /**\n   * Creates an URL for the next state (takes the item value as parameter). Takes the value of an item as parameter.\n   */\n  createURL: CreateURL<string>;\n\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Selects a rating to filter the results (takes the filter value as parameter). Takes the value of an item as parameter.\n   */\n  refine: (value: string) => void;\n\n  /**\n   * `true` if the last search contains no result.\n   *\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEvent;\n};\n\nexport type RatingMenuWidgetDescription = {\n  $$type: 'ais.ratingMenu';\n  renderState: RatingMenuRenderState;\n  indexRenderState: {\n    ratingMenu: {\n      [attribute: string]: WidgetRenderState<\n        RatingMenuRenderState,\n        RatingMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    ratingMenu: {\n      [attribute: string]: number | undefined;\n    };\n  };\n};\n\nexport type RatingMenuConnector = Connector<\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams\n>;\n\n/**\n * **StarRating** connector provides the logic to build a custom widget that will let\n * the user refine search results based on ratings.\n *\n * The connector provides to the rendering: `refine()` to select a value and\n * `items` that are the values that can be selected. `refine` should be used\n * with `items.value`.\n */\nconst connectRatingMenu: RatingMenuConnector = function connectRatingMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { attribute, max = 5 } = widgetParams || {};\n    let sendEvent: SendEvent;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    const getRefinedStar = (state: SearchParameters) => {\n      const values = state.getNumericRefinements(attribute);\n\n      if (!values['>=']?.length) {\n        return undefined;\n      }\n\n      return values['>='][0];\n    };\n\n    const getFacetsMaxDecimalPlaces = (\n      facetResults: SearchResults.FacetValue[]\n    ) => {\n      let maxDecimalPlaces = 0;\n      facetResults.forEach((facetResult) => {\n        const [, decimal = ''] = facetResult.name.split('.');\n        maxDecimalPlaces = Math.max(maxDecimalPlaces, decimal.length);\n      });\n      return maxDecimalPlaces;\n    };\n\n    const getFacetValuesWarningMessage = ({\n      maxDecimalPlaces,\n      maxFacets,\n      maxValuesPerFacet,\n    }: {\n      maxDecimalPlaces: number;\n      maxFacets: number;\n      maxValuesPerFacet: number;\n    }) => {\n      const maxDecimalPlacesInRange = Math.max(\n        0,\n        Math.floor(Math.log10(MAX_VALUES_PER_FACET_API_LIMIT / max))\n      );\n      const maxFacetsInRange = Math.min(\n        MAX_VALUES_PER_FACET_API_LIMIT,\n        Math.pow(10, maxDecimalPlacesInRange) * max\n      );\n\n      const solutions: string[] = [];\n\n      if (maxFacets > MAX_VALUES_PER_FACET_API_LIMIT) {\n        solutions.push(\n          `- Update your records to lower the precision of the values in the \"${attribute}\" attribute (for example: ${(5.123456789).toPrecision(\n            maxDecimalPlaces + 1\n          )} to ${(5.123456789).toPrecision(maxDecimalPlacesInRange + 1)})`\n        );\n      }\n      if (maxValuesPerFacet < maxFacetsInRange) {\n        solutions.push(\n          `- Increase the maximum number of facet values to ${maxFacetsInRange} using the \"configure\" widget ${createDocumentationLink(\n            { name: 'configure' }\n          )} and the \"maxValuesPerFacet\" parameter https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/`\n        );\n      }\n\n      return `The ${attribute} attribute can have ${maxFacets} different values (0 to ${max} with a maximum of ${maxDecimalPlaces} decimals = ${maxFacets}) but you retrieved only ${maxValuesPerFacet} facet values. Therefore the number of results that match the refinements can be incorrect.\n    ${\n      solutions.length\n        ? `To resolve this problem you can:\\n${solutions.join('\\n')}`\n        : ``\n    }`;\n    };\n\n    function getRefinedState(state: SearchParameters, facetValue: string) {\n      const isRefined = getRefinedStar(state) === Number(facetValue);\n\n      const emptyState = state.resetPage().removeNumericRefinement(attribute);\n\n      if (!isRefined) {\n        return emptyState\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', Number(facetValue));\n      }\n      return emptyState;\n    }\n\n    const toggleRefinement = (\n      helper: AlgoliaSearchHelper,\n      facetValue: string\n    ) => {\n      sendEvent('click:internal', facetValue);\n      helper.setState(getRefinedState(helper.state, facetValue)).search();\n    };\n\n    type ConnectorState = {\n      toggleRefinementFactory: (\n        helper: AlgoliaSearchHelper\n      ) => (facetValue: string) => void;\n      createURLFactory: ({\n        state,\n        createURL,\n      }: {\n        state: SearchParameters;\n        createURL: (InitOptions | RenderOptions)['createURL'];\n        getWidgetUiState: NonNullable<Widget['getWidgetUiState']>;\n        helper: AlgoliaSearchHelper;\n      }) => (value: string) => string;\n    };\n\n    const connectorState: ConnectorState = {\n      toggleRefinementFactory: (helper) => toggleRefinement.bind(null, helper),\n      createURLFactory:\n        ({ state, createURL, getWidgetUiState, helper }) =>\n        (value) =>\n          createURL((uiState) =>\n            getWidgetUiState(uiState, {\n              searchParameters: getRefinedState(state, value),\n              helper,\n            })\n          ),\n    };\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          ratingMenu: {\n            ...renderState.ratingMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        results,\n        state,\n        instantSearchInstance,\n        createURL,\n      }) {\n        let facetValues: StarRatingItems[] = [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEvent({\n            instantSearchInstance,\n            helper,\n            getRefinedStar: () => getRefinedStar(helper.state),\n            attribute,\n          });\n        }\n\n        let refinementIsApplied = false;\n        let totalCount = 0;\n\n        const facetResults = results?.getFacetValues(attribute, {}) as\n          | SearchResults.FacetValue[]\n          | undefined;\n\n        if (results && facetResults) {\n          const maxValuesPerFacet = facetResults.length;\n          const maxDecimalPlaces = getFacetsMaxDecimalPlaces(facetResults);\n          const maxFacets = Math.pow(10, maxDecimalPlaces) * max;\n\n          warning(\n            maxFacets <= maxValuesPerFacet || Boolean(results.__isArtificial),\n            getFacetValuesWarningMessage({\n              maxDecimalPlaces,\n              maxFacets,\n              maxValuesPerFacet,\n            })\n          );\n\n          const refinedStar = getRefinedStar(state);\n\n          for (let star = STEP; star < max; star += STEP) {\n            const isRefined = refinedStar === star;\n            refinementIsApplied = refinementIsApplied || isRefined;\n\n            const count = facetResults\n              .filter((f) => Number(f.name) >= star && Number(f.name) <= max)\n              .map((f) => f.count)\n              .reduce((sum, current) => sum + current, 0);\n            totalCount += count;\n\n            if (refinedStar && !isRefined && count === 0) {\n              // skip count==0 when at least 1 refinement is enabled\n              // eslint-disable-next-line no-continue\n              continue;\n            }\n\n            const stars = [...new Array(Math.floor(max / STEP))].map(\n              (_v, i) => i * STEP < star\n            );\n\n            facetValues.push({\n              stars,\n              name: String(star),\n              label: String(star),\n              value: String(star),\n              count,\n              isRefined,\n            });\n          }\n        }\n        facetValues = facetValues.reverse();\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n\n        return {\n          items: facetValues,\n          hasNoResults,\n          canRefine: (!hasNoResults || refinementIsApplied) && totalCount > 0,\n          refine: connectorState.toggleRefinementFactory(helper),\n          sendEvent,\n          createURL: connectorState.createURLFactory({\n            state,\n            createURL,\n            helper,\n            getWidgetUiState: this.getWidgetUiState,\n          }),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const value = getRefinedStar(searchParameters);\n\n        return removeEmptyRefinementsFromUiState(\n          {\n            ...uiState,\n            ratingMenu: {\n              ...uiState.ratingMenu,\n              [attribute]: typeof value === 'number' ? value : undefined,\n            },\n          },\n          attribute\n        );\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.ratingMenu && uiState.ratingMenu[attribute];\n\n        const withDisjunctiveFacet = searchParameters\n          .addDisjunctiveFacet(attribute)\n          .removeNumericRefinement(attribute)\n          .removeDisjunctiveFacetRefinement(attribute);\n\n        if (!value) {\n          return withDisjunctiveFacet.setQueryParameters({\n            numericRefinements: {\n              ...withDisjunctiveFacet.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        return withDisjunctiveFacet\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', value);\n      },\n    };\n  };\n};\n\nfunction removeEmptyRefinementsFromUiState(\n  indexUiState: IndexUiState,\n  attribute: string\n): IndexUiState {\n  if (!indexUiState.ratingMenu) {\n    return indexUiState;\n  }\n\n  if (typeof indexUiState.ratingMenu[attribute] !== 'number') {\n    delete indexUiState.ratingMenu[attribute];\n  }\n\n  if (Object.keys(indexUiState.ratingMenu).length === 0) {\n    delete indexUiState.ratingMenu;\n  }\n\n  return indexUiState;\n}\n\nexport default connectRatingMenu;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'stats',\n  connector: true,\n});\n\n/**\n * **Stats** connector provides the logic to build a custom widget that will displays\n * search statistics (hits number and processing time).\n */\n\nexport type StatsRenderState = {\n  /**\n   * The maximum number of hits per page returned by Algolia.\n   */\n  hitsPerPage?: number;\n  /**\n   * The number of hits in the result set.\n   */\n  nbHits: number;\n  /**\n   * The number of sorted hits in the result set (when using Relevant sort).\n   */\n  nbSortedHits?: number;\n  /**\n   * Indicates whether the index is currently using Relevant sort and is displaying only sorted hits.\n   */\n  areHitsSorted: boolean;\n  /**\n   * The number of pages computed for the result set.\n   */\n  nbPages: number;\n  /**\n   * The current page.\n   */\n  page: number;\n  /**\n   * The time taken to compute the results inside the Algolia engine.\n   */\n  processingTimeMS: number;\n  /**\n   * The query used for the current search.\n   */\n  query: string;\n};\n\nexport type StatsConnectorParams = Record<string, unknown>;\n\nexport type StatsWidgetDescription = {\n  $$type: 'ais.stats';\n  renderState: StatsRenderState;\n  indexRenderState: {\n    stats: WidgetRenderState<StatsRenderState, StatsConnectorParams>;\n  };\n};\n\nexport type StatsConnector = Connector<\n  StatsWidgetDescription,\n  StatsConnectorParams\n>;\n\nconst connectStats: StatsConnector = function connectStats(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => ({\n    $$type: 'ais.stats',\n\n    init(initOptions) {\n      const { instantSearchInstance } = initOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(initOptions),\n          instantSearchInstance,\n        },\n        true\n      );\n    },\n\n    render(renderOptions) {\n      const { instantSearchInstance } = renderOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(renderOptions),\n          instantSearchInstance,\n        },\n        false\n      );\n    },\n\n    dispose() {\n      unmountFn();\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        stats: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState({ results, state }) {\n      if (!results) {\n        return {\n          hitsPerPage: state.hitsPerPage,\n          nbHits: 0,\n          nbSortedHits: undefined,\n          areHitsSorted: false,\n          nbPages: 0,\n          page: state.page || 0,\n          processingTimeMS: -1,\n          query: state.query || '',\n          widgetParams,\n        };\n      }\n\n      return {\n        hitsPerPage: results.hitsPerPage,\n        nbHits: results.nbHits,\n        nbSortedHits: results.nbSortedHits,\n        areHitsSorted:\n          typeof results.appliedRelevancyStrictness !== 'undefined' &&\n          results.appliedRelevancyStrictness > 0 &&\n          results.nbSortedHits !== results.nbHits,\n        nbPages: results.nbPages,\n        page: results.page,\n        processingTimeMS: results.processingTimeMS,\n        query: results.query,\n        widgetParams,\n      };\n    },\n  });\n};\n\nexport default connectStats;\n","import {\n  checkRendering,\n  escapeFacetValue,\n  createDocumentationMessageGenerator,\n  find,\n  noop,\n  toArray,\n  warning,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  CreateURL,\n  InitOptions,\n  InstantSearch,\n  RenderOptions,\n  Widget,\n  WidgetRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n  connector: true,\n});\n\nconst $$type = 'ais.toggleRefinement';\n\ntype BuiltInSendEventForToggle = (\n  eventType: string,\n  isRefined: boolean,\n  eventName?: string\n) => void;\ntype CustomSendEventForToggle = (customPayload: any) => void;\n\nexport type SendEventForToggle = BuiltInSendEventForToggle &\n  CustomSendEventForToggle;\n\nconst createSendEvent = ({\n  instantSearchInstance,\n  helper,\n  attribute,\n  on,\n}: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string;\n  on: string[] | undefined;\n}) => {\n  const sendEventForToggle: SendEventForToggle = (...args: any[]) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [, isRefined, eventName = 'Filter Applied'] = args;\n    const [eventType, eventModifier] = args[0].split(':');\n    if (eventType !== 'click' || on === undefined) {\n      return;\n    }\n\n    // only send an event when the refinement gets applied,\n    // not when it gets removed\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        eventModifier,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: on.map((value) => `${attribute}:${value}`),\n        },\n        attribute,\n      });\n    }\n  };\n  return sendEventForToggle;\n};\n\nexport type ToggleRefinementValue = {\n  /**\n   * Whether this option is enabled.\n   */\n  isRefined: boolean;\n  /**\n   * Number of result if this option is toggled.\n   */\n  count: number | null;\n};\n\nexport type ToggleRefinementConnectorParams = {\n  /**\n   * Name of the attribute for faceting (e.g., \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * Value to filter on when toggled.\n   * @default \"true\"\n   */\n  on?: FacetValue | FacetValue[];\n  /**\n   * Value to filter on when not toggled.\n   */\n  off?: FacetValue | FacetValue[];\n};\n\ntype FacetValue = string | boolean | number;\n\nexport type ToggleRefinementRenderState = {\n  /** The current toggle value */\n  value: {\n    /**\n     * The attribute name of this toggle.\n     */\n    name: string;\n    /**\n     * Whether the current option is \"on\" (true) or \"off\" (false)\n     */\n    isRefined: boolean;\n    /**\n     * Number of results if this option is toggled.\n     */\n    count: number | null;\n    /**\n     * Information about the \"on\" toggle.\n     */\n    onFacetValue: ToggleRefinementValue;\n    /**\n     * Information about the \"off\" toggle.\n     */\n    offFacetValue: ToggleRefinementValue;\n  };\n  /**\n   * Creates an URL for the next state.\n   */\n  createURL: CreateURL<void>;\n  /**\n   * Send a \"Facet Clicked\" Insights event.\n   */\n  sendEvent: SendEventForToggle;\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * Updates to the next state by applying the toggle refinement.\n   */\n  refine: (value?: { isRefined: boolean }) => void;\n};\n\nexport type ToggleRefinementWidgetDescription = {\n  $$type: 'ais.toggleRefinement';\n  renderState: ToggleRefinementRenderState;\n  indexRenderState: {\n    toggleRefinement: {\n      [attribute: string]: WidgetRenderState<\n        ToggleRefinementRenderState,\n        ToggleRefinementConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    toggle: {\n      [attribute: string]: boolean;\n    };\n  };\n};\n\nexport type ToggleRefinementConnector = Connector<\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementConnectorParams\n>;\n\n/**\n * **Toggle** connector provides the logic to build a custom widget that will provide\n * an on/off filtering feature based on an attribute value or values.\n *\n * Two modes are implemented in the custom widget:\n *  - with or without the value filtered\n *  - switch between two values.\n */\nconst connectToggleRefinement: ToggleRefinementConnector =\n  function connectToggleRefinement(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const { attribute, on: userOn = true, off: userOff } = widgetParams || {};\n\n      if (!attribute) {\n        throw new Error(withUsage('The `attribute` option is required.'));\n      }\n\n      const hasAnOffValue = userOff !== undefined;\n      // even though facet values can be numbers and boolean,\n      // the helper methods only accept string in the type\n      const on = toArray(userOn).map(escapeFacetValue) as string[];\n      const off = hasAnOffValue\n        ? (toArray(userOff).map(escapeFacetValue) as string[])\n        : undefined;\n\n      let sendEvent: SendEventForToggle;\n\n      const toggleRefinementFactory =\n        (helper: AlgoliaSearchHelper) =>\n        (\n          {\n            isRefined,\n          }: {\n            isRefined: boolean;\n          } = { isRefined: false }\n        ) => {\n          if (!isRefined) {\n            sendEvent('click:internal', isRefined);\n            if (hasAnOffValue) {\n              off!.forEach((v) =>\n                helper.removeDisjunctiveFacetRefinement(attribute, v)\n              );\n            }\n\n            on.forEach((v) =>\n              helper.addDisjunctiveFacetRefinement(attribute, v)\n            );\n          } else {\n            on.forEach((v) =>\n              helper.removeDisjunctiveFacetRefinement(attribute, v)\n            );\n\n            if (hasAnOffValue) {\n              off!.forEach((v) =>\n                helper.addDisjunctiveFacetRefinement(attribute, v)\n              );\n            }\n          }\n\n          helper.search();\n        };\n\n      const connectorState = {\n        createURLFactory:\n          (\n            isRefined: boolean,\n            {\n              state,\n              createURL,\n              getWidgetUiState,\n              helper,\n            }: {\n              state: SearchParameters;\n              createURL: (InitOptions | RenderOptions)['createURL'];\n              getWidgetUiState: NonNullable<Widget['getWidgetUiState']>;\n              helper: AlgoliaSearchHelper;\n            }\n          ) =>\n          () => {\n            state = state.resetPage();\n\n            const valuesToRemove = isRefined ? on : off;\n            if (valuesToRemove) {\n              valuesToRemove.forEach((v) => {\n                state = state.removeDisjunctiveFacetRefinement(attribute, v);\n              });\n            }\n\n            const valuesToAdd = isRefined ? off : on;\n            if (valuesToAdd) {\n              valuesToAdd.forEach((v) => {\n                state = state.addDisjunctiveFacetRefinement(attribute, v);\n              });\n            }\n\n            return createURL((uiState) =>\n              getWidgetUiState(uiState, { searchParameters: state, helper })\n            );\n          },\n      };\n\n      return {\n        $$type,\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          return state.removeDisjunctiveFacet(attribute);\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            toggleRefinement: {\n              ...renderState.toggleRefinement,\n              [attribute]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState({\n          state,\n          helper,\n          results,\n          createURL,\n          instantSearchInstance,\n        }) {\n          const isRefined = results\n            ? on.every((v) => state.isDisjunctiveFacetRefined(attribute, v))\n            : on.every((v) => state.isDisjunctiveFacetRefined(attribute, v));\n\n          let onFacetValue: ToggleRefinementValue = {\n            isRefined,\n            count: 0,\n          };\n\n          let offFacetValue: ToggleRefinementValue = {\n            isRefined: hasAnOffValue && !isRefined,\n            count: 0,\n          };\n\n          if (results) {\n            const offValue = toArray(off || false);\n            const allFacetValues = (results.getFacetValues(attribute, {}) ||\n              []) as SearchResults.FacetValue[];\n\n            const onData = on\n              .map((v) =>\n                find(\n                  allFacetValues,\n                  ({ escapedValue }) =>\n                    escapedValue === escapeFacetValue(String(v))\n                )\n              )\n              .filter((v): v is SearchResults.FacetValue => v !== undefined);\n\n            const offData = hasAnOffValue\n              ? offValue\n                  .map((v) =>\n                    find(\n                      allFacetValues,\n                      ({ escapedValue }) =>\n                        escapedValue === escapeFacetValue(String(v))\n                    )\n                  )\n                  .filter((v): v is SearchResults.FacetValue => v !== undefined)\n              : [];\n\n            onFacetValue = {\n              isRefined: onData.length\n                ? onData.every((v) => v.isRefined)\n                : false,\n              count: onData.reduce((acc, v) => acc + v.count, 0) || null,\n            };\n\n            offFacetValue = {\n              isRefined: offData.length\n                ? offData.every((v) => v.isRefined)\n                : false,\n              count:\n                offData.reduce((acc, v) => acc + v.count, 0) ||\n                allFacetValues.reduce((total, { count }) => total + count, 0),\n            };\n          }\n\n          if (!sendEvent) {\n            sendEvent = createSendEvent({\n              instantSearchInstance,\n              attribute,\n              on,\n              helper,\n            });\n          }\n          const nextRefinement = isRefined ? offFacetValue : onFacetValue;\n\n          return {\n            value: {\n              name: attribute,\n              isRefined,\n              count: results ? nextRefinement.count : null,\n              onFacetValue,\n              offFacetValue,\n            },\n            createURL: connectorState.createURLFactory(isRefined, {\n              state,\n              createURL,\n              helper,\n              getWidgetUiState: this.getWidgetUiState,\n            }),\n            sendEvent,\n            canRefine: Boolean(results ? nextRefinement.count : null),\n            refine: toggleRefinementFactory(helper),\n            widgetParams,\n          };\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const isRefined =\n            on &&\n            on.every((v) =>\n              searchParameters.isDisjunctiveFacetRefined(attribute, v)\n            );\n\n          if (!isRefined) {\n            // This needs to be done in the case `uiState` comes from `createURL`\n            delete uiState.toggle?.[attribute];\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            toggle: {\n              ...uiState.toggle,\n              [attribute]: isRefined,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          if (\n            searchParameters.isHierarchicalFacet(attribute) ||\n            searchParameters.isConjunctiveFacet(attribute)\n          ) {\n            warning(\n              false,\n              `ToggleRefinement: Attribute \"${attribute}\" is already used by another widget of a different type.\nAs this is not supported, please make sure to remove this other widget or this ToggleRefinement widget will not work at all.`\n            );\n\n            return searchParameters;\n          }\n\n          let withFacetConfiguration = searchParameters\n            .addDisjunctiveFacet(attribute)\n            .removeDisjunctiveFacetRefinement(attribute);\n\n          const isRefined = Boolean(\n            uiState.toggle && uiState.toggle[attribute]\n          );\n\n          if (isRefined) {\n            if (on) {\n              on.forEach((v) => {\n                withFacetConfiguration =\n                  withFacetConfiguration.addDisjunctiveFacetRefinement(\n                    attribute,\n                    v\n                  );\n              });\n            }\n\n            return withFacetConfiguration;\n          }\n\n          // It's not refined with an `off` value\n          if (hasAnOffValue) {\n            if (off) {\n              off.forEach((v) => {\n                withFacetConfiguration =\n                  withFacetConfiguration.addDisjunctiveFacetRefinement(\n                    attribute,\n                    v\n                  );\n              });\n            }\n            return withFacetConfiguration;\n          }\n\n          // It's not refined without an `off` value\n          return withFacetConfiguration.setQueryParameters({\n            disjunctiveFacetsRefinements: {\n              ...searchParameters.disjunctiveFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        },\n      };\n    };\n  };\n\nexport default connectToggleRefinement;\n","import {\n  createDocumentationMessageGenerator,\n  checkRendering,\n  noop,\n  escapeHits,\n  TAG_PLACEHOLDER,\n  getObjectType,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  Hit,\n  BaseHit,\n  Renderer,\n  Unmounter,\n  UnknownWidgetParams,\n} from '../../types';\nimport type {\n  PlainSearchParameters,\n  RecommendResultItem,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'trending-items',\n  connector: true,\n});\n\nexport type TrendingItemsRenderState<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * The matched recommendations from the Algolia API.\n   */\n  items: Array<Hit<THit>>;\n};\n\nexport type TrendingItemsConnectorParams<\n  THit extends NonNullable<object> = BaseHit\n> = (\n  | {\n      /**\n       * The facet attribute to get recommendations for.\n       */\n      facetName: string;\n      /**\n       * The facet value to get recommendations for.\n       */\n      facetValue: string;\n    }\n  | {\n      facetName?: string;\n      facetValue?: string;\n    }\n) & {\n  /**\n   * The number of recommendations to retrieve.\n   */\n  limit?: number;\n  /**\n   * The threshold for the recommendations confidence score (between 0 and 100).\n   */\n  threshold?: number;\n  /**\n   * List of search parameters to send.\n   */\n  fallbackParameters?: Omit<\n    PlainSearchParameters,\n    'page' | 'hitsPerPage' | 'offset' | 'length'\n  >;\n  /**\n   * List of search parameters to send.\n   */\n  queryParameters?: Omit<\n    PlainSearchParameters,\n    'page' | 'hitsPerPage' | 'offset' | 'length'\n  >;\n  /**\n   * Whether to escape HTML tags from items string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit<THit>, { results: RecommendResultItem }>;\n};\n\nexport type TrendingItemsWidgetDescription<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  $$type: 'ais.trendingItems';\n  renderState: TrendingItemsRenderState<THit>;\n};\n\nexport type TrendingItemsConnector<THit extends NonNullable<object> = BaseHit> =\n  Connector<\n    TrendingItemsWidgetDescription<THit>,\n    TrendingItemsConnectorParams<THit>\n  >;\n\nexport default (function connectTrendingItems<\n  TWidgetParams extends UnknownWidgetParams\n>(\n  renderFn: Renderer<\n    TrendingItemsRenderState,\n    TWidgetParams & TrendingItemsConnectorParams\n  >,\n  unmountFn: Unmounter = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return <THit extends NonNullable<object> = BaseHit>(\n    widgetParams: TWidgetParams & TrendingItemsConnectorParams<THit>\n  ) => {\n    const {\n      facetName,\n      facetValue,\n      limit,\n      threshold,\n      fallbackParameters,\n      queryParameters,\n      // @MAJOR: this can default to false\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        TrendingItemsConnectorParams<THit>['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if ((facetName && !facetValue) || (!facetName && facetValue)) {\n      throw new Error(\n        withUsage(\n          `When you provide facetName (received type ${getObjectType(\n            facetName\n          )}), you must also provide facetValue (received type ${getObjectType(\n            facetValue\n          )}).`\n        )\n      );\n    }\n\n    return {\n      dependsOn: 'recommend',\n      $$type: 'ais.trendingItems',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState) {\n        return renderState;\n      },\n\n      getWidgetRenderState({ results }) {\n        if (results === null || results === undefined) {\n          return { items: [], widgetParams };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        return {\n          items: transformItems(results.hits, {\n            results: results as RecommendResultItem,\n          }),\n          widgetParams,\n        };\n      },\n\n      dispose({ recommendState }) {\n        unmountFn();\n        return recommendState.removeParams(this.$$id!);\n      },\n\n      getWidgetParameters(state) {\n        return state.removeParams(this.$$id!).addTrendingItems({\n          facetName,\n          facetValue,\n          maxRecommendations: limit,\n          threshold,\n          fallbackParameters: {\n            ...fallbackParameters,\n            ...(escapeHTML ? TAG_PLACEHOLDER : {}),\n          },\n          queryParameters: {\n            ...queryParameters,\n            ...(escapeHTML ? TAG_PLACEHOLDER : {}),\n          },\n          $$id: this.$$id!,\n        });\n      },\n    };\n  };\n} satisfies TrendingItemsConnector);\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  isEqual,\n  noop,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n  IndexUiState,\n} from '../../types';\nimport type { SearchParameters, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'breadcrumb',\n  connector: true,\n});\n\nexport type BreadcrumbConnectorParamsItem = {\n  /**\n   * Label of the category or subcategory.\n   */\n  label: string;\n\n  /**\n   * Value of breadcrumb item.\n   */\n  value: string | null;\n};\n\nexport type BreadcrumbConnectorParams = {\n  /**\n   * Attributes to use to generate the hierarchy of the breadcrumb.\n   */\n  attributes: string[];\n\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<BreadcrumbConnectorParamsItem>;\n\n  /**\n   * The level separator used in the records.\n   *\n   * @default '>'\n   */\n  separator?: string;\n};\n\nexport type BreadcrumbRenderState = {\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<BreadcrumbConnectorParamsItem['value']>;\n\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: BreadcrumbConnectorParamsItem[];\n\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: BreadcrumbConnectorParamsItem['value']) => void;\n\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n};\n\nexport type BreadcrumbWidgetDescription = {\n  $$type: 'ais.breadcrumb';\n  renderState: BreadcrumbRenderState;\n  indexRenderState: {\n    breadcrumb: {\n      [rootAttribute: string]: WidgetRenderState<\n        BreadcrumbRenderState,\n        BreadcrumbConnectorParams\n      >;\n    };\n  };\n};\n\nexport type BreadcrumbConnector = Connector<\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams\n>;\n\nconst connectBreadcrumb: BreadcrumbConnector = function connectBreadcrumb(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  type ConnectorState = {\n    refine?: BreadcrumbRenderState['refine'];\n    createURL?: BreadcrumbRenderState['createURL'];\n  };\n\n  const connectorState: ConnectorState = {};\n\n  return (widgetParams) => {\n    const {\n      attributes,\n      separator = ' > ',\n      rootPath = null,\n      transformItems = ((items) => items) as NonNullable<\n        BreadcrumbConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!attributes || !Array.isArray(attributes) || attributes.length === 0) {\n      throw new Error(\n        withUsage('The `attributes` option expects an array of strings.')\n      );\n    }\n\n    const [hierarchicalFacetName] = attributes;\n\n    function getRefinedState(\n      state: SearchParameters,\n      facetValue: BreadcrumbConnectorParamsItem['value']\n    ) {\n      if (!facetValue) {\n        const breadcrumb = state.getHierarchicalFacetBreadcrumb(\n          hierarchicalFacetName\n        );\n        if (breadcrumb.length === 0) {\n          return state;\n        } else {\n          return state\n            .resetPage()\n            .toggleFacetRefinement(hierarchicalFacetName, breadcrumb[0]);\n        }\n      }\n      return state\n        .resetPage()\n        .toggleFacetRefinement(hierarchicalFacetName, facetValue);\n    }\n\n    return {\n      $$type: 'ais.breadcrumb',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose() {\n        unmountFn();\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          breadcrumb: {\n            ...renderState.breadcrumb,\n            [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper, createURL, results, state }) {\n        function getItems() {\n          // The hierarchicalFacets condition is required for flavors\n          // that render immediately with empty results, without relying\n          // on init() (like React InstantSearch).\n          if (!results || state.hierarchicalFacets.length === 0) {\n            return [];\n          }\n\n          const [{ name: facetName }] = state.hierarchicalFacets;\n\n          const facetValues = results.getFacetValues(facetName, {});\n          const facetItems =\n            facetValues && !Array.isArray(facetValues) && facetValues.data\n              ? facetValues.data\n              : [];\n          const items = transformItems(\n            shiftItemsValues(prepareItems(facetItems)),\n            {\n              results,\n            }\n          );\n\n          return items;\n        }\n\n        const items = getItems();\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (facetValue) => {\n            return createURL((uiState) =>\n              this.getWidgetUiState!(uiState, {\n                searchParameters: getRefinedState(helper.state, facetValue),\n                helper,\n              })\n            );\n          };\n        }\n\n        if (!connectorState.refine) {\n          connectorState.refine = (facetValue) => {\n            helper.setState(getRefinedState(helper.state, facetValue)).search();\n          };\n        }\n\n        return {\n          canRefine: items.length > 0,\n          createURL: connectorState.createURL,\n          items,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const path = searchParameters.getHierarchicalFacetBreadcrumb(\n          hierarchicalFacetName\n        );\n\n        return removeEmptyRefinementsFromUiState(\n          {\n            ...uiState,\n            hierarchicalMenu: {\n              ...uiState.hierarchicalMenu,\n              [hierarchicalFacetName]: path,\n            },\n          },\n          hierarchicalFacetName\n        );\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const values =\n          uiState.hierarchicalMenu &&\n          uiState.hierarchicalMenu[hierarchicalFacetName];\n\n        if (\n          searchParameters.isConjunctiveFacet(hierarchicalFacetName) ||\n          searchParameters.isDisjunctiveFacet(hierarchicalFacetName)\n        ) {\n          warning(\n            false,\n            `HierarchicalMenu: Attribute \"${hierarchicalFacetName}\" is already used by another widget applying conjunctive or disjunctive faceting.\nAs this is not supported, please make sure to remove this other widget or this HierarchicalMenu widget will not work at all.`\n          );\n\n          return searchParameters;\n        }\n\n        if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n          const facet = searchParameters.getHierarchicalFacetByName(\n            hierarchicalFacetName\n          );\n\n          warning(\n            isEqual(facet.attributes, attributes) &&\n              facet.separator === separator &&\n              facet.rootPath === rootPath,\n            'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n          );\n        }\n\n        const withFacetConfiguration = searchParameters\n          .removeHierarchicalFacet(hierarchicalFacetName)\n          .addHierarchicalFacet({\n            name: hierarchicalFacetName,\n            attributes,\n            separator,\n            rootPath,\n          });\n\n        if (!values) {\n          return withFacetConfiguration.setQueryParameters({\n            hierarchicalFacetsRefinements: {\n              ...withFacetConfiguration.hierarchicalFacetsRefinements,\n              [hierarchicalFacetName]: [],\n            },\n          });\n        }\n\n        return withFacetConfiguration.addHierarchicalFacetRefinement(\n          hierarchicalFacetName,\n          values.join(separator)\n        );\n      },\n    };\n  };\n};\n\nfunction prepareItems(data: SearchResults.HierarchicalFacet[]) {\n  return data.reduce<BreadcrumbConnectorParamsItem[]>((result, currentItem) => {\n    if (currentItem.isRefined) {\n      result.push({\n        label: currentItem.name,\n        value: currentItem.escapedValue,\n      });\n      if (Array.isArray(currentItem.data)) {\n        result = result.concat(prepareItems(currentItem.data));\n      }\n    }\n    return result;\n  }, []);\n}\n\nfunction shiftItemsValues(array: BreadcrumbConnectorParamsItem[]) {\n  return array.map((x, idx) => ({\n    label: x.label,\n    value: idx + 1 === array.length ? null : array[idx + 1].value,\n  }));\n}\n\nfunction removeEmptyRefinementsFromUiState(\n  indexUiState: IndexUiState,\n  attribute: string\n): IndexUiState {\n  if (!indexUiState.hierarchicalMenu) {\n    return indexUiState;\n  }\n\n  if (\n    !indexUiState.hierarchicalMenu[attribute] ||\n    !indexUiState.hierarchicalMenu[attribute].length\n  ) {\n    delete indexUiState.hierarchicalMenu[attribute];\n  }\n\n  if (Object.keys(indexUiState.hierarchicalMenu).length === 0) {\n    delete indexUiState.hierarchicalMenu;\n  }\n\n  return indexUiState;\n}\n\nexport default connectBreadcrumb;\n","import {\n  checkRendering,\n  aroundLatLngToPosition,\n  insideBoundingBoxToBoundingBox,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForHits } from '../../lib/utils';\nimport type {\n  BaseHit,\n  Connector,\n  GeoHit,\n  GeoLoc,\n  IndexRenderState,\n  InitOptions,\n  Renderer,\n  RenderOptions,\n  TransformItems,\n  UnknownWidgetParams,\n  Unmounter,\n  WidgetRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\nexport type { GeoHit } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'geo-search',\n  connector: true,\n});\n\n// in this connector, we assume insideBoundingBox is only a string,\n// even though in the helper it's defined as number[][] alone.\n// This can be done, since the connector assumes \"control\" of the parameter\nfunction getBoundingBoxAsString(state: SearchParameters) {\n  return (state.insideBoundingBox as unknown as string) || '';\n}\nfunction setBoundingBoxAsString(state: SearchParameters, value: string) {\n  return state.setQueryParameter(\n    'insideBoundingBox',\n    value as unknown as number[][]\n  );\n}\n\ntype Bounds = {\n  /**\n   * The top right corner of the map view.\n   */\n  northEast: GeoLoc;\n  /**\n   * The bottom left corner of the map view.\n   */\n  southWest: GeoLoc;\n};\n\nexport type GeoSearchRenderState<THit extends NonNullable<object> = BaseHit> = {\n  /**\n   * Reset the current bounding box refinement.\n   */\n  clearMapRefinement: () => void;\n  /**\n   * The current bounding box of the search.\n   */\n  currentRefinement?: Bounds;\n  /**\n   * Return true if the map has move since the last refinement.\n   */\n  hasMapMoveSinceLastRefine: () => boolean;\n  /**\n   * Return true if the current refinement is set with the map bounds.\n   */\n  isRefinedWithMap: () => boolean;\n  /**\n   * Return true if the user is able to refine on map move.\n   */\n  isRefineOnMapMove: () => boolean;\n  /**\n   * The matched hits from Algolia API.\n   */\n  items: Array<GeoHit<THit>>;\n  /**\n   * The current position of the search.\n   */\n  position?: GeoLoc;\n  /**\n   * Sets a bounding box to filter the results from the given map bounds.\n   */\n  refine: (bounds: Bounds) => void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n  /**\n   * Set the fact that the map has moved since the last refinement, should be\n   * called on each map move. The call to the function triggers a new rendering\n   * only when the value change.\n   */\n  setMapMoveSinceLastRefine: () => void;\n  /**\n   * Toggle the fact that the user is able to refine on map move.\n   */\n  toggleRefineOnMapMove: () => void;\n};\n\nexport type GeoSearchConnectorParams<THit extends GeoHit = GeoHit> = {\n  /**\n   * If true, refine will be triggered as you move the map.\n   * @default true\n   */\n  enableRefineOnMapMove?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   * @default items => items\n   */\n  transformItems?: TransformItems<GeoHit<THit>>;\n};\n\nconst $$type = 'ais.geoSearch';\n\nexport type GeoSearchWidgetDescription<THit extends GeoHit = GeoHit> = {\n  $$type: 'ais.geoSearch';\n  renderState: GeoSearchRenderState<THit>;\n  indexRenderState: {\n    geoSearch: WidgetRenderState<\n      GeoSearchRenderState<THit>,\n      GeoSearchConnectorParams<THit>\n    >;\n  };\n  indexUiState: {\n    geoSearch: {\n      /**\n       * The rectangular area in geo coordinates.\n       * The rectangle is defined by two diagonally opposite points,\n       * hence by 4 floats separated by commas.\n       *\n       * @example '47.3165,4.9665,47.3424,5.0201'\n       */\n      boundingBox: string;\n    };\n  };\n};\n\nexport type GeoSearchConnector<THit extends GeoHit = GeoHit> = Connector<\n  GeoSearchWidgetDescription<THit>,\n  GeoSearchConnectorParams<THit>\n>;\n\n/**\n * The **GeoSearch** connector provides the logic to build a widget that will display the results on a map. It also provides a way to search for results based on their position. The connector provides functions to manage the search experience (search on map interaction or control the interaction for example).\n *\n * @requirements\n *\n * Note that the GeoSearch connector uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be passed to the rendering function.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n */\nexport default (function connectGeoSearch<\n  TWidgetParams extends UnknownWidgetParams\n>(\n  renderFn: Renderer<\n    GeoSearchRenderState,\n    TWidgetParams & GeoSearchConnectorParams\n  >,\n  unmountFn: Unmounter = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return <THit extends GeoHit = GeoHit>(\n    widgetParams: TWidgetParams & GeoSearchConnectorParams<THit>\n  ) => {\n    const {\n      enableRefineOnMapMove = true,\n      transformItems = ((items) => items) as NonNullable<\n        GeoSearchConnectorParams<THit>['transformItems']\n      >,\n    } = widgetParams || {};\n\n    const widgetState = {\n      isRefineOnMapMove: enableRefineOnMapMove,\n      // @MAJOR hasMapMoveSinceLastRefine -> hasMapMovedSinceLastRefine\n      hasMapMoveSinceLastRefine: false,\n      lastRefinePosition: '',\n      lastRefineBoundingBox: '',\n      internalToggleRefineOnMapMove: noop,\n      internalSetMapMoveSinceLastRefine: noop,\n    };\n\n    const getPositionFromState = (state: SearchParameters) =>\n      state.aroundLatLng\n        ? aroundLatLngToPosition(state.aroundLatLng)\n        : undefined;\n\n    const getCurrentRefinementFromState = (state: SearchParameters) =>\n      state.insideBoundingBox &&\n      insideBoundingBoxToBoundingBox(state.insideBoundingBox);\n\n    const refine =\n      (helper: AlgoliaSearchHelper) =>\n      ({ northEast: ne, southWest: sw }: Bounds) => {\n        const boundingBox = [ne.lat, ne.lng, sw.lat, sw.lng].join();\n\n        helper\n          .setState(\n            setBoundingBoxAsString(helper.state, boundingBox).resetPage()\n          )\n          .search();\n\n        widgetState.hasMapMoveSinceLastRefine = false;\n        widgetState.lastRefineBoundingBox = boundingBox;\n      };\n\n    const clearMapRefinement = (helper: AlgoliaSearchHelper) => () => {\n      helper.setQueryParameter('insideBoundingBox', undefined).search();\n    };\n\n    const isRefinedWithMap = (state: SearchParameters) => () =>\n      Boolean(state.insideBoundingBox);\n\n    const toggleRefineOnMapMove = () =>\n      widgetState.internalToggleRefineOnMapMove();\n    const createInternalToggleRefinementOnMapMove =\n      <TRenderOptions extends RenderOptions | InitOptions>(\n        renderOptions: TRenderOptions,\n        // false positive eslint because of generics\n        // eslint-disable-next-line no-shadow\n        render: (renderOptions: TRenderOptions) => void\n      ) =>\n      () => {\n        widgetState.isRefineOnMapMove = !widgetState.isRefineOnMapMove;\n\n        render(renderOptions);\n      };\n\n    const isRefineOnMapMove = () => widgetState.isRefineOnMapMove;\n\n    const setMapMoveSinceLastRefine = () =>\n      widgetState.internalSetMapMoveSinceLastRefine();\n    const createInternalSetMapMoveSinceLastRefine =\n      <TRenderOptions extends RenderOptions | InitOptions>(\n        renderOptions: TRenderOptions,\n        // false positive eslint because of generics\n        // eslint-disable-next-line no-shadow\n        render: (renderOptions: TRenderOptions) => void\n      ) =>\n      () => {\n        const shouldTriggerRender =\n          widgetState.hasMapMoveSinceLastRefine !== true;\n\n        widgetState.hasMapMoveSinceLastRefine = true;\n\n        if (shouldTriggerRender) {\n          render(renderOptions);\n        }\n      };\n\n    const hasMapMoveSinceLastRefine = () =>\n      widgetState.hasMapMoveSinceLastRefine;\n\n    let sendEvent: SendEventForHits;\n\n    return {\n      $$type,\n\n      init(initArgs) {\n        const { instantSearchInstance } = initArgs;\n        const isFirstRendering = true;\n\n        widgetState.internalToggleRefineOnMapMove =\n          createInternalToggleRefinementOnMapMove(initArgs, noop);\n\n        widgetState.internalSetMapMoveSinceLastRefine =\n          createInternalSetMapMoveSinceLastRefine(initArgs, noop);\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initArgs),\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      render(renderArgs) {\n        const { helper, instantSearchInstance } = renderArgs;\n        const isFirstRendering = false;\n        // We don't use the state provided by the render function because we need\n        // to be sure that the state is the latest one for the following condition\n        const state = helper.state;\n\n        const positionChangedSinceLastRefine =\n          Boolean(state.aroundLatLng) &&\n          Boolean(widgetState.lastRefinePosition) &&\n          state.aroundLatLng !== widgetState.lastRefinePosition;\n\n        const boundingBoxChangedSinceLastRefine =\n          !state.insideBoundingBox &&\n          Boolean(widgetState.lastRefineBoundingBox) &&\n          state.insideBoundingBox !== widgetState.lastRefineBoundingBox;\n\n        if (\n          positionChangedSinceLastRefine ||\n          boundingBoxChangedSinceLastRefine\n        ) {\n          widgetState.hasMapMoveSinceLastRefine = false;\n        }\n\n        widgetState.lastRefinePosition = state.aroundLatLng || '';\n\n        widgetState.lastRefineBoundingBox = getBoundingBoxAsString(state);\n\n        widgetState.internalToggleRefineOnMapMove =\n          createInternalToggleRefinementOnMapMove(\n            renderArgs,\n            this.render!.bind(this)\n          );\n\n        widgetState.internalSetMapMoveSinceLastRefine =\n          createInternalSetMapMoveSinceLastRefine(\n            renderArgs,\n            this.render!.bind(this)\n          );\n\n        const widgetRenderState = this.getWidgetRenderState(renderArgs);\n\n        sendEvent('view:internal', widgetRenderState.items);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, results, instantSearchInstance } = renderOptions;\n        const state = helper.state;\n\n        const items = results\n          ? transformItems(\n              results.hits.filter((hit) => hit._geoloc),\n              { results }\n            )\n          : [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            getIndex: () => helper.getIndex(),\n            widgetType: $$type,\n          });\n        }\n\n        return {\n          items,\n          position: getPositionFromState(state),\n          currentRefinement: getCurrentRefinementFromState(state),\n          refine: refine(helper),\n          sendEvent,\n          clearMapRefinement: clearMapRefinement(helper),\n          isRefinedWithMap: isRefinedWithMap(state),\n          toggleRefineOnMapMove,\n          isRefineOnMapMove,\n          setMapMoveSinceLastRefine,\n          hasMapMoveSinceLastRefine,\n          widgetParams,\n        };\n      },\n\n      getRenderState(\n        renderState,\n        renderOptions\n        // Type is explicitly redefined, to avoid having the TWidgetParams type in the definition\n      ): IndexRenderState & GeoSearchWidgetDescription['indexRenderState'] {\n        return {\n          ...renderState,\n          geoSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('insideBoundingBox', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const boundingBox = getBoundingBoxAsString(searchParameters);\n\n        if (\n          !boundingBox ||\n          (uiState &&\n            uiState.geoSearch &&\n            uiState.geoSearch.boundingBox === boundingBox)\n        ) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          geoSearch: {\n            boundingBox,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        if (!uiState || !uiState.geoSearch) {\n          return searchParameters.setQueryParameter(\n            'insideBoundingBox',\n            undefined\n          );\n        }\n        return setBoundingBoxAsString(\n          searchParameters,\n          uiState.geoSearch.boundingBox\n        );\n      },\n    };\n  };\n} satisfies GeoSearchConnector);\n","import {\n  safelyRunOnBrowser,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'powered-by',\n  connector: true,\n});\n\nexport type PoweredByRenderState = {\n  /** the url to redirect to on click */\n  url: string;\n};\n\nexport type PoweredByConnectorParams = {\n  /** the url to redirect to on click */\n  url?: string;\n};\n\nexport type PoweredByWidgetDescription = {\n  $$type: 'ais.poweredBy';\n  renderState: PoweredByRenderState;\n  indexRenderState: {\n    poweredBy: WidgetRenderState<\n      PoweredByRenderState,\n      PoweredByConnectorParams\n    >;\n  };\n};\n\nexport type PoweredByConnector = Connector<\n  PoweredByWidgetDescription,\n  PoweredByConnectorParams\n>;\n\n/**\n * **PoweredBy** connector provides the logic to build a custom widget that will displays\n * the logo to redirect to Algolia.\n */\nconst connectPoweredBy: PoweredByConnector = function connectPoweredBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const defaultUrl =\n    'https://www.algolia.com/?' +\n    'utm_source=instantsearch.js&' +\n    'utm_medium=website&' +\n    `utm_content=${safelyRunOnBrowser<string>(\n      ({ window }) => window.location?.hostname || '',\n      { fallback: () => '' }\n    )}&` +\n    'utm_campaign=poweredby';\n\n  return (widgetParams) => {\n    const { url = defaultUrl } = widgetParams || {};\n\n    return {\n      $$type: 'ais.poweredBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          poweredBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          url,\n          widgetParams,\n        };\n      },\n\n      dispose() {\n        unmountFn();\n      },\n    };\n  };\n};\n\nexport default connectPoweredBy;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\n// EventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    },\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\n\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n * @param {AlgoliaSearchHelper} mainHelper the main helper\n * @param {function} fn the function to create the derived state for search\n * @param {function} recommendFn the function to create the derived state for recommendations\n */\nfunction DerivedHelper(mainHelper, fn, recommendFn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.recommendFn = recommendFn;\n  this.lastResults = null;\n  this.lastRecommendResults = null;\n}\n\ninherits(DerivedHelper, EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\n\nDerivedHelper.prototype.getModifiedRecommendState = function (parameters) {\n  return this.recommendFn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\n/**\n * Replaces a leading - with \\-\n * @private\n * @param {any} value the facet value to replace\n * @returns {any} the escaped facet value or the value if it was not a string\n */\nfunction escapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return String(value).replace(/^-/, '\\\\-');\n}\n\n/**\n * Replaces a leading \\- with -\n * @private\n * @param {any} value the escaped facet value\n * @returns {any} the unescaped facet value or the value if it was not a string\n */\nfunction unescapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return value.replace(/^\\\\-/, '-');\n}\n\nmodule.exports = {\n  escapeFacetValue: escapeFacetValue,\n  unescapeFacetValue: unescapeFacetValue,\n};\n","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (var key in source) {\n    if (\n      !Object.prototype.hasOwnProperty.call(source, key) ||\n      key === '__proto__' ||\n      key === 'constructor'\n    ) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (\n      isObjectOrArrayOrFunction(targetVal) &&\n      isObjectOrArrayOrFunction(sourceVal)\n    ) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} target The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    // eslint-disable-next-line no-continue\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\n/**\n * RecommendParameters is the data structure that contains all the information\n * usable for getting recommendations from the Algolia API. It doesn't do the\n * search itself, nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It\n * will be provided when needed.\n * @constructor\n * @classdesc contains all the parameters for recommendations\n * @param {RecommendParametersOptions} opts the options to create the object\n */\nfunction RecommendParameters(opts) {\n  opts = opts || {};\n  this.params = opts.params || [];\n}\n\nRecommendParameters.prototype = {\n  constructor: RecommendParameters,\n\n  addParams: function (params) {\n    var newParams = this.params.slice();\n\n    newParams.push(params);\n\n    return new RecommendParameters({ params: newParams });\n  },\n\n  removeParams: function (id) {\n    return new RecommendParameters({\n      params: this.params.filter(function (param) {\n        return param.$$id !== id;\n      }),\n    });\n  },\n\n  addFrequentlyBoughtTogether: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'bought-together' })\n    );\n  },\n\n  addRelatedProducts: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'related-products' })\n    );\n  },\n\n  addTrendingItems: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'trending-items' })\n    );\n  },\n\n  addTrendingFacets: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'trending-facets' })\n    );\n  },\n\n  addLookingSimilar: function (params) {\n    return this.addParams(\n      Object.assign({}, params, { model: 'looking-similar' })\n    );\n  },\n\n  _buildQueries: function (indexName, cache) {\n    return this.params\n      .filter(function (params) {\n        return cache[params.$$id] === undefined;\n      })\n      .map(function (params) {\n        var query = Object.assign({}, params, {\n          indexName: indexName,\n          // @TODO: remove this if it ever gets handled by the API\n          threshold: params.threshold || 0,\n        });\n        delete query.$$id;\n\n        return query;\n      });\n  },\n};\n\nmodule.exports = RecommendParameters;\n","'use strict';\n\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {RecommendParameters} state state that led to the response\n * @param {Record<string,RecommendResultItem>} results the results from algolia client\n **/\nfunction RecommendResults(state, results) {\n  this._state = state;\n  this._rawResults = {};\n\n  // eslint-disable-next-line consistent-this\n  var self = this;\n\n  state.params.forEach(function (param) {\n    var id = param.$$id;\n    self[id] = results[id];\n    self._rawResults[id] = results[id];\n  });\n}\n\nRecommendResults.prototype = {\n  constructor: RecommendResults,\n};\n\nmodule.exports = RecommendResults;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nfunction sortObject(obj) {\n  return Object.keys(obj)\n    .sort()\n    .reduce(function (acc, curr) {\n      acc[curr] = obj[curr];\n      return acc;\n    }, {});\n}\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @param  {string} index The name of the index\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state),\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(\n          state,\n          refinedFacet\n        ),\n      });\n    });\n\n    // More to get the parent levels of the hierarchical facets when refined\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      // If we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get all parent values\n      if (\n        currentRefinement.length > 0 &&\n        currentRefinement[0].split(separator).length > 1\n      ) {\n        // We generate a map of the filters we will use for our facet values queries\n        var filtersMap = currentRefinement[0]\n          .split(separator)\n          .slice(0, -1)\n          .reduce(function createFiltersMap(map, segment, level) {\n            return map.concat({\n              attribute: hierarchicalFacet.attributes[level],\n              value:\n                level === 0\n                  ? segment\n                  : [map[map.length - 1].value, segment].join(separator),\n            });\n          }, []);\n\n        filtersMap.forEach(function (filter, level) {\n          var params = requestBuilder._getDisjunctiveFacetSearchParams(\n            state,\n            filter.attribute,\n            level === 0\n          );\n\n          // Keep facet filters unrelated to current hierarchical attributes\n          function hasHierarchicalFacetFilter(value) {\n            return hierarchicalFacet.attributes.some(function (attribute) {\n              return attribute === value.split(':')[0];\n            });\n          }\n\n          var filteredFacetFilters = (params.facetFilters || []).reduce(\n            function (acc, facetFilter) {\n              if (Array.isArray(facetFilter)) {\n                var filtered = facetFilter.filter(function (filterValue) {\n                  return !hasHierarchicalFacetFilter(filterValue);\n                });\n\n                if (filtered.length > 0) {\n                  acc.push(filtered);\n                }\n              }\n\n              if (\n                typeof facetFilter === 'string' &&\n                !hasHierarchicalFacetFilter(facetFilter)\n              ) {\n                acc.push(facetFilter);\n              }\n\n              return acc;\n            },\n            []\n          );\n\n          var parent = filtersMap[level - 1];\n          if (level > 0) {\n            params.facetFilters = filteredFacetFilters.concat(\n              parent.attribute + ':' + parent.value\n            );\n          } else if (filteredFacetFilters.length > 0) {\n            params.facetFilters = filteredFacetFilters;\n          } else {\n            delete params.facetFilters;\n          }\n\n          queries.push({ indexName: index, params: params });\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @return {object.<string, any>} The search parameters for hits\n   */\n  _getHitsSearchParams: function (state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state))\n      .sort();\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {};\n\n    if (facets.length > 0) {\n      additionalParams.facets = facets.indexOf('*') > -1 ? ['*'] : facets;\n    }\n\n    if (tagFilters.length > 0) {\n      additionalParams.tagFilters = tagFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object} The search parameters for a disjunctive facet\n   */\n  _getDisjunctiveFacetSearchParams: function (\n    state,\n    facet,\n    hierarchicalRootLevel\n  ) {\n    var facetFilters = requestBuilder._getFacetFilters(\n      state,\n      facet,\n      hierarchicalRootLevel\n    );\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 0,\n      page: 0,\n      analytics: false,\n      clickAnalytics: false,\n    };\n\n    if (tagFilters.length > 0) {\n      additionalParams.tagFilters = tagFilters;\n    }\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets =\n        requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n          state,\n          hierarchicalFacet,\n          hierarchicalRootLevel\n        );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {SearchParameters} state the state from which to get the filters\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function (state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending on which format is used, either tagFilters or tagRefinements\n   * @private\n   * @param {SearchParameters} state the state from which to get the filters\n   * @return {string} Tag filters in a single string\n   */\n  _getTagFilters: function (state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @param  {boolean} [hierarchicalRootLevel] ?? FIXME\n   * @return {array.<string>} The facet filters in the algolia format\n   */\n  _getFacetFilters: function (state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements)\n      .sort()\n      .forEach(function (facetName) {\n        var facetValues = facetsRefinements[facetName] || [];\n        facetValues\n          .slice()\n          .sort()\n          .forEach(function (facetValue) {\n            facetFilters.push(facetName + ':' + facetValue);\n          });\n      });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes)\n      .sort()\n      .forEach(function (facetName) {\n        var facetValues = facetsExcludes[facetName] || [];\n        facetValues.sort().forEach(function (facetValue) {\n          facetFilters.push(facetName + ':-' + facetValue);\n        });\n      });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements)\n      .sort()\n      .forEach(function (facetName) {\n        var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n        if (facetName === facet || !facetValues || facetValues.length === 0) {\n          return;\n        }\n        var orFilters = [];\n\n        facetValues\n          .slice()\n          .sort()\n          .forEach(function (facetValue) {\n            orFilters.push(facetName + ':' + facetValue);\n          });\n\n        facetFilters.push(orFilters);\n      });\n\n    var hierarchicalFacetsRefinements =\n      state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements)\n      .sort()\n      .forEach(function (facetName) {\n        var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n        var facetValue = facetValues[0];\n\n        if (facetValue === undefined) {\n          return;\n        }\n\n        var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n        var attributeToRefine;\n        var attributesIndex;\n\n        // we ask for parent facet values only when the `facet` is the current hierarchical facet\n        if (facet === facetName) {\n          // if we are at the root level already, no need to ask for facet values, we get them from\n          // the hits query\n          if (\n            facetValue.indexOf(separator) === -1 ||\n            (!rootPath && hierarchicalRootLevel === true) ||\n            (rootPath &&\n              rootPath.split(separator).length ===\n                facetValue.split(separator).length)\n          ) {\n            return;\n          }\n\n          if (!rootPath) {\n            attributesIndex = facetValue.split(separator).length - 2;\n            facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n          } else {\n            attributesIndex = rootPath.split(separator).length - 1;\n            facetValue = rootPath;\n          }\n\n          attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n        } else {\n          attributesIndex = facetValue.split(separator).length - 1;\n\n          attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n        }\n\n        if (attributeToRefine) {\n          facetFilters.push([attributeToRefine + ':' + facetValue]);\n        }\n      });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function (state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(\n        allAttributes,\n        hierarchicalFacet\n      ) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(\n          hierarchicalFacet.name\n        )[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      },\n      out\n    );\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function (\n    state,\n    hierarchicalFacet,\n    rootLevel\n  ) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement =\n      state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function (facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName)\n      ? state.clearRefinements(facetName)\n      : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName,\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return sortObject(\n      merge(\n        {},\n        requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n        searchForFacetSearchParameters\n      )\n    );\n  },\n};\n\nmodule.exports = requestBuilder;\n","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n};\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error(\n    'The value should be a number, a parsable string or an array of those.'\n  );\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar omit = require('../functions/omit');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute]\n      ? [valueAsString]\n      : refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(\n    refinementList,\n    attribute,\n    value\n  ) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(\n    refinementList,\n    attribute,\n    value\n  ) {\n    if (value === undefined)\n      throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(\n    refinementList,\n    attribute,\n    refinementType\n  ) {\n    if (attribute === undefined) {\n      // return the same object if the list is already empty\n      // this is mainly for tests, as it doesn't have much impact on performance\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function (\n        memo,\n        key\n      ) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n\n        memo[key] = facetList;\n\n        return memo;\n      },\n      {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n\n    // We return nothing if the attribute is not undefined, a string or a function,\n    // as it is not a valid value for a refinement\n    return undefined;\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean} true if the attribute is refined, false otherwise\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements =\n      Boolean(refinementList[attribute]) &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  },\n};\n\nmodule.exports = lib;\n","'use strict';\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar find = require('../functions/find');\nvar intersection = require('../functions/intersection');\nvar merge = require('../functions/merge');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar omit = require('../functions/omit');\nvar valToNumber = require('../functions/valToNumber');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n * @param {any} a numeric refinement value\n * @param {any} b numeric refinement value\n * @return {boolean} true if the values are equal\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function (el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters\n    ? SearchParameters._parseNumbers(newParameters)\n    : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}'\n    );\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements =\n    params.hierarchicalFacetsRefinements || {};\n\n  // eslint-disable-next-line consistent-this\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not parse numbers again in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity',\n  ];\n\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (\n      geoRect\n    ) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function (value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge(partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (\n        currentRefinement.length > 0 &&\n        currentRefinement[0].indexOf(facet.rootPath) !== 0\n      ) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(\n          facet.name,\n          facet.rootPath\n        );\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n\n  if (\n    currentState.tagFilters &&\n    params.tagRefinements &&\n    params.tagRefinements.length > 0\n  ) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n        'an error, if it is really what you want, you should first clear the tags with clearTags method.'\n    );\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n        'an error, if it is not, you should first clear the tags with clearTags method.'\n    );\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters} new instance with filters cleared\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      ),\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements ===\n        this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters} new instance with tags cleared\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0)\n      return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: [],\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters} new instance\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index,\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters} new instance\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery,\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters} new instance\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage,\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters} new instance\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets,\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters} new instance\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets,\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters} new instance\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n,\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters} new instance\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance,\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters} new instance\n   * @example\n   * // for price = 50 or 40\n   * state.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * state.addNumericRefinement('size', '=', 38);\n   * state.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function (attribute, operator, value) {\n    var val = valToNumber(value);\n\n    if (this.isNumericRefined(attribute, operator, val)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(val);\n    } else {\n      mod[attribute][operator] = [val];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod,\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function (facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function (facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function (facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function (facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters} new instance\n   */\n  removeNumericRefinement: function (attribute, operator, number) {\n    var paramValue = number;\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (\n          value,\n          key\n        ) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        }),\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (\n          value,\n          key\n        ) {\n          return key === attribute && value.op === operator;\n        }),\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      }),\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function (facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function (attribute, operator) {\n    return (\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator]\n    );\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>} new numeric refinements\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(\n        function (memo, key) {\n          var operators = numericRefinements[key];\n          var operatorList = {};\n\n          operators = operators || {};\n          Object.keys(operators).forEach(function (operator) {\n            var values = operators[operator] || [];\n            var outValues = [];\n            values.forEach(function (value) {\n              var predicateResult = attribute(\n                { val: value, op: operator },\n                key,\n                'numeric'\n              );\n              if (!predicateResult) outValues.push(value);\n            });\n            if (outValues.length !== values.length) {\n              hasChanged = true;\n            }\n            operatorList[operator] = outValues;\n          });\n\n          memo[key] = operatorList;\n\n          return memo;\n        },\n        {}\n      );\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n\n    // We return nothing if the attribute is not undefined, a string or a function,\n    // as it is not a valid value for a refinement\n    return undefined;\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters} new instance\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet]),\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters} new instance\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet]),\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' +\n          hierarchicalFacet.name +\n          '`'\n      );\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet]),\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value))\n      return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(\n        this.facetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value))\n      return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(\n        this.facetsExcludes,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the disjunctiveFacets attribute of the helper configuration'\n      );\n    }\n\n    if (\n      RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)\n    )\n      return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters} new instance\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag),\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      }),\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      }),\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      }),\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value))\n      return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(\n        this.facetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value))\n      return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(\n        this.facetsExcludes,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the disjunctiveFacets attribute of the helper configuration'\n      );\n    }\n    if (\n      !RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)\n    )\n      return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters} new instance\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      }),\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error(\n      'Cannot refine the undeclared facet ' +\n        facet +\n        '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets'\n    );\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(\n        this.facetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the facets attribute of the helper configuration'\n      );\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(\n        this.facetsExcludes,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the disjunctiveFacets attribute of the helper configuration'\n      );\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements,\n        facet,\n        value\n      ),\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(\n    facet,\n    value\n  ) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the hierarchicalFacets attribute of the helper configuration'\n      );\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facet)\n    );\n\n    var mod = {};\n\n    var upOneOrMultipleLevel =\n      this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 &&\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      (this.hierarchicalFacetsRefinements[facet][0] === value ||\n        // remove a parent refinement of the current refinement:\n        //  - refinement was 'beer > IPA > Flying dog'\n        //  - call is toggleRefine('beer > IPA')\n        //  - refinement should be `beer`\n        this.hierarchicalFacetsRefinements[facet][0].indexOf(\n          value + separator\n        ) === 0);\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure(\n        {},\n        mod,\n        this.hierarchicalFacetsRefinements\n      ),\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function (facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet +\n          ' is not defined in the hierarchicalFacets attribute of the helper configuration.'\n      );\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure(\n        {},\n        mod,\n        this.hierarchicalFacetsRefinements\n      ),\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function (facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure(\n        {},\n        mod,\n        this.hierarchicalFacetsRefinements\n      ),\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters} new instance\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean} true if facet is a disjunctive facet\n   */\n  isDisjunctiveFacet: function (facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean} true if facetName is a hierarchical facet\n   */\n  isHierarchicalFacet: function (facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean} true if facet is a conjunctive facet\n   */\n  isConjunctiveFacet: function (facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean} true if the facet is refined\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(\n      this.disjunctiveFacetsRefinements,\n      facet,\n      value\n    );\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean} true if the facet is refined\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(\n    facet,\n    value\n  ) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return Boolean(this.numericRefinements[attribute]);\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean} true if tag is refined\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]} returns the list of refinements\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    // eslint-disable-next-line consistent-this\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function (facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements)\n      .filter(function (facet) {\n        return self.disjunctiveFacetsRefinements[facet].length > 0;\n      })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets())\n      .sort();\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]} returns the list of refinements\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function (facet) {\n        return facet.name;\n      }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    ).sort();\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]} returns the list of facets that are not refined\n   */\n  getUnrefinedDisjunctiveFacets: function () {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n\n    'facets',\n    'disjunctiveFacets',\n    'facetsRefinements',\n    'hierarchicalFacets',\n    'facetsExcludes',\n\n    'disjunctiveFacetsRefinements',\n    'numericRefinements',\n    'tagRefinements',\n    'hierarchicalFacetsRefinements',\n  ],\n\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n      if (\n        managedParameters.indexOf(paramName) === -1 &&\n        paramValue !== undefined\n      ) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (\n      previous,\n      key\n    ) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n\n      if (isNextValueDefined) {\n        previous[key] = nextWithNumbers[key];\n      }\n\n      return previous;\n    },\n    previousPlainObject);\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function () {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function (hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function (hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function (hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function (hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName the hierarchicalFacet name\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function (hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function (facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n\n  toString: function () {\n    return JSON.stringify(this, null, 2);\n  },\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(\n        defaultInstructions,\n        function (defaultInstruction) {\n          return defaultInstruction[0] === sortInstruction[0];\n        }\n      );\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n * @return {Array<object>} sorted collection\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value,\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function (res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar fv = require('../functions/escapeFacetValue');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\nvar orderBy = require('../functions/orderBy');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator =\n      state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    var hierarchicalRootPath =\n      state._getHierarchicalRootPath(hierarchicalFacet);\n    var hierarchicalShowParentLevel =\n      state._getHierarchicalShowParentLevel(hierarchicalFacet);\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      escapedValue: null,\n      exhaustive: rootExhaustive,\n      data: null,\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function (facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function (tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function (tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            unescapeFacetValue(currentRefinement),\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\n// eslint-disable-next-line max-params\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    escapedValue: escapeFacetValue(facetValue),\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null,\n  };\n}\n","'use strict';\n\nvar compact = require('../functions/compact');\nvar defaultsPure = require('../functions/defaultsPure');\nvar fv = require('../functions/escapeFacetValue');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\nvar merge = require('../functions/merge');\nvar orderBy = require('../functions/orderBy');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * Turn an array of attributes in an object of attributes with their position in the array as value\n * @param {string[]} attributes the list of attributes in the record\n * @return {object} the list of attributes indexed by attribute name\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets All hierarchical facets\n * @param {string} hierarchicalAttributeName The name of the hierarchical attribute\n * @return {HierarchicalFacet} The hierarchical facet matching the attribute name\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(\n    hierarchicalFacets,\n    function facetKeyMatchesAttribute(hierarchicalFacet) {\n      var facetNames = hierarchicalFacet.attributes || [];\n      return facetNames.indexOf(hierarchicalAttributeName) > -1;\n    }\n  );\n}\n\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @param {object} options options to control results content\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\nfunction SearchResults(state, results, options) {\n  var mainSubResponse = results[0] || {};\n\n  this._rawResults = results;\n\n  // eslint-disable-next-line consistent-this\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function (key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  // Make every key of the result options reachable from the instance\n  var opts = merge(\n    {\n      persistHierarchicalRootCount: false,\n    },\n    options\n  );\n  Object.keys(opts).forEach(function (key) {\n    self[key] = opts[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   * - `value` : the value of the facet highlighted (html)\n   * - `matchLevel`: `full`, `partial` or `none`, depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @name processingTimeMS\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(\n    function initFutureTree() {\n      return [];\n    }\n  );\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount,\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount,\n        };\n        assignFacetStats(\n          self.disjunctiveFacets[position],\n          mainSubResponse.facets_stats,\n          facetKey\n        );\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount,\n        };\n        assignFacetStats(\n          self.facets[position],\n          mainSubResponse.facets_stats,\n          facetKey\n        );\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(\n          self.hierarchicalFacets[position],\n          function (f) {\n            return f.attribute === dfacet;\n          }\n        );\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest =\n          (mainSubResponse.facets && mainSubResponse.facets[dfacet]) || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount,\n        };\n        assignFacetStats(\n          self.disjunctiveFacets[position],\n          result.facets_stats,\n          dfacet\n        );\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (\n            refinementValue\n          ) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (\n              !self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(\n                unescapeFacetValue(refinementValue)\n              ) > -1\n            ) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some parent level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (\n      currentRefinement.length === 0 ||\n      currentRefinement[0].split(separator).length < 2\n    ) {\n      return;\n    }\n\n    results.slice(nextDisjunctiveResult).forEach(function (result) {\n      var facets = result && result.facets ? result.facets : {};\n\n      Object.keys(facets).forEach(function (dfacet) {\n        var facetResults = facets[dfacet];\n        var position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(\n          self.hierarchicalFacets[position],\n          function (f) {\n            return f.attribute === dfacet;\n          }\n        );\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n        // then the disjunctive values will be `beers` (count: 100),\n        // but we do not want to display\n        //   | beers (100)\n        //     > IPA (5)\n        // We want\n        //   | beers (5)\n        //     > IPA (5)\n        // @MAJOR: remove this legacy behaviour in next major version\n        var defaultData = {};\n\n        if (\n          currentRefinement.length > 0 &&\n          !self.persistHierarchicalRootCount\n        ) {\n          var root = currentRefinement[0].split(separator)[0];\n          defaultData[root] =\n            self.hierarchicalFacets[position][attributeIndex].data[root];\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n          defaultData,\n          facetResults,\n          self.hierarchicalFacets[position][attributeIndex].data\n        );\n      });\n\n      nextDisjunctiveResult++;\n    });\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainFacets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount,\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || { name: facetName };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(\n    generateHierarchicalTree(state)\n  );\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return (\n    find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate)\n  );\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function (name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, value),\n        isExcluded: results._state.isExcludeRefined(attribute, name),\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, value),\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    var hierarchicalFacetValues = find(results.hierarchicalFacets, predicate);\n    if (!hierarchicalFacetValues) return hierarchicalFacetValues;\n\n    var hierarchicalFacet =\n      results._state.getHierarchicalFacetByName(attribute);\n    var separator =\n      results._state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    var currentRefinement = unescapeFacetValue(\n      results._state.getHierarchicalRefinement(attribute)[0] || ''\n    );\n\n    if (currentRefinement.indexOf(hierarchicalFacet.rootPath) === 0) {\n      currentRefinement = currentRefinement.replace(\n        hierarchicalFacet.rootPath + separator,\n        ''\n      );\n    }\n\n    var currentRefinementSplit = currentRefinement.split(separator);\n    currentRefinementSplit.unshift(attribute);\n\n    setIsRefined(hierarchicalFacetValues, currentRefinementSplit, 0);\n\n    return hierarchicalFacetValues;\n  }\n\n  return undefined;\n}\n\n/**\n * Set the isRefined of a hierarchical facet result based on the current state.\n * @param {SearchResults.HierarchicalFacet} item Hierarchical facet to fix\n * @param {string[]} currentRefinement array of parts of the current hierarchical refinement\n * @param {number} depth recursion depth in the currentRefinement\n * @return {undefined} function mutates the item\n */\nfunction setIsRefined(item, currentRefinement, depth) {\n  item.isRefined =\n    item.name === (currentRefinement[depth] && currentRefinement[depth].trim());\n  if (item.data) {\n    item.data.forEach(function (child) {\n      setIsRefined(child, currentRefinement, depth + 1);\n    });\n  }\n}\n\n/**\n * Sort nodes of a hierarchical or disjunctive facet results\n * @private\n * @param {function} sortFn sort function to apply\n * @param {HierarchicalFacet|Array} node node upon which we want to apply the sort\n * @param {string[]} names attribute names\n * @param {number} [level=0] current index in the names array\n * @return {HierarchicalFacet|Array} sorted node\n */\nfunction recSort(sortFn, node, names, level) {\n  level = level || 0;\n\n  if (Array.isArray(node)) {\n    return sortFn(node, names[level]);\n  }\n\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode, names, level + 1);\n  });\n  var sortedChildren = sortFn(children, names[level]);\n  var newNode = defaultsPure({ data: sortedChildren }, node);\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * @typedef FacetOrdering\n * @type {Object}\n * @property {string[]} [order]\n * @property {'count' | 'alpha' | 'hidden'} [sortRemainingBy]\n */\n\n/**\n * Sorts facet arrays via their facet ordering\n * @param {Array} facetValues the values\n * @param {FacetOrdering} facetOrdering the ordering\n * @returns {Array} the sorted facet values\n */\nfunction sortViaFacetOrdering(facetValues, facetOrdering) {\n  var orderedFacets = [];\n  var remainingFacets = [];\n  var hide = facetOrdering.hide || [];\n  var order = facetOrdering.order || [];\n\n  /**\n   * an object with the keys being the values in order, the values their index:\n   * ['one', 'two'] -> { one: 0, two: 1 }\n   */\n  var reverseOrder = order.reduce(function (acc, name, i) {\n    acc[name] = i;\n    return acc;\n  }, {});\n\n  facetValues.forEach(function (item) {\n    // hierarchical facets get sorted using their raw name\n    var name = item.path || item.name;\n    var hidden = hide.indexOf(name) > -1;\n    if (!hidden && reverseOrder[name] !== undefined) {\n      orderedFacets[reverseOrder[name]] = item;\n    } else if (!hidden) {\n      remainingFacets.push(item);\n    }\n  });\n\n  orderedFacets = orderedFacets.filter(function (facet) {\n    return facet;\n  });\n\n  var sortRemainingBy = facetOrdering.sortRemainingBy;\n  var ordering;\n  if (sortRemainingBy === 'hidden') {\n    return orderedFacets;\n  } else if (sortRemainingBy === 'alpha') {\n    ordering = [\n      ['path', 'name'],\n      ['asc', 'asc'],\n    ];\n  } else {\n    ordering = [['count'], ['desc']];\n  }\n\n  return orderedFacets.concat(\n    orderBy(remainingFacets, ordering[0], ordering[1])\n  );\n}\n\n/**\n * @param {SearchResults} results the search results class\n * @param {string} attribute the attribute to retrieve ordering of\n * @returns {FacetOrdering | undefined} the facet ordering\n */\nfunction getFacetOrdering(results, attribute) {\n  return (\n    results.renderingContent &&\n    results.renderingContent.facetOrdering &&\n    results.renderingContent.facetOrdering.values &&\n    results.renderingContent.facetOrdering.values[attribute]\n  );\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {boolean} [opts.facetOrdering]\n * Force the use of facetOrdering from the result if a sortBy is present. If\n * sortBy isn't present, facetOrdering will be used automatically.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT,\n    // if no sortBy is given, attempt to sort based on facetOrdering\n    // if it is given, we still allow to sort via facet ordering first\n    facetOrdering: !(opts && opts.sortBy),\n  });\n\n  // eslint-disable-next-line consistent-this\n  var results = this;\n  var attributes;\n  if (Array.isArray(facetValues)) {\n    attributes = [attribute];\n  } else {\n    var config = results._state.getHierarchicalFacetByName(facetValues.name);\n    attributes = config.attributes;\n  }\n\n  return recSort(\n    function (data, facetName) {\n      if (options.facetOrdering) {\n        var facetOrdering = getFacetOrdering(results, facetName);\n        if (facetOrdering) {\n          return sortViaFacetOrdering(data, facetOrdering);\n        }\n      }\n\n      if (Array.isArray(options.sortBy)) {\n        var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n        return orderBy(data, order[0], order[1]);\n      } else if (typeof options.sortBy === 'function') {\n        return vanillaSortFn(options.sortBy, data);\n      }\n      throw new Error(\n        'options.sortBy is optional but if defined it must be ' +\n          'either an array of string (predicates) or a sorting function'\n      );\n    },\n    facetValues,\n    attributes\n  );\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName The attribute to look for\n * @return {object|undefined} The stats of the facet\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  // eslint-disable-next-line consistent-this\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(\n        getRefinement(state, 'facet', attributeName, name, results.facets)\n      );\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(\n        getRefinement(state, 'exclude', attributeName, name, results.facets)\n      );\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (\n    attributeName\n  ) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(\n        getRefinement(\n          state,\n          'disjunctive',\n          attributeName,\n          name,\n          results.disjunctiveFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (\n    attributeName\n  ) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(\n        getHierarchicalRefinement(\n          state,\n          attributeName,\n          name,\n          results.hierarchicalFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator,\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function (name) {\n    res.push({ type: 'tag', attributeName: '_tags', name: name });\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {SearchParameters} state the current state\n * @param {string} type the type of the refinement\n * @param {string} attributeName The attribute of the facet\n * @param {*} name The name of the facet\n * @param {Facet[]} resultsFacets facets from the results\n * @return {Refinement} the refinement\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive,\n  };\n}\n\n/**\n * @param {SearchParameters} state the current state\n * @param {string} attributeName the attribute of the hierarchical facet\n * @param {string} name the name of the facet\n * @param {Facet[]} resultsFacets facets from the results\n * @return {HierarchicalFacet} the hierarchical facet\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet &&\n      find(intermediateFacet.data, function (f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive,\n  };\n}\n\nmodule.exports = SearchResults;\n","'use strict';\n\nvar find = require('../functions/find');\nvar flat = require('../functions/flat');\n\nfunction getAverageIndices(indexTracker, nrOfObjs) {\n  var avgIndices = [];\n\n  Object.keys(indexTracker).forEach(function (key) {\n    if (indexTracker[key].count < 2) {\n      indexTracker[key].indexSum += 100;\n    }\n    avgIndices.push({\n      objectID: key,\n      avgOfIndices: indexTracker[key].indexSum / nrOfObjs,\n    });\n  });\n\n  return avgIndices.sort(function (a, b) {\n    return a.avgOfIndices > b.avgOfIndices ? 1 : -1;\n  });\n}\n\nfunction sortAndMergeRecommendations(results) {\n  var indexTracker = {};\n\n  results.forEach(function (hits) {\n    hits.forEach(function (hit, index) {\n      if (!indexTracker[hit.objectID]) {\n        indexTracker[hit.objectID] = { indexSum: index, count: 1 };\n      } else {\n        indexTracker[hit.objectID] = {\n          indexSum: indexTracker[hit.objectID].indexSum + index,\n          count: indexTracker[hit.objectID].count + 1,\n        };\n      }\n    });\n  });\n\n  var sortedAverageIndices = getAverageIndices(indexTracker, results.length);\n\n  var finalOrder = sortedAverageIndices.reduce(function (\n    orderedHits,\n    avgIndexRef\n  ) {\n    var result = find(flat(results), function (hit) {\n      return hit.objectID === avgIndexRef.objectID;\n    });\n    return result ? orderedHits.concat(result) : orderedHits;\n  },\n  []);\n\n  return finalOrder;\n}\n\nmodule.exports = sortAndMergeRecommendations;\n","// @MAJOR: remove this function and use Array.prototype.flat\nmodule.exports = function flat(arr) {\n  return arr.reduce(function (acc, val) {\n    return acc.concat(val);\n  }, []);\n};\n","'use strict';\n\nmodule.exports = '3.22.3';\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\n\nvar DerivedHelper = require('./DerivedHelper');\nvar escapeFacetValue = require('./functions/escapeFacetValue').escapeFacetValue;\nvar inherits = require('./functions/inherits');\nvar merge = require('./functions/merge');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar RecommendParameters = require('./RecommendParameters');\nvar RecommendResults = require('./RecommendResults');\nvar requestBuilder = require('./requestBuilder');\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar sortAndMergeRecommendations = require('./utils/sortAndMergeRecommendations');\nvar version = require('./version');\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n * @param {SearchResultsOptions|object} searchResultsOptions an object defining the options to use when creating the search results.\n */\nfunction AlgoliaSearchHelper(client, index, options, searchResultsOptions) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.recommendState = new RecommendParameters({\n    params: opts.recommendState,\n  });\n  this.lastResults = null;\n  this.lastRecommendResults = null;\n  this._queryId = 0;\n  this._recommendQueryId = 0;\n  this._lastQueryIdReceived = -1;\n  this._lastRecommendQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n  this._currentNbRecommendQueries = 0;\n  this._searchResultsOptions = searchResultsOptions;\n  this._recommendCache = {};\n}\n\ninherits(AlgoliaSearchHelper, EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({ onlyWithDerivedHelpers: false });\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({ onlyWithDerivedHelpers: true });\n  return this;\n};\n\n/**\n * Sends the recommendation queries set in the state. When the method is\n * called, it triggers a `fetch` event. The results will be available through\n * the `result` event. If an error occurs, an `error` will be fired instead.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires fetch\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.recommend = function () {\n  this._recommend();\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [cb] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options\n    ? this.state\n    : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  // eslint-disable-next-line consistent-this\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState,\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function (content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function (err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(\n    function (content) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n      return {\n        content: new SearchResults(tempState, content.results),\n        state: tempState,\n        _originalResponse: content,\n      };\n    },\n    function (e) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n      throw e;\n    }\n  );\n};\n\n/**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n * @deprecated answers is deprecated and will be replaced with new initiatives\n */\nAlgoliaSearchHelper.prototype.findAnswers = function (options) {\n  // eslint-disable-next-line no-console\n  console.warn('[algoliasearch-helper] answers is no longer supported');\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits,\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText',\n      ]),\n    }\n  );\n\n  var errorMessage =\n    'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (\n  facet,\n  query,\n  maxFacetHits,\n  userState\n) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  var clientHasInitIndex = typeof this.client.initIndex === 'function';\n  if (\n    !clientHasSFFV &&\n    !clientHasInitIndex &&\n    typeof this.client.search !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(\n    facet,\n    query,\n    maxFacetHits,\n    state\n  );\n\n  this._currentNbQueries++;\n  // eslint-disable-next-line consistent-this\n  var self = this;\n  var searchForFacetValuesPromise;\n  // newer algoliasearch ^3.27.1 - ~4.0.0\n  if (clientHasSFFV) {\n    searchForFacetValuesPromise = this.client.searchForFacetValues([\n      { indexName: state.index, params: algoliaQuery },\n    ]);\n    // algoliasearch < 3.27.1\n  } else if (clientHasInitIndex) {\n    searchForFacetValuesPromise = this.client\n      .initIndex(state.index)\n      .searchForFacetValues(algoliaQuery);\n    // algoliasearch ~5.0.0\n  } else {\n    // @MAJOR only use client.search\n    delete algoliaQuery.facetName;\n    searchForFacetValuesPromise = this.client\n      .search([\n        {\n          type: 'facet',\n          facet: facet,\n          indexName: state.index,\n          params: algoliaQuery,\n        },\n      ])\n      .then(function processResponse(response) {\n        return response.results[0];\n      });\n  }\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query,\n  });\n\n  return searchForFacetValuesPromise.then(\n    function addIsRefined(content) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n      content = Array.isArray(content) ? content[0] : content;\n\n      content.facetHits.forEach(function (f) {\n        f.escapedValue = escapeFacetValue(f.value);\n        f.isRefined = isDisjunctive\n          ? state.isDisjunctiveFacetRefined(facet, f.escapedValue)\n          : state.isFacetRefined(facet, f.escapedValue);\n      });\n\n      return content;\n    },\n    function (e) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n      throw e;\n    }\n  );\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (\n  facet,\n  value\n) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (\n  facet,\n  path\n) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, path),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (\n  attribute,\n  operator,\n  value\n) {\n  this._change({\n    state: this.state\n      .resetPage()\n      .addNumericRefinement(attribute, operator, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Adds a \"frequently bought together\" recommendation query.\n *\n * @param {FrequentlyBoughtTogetherQuery} params the parameters for the recommendation\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFrequentlyBoughtTogether = function (params) {\n  this._recommendChange({\n    state: this.recommendState.addFrequentlyBoughtTogether(params),\n  });\n\n  return this;\n};\n\n/**\n * Adds a \"related products\" recommendation query.\n *\n * @param {RelatedProductsQuery} params the parameters for the recommendation\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addRelatedProducts = function (params) {\n  this._recommendChange({\n    state: this.recommendState.addRelatedProducts(params),\n  });\n\n  return this;\n};\n\n/**\n * Adds a \"trending items\" recommendation query.\n *\n * @param {TrendingItemsQuery} params the parameters for the recommendation\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTrendingItems = function (params) {\n  this._recommendChange({\n    state: this.recommendState.addTrendingItems(params),\n  });\n\n  return this;\n};\n\n/**\n * Adds a \"trending facets\" recommendation query.\n *\n * @param {TrendingFacetsQuery} params the parameters for the recommendation\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTrendingFacets = function (params) {\n  this._recommendChange({\n    state: this.recommendState.addTrendingFacets(params),\n  });\n\n  return this;\n};\n\n/**\n * Adds a \"looking similar\" recommendation query.\n *\n * @param {LookingSimilarQuery} params the parameters for the recommendation\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addLookingSimilar = function (params) {\n  this._recommendChange({\n    state: this.recommendState.addLookingSimilar(params),\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (\n  attribute,\n  operator,\n  value\n) {\n  this._change({\n    state: this.state\n      .resetPage()\n      .removeNumericRefinement(attribute, operator, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (\n  facet,\n  value\n) {\n  this._change({\n    state: this.state\n      .resetPage()\n      .removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (\n  facet\n) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Removes a \"frequently bought together\" recommendation query.\n *\n * @param {number} id identifier of the recommendation widget\n * @returns {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFrequentlyBoughtTogether = function (id) {\n  this._recommendChange({\n    state: this.recommendState.removeParams(id),\n  });\n\n  return this;\n};\n\n/**\n * Removes a \"related products\" recommendation query.\n *\n * @param {number} id identifier of the recommendation widget\n * @returns {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeRelatedProducts = function (id) {\n  this._recommendChange({\n    state: this.recommendState.removeParams(id),\n  });\n\n  return this;\n};\n\n/**\n * Removes a \"trending items\" recommendation query.\n *\n * @param {number} id identifier of the recommendation widget\n * @returns {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTrendingItems = function (id) {\n  this._recommendChange({\n    state: this.recommendState.removeParams(id),\n  });\n\n  return this;\n};\n\n/**\n * Removes a \"trending facets\" recommendation query.\n *\n * @param {number} id identifier of the recommendation widget\n * @returns {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTrendingFacets = function (id) {\n  this._recommendChange({\n    state: this.recommendState.removeParams(id),\n  });\n\n  return this;\n};\n\n/**\n * Removes a \"looking similar\" recommendation query.\n *\n * @param {number} id identifier of the recommendation widget\n * @returns {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeLookingSimilar = function (id) {\n  this._recommendChange({\n    state: this.recommendState.removeParams(id),\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n * @param {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @chainable\n * @fires change\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false,\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true,\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false,\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent =\n  function (newState) {\n    this.state = new SearchParameters(newState);\n    return this;\n  };\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean} true if the tag is currently refined\n */\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n/**\n * Get the name of the currently used index.\n * @return {string} name of the index\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive',\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude',\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjunctiveRefinements =\n      this.state.getDisjunctiveRefinements(facetName);\n\n    disjunctiveRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive',\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric',\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (\n  attribute,\n  operator\n) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (\n  facetName\n) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @param {object} options options for the query\n * @param {boolean} [options.onlyWithDerivedHelpers=false] if true, only the derived helpers will be queried\n * @return {undefined} does not return anything\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this,\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults,\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = derivedState.index\n      ? requestBuilder._getQueries(derivedState.index, derivedState)\n      : [];\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper,\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults,\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n\n  if (!queries.length) {\n    return Promise.resolve({ results: [] }).then(\n      this._dispatchAlgoliaResponse.bind(this, states, queryId)\n    );\n  }\n\n  try {\n    this.client\n      .search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error,\n    });\n  }\n\n  return undefined;\n};\n\nAlgoliaSearchHelper.prototype._recommend = function () {\n  var searchState = this.state;\n  var recommendState = this.recommendState;\n  var index = this.getIndex();\n  var states = [{ state: recommendState, index: index, helper: this }];\n  var ids = recommendState.params.map(function (param) {\n    return param.$$id;\n  });\n\n  this.emit('fetch', {\n    recommend: {\n      state: recommendState,\n      results: this.lastRecommendResults,\n    },\n  });\n\n  var cache = this._recommendCache;\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedIndex = derivedHelper.getModifiedState(searchState).index;\n    if (!derivedIndex) {\n      return [];\n    }\n\n    // Contrary to what is done when deriving the search state, we don't want to\n    // provide the current recommend state to the derived helper, as it would\n    // inherit unwanted queries. We instead provide an empty recommend state.\n    var derivedState = derivedHelper.getModifiedRecommendState(\n      new RecommendParameters()\n    );\n    states.push({\n      state: derivedState,\n      index: derivedIndex,\n      helper: derivedHelper,\n    });\n\n    ids = Array.prototype.concat.apply(\n      ids,\n      derivedState.params.map(function (param) {\n        return param.$$id;\n      })\n    );\n\n    derivedHelper.emit('fetch', {\n      recommend: {\n        state: derivedState,\n        results: derivedHelper.lastRecommendResults,\n      },\n    });\n\n    return derivedState._buildQueries(derivedIndex, cache);\n  });\n\n  var queries = Array.prototype.concat.apply(\n    this.recommendState._buildQueries(index, cache),\n    derivedQueries\n  );\n\n  if (queries.length === 0) {\n    return;\n  }\n\n  if (\n    queries.length > 0 &&\n    typeof this.client.getRecommendations === 'undefined'\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Please update algoliasearch/lite to the latest version in order to use recommend widgets.'\n    );\n    return;\n  }\n\n  var queryId = this._recommendQueryId++;\n  this._currentNbRecommendQueries++;\n\n  try {\n    this.client\n      .getRecommendations(queries)\n      .then(this._dispatchRecommendResponse.bind(this, queryId, states, ids))\n      .catch(this._dispatchRecommendError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error,\n    });\n  }\n\n  return;\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>} states state used to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (\n  states,\n  queryId,\n  content\n) {\n  // eslint-disable-next-line consistent-this\n  var self = this;\n\n  // @TODO remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    if (!state.index) {\n      helper.emit('result', {\n        results: null,\n        state: state,\n      });\n      return;\n    }\n\n    helper.lastResults = new SearchResults(\n      state,\n      specificResults,\n      self._searchResultsOptions\n    );\n\n    helper.emit('result', {\n      results: helper.lastResults,\n      state: state,\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchRecommendResponse = function (\n  queryId,\n  states,\n  ids,\n  content\n) {\n  // @TODO remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastRecommendQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbRecommendQueries -=\n    queryId - this._lastRecommendQueryIdReceived;\n  this._lastRecommendQueryIdReceived = queryId;\n\n  if (this._currentNbRecommendQueries === 0) this.emit('recommendQueueEmpty');\n\n  var cache = this._recommendCache;\n\n  var idsMap = {};\n  ids\n    .filter(function (id) {\n      return cache[id] === undefined;\n    })\n    .forEach(function (id, index) {\n      if (!idsMap[id]) idsMap[id] = [];\n\n      idsMap[id].push(index);\n    });\n\n  Object.keys(idsMap).forEach(function (id) {\n    var indices = idsMap[id];\n    var firstResult = content.results[indices[0]];\n    if (indices.length === 1) {\n      cache[id] = firstResult;\n      return;\n    }\n    cache[id] = Object.assign({}, firstResult, {\n      hits: sortAndMergeRecommendations(\n        indices.map(function (idx) {\n          return content.results[idx].hits;\n        })\n      ),\n    });\n  });\n\n  var results = {};\n  ids.forEach(function (id) {\n    results[id] = cache[id];\n  });\n\n  states.forEach(function (s) {\n    var state = s.state;\n    var helper = s.helper;\n\n    if (!s.index) {\n      // eslint-disable-next-line no-warning-comments\n      // TODO: emit \"result\" event when events for Recommend are implemented\n      helper.emit('recommend:result', {\n        results: null,\n        state: state,\n      });\n      return;\n    }\n\n    helper.lastRecommendResults = new RecommendResults(state, results);\n\n    // eslint-disable-next-line no-warning-comments\n    // TODO: emit \"result\" event when events for Recommend are implemented\n    helper.emit('recommend:result', {\n      recommend: {\n        results: helper.lastRecommendResults,\n        state: state,\n      },\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (\n  queryId,\n  error\n) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error,\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype._dispatchRecommendError = function (\n  queryId,\n  error\n) {\n  if (queryId < this._lastRecommendQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbRecommendQueries -=\n    queryId - this._lastRecommendQueryIdReceived;\n  this._lastRecommendQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error,\n  });\n\n  if (this._currentNbRecommendQueries === 0) this.emit('recommendQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function (\n  query,\n  facetFilters,\n  numericFilters,\n  tagFilters\n) {\n  return (\n    query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0\n  );\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean} true if there are refinements on this attribute\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return (\n    this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0\n  );\n};\n\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset,\n    });\n  }\n};\n\nAlgoliaSearchHelper.prototype._recommendChange = function (event) {\n  var state = event.state;\n\n  if (state !== this.recommendState) {\n    this.recommendState = state;\n\n    // eslint-disable-next-line no-warning-comments\n    // TODO: emit \"change\" event when events for Recommend are implemented\n    this.emit('recommend:change', {\n      search: {\n        results: this.lastResults,\n        state: this.state,\n      },\n      recommend: {\n        results: this.lastRecommendResults,\n        state: this.recommendState,\n      },\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n */\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  if (this.client.clearCache) this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n */\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch} the currently used client\n */\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @param {function} recommendFn RecommendParameters -> RecommendParameters\n * @return {DerivedHelper} a new DerivedHelper\n */\nAlgoliaSearchHelper.prototype.derive = function (fn, recommendFn) {\n  var derivedHelper = new DerivedHelper(this, fn, recommendFn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @param  {DerivedHelper} derivedHelper the derived helper to detach\n * @return {undefined} nothing is returned\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\nvar RecommendParameters = require('./src/RecommendParameters');\nvar RecommendResults = require('./src/RecommendResults');\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @param {SearchResultsOptions|object} searchResultsOptions an object defining the options to use when creating the search results.\n * @return {AlgoliaSearchHelper} The helper instance\n */\nfunction algoliasearchHelper(client, index, opts, searchResultsOptions) {\n  return new AlgoliaSearchHelper(client, index, opts, searchResultsOptions);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing all the parameters for Recommend.\n * @member module:algoliasearchHelper.RecommendParameters\n * @type {RecommendParameters}\n */\nalgoliasearchHelper.RecommendParameters = RecommendParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\n/**\n * Constructor for the object containing the results for Recommend.\n * @member module:algoliasearchHelper.RecommendResults\n * @type {RecommendResults}\n */\nalgoliasearchHelper.RecommendResults = RecommendResults;\n\nmodule.exports = algoliasearchHelper;\n","import algoliasearchHelper from 'algoliasearch-helper';\n\nimport {\n  createDocumentationMessageGenerator,\n  isPlainObject,\n  mergeSearchParameters,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\nimport type {\n  SearchParameters,\n  PlainSearchParameters,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\n\n/**\n * Refine the given search parameters.\n */\ntype Refine = (searchParameters: PlainSearchParameters) => void;\n\nexport type ConfigureConnectorParams = {\n  /**\n   * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n   * to enable when the widget mounts.\n   */\n  searchParameters: PlainSearchParameters;\n};\n\nexport type ConfigureRenderState = {\n  /**\n   * Refine the given search parameters.\n   */\n  refine: Refine;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure',\n  connector: true,\n});\n\nfunction getInitialSearchParameters(\n  state: SearchParameters,\n  widgetParams: ConfigureConnectorParams\n): SearchParameters {\n  // We leverage the helper internals to remove the `widgetParams` from\n  // the state. The function `setQueryParameters` omits the values that\n  // are `undefined` on the next state.\n  return state.setQueryParameters(\n    Object.keys(widgetParams.searchParameters).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: undefined,\n      }),\n      {}\n    )\n  );\n}\n\nexport type ConfigureWidgetDescription = {\n  $$type: 'ais.configure';\n  renderState: ConfigureRenderState;\n  indexRenderState: {\n    configure: WidgetRenderState<\n      ConfigureRenderState,\n      ConfigureConnectorParams\n    >;\n  };\n  indexUiState: {\n    configure: PlainSearchParameters;\n  };\n};\n\nexport type ConfigureConnector = Connector<\n  ConfigureWidgetDescription,\n  ConfigureConnectorParams\n>;\n\nconst connectConfigure: ConfigureConnector = function connectConfigure(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return (widgetParams) => {\n    if (!widgetParams || !isPlainObject(widgetParams.searchParameters)) {\n      throw new Error(\n        withUsage('The `searchParameters` option expects an object.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function refine(helper: AlgoliaSearchHelper): Refine {\n      return (searchParameters: PlainSearchParameters) => {\n        // Merge new `searchParameters` with the ones set from other widgets\n        const actualState = getInitialSearchParameters(\n          helper.state,\n          widgetParams\n        );\n        const nextSearchParameters = mergeSearchParameters(\n          actualState,\n          new algoliasearchHelper.SearchParameters(searchParameters)\n        );\n\n        // Update original `widgetParams.searchParameters` to the new refined one\n        widgetParams.searchParameters = searchParameters;\n\n        // Trigger a search with the resolved search parameters\n        helper.setState(nextSearchParameters).search();\n      };\n    }\n\n    return {\n      $$type: 'ais.configure',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return getInitialSearchParameters(state, widgetParams);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n        return {\n          ...renderState,\n          configure: {\n            ...widgetRenderState,\n            widgetParams: {\n              ...widgetRenderState.widgetParams,\n              searchParameters: mergeSearchParameters(\n                new algoliasearchHelper.SearchParameters(\n                  renderState.configure?.widgetParams.searchParameters\n                ),\n                new algoliasearchHelper.SearchParameters(\n                  widgetRenderState.widgetParams.searchParameters\n                )\n              ).getQueryParams(),\n            },\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = refine(helper);\n        }\n\n        return {\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return mergeSearchParameters(\n          state,\n          new algoliasearchHelper.SearchParameters({\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          })\n        );\n      },\n\n      getWidgetUiState(uiState) {\n        return {\n          ...uiState,\n          configure: {\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          },\n        };\n      },\n    };\n  };\n};\n\nexport default connectConfigure;\n","import algoliasearchHelper from 'algoliasearch-helper';\n\nimport {\n  createDocumentationMessageGenerator,\n  getObjectType,\n  warning,\n  getPropertyByPath,\n} from '../../lib/utils';\nimport connectConfigure from '../configure/connectConfigure';\n\nimport type { AlgoliaHit, Connector } from '../../types';\nimport type { ConfigureWidgetDescription } from '../configure/connectConfigure';\nimport type {\n  SearchParameters,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\n\nexport type MatchingPatterns = {\n  [attribute: string]: {\n    /**\n     * The score of the optional filter.\n     *\n     * @see https://www.algolia.com/doc/guides/managing-results/rules/merchandising-and-promoting/in-depth/optional-filters/\n     */\n    score: number;\n  };\n};\n\nexport type TransformSearchParameters = (\n  searchParameters: SearchParameters\n) => PlainSearchParameters;\n\nexport type ConfigureRelatedItemsConnectorParams = {\n  /**\n   * The reference hit to extract the filters from.\n   */\n  hit: AlgoliaHit;\n  /**\n   * The schema to create the optional filters.\n   * Each key represents an attribute from the hit.\n   */\n  matchingPatterns: MatchingPatterns;\n  /**\n   * Function to transform the generated search parameters.\n   */\n  transformSearchParameters?: TransformSearchParameters;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure-related-items',\n  connector: true,\n});\n\nfunction createOptionalFilter({\n  attributeName,\n  attributeValue,\n  attributeScore,\n}: {\n  attributeName: string;\n  attributeValue: string;\n  attributeScore: number;\n}) {\n  return `${attributeName}:${attributeValue}<score=${attributeScore || 1}>`;\n}\n\nexport type ConfigureRelatedItemsWidgetDescription = {\n  $$type: 'ais.configureRelatedItems';\n} & Omit<ConfigureWidgetDescription, '$$type'>;\n\nexport type ConfigureRelatedItemsConnector = Connector<\n  ConfigureRelatedItemsWidgetDescription,\n  ConfigureRelatedItemsConnectorParams\n>;\n\nconst connectConfigureRelatedItems: ConfigureRelatedItemsConnector =\n  function connectConfigureRelatedItems(renderFn, unmountFn) {\n    return (widgetParams) => {\n      const {\n        hit,\n        matchingPatterns,\n        transformSearchParameters = ((x) => x) as TransformSearchParameters,\n      } = widgetParams || {};\n\n      if (!hit) {\n        throw new Error(withUsage('The `hit` option is required.'));\n      }\n\n      if (!matchingPatterns) {\n        throw new Error(\n          withUsage('The `matchingPatterns` option is required.')\n        );\n      }\n\n      const optionalFilters = Object.keys(matchingPatterns).reduce<\n        Array<string | string[]>\n      >((acc, attributeName) => {\n        const attribute = matchingPatterns[attributeName];\n        const attributeValue = getPropertyByPath(hit, attributeName);\n        const attributeScore = attribute.score;\n\n        if (Array.isArray(attributeValue)) {\n          return [\n            ...acc,\n            attributeValue.map((attributeSubValue) => {\n              return createOptionalFilter({\n                attributeName,\n                attributeValue: attributeSubValue,\n                attributeScore,\n              });\n            }),\n          ];\n        }\n\n        if (typeof attributeValue === 'string') {\n          return [\n            ...acc,\n            createOptionalFilter({\n              attributeName,\n              attributeValue,\n              attributeScore,\n            }),\n          ];\n        }\n\n        warning(\n          false,\n          `\nThe \\`matchingPatterns\\` option returned a value of type ${getObjectType(\n            attributeValue\n          )} for the \"${attributeName}\" key. This value was not sent to Algolia because \\`optionalFilters\\` only supports strings and array of strings.\n\nYou can remove the \"${attributeName}\" key from the \\`matchingPatterns\\` option.\n\nSee https://www.algolia.com/doc/api-reference/api-parameters/optionalFilters/\n            `\n        );\n\n        return acc;\n      }, []);\n\n      const searchParameters: PlainSearchParameters = {\n        ...transformSearchParameters(\n          new algoliasearchHelper.SearchParameters({\n            sumOrFiltersScores: true,\n            facetFilters: [`objectID:-${hit.objectID}`],\n            optionalFilters,\n          })\n        ),\n      };\n\n      const makeWidget = connectConfigure(renderFn, unmountFn);\n\n      return {\n        // required, since widget parameters differ between these connectors\n        // and we don't want to have the parameters of configure here\n        ...makeWidget({ searchParameters } as any),\n        $$type: 'ais.configureRelatedItems',\n      };\n    };\n  };\n\nexport default connectConfigureRelatedItems;\n","import {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type { SendEventForHits } from '../../lib/utils';\nimport type { Hit, Connector, WidgetRenderState } from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'autocomplete',\n  connector: true,\n});\n\nexport type AutocompleteConnectorParams = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n};\n\nexport type AutocompleteRenderState = {\n  /**\n   * The current value of the query.\n   */\n  currentRefinement: string;\n\n  /**\n   * The indices this widget has access to.\n   */\n  indices: Array<{\n    /**\n     * The name of the index\n     */\n    indexName: string;\n\n    /**\n     * The id of the index\n     */\n    indexId: string;\n\n    /**\n     * The resolved hits from the index matching the query.\n     */\n    hits: Hit[];\n\n    /**\n     * The full results object from the Algolia API.\n     */\n    results: SearchResults;\n\n    /**\n     * Send event to insights middleware\n     */\n    sendEvent: SendEventForHits;\n  }>;\n\n  /**\n   * Searches into the indices with the provided query.\n   */\n  refine: (query: string) => void;\n};\n\nexport type AutocompleteWidgetDescription = {\n  $$type: 'ais.autocomplete';\n  renderState: AutocompleteRenderState;\n  indexRenderState: {\n    autocomplete: WidgetRenderState<\n      AutocompleteRenderState,\n      AutocompleteConnectorParams\n    >;\n  };\n  indexUiState: { query: string };\n};\n\nexport type AutocompleteConnector = Connector<\n  AutocompleteWidgetDescription,\n  AutocompleteConnectorParams\n>;\n\nconst connectAutocomplete: AutocompleteConnector = function connectAutocomplete(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      // @MAJOR: this can default to false\n      escapeHTML = true,\n    } = widgetParams || {};\n\n    warning(\n      !(widgetParams as any).indices,\n      `\nThe option \\`indices\\` has been removed from the Autocomplete connector.\n\nThe indices to target are now inferred from the widgets tree.\n${\n  Array.isArray((widgetParams as any).indices)\n    ? `\nAn alternative would be:\n\nconst autocomplete = connectAutocomplete(renderer);\n\nsearch.addWidgets([\n  ${(widgetParams as any).indices\n    .map(({ value }: { value: string }) => `index({ indexName: '${value}' }),`)\n    .join('\\n  ')}\n  autocomplete()\n]);\n`\n    : ''\n}\n      `\n    );\n\n    type ConnectorState = {\n      refine?: (query: string) => void;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.autocomplete',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderState.indices.forEach(({ sendEvent, hits }) => {\n          sendEvent('view:internal', hits);\n        });\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          autocomplete: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        state,\n        scopedResults,\n        instantSearchInstance,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (query: string) => {\n            helper.setQuery(query).search();\n          };\n        }\n\n        const indices = scopedResults.map((scopedResult) => {\n          // We need to escape the hits because highlighting\n          // exposes HTML tags to the end-user.\n          scopedResult.results.hits = escapeHTML\n            ? escapeHits(scopedResult.results.hits)\n            : scopedResult.results.hits;\n\n          const sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            getIndex: () => scopedResult.results.index,\n            widgetType: this.$$type,\n          });\n\n          return {\n            indexId: scopedResult.indexId,\n            indexName: scopedResult.results.index,\n            hits: scopedResult.results.hits,\n            results: scopedResult.results,\n            sendEvent,\n          };\n        });\n\n        return {\n          currentRefinement: state.query || '',\n          indices,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const parameters = {\n          query: uiState.query || '',\n        };\n\n        if (!escapeHTML) {\n          return searchParameters.setQueryParameters(parameters);\n        }\n\n        return searchParameters.setQueryParameters({\n          ...parameters,\n          ...TAG_PLACEHOLDER,\n        });\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutQuery = state.setQueryParameter('query', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutQuery;\n        }\n\n        return stateWithoutQuery.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n    };\n  };\n};\n\nexport default connectAutocomplete;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  warning,\n  getRefinements,\n  isEqual,\n  noop,\n} from '../../lib/utils';\n\nimport type {\n  Refinement as InternalRefinement,\n  NumericRefinement as InternalNumericRefinement,\n} from '../../lib/utils';\nimport type { Connector, TransformItems, WidgetRenderState } from '../../types';\nimport type {\n  AlgoliaSearchHelper as Helper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\ntype TrackedFilterRefinement = string | number | boolean;\n\nexport type ParamTrackedFilters = {\n  [facetName: string]: (\n    facetValues: TrackedFilterRefinement[]\n  ) => TrackedFilterRefinement[];\n};\nexport type ParamTransformRuleContexts = (ruleContexts: string[]) => string[];\n\nexport type QueryRulesConnectorParams = {\n  trackedFilters?: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n  transformItems?: TransformItems<any>;\n};\n\nexport type QueryRulesRenderState = {\n  items: any[];\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rules',\n  connector: true,\n});\n\nfunction hasStateRefinements(state: SearchParameters): boolean {\n  return [\n    state.disjunctiveFacetsRefinements,\n    state.facetsRefinements,\n    state.hierarchicalFacetsRefinements,\n    state.numericRefinements,\n  ].some((refinement) =>\n    Boolean(refinement && Object.keys(refinement).length > 0)\n  );\n}\n\n// A context rule must consist only of alphanumeric characters, hyphens, and underscores.\n// See https://www.algolia.com/doc/guides/managing-results/refine-results/merchandising-and-promoting/in-depth/implementing-query-rules/#context\nfunction escapeRuleContext(ruleName: string): string {\n  return ruleName.replace(/[^a-z0-9-_]+/gi, '_');\n}\n\nfunction getRuleContextsFromTrackedFilters({\n  helper,\n  sharedHelperState,\n  trackedFilters,\n}: {\n  helper: Helper;\n  sharedHelperState: SearchParameters;\n  trackedFilters: ParamTrackedFilters;\n}): string[] {\n  const ruleContexts = Object.keys(trackedFilters).reduce<string[]>(\n    (facets, facetName) => {\n      const facetRefinements: TrackedFilterRefinement[] = getRefinements(\n        helper.lastResults || {},\n        sharedHelperState,\n        true\n      )\n        .filter(\n          (refinement: InternalRefinement) => refinement.attribute === facetName\n        )\n        .map(\n          (refinement: InternalRefinement) =>\n            (refinement as InternalNumericRefinement).numericValue ||\n            refinement.name\n        );\n\n      const getTrackedFacetValues = trackedFilters[facetName];\n      const trackedFacetValues = getTrackedFacetValues(facetRefinements);\n\n      return [\n        ...facets,\n        ...facetRefinements\n          .filter((facetRefinement) =>\n            trackedFacetValues.includes(facetRefinement)\n          )\n          .map((facetValue) =>\n            escapeRuleContext(`ais-${facetName}-${facetValue}`)\n          ),\n      ];\n    },\n    []\n  );\n\n  return ruleContexts;\n}\n\nfunction applyRuleContexts(\n  this: {\n    helper: Helper;\n    initialRuleContexts: string[];\n    trackedFilters: ParamTrackedFilters;\n    transformRuleContexts: ParamTransformRuleContexts;\n  },\n  event: { state: SearchParameters }\n): void {\n  const { helper, initialRuleContexts, trackedFilters, transformRuleContexts } =\n    this;\n\n  const sharedHelperState = event.state;\n  const previousRuleContexts: string[] = sharedHelperState.ruleContexts || [];\n  const newRuleContexts = getRuleContextsFromTrackedFilters({\n    helper,\n    sharedHelperState,\n    trackedFilters,\n  });\n  const nextRuleContexts = [...initialRuleContexts, ...newRuleContexts];\n\n  warning(\n    nextRuleContexts.length <= 10,\n    `\nThe maximum number of \\`ruleContexts\\` is 10. They have been sliced to that limit.\nConsider using \\`transformRuleContexts\\` to minimize the number of rules sent to Algolia.\n`\n  );\n\n  const ruleContexts = transformRuleContexts(nextRuleContexts).slice(0, 10);\n\n  if (!isEqual(previousRuleContexts, ruleContexts)) {\n    helper.overrideStateWithoutTriggeringChangeEvent({\n      ...sharedHelperState,\n      ruleContexts,\n    });\n  }\n}\n\nexport type QueryRulesWidgetDescription = {\n  $$type: 'ais.queryRules';\n  renderState: QueryRulesRenderState;\n  indexRenderState: {\n    queryRules: WidgetRenderState<\n      QueryRulesRenderState,\n      QueryRulesConnectorParams\n    >;\n  };\n};\n\nexport type QueryRulesConnector = Connector<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n>;\n\nconst connectQueryRules: QueryRulesConnector = function connectQueryRules(\n  render,\n  unmount = noop\n) {\n  checkRendering(render, withUsage());\n\n  return (widgetParams) => {\n    const {\n      trackedFilters = {} as ParamTrackedFilters,\n      transformRuleContexts = ((rules) => rules) as ParamTransformRuleContexts,\n      transformItems = ((items) => items) as NonNullable<\n        QueryRulesConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    Object.keys(trackedFilters).forEach((facetName) => {\n      if (typeof trackedFilters[facetName] !== 'function') {\n        throw new Error(\n          withUsage(\n            `'The \"${facetName}\" filter value in the \\`trackedFilters\\` option expects a function.`\n          )\n        );\n      }\n    });\n\n    const hasTrackedFilters = Object.keys(trackedFilters).length > 0;\n\n    // We store the initial rule contexts applied before creating the widget\n    // so that we do not override them with the rules created from `trackedFilters`.\n    let initialRuleContexts: string[] = [];\n    let onHelperChange: (event: { state: SearchParameters }) => void;\n\n    return {\n      $$type: 'ais.queryRules',\n\n      init(initOptions) {\n        const { helper, state, instantSearchInstance } = initOptions;\n\n        initialRuleContexts = state.ruleContexts || [];\n        onHelperChange = applyRuleContexts.bind({\n          helper,\n          initialRuleContexts,\n          trackedFilters,\n          transformRuleContexts,\n        });\n\n        if (hasTrackedFilters) {\n          // We need to apply the `ruleContexts` based on the `trackedFilters`\n          // before the helper changes state in some cases:\n          //   - Some filters are applied on the first load (e.g. using `configure`)\n          //   - The `transformRuleContexts` option sets initial `ruleContexts`.\n          if (\n            hasStateRefinements(state) ||\n            Boolean(widgetParams.transformRuleContexts)\n          ) {\n            onHelperChange({ state });\n          }\n\n          // We track every change in the helper to override its state and add\n          // any `ruleContexts` needed based on the `trackedFilters`.\n          helper.on('change', onHelperChange);\n        }\n\n        render(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        render(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getWidgetRenderState({ results }) {\n        const { userData = [] } = results || {};\n        const items = transformItems(userData, { results });\n\n        return {\n          items,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          queryRules: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ helper, state }) {\n        unmount();\n\n        if (hasTrackedFilters) {\n          helper.removeListener('change', onHelperChange);\n\n          return state.setQueryParameter('ruleContexts', initialRuleContexts);\n        }\n\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectQueryRules;\n","// `SpeechRecognition` is an API used on the browser so we can safely disable\n// the `window` check.\n/* eslint-disable no-restricted-globals */\n/* global SpeechRecognition SpeechRecognitionEvent */\nimport type {\n  CreateVoiceSearchHelper,\n  Status,\n  VoiceListeningState,\n} from './types';\n\nconst createVoiceSearchHelper: CreateVoiceSearchHelper =\n  function createVoiceSearchHelper({\n    searchAsYouSpeak,\n    language,\n    onQueryChange,\n    onStateChange,\n  }) {\n    const SpeechRecognitionAPI: new () => SpeechRecognition =\n      (window as any).webkitSpeechRecognition ||\n      (window as any).SpeechRecognition;\n    const getDefaultState = (status: Status): VoiceListeningState => ({\n      status,\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined,\n    });\n    let state: VoiceListeningState = getDefaultState('initial');\n    let recognition: SpeechRecognition | undefined;\n\n    const isBrowserSupported = (): boolean => Boolean(SpeechRecognitionAPI);\n\n    const isListening = (): boolean =>\n      state.status === 'askingPermission' ||\n      state.status === 'waiting' ||\n      state.status === 'recognizing';\n\n    const setState = (newState: Partial<VoiceListeningState> = {}): void => {\n      state = { ...state, ...newState };\n      onStateChange();\n    };\n\n    const getState = (): VoiceListeningState => state;\n\n    const resetState = (status: Status = 'initial'): void => {\n      setState(getDefaultState(status));\n    };\n\n    const onStart = (): void => {\n      setState({\n        status: 'waiting',\n      });\n    };\n\n    const onError = (event: Event): void => {\n      setState({ status: 'error', errorCode: (event as any).error });\n    };\n\n    const onResult = (event: SpeechRecognitionEvent): void => {\n      setState({\n        status: 'recognizing',\n        transcript:\n          (event.results[0] &&\n            event.results[0][0] &&\n            event.results[0][0].transcript) ||\n          '',\n        isSpeechFinal: event.results[0] && event.results[0].isFinal,\n      });\n      if (searchAsYouSpeak && state.transcript) {\n        onQueryChange(state.transcript);\n      }\n    };\n\n    const onEnd = (): void => {\n      if (!state.errorCode && state.transcript && !searchAsYouSpeak) {\n        onQueryChange(state.transcript);\n      }\n      if (state.status !== 'error') {\n        setState({ status: 'finished' });\n      }\n    };\n\n    const startListening = (): void => {\n      recognition = new SpeechRecognitionAPI();\n      if (!recognition) {\n        return;\n      }\n      resetState('askingPermission');\n      recognition.interimResults = true;\n\n      if (language) {\n        recognition.lang = language;\n      }\n\n      recognition.addEventListener('start', onStart);\n      recognition.addEventListener('error', onError);\n      recognition.addEventListener('result', onResult);\n      recognition.addEventListener('end', onEnd);\n      recognition.start();\n    };\n\n    const dispose = (): void => {\n      if (!recognition) {\n        return;\n      }\n      recognition.stop();\n      recognition.removeEventListener('start', onStart);\n      recognition.removeEventListener('error', onError);\n      recognition.removeEventListener('result', onResult);\n      recognition.removeEventListener('end', onEnd);\n      recognition = undefined;\n    };\n\n    const stopListening = (): void => {\n      dispose();\n      // Because `dispose` removes event listeners, `end` listener is not called.\n      // So we're setting the `status` as `finished` here.\n      // If we don't do it, it will be still `waiting` or `recognizing`.\n      resetState('finished');\n    };\n\n    return {\n      getState,\n      isBrowserSupported,\n      isListening,\n      startListening,\n      stopListening,\n      dispose,\n    };\n  };\n\nexport default createVoiceSearchHelper;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport builtInCreateVoiceSearchHelper from '../../lib/voiceSearchHelper';\n\nimport type {\n  CreateVoiceSearchHelper,\n  VoiceListeningState,\n} from '../../lib/voiceSearchHelper/types';\nimport type { Connector, WidgetRenderState } from '../../types';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'voice-search',\n  connector: true,\n});\n\nexport type VoiceSearchConnectorParams = {\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchRenderState = {\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n};\n\nexport type VoiceSearchWidgetDescription = {\n  $$type: 'ais.voiceSearch';\n  renderState: VoiceSearchRenderState;\n  indexRenderState: {\n    voiceSearch: WidgetRenderState<\n      VoiceSearchRenderState,\n      VoiceSearchConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type VoiceSearchConnector = Connector<\n  VoiceSearchWidgetDescription,\n  VoiceSearchConnectorParams\n>;\n\nconst connectVoiceSearch: VoiceSearchConnector = function connectVoiceSearch(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      searchAsYouSpeak = false,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper = builtInCreateVoiceSearchHelper,\n    } = widgetParams;\n\n    return {\n      $$type: 'ais.voiceSearch',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          voiceSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, instantSearchInstance } = renderOptions;\n        if (!(this as any)._refine) {\n          (this as any)._refine = (query: string): void => {\n            if (query !== helper.state.query) {\n              const queryLanguages = language\n                ? [language.split('-')[0]]\n                : undefined;\n              helper.setQueryParameter('queryLanguages', queryLanguages);\n\n              if (typeof additionalQueryParameters === 'function') {\n                helper.setState(\n                  helper.state.setQueryParameters({\n                    ignorePlurals: true,\n                    removeStopWords: true,\n                    // @ts-ignore (optionalWords only allows array in v3, while string is also valid)\n                    optionalWords: query,\n                    ...additionalQueryParameters({ query }),\n                  })\n                );\n              }\n\n              helper.setQuery(query).search();\n            }\n          };\n        }\n\n        if (!(this as any)._voiceSearchHelper) {\n          (this as any)._voiceSearchHelper = createVoiceSearchHelper({\n            searchAsYouSpeak,\n            language,\n            onQueryChange: (query) => (this as any)._refine(query),\n            onStateChange: () => {\n              renderFn(\n                {\n                  ...this.getWidgetRenderState(renderOptions),\n                  instantSearchInstance,\n                },\n                false\n              );\n            },\n          });\n        }\n\n        const {\n          isBrowserSupported,\n          isListening,\n          startListening,\n          stopListening,\n          getState,\n        } = (this as any)._voiceSearchHelper;\n\n        return {\n          isBrowserSupported: isBrowserSupported(),\n          isListening: isListening(),\n          toggleListening() {\n            if (!isBrowserSupported()) {\n              return;\n            }\n            if (isListening()) {\n              stopListening();\n            } else {\n              startListening();\n            }\n          },\n          voiceListeningState: getState(),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        (this as any)._voiceSearchHelper.dispose();\n\n        unmountFn();\n\n        let newState = state;\n        if (typeof additionalQueryParameters === 'function') {\n          const additional = additionalQueryParameters({ query: '' });\n          const toReset = additional\n            ? (\n                Object.keys(additional) as Array<keyof PlainSearchParameters>\n              ).reduce<PlainSearchParameters>((acc, current) => {\n                // @ts-ignore search parameters is typed as readonly in v4\n                acc[current] = undefined;\n                return acc;\n              }, {})\n            : {};\n          newState = state.setQueryParameters({\n            // @ts-ignore (queryLanguages is not added to algoliasearch v3)\n            queryLanguages: undefined,\n            ignorePlurals: undefined,\n            removeStopWords: undefined,\n            optionalWords: undefined,\n            ...toReset,\n          });\n        }\n\n        return newState.setQueryParameter('query', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (!query) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectVoiceSearch;\n","import { noop } from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nexport type RelevantSortConnectorParams = Record<string, unknown>;\n\ntype Refine = (relevancyStrictness: number | undefined) => void;\n\nexport type RelevantSortRenderState = {\n  /**\n   * Indicates if it has appliedRelevancyStrictness greater than zero\n   */\n  isRelevantSorted: boolean;\n\n  /**\n   * Indicates if the results come from a virtual replica\n   */\n  isVirtualReplica: boolean;\n\n  /**\n   * Indicates if search state can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the value as relevancyStrictness and trigger a new search\n   */\n  refine: Refine;\n};\n\nexport type RelevantSortWidgetDescription = {\n  $$type: 'ais.relevantSort';\n  renderState: RelevantSortRenderState;\n  indexRenderState: {\n    relevantSort: WidgetRenderState<\n      RelevantSortRenderState,\n      RelevantSortConnectorParams\n    >;\n  };\n  indexUiState: {\n    relevantSort: number;\n  };\n};\n\nexport type RelevantSortConnector = Connector<\n  RelevantSortWidgetDescription,\n  RelevantSortConnectorParams\n>;\n\nconst connectRelevantSort: RelevantSortConnector = function connectRelevantSort(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return (widgetParams) => {\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.relevantSort',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('relevancyStrictness', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          relevantSort: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (relevancyStrictness) => {\n            helper\n              .setQueryParameter('relevancyStrictness', relevancyStrictness)\n              .search();\n          };\n        }\n\n        const { appliedRelevancyStrictness } = results || {};\n\n        const isVirtualReplica = appliedRelevancyStrictness !== undefined;\n\n        return {\n          isRelevantSorted:\n            typeof appliedRelevancyStrictness !== 'undefined' &&\n            appliedRelevancyStrictness > 0,\n          isVirtualReplica,\n          canRefine: isVirtualReplica,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return state.setQueryParameter(\n          'relevancyStrictness',\n          uiState.relevantSort ?? state.relevancyStrictness\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        return {\n          ...uiState,\n          relevantSort:\n            searchParameters.relevancyStrictness || uiState.relevantSort,\n        };\n      },\n    };\n  };\n};\n\nexport default connectRelevantSort;\n","import {\n  createDocumentationMessageGenerator,\n  checkRendering,\n  noop,\n  escapeHits,\n  TAG_PLACEHOLDER,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  Hit,\n  BaseHit,\n  Renderer,\n  Unmounter,\n  UnknownWidgetParams,\n} from '../../types';\nimport type {\n  PlainSearchParameters,\n  RecommendResultItem,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'frequently-bought-together',\n  connector: true,\n});\n\nexport type FrequentlyBoughtTogetherRenderState<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * The matched recommendations from Algolia API.\n   */\n  items: Array<Hit<THit>>;\n};\n\nexport type FrequentlyBoughtTogetherConnectorParams<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * The objectIDs of the items to get the frequently bought together items for.\n   */\n  objectIDs: string[];\n\n  /**\n   * Threshold for the recommendations confidence score (between 0 and 100). Only recommendations with a greater score are returned.\n   */\n  threshold?: number;\n\n  /**\n   * The maximum number of recommendations to return.\n   */\n  limit?: number;\n\n  /**\n   * Parameters to pass to the request.\n   */\n  queryParameters?: Omit<\n    PlainSearchParameters,\n    'page' | 'hitsPerPage' | 'offset' | 'length'\n  >;\n\n  /**\n   * Whether to escape HTML tags from items string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit<THit>, { results: RecommendResultItem }>;\n};\n\nexport type FrequentlyBoughtTogetherWidgetDescription<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  $$type: 'ais.frequentlyBoughtTogether';\n  renderState: FrequentlyBoughtTogetherRenderState<THit>;\n};\n\nexport type FrequentlyBoughtTogetherConnector<\n  THit extends NonNullable<object> = BaseHit\n> = Connector<\n  FrequentlyBoughtTogetherWidgetDescription<THit>,\n  FrequentlyBoughtTogetherConnectorParams<THit>\n>;\n\nexport default (function connectFrequentlyBoughtTogether<\n  TWidgetParams extends UnknownWidgetParams\n>(\n  renderFn: Renderer<\n    FrequentlyBoughtTogetherRenderState,\n    TWidgetParams & FrequentlyBoughtTogetherConnectorParams\n  >,\n  unmountFn: Unmounter = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return <THit extends NonNullable<object> = BaseHit>(\n    widgetParams: TWidgetParams & FrequentlyBoughtTogetherConnectorParams<THit>\n  ) => {\n    const {\n      // @MAJOR: this can default to false\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        FrequentlyBoughtTogetherConnectorParams<THit>['transformItems']\n      >,\n      objectIDs,\n      limit,\n      threshold,\n      queryParameters,\n    } = widgetParams || {};\n\n    if (!objectIDs || objectIDs.length === 0) {\n      throw new Error(withUsage('The `objectIDs` option is required.'));\n    }\n\n    return {\n      dependsOn: 'recommend',\n      $$type: 'ais.frequentlyBoughtTogether',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState) {\n        return renderState;\n      },\n\n      getWidgetRenderState({ results }) {\n        if (results === null || results === undefined) {\n          return { items: [], widgetParams };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        const transformedItems = transformItems(results.hits, {\n          results: results as RecommendResultItem,\n        });\n\n        return { items: transformedItems, widgetParams };\n      },\n\n      dispose({ recommendState }) {\n        unmountFn();\n        return recommendState.removeParams(this.$$id!);\n      },\n\n      getWidgetParameters(state) {\n        return objectIDs.reduce(\n          (acc, objectID) =>\n            acc.addFrequentlyBoughtTogether({\n              objectID,\n              threshold,\n              maxRecommendations: limit,\n              queryParameters: {\n                ...queryParameters,\n                ...(escapeHTML ? TAG_PLACEHOLDER : {}),\n              },\n              $$id: this.$$id!,\n            }),\n          state.removeParams(this.$$id!)\n        );\n      },\n    };\n  };\n} satisfies FrequentlyBoughtTogetherConnector);\n","import {\n  createDocumentationMessageGenerator,\n  checkRendering,\n  noop,\n  escapeHits,\n  TAG_PLACEHOLDER,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  Hit,\n  BaseHit,\n  Renderer,\n  Unmounter,\n  UnknownWidgetParams,\n} from '../../types';\nimport type {\n  PlainSearchParameters,\n  RecommendResultItem,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'looking-similar',\n  connector: true,\n});\n\nexport type LookingSimilarRenderState<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * The matched recommendations from the Algolia API.\n   */\n  items: Array<Hit<THit>>;\n};\n\nexport type LookingSimilarConnectorParams<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * The `objectIDs` of the items to get similar looking products from.\n   */\n  objectIDs: string[];\n  /**\n   * The number of recommendations to retrieve.\n   */\n  limit?: number;\n  /**\n   * The threshold for the recommendations confidence score (between 0 and 100).\n   */\n  threshold?: number;\n  /**\n   * List of search parameters to send.\n   */\n  fallbackParameters?: Omit<\n    PlainSearchParameters,\n    'page' | 'hitsPerPage' | 'offset' | 'length'\n  >;\n  /**\n   * List of search parameters to send.\n   */\n  queryParameters?: Omit<\n    PlainSearchParameters,\n    'page' | 'hitsPerPage' | 'offset' | 'length'\n  >;\n  /**\n   * Whether to escape HTML tags from items string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit<THit>, { results: RecommendResultItem }>;\n};\n\nexport type LookingSimilarWidgetDescription<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  $$type: 'ais.lookingSimilar';\n  renderState: LookingSimilarRenderState<THit>;\n};\n\nexport type LookingSimilarConnector<\n  THit extends NonNullable<object> = BaseHit\n> = Connector<\n  LookingSimilarWidgetDescription<THit>,\n  LookingSimilarConnectorParams<THit>\n>;\n\nexport default (function connectLookingSimilar<\n  TWidgetParams extends UnknownWidgetParams\n>(\n  renderFn: Renderer<\n    LookingSimilarRenderState,\n    TWidgetParams & LookingSimilarConnectorParams\n  >,\n  unmountFn: Unmounter = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return <THit extends NonNullable<object> = BaseHit>(\n    widgetParams: TWidgetParams & LookingSimilarConnectorParams<THit>\n  ) => {\n    const {\n      // @MAJOR: this can default to false\n      escapeHTML = true,\n      objectIDs,\n      limit,\n      threshold,\n      fallbackParameters,\n      queryParameters,\n      transformItems = ((items) => items) as NonNullable<\n        LookingSimilarConnectorParams<THit>['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!objectIDs || objectIDs.length === 0) {\n      throw new Error(withUsage('The `objectIDs` option is required.'));\n    }\n\n    return {\n      dependsOn: 'recommend',\n      $$type: 'ais.lookingSimilar',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState) {\n        return renderState;\n      },\n\n      getWidgetRenderState({ results }) {\n        if (results === null || results === undefined) {\n          return { items: [], widgetParams };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        return {\n          items: transformItems(results.hits, {\n            results: results as RecommendResultItem,\n          }),\n          widgetParams,\n        };\n      },\n\n      dispose({ recommendState }) {\n        unmountFn();\n        return recommendState.removeParams(this.$$id!);\n      },\n\n      getWidgetParameters(state) {\n        return objectIDs.reduce(\n          (acc, objectID) =>\n            acc.addLookingSimilar({\n              objectID,\n              maxRecommendations: limit,\n              threshold,\n              fallbackParameters: {\n                ...fallbackParameters,\n                ...(escapeHTML ? TAG_PLACEHOLDER : {}),\n              },\n              queryParameters: {\n                ...queryParameters,\n                ...(escapeHTML ? TAG_PLACEHOLDER : {}),\n              },\n              $$id: this.$$id!,\n            }),\n          state.removeParams(this.$$id!)\n        );\n      },\n    };\n  };\n} satisfies LookingSimilarConnector);\n","const NAMESPACE = 'ais';\n\ntype SuitOptions = {\n  descendantName?: string;\n  modifierName?: string;\n};\n\ntype SuitSelector = (names?: SuitOptions) => string;\n\nexport const component =\n  (componentName: string): SuitSelector =>\n  ({ descendantName, modifierName }: SuitOptions = {}) => {\n    const descendent = descendantName ? `-${descendantName}` : '';\n    const modifier = modifierName ? `--${modifierName}` : '';\n\n    return `${NAMESPACE}-${componentName}${descendent}${modifier}`;\n  };\n","import { deprecate } from '../lib/utils';\n\nimport connectAnswers from './answers/connectAnswers';\nimport connectDynamicWidgets from './dynamic-widgets/connectDynamicWidgets';\n\n/** @deprecated answers is no longer supported */\nexport const EXPERIMENTAL_connectAnswers = deprecate(\n  connectAnswers,\n  'answers is no longer supported'\n);\n\n/** @deprecated use connectDynamicWidgets */\nexport const EXPERIMENTAL_connectDynamicWidgets = deprecate(\n  connectDynamicWidgets,\n  'use connectDynamicWidgets'\n);\n\nexport { connectDynamicWidgets };\n\nexport { default as connectClearRefinements } from './clear-refinements/connectClearRefinements';\nexport { default as connectCurrentRefinements } from './current-refinements/connectCurrentRefinements';\nexport { default as connectHierarchicalMenu } from './hierarchical-menu/connectHierarchicalMenu';\nexport { default as connectHits } from './hits/connectHits';\nexport { default as connectHitsWithInsights } from './hits/connectHitsWithInsights';\nexport { default as connectHitsPerPage } from './hits-per-page/connectHitsPerPage';\nexport { default as connectInfiniteHits } from './infinite-hits/connectInfiniteHits';\nexport { default as connectInfiniteHitsWithInsights } from './infinite-hits/connectInfiniteHitsWithInsights';\nexport { default as connectMenu } from './menu/connectMenu';\nexport { default as connectNumericMenu } from './numeric-menu/connectNumericMenu';\nexport { default as connectPagination } from './pagination/connectPagination';\nexport { default as connectRange } from './range/connectRange';\nexport { default as connectRefinementList } from './refinement-list/connectRefinementList';\nexport { default as connectRelatedProducts } from './related-products/connectRelatedProducts';\nexport { default as connectSearchBox } from './search-box/connectSearchBox';\nexport { default as connectSortBy } from './sort-by/connectSortBy';\nexport { default as connectRatingMenu } from './rating-menu/connectRatingMenu';\nexport { default as connectStats } from './stats/connectStats';\nexport { default as connectToggleRefinement } from './toggle-refinement/connectToggleRefinement';\nexport { default as connectTrendingItems } from './trending-items/connectTrendingItems';\nexport { default as connectBreadcrumb } from './breadcrumb/connectBreadcrumb';\nexport { default as connectGeoSearch } from './geo-search/connectGeoSearch';\nexport { default as connectPoweredBy } from './powered-by/connectPoweredBy';\nexport { default as connectConfigure } from './configure/connectConfigure';\nexport { default as EXPERIMENTAL_connectConfigureRelatedItems } from './configure-related-items/connectConfigureRelatedItems';\nexport { default as connectAutocomplete } from './autocomplete/connectAutocomplete';\nexport { default as connectQueryRules } from './query-rules/connectQueryRules';\nexport { default as connectVoiceSearch } from './voice-search/connectVoiceSearch';\nexport { default as connectRelevantSort } from './relevant-sort/connectRelevantSort';\nexport { default as connectFrequentlyBoughtTogether } from './frequently-bought-together/connectFrequentlyBoughtTogether';\nexport { default as connectLookingSimilar } from './looking-similar/connectLookingSimilar';\n","import { component } from '../lib/suit';\nimport { getPropertyByPath, TAG_REPLACEMENT, warning } from '../lib/utils';\n\nimport type { Hit } from '../types';\n\nexport type HighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('Highlight');\n\n/**\n * @deprecated use html tagged templates and the Highlight component instead\n */\nexport default function highlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: HighlightOptions): string {\n  warning(\n    false,\n    `\\`instantsearch.highlight\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`Highlight\\` component.\n\nFor more information, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/?client=html+tagged+templates#upgrade-templates`\n  );\n\n  const highlightAttributeResult = getPropertyByPath(\n    hit._highlightResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if highlight is not found\n  warning(\n    highlightAttributeResult,\n    `Could not enable highlight for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = highlightAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { component } from '../lib/suit';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n  warning,\n} from '../lib/utils';\n\nimport type { Hit } from '../types';\n\nexport type ReverseHighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseHighlight');\n\n/**\n * @deprecated use html tagged templates and the ReverseHighlight component instead\n */\nexport default function reverseHighlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseHighlightOptions): string {\n  warning(\n    false,\n    `\\`instantsearch.reverseHighlight\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`ReverseHighlight\\` component.\n\nFor more information, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/?client=html+tagged+templates#upgrade-templates`\n  );\n\n  const highlightAttributeResult = getPropertyByPath(\n    hit._highlightResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if highlight is not found\n  warning(\n    highlightAttributeResult,\n    `Could not enable reverse highlight for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = highlightAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { component } from '../lib/suit';\nimport { TAG_REPLACEMENT, getPropertyByPath, warning } from '../lib/utils';\n\nimport type { Hit } from '../types';\n\nexport type SnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: {\n    highlighted?: string;\n  };\n};\n\nconst suit = component('Snippet');\n\n/**\n * @deprecated use html tagged templates and the Snippet component instead\n */\nexport default function snippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: SnippetOptions): string {\n  warning(\n    false,\n    `\\`instantsearch.snippet\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`Snippet\\` component.\n\nFor more information, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/?client=html+tagged+templates#upgrade-templates`\n  );\n\n  const snippetAttributeResult = getPropertyByPath(\n    hit._snippetResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if snippet is not found\n  warning(\n    snippetAttributeResult,\n    `Could not enable snippet for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = snippetAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { component } from '../lib/suit';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n  warning,\n} from '../lib/utils';\n\nimport type { Hit } from '../types';\n\nexport type ReverseSnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseSnippet');\n\n/**\n * @deprecated use html tagged templates and the ReverseSnippet component instead\n */\nexport default function reverseSnippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseSnippetOptions): string {\n  warning(\n    false,\n    `\\`instantsearch.reverseSnippet\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`ReverseSnippet\\` component.\n\nFor more information, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/?client=html+tagged+templates#upgrade-templates`\n  );\n\n  const snippetAttributeResult = getPropertyByPath(\n    hit._snippetResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if snippet is not found\n  warning(\n    snippetAttributeResult,\n    `Could not enable reverse snippet for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = snippetAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { warning } from '../lib/utils';\n\nexport const ANONYMOUS_TOKEN_COOKIE_KEY = '_ALGOLIA';\n\nfunction getCookie(name: string): string | undefined {\n  if (typeof document !== 'object' || typeof document.cookie !== 'string') {\n    return undefined;\n  }\n\n  const prefix = `${name}=`;\n  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    let cookie = cookies[i];\n    while (cookie.charAt(0) === ' ') {\n      cookie = cookie.substring(1);\n    }\n    if (cookie.indexOf(prefix) === 0) {\n      return cookie.substring(prefix.length, cookie.length);\n    }\n  }\n  return undefined;\n}\n\nexport function getInsightsAnonymousUserTokenInternal(): string | undefined {\n  return getCookie(ANONYMOUS_TOKEN_COOKIE_KEY);\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function getInsightsAnonymousUserToken(): string | undefined {\n  warning(\n    false,\n    `\\`getInsightsAnonymousUserToken\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return getInsightsAnonymousUserTokenInternal();\n}\n","import { isEqual, safelyRunOnBrowser } from '../utils';\n\nimport type { InfiniteHitsCache } from '../../connectors/infinite-hits/connectInfiniteHits';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nconst KEY = 'ais.infiniteHits';\n\nexport default function createInfiniteHitsSessionStorageCache(): InfiniteHitsCache {\n  return {\n    read({ state }) {\n      const sessionStorage = safelyRunOnBrowser<Storage | undefined>(\n        ({ window }) => window.sessionStorage\n      );\n\n      if (!sessionStorage) {\n        return null;\n      }\n\n      try {\n        const cache = JSON.parse(\n          // @ts-expect-error JSON.parse() requires a string, but it actually accepts null, too.\n          sessionStorage.getItem(KEY)\n        );\n\n        return cache && isEqual(cache.state, getStateWithoutPage(state))\n          ? cache.hits\n          : null;\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          try {\n            sessionStorage.removeItem(KEY);\n          } catch (err) {\n            // do nothing\n          }\n        }\n        return null;\n      }\n    },\n    write({ state, hits }) {\n      const sessionStorage = safelyRunOnBrowser<Storage | undefined>(\n        ({ window }) => window.sessionStorage\n      );\n\n      if (!sessionStorage) {\n        return;\n      }\n\n      try {\n        sessionStorage.setItem(\n          KEY,\n          JSON.stringify({\n            state: getStateWithoutPage(state),\n            hits,\n          })\n        );\n      } catch (error) {\n        // do nothing\n      }\n    },\n  };\n}\n","import { getInsightsAnonymousUserTokenInternal } from '../helpers';\nimport {\n  warning,\n  noop,\n  getAppIdAndApiKey,\n  find,\n  safelyRunOnBrowser,\n} from '../lib/utils';\n\nimport type {\n  InsightsClient,\n  InsightsEvent as _InsightsEvent,\n  InsightsMethod,\n  InsightsMethodMap,\n  InternalMiddleware,\n} from '../types';\nimport type {\n  AlgoliaSearchHelper,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\n\ntype ProvidedInsightsClient = InsightsClient | null | undefined;\n\nexport type InsightsEvent<TMethod extends InsightsMethod = InsightsMethod> =\n  _InsightsEvent<TMethod>;\n\nexport type InsightsProps<\n  TInsightsClient extends ProvidedInsightsClient = ProvidedInsightsClient\n> = {\n  insightsClient?: TInsightsClient;\n  insightsInitParams?: Partial<InsightsMethodMap['init'][0]>;\n  onEvent?: (event: InsightsEvent, insightsClient: TInsightsClient) => void;\n  /**\n   * @internal indicator for the default insights middleware\n   */\n  $$internal?: boolean;\n  /**\n   * @internal indicator for sending the `clickAnalytics` search parameter\n   */\n  $$automatic?: boolean;\n};\n\nconst ALGOLIA_INSIGHTS_VERSION = '2.15.0';\nconst ALGOLIA_INSIGHTS_SRC = `https://cdn.jsdelivr.net/npm/search-insights@${ALGOLIA_INSIGHTS_VERSION}/dist/search-insights.min.js`;\n\nexport type InsightsClientWithGlobals = InsightsClient & {\n  shouldAddScript?: boolean;\n  version?: string;\n};\n\nexport type CreateInsightsMiddleware = typeof createInsightsMiddleware;\n\nexport function createInsightsMiddleware<\n  TInsightsClient extends ProvidedInsightsClient\n>(props: InsightsProps<TInsightsClient> = {}): InternalMiddleware {\n  const {\n    insightsClient: _insightsClient,\n    insightsInitParams,\n    onEvent,\n    $$internal = false,\n    $$automatic = false,\n  } = props;\n\n  let potentialInsightsClient: ProvidedInsightsClient = _insightsClient;\n\n  if (!_insightsClient && _insightsClient !== null) {\n    safelyRunOnBrowser(({ window }: { window: any }) => {\n      const pointer = window.AlgoliaAnalyticsObject || 'aa';\n\n      if (typeof pointer === 'string') {\n        potentialInsightsClient = window[pointer];\n      }\n\n      if (!potentialInsightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n\n        if (!window[pointer]) {\n          window[pointer] = (...args: any[]) => {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n            window[pointer].queue.push(args);\n          };\n          window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n          window[pointer].shouldAddScript = true;\n        }\n\n        potentialInsightsClient = window[pointer];\n      }\n    });\n  }\n  // if still no insightsClient was found, we use a noop\n  const insightsClient: InsightsClientWithGlobals =\n    potentialInsightsClient || noop;\n\n  return ({ instantSearchInstance }) => {\n    // remove existing default insights middleware\n    // user-provided insights middleware takes precedence\n    const existingInsightsMiddlewares = instantSearchInstance.middleware\n      .filter(\n        (m) => m.instance.$$type === 'ais.insights' && m.instance.$$internal\n      )\n      .map((m) => m.creator);\n    instantSearchInstance.unuse(...existingInsightsMiddlewares);\n\n    const [appId, apiKey] = getAppIdAndApiKey(instantSearchInstance.client);\n\n    // search-insights.js also throws an error so dev-only clarification is sufficient\n    warning(\n      Boolean(appId && apiKey),\n      'could not extract Algolia credentials from searchClient in insights middleware.'\n    );\n\n    let queuedUserToken: string | undefined = undefined;\n    let queuedAuthenticatedUserToken: string | undefined = undefined;\n    let userTokenBeforeInit: string | undefined = undefined;\n    let authenticatedUserTokenBeforeInit: string | undefined = undefined;\n\n    const { queue } = insightsClient;\n\n    if (Array.isArray(queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      [queuedUserToken, queuedAuthenticatedUserToken] = [\n        'setUserToken',\n        'setAuthenticatedUserToken',\n      ].map((key) => {\n        const [, value] =\n          find(queue.slice().reverse(), ([method]) => method === key) || [];\n\n        return value;\n      });\n    }\n\n    // If user called `aa('setUserToken')` or `aa('setAuthenticatedUserToken')`\n    // before creating the Insights middleware, we temporarily store the token\n    // and set it later on.\n    //\n    // Otherwise, the `init` call might override them with anonymous user token.\n    insightsClient('getUserToken', null, (_error, userToken) => {\n      userTokenBeforeInit = normalizeUserToken(userToken);\n    });\n\n    insightsClient('getAuthenticatedUserToken', null, (_error, userToken) => {\n      authenticatedUserTokenBeforeInit = normalizeUserToken(userToken);\n    });\n\n    // Only `init` if the `insightsInitParams` option is passed or\n    // if the `insightsClient` version doesn't supports optional `init` calling.\n    if (insightsInitParams || !isModernInsightsClient(insightsClient)) {\n      insightsClient('init', {\n        appId,\n        apiKey,\n        partial: true,\n        ...insightsInitParams,\n      });\n    }\n\n    let initialParameters: PlainSearchParameters;\n    let helper: AlgoliaSearchHelper;\n\n    return {\n      $$type: 'ais.insights',\n      $$internal,\n      $$automatic,\n      onStateChange() {},\n      subscribe() {\n        if (!insightsClient.shouldAddScript) return;\n\n        const errorMessage =\n          '[insights middleware]: could not load search-insights.js. Please load it manually following https://alg.li/insights-init';\n\n        try {\n          const script = document.createElement('script');\n          script.async = true;\n          script.src = ALGOLIA_INSIGHTS_SRC;\n          script.onerror = () => {\n            instantSearchInstance.emit('error', new Error(errorMessage));\n          };\n          document.body.appendChild(script);\n          insightsClient.shouldAddScript = false;\n        } catch (cause) {\n          insightsClient.shouldAddScript = false;\n          instantSearchInstance.emit('error', new Error(errorMessage));\n        }\n      },\n      started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n\n        helper = instantSearchInstance.mainHelper!;\n\n        initialParameters = {\n          userToken: (helper.state as PlainSearchParameters).userToken,\n          clickAnalytics: helper.state.clickAnalytics,\n        };\n\n        // We don't want to force clickAnalytics when the insights is enabled from the search response.\n        // This means we don't enable insights for indices that don't opt in\n        if (!$$automatic) {\n          helper.overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            clickAnalytics: true,\n          });\n        }\n\n        if (!$$internal) {\n          instantSearchInstance.scheduleSearch();\n        }\n\n        const setUserTokenToSearch = (\n          userToken?: string | number,\n          immediate = false\n        ) => {\n          const normalizedUserToken = normalizeUserToken(userToken);\n\n          if (!normalizedUserToken) {\n            return;\n          }\n\n          const existingToken = (helper.state as PlainSearchParameters)\n            .userToken;\n\n          function applyToken() {\n            helper.overrideStateWithoutTriggeringChangeEvent({\n              ...helper.state,\n              userToken: normalizedUserToken,\n            });\n\n            if (existingToken && existingToken !== userToken) {\n              instantSearchInstance.scheduleSearch();\n            }\n          }\n\n          // Delay the token application to the next render cycle\n          if (!immediate) {\n            setTimeout(applyToken, 0);\n          } else {\n            applyToken();\n          }\n        };\n\n        const anonymousUserToken = getInsightsAnonymousUserTokenInternal();\n        if (anonymousUserToken) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken.\n          setUserTokenToSearch(anonymousUserToken, true);\n        }\n\n        function setUserToken(\n          token: string | number,\n          userToken?: string | number,\n          authenticatedUserToken?: string | number\n        ) {\n          setUserTokenToSearch(token, true);\n\n          if (userToken) {\n            insightsClient('setUserToken', userToken);\n          }\n          if (authenticatedUserToken) {\n            insightsClient('setAuthenticatedUserToken', authenticatedUserToken);\n          }\n        }\n\n        // We consider the `userToken` or `authenticatedUserToken` before an\n        // `init` call of higher importance than one from the queue.\n        const tokenBeforeInit =\n          authenticatedUserTokenBeforeInit || userTokenBeforeInit;\n        const queuedToken = queuedAuthenticatedUserToken || queuedUserToken;\n\n        if (tokenBeforeInit) {\n          setUserToken(\n            tokenBeforeInit,\n            userTokenBeforeInit,\n            authenticatedUserTokenBeforeInit\n          );\n        } else if (queuedToken) {\n          setUserToken(\n            queuedToken,\n            queuedUserToken,\n            queuedAuthenticatedUserToken\n          );\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', setUserTokenToSearch, {\n          immediate: true,\n        });\n\n        // This updates userToken which is set explicitly by `aa('setAuthenticatedtUserToken', authenticatedUserToken)`\n        insightsClient(\n          'onAuthenticatedUserTokenChange',\n          (authenticatedUserToken) => {\n            // If we're unsetting the `authenticatedUserToken`, we revert to the `userToken`\n            if (!authenticatedUserToken) {\n              insightsClient('getUserToken', null, (_, userToken) => {\n                setUserTokenToSearch(userToken);\n              });\n            }\n\n            setUserTokenToSearch(authenticatedUserToken);\n          },\n          {\n            immediate: true,\n          }\n        );\n\n        type InsightsClientWithLocalCredentials = <\n          TMethod extends InsightsMethod\n        >(\n          method: TMethod,\n          payload: InsightsMethodMap[TMethod][0]\n        ) => void;\n\n        let insightsClientWithLocalCredentials =\n          insightsClient as InsightsClientWithLocalCredentials;\n\n        if (isModernInsightsClient(insightsClient)) {\n          insightsClientWithLocalCredentials = (method, payload) => {\n            const extraParams = {\n              headers: {\n                'X-Algolia-Application-Id': appId,\n                'X-Algolia-API-Key': apiKey,\n              },\n            };\n\n            // @ts-ignore we are calling this only when we know that the client actually is correct\n            return insightsClient(method, payload, extraParams);\n          };\n        }\n\n        instantSearchInstance.sendEventToInsights = (event: InsightsEvent) => {\n          if (onEvent) {\n            onEvent(\n              event,\n              insightsClientWithLocalCredentials as TInsightsClient\n            );\n          } else if (event.insightsMethod) {\n            // Source is used to differentiate events sent by instantsearch from those sent manually.\n            (event.payload as any).algoliaSource = ['instantsearch'];\n            if ($$automatic) {\n              (event.payload as any).algoliaSource.push(\n                'instantsearch-automatic'\n              );\n            }\n            if (event.eventModifier === 'internal') {\n              (event.payload as any).algoliaSource.push(\n                'instantsearch-internal'\n              );\n            }\n\n            insightsClientWithLocalCredentials(\n              event.insightsMethod,\n              event.payload\n            );\n\n            warning(\n              Boolean((helper.state as PlainSearchParameters).userToken),\n              `\nCannot send event to Algolia Insights because \\`userToken\\` is not set.\n\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\n`\n            );\n          } else {\n            warning(\n              false,\n              'Cannot send event to Algolia Insights because `insightsMethod` option is missing.'\n            );\n          }\n        };\n      },\n      unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        insightsClient('onAuthenticatedUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n        if (helper && initialParameters) {\n          helper.overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            ...initialParameters,\n          });\n\n          instantSearchInstance.scheduleSearch();\n        }\n      },\n    };\n  };\n}\n\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nfunction isModernInsightsClient(client: InsightsClientWithGlobals): boolean {\n  const [major, minor] = (client.version || '').split('.').map(Number);\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  const v3 = major >= 3;\n  const v2_6 = major === 2 && minor >= 6;\n  const v1_10 = major === 1 && minor >= 10;\n  /* eslint-enable @typescript-eslint/naming-convention */\n\n  return v3 || v2_6 || v1_10;\n}\n\n/**\n * While `search-insights` supports both string and number user tokens,\n * the Search API only accepts strings. This function normalizes the user token.\n */\nfunction normalizeUserToken(userToken?: string | number): string | undefined {\n  if (!userToken) {\n    return undefined;\n  }\n\n  return typeof userToken === 'number' ? userToken.toString() : userToken;\n}\n","// typed as any, since it accepts the _real_ js clients, not the interface we otherwise expect\nexport function getAppIdAndApiKey(searchClient: any): [string, string] {\n  if (searchClient.transporter) {\n    // searchClient v4 or v5\n    const transporter = searchClient.transporter;\n    const headers = transporter.headers || transporter.baseHeaders;\n    const queryParameters =\n      transporter.queryParameters || transporter.baseQueryParameters;\n    const APP_ID = 'x-algolia-application-id';\n    const API_KEY = 'x-algolia-api-key';\n    const appId = headers[APP_ID] || queryParameters[APP_ID];\n    const apiKey = headers[API_KEY] || queryParameters[API_KEY];\n    return [appId, apiKey];\n  } else {\n    // searchClient v3\n    return [searchClient.applicationID, searchClient.apiKey];\n  }\n}\n","import { createInitArgs, safelyRunOnBrowser } from '../lib/utils';\n\nimport type {\n  InstantSearch,\n  InternalMiddleware,\n  Widget,\n  IndexWidget,\n} from '../types';\n\ntype WidgetMetadata =\n  | {\n      type: string | undefined;\n      widgetType: string | undefined;\n      params: string[];\n    }\n  | {\n      type: string;\n      middleware: true;\n      internal: boolean;\n    };\n\ntype Payload = {\n  widgets: WidgetMetadata[];\n  ua?: string;\n};\n\nfunction extractWidgetPayload(\n  widgets: Array<Widget | IndexWidget>,\n  instantSearchInstance: InstantSearch,\n  payload: Payload\n) {\n  const initOptions = createInitArgs(\n    instantSearchInstance,\n    instantSearchInstance.mainIndex,\n    instantSearchInstance._initialUiState\n  );\n\n  widgets.forEach((widget) => {\n    let widgetParams: Record<string, unknown> = {};\n\n    if (widget.getWidgetRenderState) {\n      const renderState = widget.getWidgetRenderState(initOptions);\n\n      if (renderState && renderState.widgetParams) {\n        // casting, as we just earlier checked widgetParams exists, and thus an object\n        widgetParams = renderState.widgetParams as Record<string, unknown>;\n      }\n    }\n\n    // since we destructure in all widgets, the parameters with defaults are set to \"undefined\"\n    const params = Object.keys(widgetParams).filter(\n      (key) => widgetParams[key] !== undefined\n    );\n\n    payload.widgets.push({\n      type: widget.$$type,\n      widgetType: widget.$$widgetType,\n      params,\n    });\n\n    if (widget.$$type === 'ais.index') {\n      extractWidgetPayload(\n        (widget as IndexWidget).getWidgets(),\n        instantSearchInstance,\n        payload\n      );\n    }\n  });\n}\n\nexport function isMetadataEnabled() {\n  return safelyRunOnBrowser(\n    ({ window }) =>\n      window.navigator?.userAgent?.indexOf('Algolia Crawler') > -1,\n    { fallback: () => false }\n  );\n}\n\n/**\n * Exposes the metadata of mounted widgets in a custom\n * `<meta name=\"instantsearch:widgets\" />` tag. The metadata per widget is:\n * - applied parameters\n * - widget name\n * - connector name\n */\nexport function createMetadataMiddleware({\n  $$internal = false,\n}: {\n  $$internal?: boolean;\n} = {}): InternalMiddleware {\n  return ({ instantSearchInstance }) => {\n    const payload: Payload = {\n      widgets: [],\n    };\n    const payloadContainer = document.createElement('meta');\n    const refNode = document.querySelector('head')!;\n    payloadContainer.name = 'instantsearch:widgets';\n\n    return {\n      $$type: 'ais.metadata',\n      $$internal,\n      onStateChange() {},\n      subscribe() {\n        // using setTimeout here to delay extraction until widgets have been added in a tick (e.g. Vue)\n        setTimeout(() => {\n          const client = instantSearchInstance.client as any;\n          payload.ua =\n            client.transporter && client.transporter.userAgent\n              ? client.transporter.userAgent.value\n              : client._ua;\n\n          extractWidgetPayload(\n            instantSearchInstance.mainIndex.getWidgets(),\n            instantSearchInstance,\n            payload\n          );\n\n          instantSearchInstance.middleware.forEach((middleware) =>\n            payload.widgets.push({\n              middleware: true,\n              type: middleware.instance.$$type,\n              internal: middleware.instance.$$internal,\n            })\n          );\n\n          payloadContainer.content = JSON.stringify(payload);\n          refNode.appendChild(payloadContainer);\n        }, 0);\n      },\n\n      started() {},\n\n      unsubscribe() {\n        payloadContainer.remove();\n      },\n    };\n  };\n}\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","import qs from 'qs';\n\nimport { createDocumentationLink, safelyRunOnBrowser, warning } from '../utils';\n\nimport type { Router, UiState } from '../../types';\n\ntype CreateURL<TRouteState> = (args: {\n  qsModule: typeof qs;\n  routeState: TRouteState;\n  location: Location;\n}) => string;\n\ntype ParseURL<TRouteState> = (args: {\n  qsModule: typeof qs;\n  location: Location;\n}) => TRouteState;\n\nexport type BrowserHistoryArgs<TRouteState> = {\n  windowTitle?: (routeState: TRouteState) => string;\n  writeDelay: number;\n  createURL: CreateURL<TRouteState>;\n  parseURL: ParseURL<TRouteState>;\n  // @MAJOR: The `Location` type is hard to simulate in non-browser environments\n  // so we should accept a subset of it that is easier to work with in any\n  // environments.\n  getLocation: () => Location;\n  start?: (onUpdate: () => void) => void;\n  dispose?: () => void;\n  push?: (url: string) => void;\n  /**\n   * Whether the URL should be cleaned up when the router is disposed.\n   * This can be useful when closing a modal containing InstantSearch, to\n   * remove active refinements from the URL.\n   * @default true\n   */\n  // @MAJOR: Switch the default to `false` and remove the console info in the next major version.\n  cleanUrlOnDispose?: boolean;\n};\n\nconst setWindowTitle = (title?: string): void => {\n  if (title) {\n    // This function is only executed on browsers so we can disable this check.\n    // eslint-disable-next-line no-restricted-globals\n    window.document.title = title;\n  }\n};\n\nclass BrowserHistory<TRouteState> implements Router<TRouteState> {\n  public $$type = 'ais.browser';\n  /**\n   * Transforms a UI state into a title for the page.\n   */\n  private readonly windowTitle?: BrowserHistoryArgs<TRouteState>['windowTitle'];\n  /**\n   * Time in milliseconds before performing a write in the history.\n   * It prevents from adding too many entries in the history and\n   * makes the back button more usable.\n   *\n   * @default 400\n   */\n  private readonly writeDelay: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['writeDelay'];\n  /**\n   * Creates a full URL based on the route state.\n   * The storage adaptor maps all syncable keys to the query string of the URL.\n   */\n  private readonly _createURL: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['createURL'];\n  /**\n   * Parses the URL into a route state.\n   * It should be symmetrical to `createURL`.\n   */\n  private readonly parseURL: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['parseURL'];\n  /**\n   * Returns the location to store in the history.\n   * @default () => window.location\n   */\n  private readonly getLocation: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['getLocation'];\n\n  private writeTimer?: ReturnType<typeof setTimeout>;\n  private _onPopState?: (event: PopStateEvent) => void;\n\n  /**\n   * Indicates if last action was back/forward in the browser.\n   */\n  private inPopState: boolean = false;\n\n  /**\n   * Indicates whether the history router is disposed or not.\n   */\n  protected isDisposed: boolean = false;\n\n  /**\n   * Indicates the window.history.length before the last call to\n   * window.history.pushState (called in `write`).\n   * It allows to determine if a `pushState` has been triggered elsewhere,\n   * and thus to prevent the `write` method from calling `pushState`.\n   */\n  private latestAcknowledgedHistory: number = 0;\n\n  private _start?: (onUpdate: () => void) => void;\n  private _dispose?: () => void;\n  private _push?: (url: string) => void;\n  private _cleanUrlOnDispose: boolean;\n\n  /**\n   * Initializes a new storage provider that syncs the search state to the URL\n   * using web APIs (`window.location.pushState` and `onpopstate` event).\n   */\n  public constructor({\n    windowTitle,\n    writeDelay = 400,\n    createURL,\n    parseURL,\n    getLocation,\n    start,\n    dispose,\n    push,\n    cleanUrlOnDispose,\n  }: BrowserHistoryArgs<TRouteState>) {\n    this.windowTitle = windowTitle;\n    this.writeTimer = undefined;\n    this.writeDelay = writeDelay;\n    this._createURL = createURL;\n    this.parseURL = parseURL;\n    this.getLocation = getLocation;\n    this._start = start;\n    this._dispose = dispose;\n    this._push = push;\n    this._cleanUrlOnDispose =\n      typeof cleanUrlOnDispose === 'undefined' ? true : cleanUrlOnDispose;\n\n    if (__DEV__ && typeof cleanUrlOnDispose === 'undefined') {\n      // eslint-disable-next-line no-console\n      console.info(`Starting from the next major version, InstantSearch will not clean up the URL from active refinements when it is disposed.\n\nWe recommend setting \\`cleanUrlOnDispose\\` to false to adopt this change today.\nTo stay with the current behaviour and remove this warning, set the option to true.\n\nSee documentation: ${createDocumentationLink({\n        name: 'history-router',\n      })}#widget-param-cleanurlondispose`);\n    }\n\n    safelyRunOnBrowser(({ window }) => {\n      const title = this.windowTitle && this.windowTitle(this.read());\n      setWindowTitle(title);\n\n      this.latestAcknowledgedHistory = window.history.length;\n    });\n  }\n\n  /**\n   * Reads the URL and returns a syncable UI search state.\n   */\n  public read(): TRouteState {\n    return this.parseURL({ qsModule: qs, location: this.getLocation() });\n  }\n\n  /**\n   * Pushes a search state into the URL.\n   */\n  public write(routeState: TRouteState): void {\n    safelyRunOnBrowser(({ window }) => {\n      const url = this.createURL(routeState);\n      const title = this.windowTitle && this.windowTitle(routeState);\n\n      if (this.writeTimer) {\n        clearTimeout(this.writeTimer);\n      }\n\n      this.writeTimer = setTimeout(() => {\n        setWindowTitle(title);\n\n        if (this.shouldWrite(url)) {\n          if (this._push) {\n            this._push(url);\n          } else {\n            window.history.pushState(routeState, title || '', url);\n          }\n          this.latestAcknowledgedHistory = window.history.length;\n        }\n        this.inPopState = false;\n        this.writeTimer = undefined;\n      }, this.writeDelay);\n    });\n  }\n\n  /**\n   * Sets a callback on the `onpopstate` event of the history API of the current page.\n   * It enables the URL sync to keep track of the changes.\n   */\n  public onUpdate(callback: (routeState: TRouteState) => void): void {\n    if (this._start) {\n      this._start(() => {\n        callback(this.read());\n      });\n    }\n\n    this._onPopState = () => {\n      if (this.writeTimer) {\n        clearTimeout(this.writeTimer);\n        this.writeTimer = undefined;\n      }\n\n      this.inPopState = true;\n\n      // We always read the state from the URL because the state of the history\n      // can be incorect in some cases (e.g. using React Router).\n      callback(this.read());\n    };\n\n    safelyRunOnBrowser(({ window }) => {\n      window.addEventListener('popstate', this._onPopState!);\n    });\n  }\n\n  /**\n   * Creates a complete URL from a given syncable UI state.\n   *\n   * It always generates the full URL, not a relative one.\n   * This allows to handle cases like using a <base href>.\n   * See: https://github.com/algolia/instantsearch/issues/790\n   */\n  public createURL(routeState: TRouteState): string {\n    const url = this._createURL({\n      qsModule: qs,\n      routeState,\n      location: this.getLocation(),\n    });\n\n    if (__DEV__) {\n      try {\n        // We just want to check if the URL is valid.\n        // eslint-disable-next-line no-new\n        new URL(url);\n      } catch (e) {\n        warning(\n          false,\n          `The URL returned by the \\`createURL\\` function is invalid.\nPlease make sure it returns an absolute URL to avoid issues, e.g: \\`https://algolia.com/search?query=iphone\\`.`\n        );\n      }\n    }\n\n    return url;\n  }\n\n  /**\n   * Removes the event listener and cleans up the URL.\n   */\n  public dispose(): void {\n    if (this._dispose) {\n      this._dispose();\n    }\n\n    this.isDisposed = true;\n\n    safelyRunOnBrowser(({ window }) => {\n      if (this._onPopState) {\n        window.removeEventListener('popstate', this._onPopState);\n      }\n    });\n\n    if (this.writeTimer) {\n      clearTimeout(this.writeTimer);\n    }\n\n    if (this._cleanUrlOnDispose) {\n      this.write({} as TRouteState);\n    }\n  }\n\n  public start() {\n    this.isDisposed = false;\n  }\n\n  private shouldWrite(url: string): boolean {\n    return safelyRunOnBrowser(({ window }) => {\n      // When disposed and the cleanUrlOnDispose is set to false, we do not want to write the URL.\n      if (this.isDisposed && !this._cleanUrlOnDispose) {\n        return false;\n      }\n\n      // We do want to `pushState` if:\n      // - the router is not disposed, IS.js needs to update the URL\n      // OR\n      // - the last write was from InstantSearch.js\n      // (unlike a SPA, where it would have last written)\n      const lastPushWasByISAfterDispose = !(\n        this.isDisposed &&\n        this.latestAcknowledgedHistory !== window.history.length\n      );\n\n      return (\n        // When the last state change was through popstate, the IS.js state changes,\n        // but that should not write the URL.\n        !this.inPopState &&\n        // When the previous pushState after dispose was by IS.js, we want to write the URL.\n        lastPushWasByISAfterDispose &&\n        // When the URL is the same as the current one, we do not want to write it.\n        url !== window.location.href\n      );\n    });\n  }\n}\n\nexport default function historyRouter<TRouteState = UiState>({\n  createURL = ({ qsModule, routeState, location }) => {\n    const { protocol, hostname, port = '', pathname, hash } = location;\n    const queryString = qsModule.stringify(routeState);\n    const portWithPrefix = port === '' ? '' : `:${port}`;\n\n    // IE <= 11 has no proper `location.origin` so we cannot rely on it.\n    if (!queryString) {\n      return `${protocol}//${hostname}${portWithPrefix}${pathname}${hash}`;\n    }\n\n    return `${protocol}//${hostname}${portWithPrefix}${pathname}?${queryString}${hash}`;\n  },\n  parseURL = ({ qsModule, location }) => {\n    // `qs` by default converts arrays with more than 20 items to an object.\n    // We want to avoid this because the data structure manipulated can therefore vary.\n    // Setting the limit to `100` seems a good number because the engine's default is 100\n    // (it can go up to 1000 but it is very unlikely to select more than 100 items in the UI).\n    //\n    // Using an `arrayLimit` of `n` allows `n + 1` items.\n    //\n    // See:\n    //   - https://github.com/ljharb/qs#parsing-arrays\n    //   - https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/\n    return qsModule.parse(location.search.slice(1), {\n      arrayLimit: 99,\n    }) as unknown as TRouteState;\n  },\n  writeDelay = 400,\n  windowTitle,\n  getLocation = () => {\n    return safelyRunOnBrowser<Location>(({ window }) => window.location, {\n      fallback: () => {\n        throw new Error(\n          'You need to provide `getLocation` to the `history` router in environments where `window` does not exist.'\n        );\n      },\n    });\n  },\n  start,\n  dispose,\n  push,\n  cleanUrlOnDispose,\n}: Partial<BrowserHistoryArgs<TRouteState>> = {}): BrowserHistory<TRouteState> {\n  return new BrowserHistory({\n    createURL,\n    parseURL,\n    writeDelay,\n    windowTitle,\n    getLocation,\n    start,\n    dispose,\n    push,\n    cleanUrlOnDispose,\n  });\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","import type { UiState, IndexUiState, StateMapping } from '../../types';\n\nfunction getIndexStateWithoutConfigure<TIndexUiState extends IndexUiState>(\n  uiState: TIndexUiState\n): Omit<TIndexUiState, 'configure'> {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState;\n}\n\n// technically a URL could contain any key, since users provide it,\n// which is why the input to this function is UiState, not something\n// which excludes \"configure\" as this function does.\nexport default function simpleStateMapping<\n  TUiState extends UiState = UiState\n>(): StateMapping<TUiState, TUiState> {\n  return {\n    $$type: 'ais.simple',\n\n    stateToRoute(uiState) {\n      return Object.keys(uiState).reduce(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(uiState[indexId]),\n        }),\n        {} as TUiState\n      );\n    },\n\n    routeToState(routeState = {} as TUiState) {\n      return Object.keys(routeState).reduce(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(routeState[indexId]),\n        }),\n        {} as TUiState\n      );\n    },\n  };\n}\n","import historyRouter from '../lib/routers/history';\nimport simpleStateMapping from '../lib/stateMappings/simple';\nimport { isEqual, warning } from '../lib/utils';\n\nimport type {\n  Router,\n  StateMapping,\n  UiState,\n  InternalMiddleware,\n  CreateURL,\n} from '../types';\n\nexport type RouterProps<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> = {\n  router?: Router<TRouteState>;\n  // ideally stateMapping should be required if TRouteState is given,\n  // but there's no way to check if a generic is provided or the default value.\n  stateMapping?: StateMapping<TUiState, TRouteState>;\n  /**\n   * @internal indicator for the default middleware\n   */\n  $$internal?: boolean;\n};\n\nexport const createRouterMiddleware = <\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n>(\n  props: RouterProps<TUiState, TRouteState> = {}\n): InternalMiddleware<TUiState> => {\n  const {\n    router = historyRouter<TRouteState>(),\n    // We have to cast simpleStateMapping as a StateMapping<TUiState, TRouteState>.\n    // this is needed because simpleStateMapping is StateMapping<TUiState, TUiState>.\n    // While it's only used when UiState and RouteState are the same, unfortunately\n    // TypeScript still considers them separate types.\n    stateMapping = simpleStateMapping<TUiState>() as unknown as StateMapping<\n      TUiState,\n      TRouteState\n    >,\n    $$internal = false,\n  } = props;\n\n  return ({ instantSearchInstance }) => {\n    function topLevelCreateURL(nextState: TUiState) {\n      const previousUiState =\n        // If only the mainIndex is initialized, we don't yet know what other\n        // index widgets are used. Therefore we fall back to the initialUiState.\n        // We can't indiscriminately use the initialUiState because then we\n        // reintroduce state that was changed by the user.\n        // When there are no widgets, we are sure the user can't yet have made\n        // any changes.\n        instantSearchInstance.mainIndex.getWidgets().length === 0\n          ? (instantSearchInstance._initialUiState as TUiState)\n          : instantSearchInstance.mainIndex.getWidgetUiState<TUiState>(\n              {} as TUiState\n            );\n\n      const uiState: TUiState = Object.keys(nextState).reduce(\n        (acc, indexId) => ({\n          ...acc,\n          [indexId]: nextState[indexId],\n        }),\n        previousUiState\n      );\n\n      const route = stateMapping.stateToRoute(uiState);\n\n      return router.createURL(route);\n    }\n\n    // casting to UiState here to keep createURL unaware of custom UiState\n    // (as long as it's an object, it's ok)\n    instantSearchInstance._createURL = topLevelCreateURL as CreateURL<UiState>;\n\n    let lastRouteState: TRouteState | undefined = undefined;\n\n    const initialUiState = instantSearchInstance._initialUiState;\n\n    return {\n      $$type: `ais.router({router:${\n        router.$$type || '__unknown__'\n      }, stateMapping:${stateMapping.$$type || '__unknown__'}})`,\n      $$internal,\n      onStateChange({ uiState }) {\n        const routeState = stateMapping.stateToRoute(uiState);\n\n        if (\n          lastRouteState === undefined ||\n          !isEqual(lastRouteState, routeState)\n        ) {\n          router.write(routeState);\n          lastRouteState = routeState;\n        }\n      },\n\n      subscribe() {\n        warning(\n          Object.keys(initialUiState).length === 0,\n          'Using `initialUiState` together with routing is not recommended. The `initialUiState` will be overwritten by the URL parameters.'\n        );\n\n        instantSearchInstance._initialUiState = {\n          ...initialUiState,\n          ...stateMapping.routeToState(router.read()),\n        };\n\n        router.onUpdate((route) => {\n          if (instantSearchInstance.mainIndex.getWidgets().length > 0) {\n            instantSearchInstance.setUiState(stateMapping.routeToState(route));\n          }\n        });\n      },\n\n      started() {\n        router.start?.();\n      },\n\n      unsubscribe() {\n        router.dispose();\n      },\n    };\n  };\n};\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.reduce(function (acc, className) {\n    if (Array.isArray(className)) {\n      return acc.concat(className);\n    }\n    return acc.concat([className]);\n  }, []).filter(Boolean).join(' ');\n}","export function createDefaultEmptyComponent(_ref) {\n  var createElement = _ref.createElement,\n    Fragment = _ref.Fragment;\n  return function DefaultEmpty() {\n    return createElement(Fragment, null, \"No results\");\n  };\n}","export function createDefaultHeaderComponent(_ref) {\n  var createElement = _ref.createElement;\n  return function DefaultHeader(userProps) {\n    var _userProps$classNames = userProps.classNames,\n      classNames = _userProps$classNames === void 0 ? {} : _userProps$classNames,\n      items = userProps.items,\n      translations = userProps.translations;\n    if (!items || items.length < 1) {\n      return null;\n    }\n    if (!translations.title) {\n      return null;\n    }\n    return createElement(\"h3\", {\n      className: classNames.title\n    }, translations.title);\n  };\n}","export function createDefaultItemComponent(_ref) {\n  var createElement = _ref.createElement,\n    Fragment = _ref.Fragment;\n  return function DefaultItem(userProps) {\n    return createElement(Fragment, null, JSON.stringify(userProps.item, null, 2));\n  };\n}","export function createListViewComponent(_ref) {\n  var createElement = _ref.createElement;\n  return function ListView(userProps) {\n    var _userProps$classNames = userProps.classNames,\n      classNames = _userProps$classNames === void 0 ? {} : _userProps$classNames,\n      ItemComponent = userProps.itemComponent,\n      items = userProps.items,\n      sendEvent = userProps.sendEvent;\n    return createElement(\"div\", {\n      className: classNames.container\n    }, createElement(\"ol\", {\n      className: classNames.list\n    }, items.map(function (item) {\n      return createElement(\"li\", {\n        key: item.objectID,\n        className: classNames.item,\n        onClick: sendEvent,\n        onAuxClick: sendEvent\n      }, createElement(ItemComponent, {\n        item: item\n      }));\n    })));\n  };\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"classNames\", \"emptyComponent\", \"headerComponent\", \"itemComponent\", \"view\", \"items\", \"status\", \"translations\", \"sendEvent\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { cx } from \"../lib/index.js\";\nimport { createDefaultEmptyComponent, createDefaultHeaderComponent, createDefaultItemComponent, createListViewComponent } from \"./recommend-shared/index.js\";\nexport function createFrequentlyBoughtTogetherComponent(_ref) {\n  var createElement = _ref.createElement,\n    Fragment = _ref.Fragment;\n  return function FrequentlyBoughtTogether(userProps) {\n    var _userProps$classNames = userProps.classNames,\n      classNames = _userProps$classNames === void 0 ? {} : _userProps$classNames,\n      _userProps$emptyCompo = userProps.emptyComponent,\n      EmptyComponent = _userProps$emptyCompo === void 0 ? createDefaultEmptyComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$emptyCompo,\n      _userProps$headerComp = userProps.headerComponent,\n      HeaderComponent = _userProps$headerComp === void 0 ? createDefaultHeaderComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$headerComp,\n      _userProps$itemCompon = userProps.itemComponent,\n      ItemComponent = _userProps$itemCompon === void 0 ? createDefaultItemComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$itemCompon,\n      _userProps$view = userProps.view,\n      View = _userProps$view === void 0 ? createListViewComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$view,\n      items = userProps.items,\n      status = userProps.status,\n      userTranslations = userProps.translations,\n      sendEvent = userProps.sendEvent,\n      props = _objectWithoutProperties(userProps, _excluded);\n    var translations = _objectSpread({\n      title: 'Frequently bought together',\n      sliderLabel: 'Frequently bought together products'\n    }, userTranslations);\n    var cssClasses = {\n      root: cx('ais-FrequentlyBoughtTogether', classNames.root),\n      emptyRoot: cx('ais-FrequentlyBoughtTogether', classNames.root, 'ais-FrequentlyBoughtTogether--empty', classNames.emptyRoot, props.className),\n      title: cx('ais-FrequentlyBoughtTogether-title', classNames.title),\n      container: cx('ais-FrequentlyBoughtTogether-container', classNames.container),\n      list: cx('ais-FrequentlyBoughtTogether-list', classNames.list),\n      item: cx('ais-FrequentlyBoughtTogether-item', classNames.item)\n    };\n    if (items.length === 0 && status === 'idle') {\n      return createElement(\"section\", _extends({}, props, {\n        className: cssClasses.emptyRoot\n      }), createElement(EmptyComponent, null));\n    }\n    return createElement(\"section\", _extends({}, props, {\n      className: cssClasses.root\n    }), createElement(HeaderComponent, {\n      classNames: cssClasses,\n      items: items,\n      translations: translations\n    }), createElement(View, {\n      classNames: cssClasses,\n      translations: translations,\n      itemComponent: ItemComponent,\n      items: items,\n      sendEvent: sendEvent\n    }));\n  };\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"parts\", \"highlightedTagName\", \"nonHighlightedTagName\", \"separator\", \"className\", \"classNames\"];\nimport { cx } from \"../lib/index.js\";\nfunction createHighlightPartComponent(_ref) {\n  var createElement = _ref.createElement;\n  return function HighlightPart(_ref2) {\n    var classNames = _ref2.classNames,\n      children = _ref2.children,\n      highlightedTagName = _ref2.highlightedTagName,\n      isHighlighted = _ref2.isHighlighted,\n      nonHighlightedTagName = _ref2.nonHighlightedTagName;\n    var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n    return createElement(TagName, {\n      className: isHighlighted ? classNames.highlighted : classNames.nonHighlighted\n    }, children);\n  };\n}\nexport function createHighlightComponent(_ref3) {\n  var createElement = _ref3.createElement,\n    Fragment = _ref3.Fragment;\n  var HighlightPart = createHighlightPartComponent({\n    createElement: createElement,\n    Fragment: Fragment\n  });\n  return function Highlight(userProps) {\n    var parts = userProps.parts,\n      _userProps$highlighte = userProps.highlightedTagName,\n      highlightedTagName = _userProps$highlighte === void 0 ? 'mark' : _userProps$highlighte,\n      _userProps$nonHighlig = userProps.nonHighlightedTagName,\n      nonHighlightedTagName = _userProps$nonHighlig === void 0 ? 'span' : _userProps$nonHighlig,\n      _userProps$separator = userProps.separator,\n      separator = _userProps$separator === void 0 ? ', ' : _userProps$separator,\n      className = userProps.className,\n      _userProps$classNames = userProps.classNames,\n      classNames = _userProps$classNames === void 0 ? {} : _userProps$classNames,\n      props = _objectWithoutProperties(userProps, _excluded);\n    return createElement(\"span\", _extends({}, props, {\n      className: cx(classNames.root, className)\n    }), parts.map(function (part, partIndex) {\n      var isLastPart = partIndex === parts.length - 1;\n      return createElement(Fragment, {\n        key: partIndex\n      }, part.map(function (subPart, subPartIndex) {\n        return createElement(HighlightPart, {\n          key: subPartIndex,\n          classNames: classNames,\n          highlightedTagName: highlightedTagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: subPart.isHighlighted\n        }, subPart.value);\n      }), !isLastPart && createElement(\"span\", {\n        className: classNames.separator\n      }, separator));\n    }));\n  };\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"classNames\", \"hits\", \"itemComponent\", \"sendEvent\", \"emptyComponent\", \"banner\", \"bannerComponent\"];\nimport { cx } from \"../lib/index.js\";\n\n// Should be imported from a shared package in the future\n\nfunction createDefaultBannerComponent(_ref) {\n  var createElement = _ref.createElement;\n  return function DefaultBanner(_ref2) {\n    var classNames = _ref2.classNames,\n      banner = _ref2.banner;\n    if (!banner.image.urls[0].url) {\n      return null;\n    }\n    return createElement(\"aside\", {\n      className: cx('ais-Hits-banner', classNames.bannerRoot)\n    }, banner.link ? createElement(\"a\", {\n      className: cx('ais-Hits-banner-link', classNames.bannerLink),\n      href: banner.link.url,\n      target: banner.link.target\n    }, createElement(\"img\", {\n      className: cx('ais-Hits-banner-image', classNames.bannerImage),\n      src: banner.image.urls[0].url,\n      alt: banner.image.title\n    })) : createElement(\"img\", {\n      className: cx('ais-Hits-banner-image', classNames.bannerImage),\n      src: banner.image.urls[0].url,\n      alt: banner.image.title\n    }));\n  };\n}\nexport function createHitsComponent(_ref3) {\n  var createElement = _ref3.createElement,\n    Fragment = _ref3.Fragment;\n  var DefaultBannerComponent = createDefaultBannerComponent({\n    createElement: createElement,\n    Fragment: Fragment\n  });\n  return function Hits(userProps) {\n    var _userProps$classNames = userProps.classNames,\n      classNames = _userProps$classNames === void 0 ? {} : _userProps$classNames,\n      hits = userProps.hits,\n      ItemComponent = userProps.itemComponent,\n      sendEvent = userProps.sendEvent,\n      EmptyComponent = userProps.emptyComponent,\n      banner = userProps.banner,\n      BannerComponent = userProps.bannerComponent,\n      props = _objectWithoutProperties(userProps, _excluded);\n    return createElement(\"div\", _extends({}, props, {\n      className: cx('ais-Hits', classNames.root, hits.length === 0 && cx('ais-Hits--empty', classNames.emptyRoot), props.className)\n    }), banner && (BannerComponent ? createElement(BannerComponent, {\n      className: cx('ais-Hits-banner', classNames.bannerRoot),\n      banner: banner\n    }) : createElement(DefaultBannerComponent, {\n      classNames: classNames,\n      banner: banner\n    })), hits.length === 0 && EmptyComponent ? createElement(EmptyComponent, null) : createElement(\"ol\", {\n      className: cx('ais-Hits-list', classNames.list)\n    }, hits.map(function (hit, index) {\n      return createElement(ItemComponent, {\n        key: hit.objectID,\n        hit: hit,\n        index: index,\n        className: cx('ais-Hits-item', classNames.item),\n        onClick: function onClick() {\n          sendEvent('click:internal', hit, 'Hit Clicked');\n        },\n        onAuxClick: function onAuxClick() {\n          sendEvent('click:internal', hit, 'Hit Clicked');\n        }\n      });\n    })));\n  };\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"classNames\", \"emptyComponent\", \"headerComponent\", \"itemComponent\", \"view\", \"items\", \"status\", \"translations\", \"sendEvent\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { cx } from \"../lib/index.js\";\nimport { createDefaultEmptyComponent, createDefaultHeaderComponent, createDefaultItemComponent, createListViewComponent } from \"./recommend-shared/index.js\";\nexport function createLookingSimilarComponent(_ref) {\n  var createElement = _ref.createElement,\n    Fragment = _ref.Fragment;\n  return function LookingSimilar(userProps) {\n    var _userProps$classNames = userProps.classNames,\n      classNames = _userProps$classNames === void 0 ? {} : _userProps$classNames,\n      _userProps$emptyCompo = userProps.emptyComponent,\n      EmptyComponent = _userProps$emptyCompo === void 0 ? createDefaultEmptyComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$emptyCompo,\n      _userProps$headerComp = userProps.headerComponent,\n      HeaderComponent = _userProps$headerComp === void 0 ? createDefaultHeaderComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$headerComp,\n      _userProps$itemCompon = userProps.itemComponent,\n      ItemComponent = _userProps$itemCompon === void 0 ? createDefaultItemComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$itemCompon,\n      _userProps$view = userProps.view,\n      View = _userProps$view === void 0 ? createListViewComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$view,\n      items = userProps.items,\n      status = userProps.status,\n      userTranslations = userProps.translations,\n      sendEvent = userProps.sendEvent,\n      props = _objectWithoutProperties(userProps, _excluded);\n    var translations = _objectSpread({\n      title: 'Looking similar',\n      sliderLabel: 'Looking similar'\n    }, userTranslations);\n    var cssClasses = {\n      root: cx('ais-LookingSimilar', classNames.root),\n      emptyRoot: cx('ais-LookingSimilar', classNames.root, 'ais-LookingSimilar--empty', classNames.emptyRoot, props.className),\n      title: cx('ais-LookingSimilar-title', classNames.title),\n      container: cx('ais-LookingSimilar-container', classNames.container),\n      list: cx('ais-LookingSimilar-list', classNames.list),\n      item: cx('ais-LookingSimilar-item', classNames.item)\n    };\n    if (items.length === 0 && status === 'idle') {\n      return createElement(\"section\", _extends({}, props, {\n        className: cssClasses.emptyRoot\n      }), createElement(EmptyComponent, null));\n    }\n    return createElement(\"section\", _extends({}, props, {\n      className: cssClasses.root\n    }), createElement(HeaderComponent, {\n      classNames: cssClasses,\n      items: items,\n      translations: translations\n    }), createElement(View, {\n      classNames: cssClasses,\n      translations: translations,\n      itemComponent: ItemComponent,\n      items: items,\n      sendEvent: sendEvent\n    }));\n  };\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"classNames\", \"emptyComponent\", \"headerComponent\", \"itemComponent\", \"view\", \"items\", \"status\", \"translations\", \"sendEvent\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { cx } from \"../lib/index.js\";\nimport { createDefaultEmptyComponent, createDefaultHeaderComponent, createDefaultItemComponent, createListViewComponent } from \"./recommend-shared/index.js\";\nexport function createRelatedProductsComponent(_ref) {\n  var createElement = _ref.createElement,\n    Fragment = _ref.Fragment;\n  return function RelatedProducts(userProps) {\n    var _userProps$classNames = userProps.classNames,\n      classNames = _userProps$classNames === void 0 ? {} : _userProps$classNames,\n      _userProps$emptyCompo = userProps.emptyComponent,\n      EmptyComponent = _userProps$emptyCompo === void 0 ? createDefaultEmptyComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$emptyCompo,\n      _userProps$headerComp = userProps.headerComponent,\n      HeaderComponent = _userProps$headerComp === void 0 ? createDefaultHeaderComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$headerComp,\n      _userProps$itemCompon = userProps.itemComponent,\n      ItemComponent = _userProps$itemCompon === void 0 ? createDefaultItemComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$itemCompon,\n      _userProps$view = userProps.view,\n      View = _userProps$view === void 0 ? createListViewComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$view,\n      items = userProps.items,\n      status = userProps.status,\n      userTranslations = userProps.translations,\n      sendEvent = userProps.sendEvent,\n      props = _objectWithoutProperties(userProps, _excluded);\n    var translations = _objectSpread({\n      title: 'Related products',\n      sliderLabel: 'Related products'\n    }, userTranslations);\n    var cssClasses = {\n      root: cx('ais-RelatedProducts', classNames.root),\n      emptyRoot: cx('ais-RelatedProducts', classNames.root, 'ais-RelatedProducts--empty', classNames.emptyRoot, props.className),\n      title: cx('ais-RelatedProducts-title', classNames.title),\n      container: cx('ais-RelatedProducts-container', classNames.container),\n      list: cx('ais-RelatedProducts-list', classNames.list),\n      item: cx('ais-RelatedProducts-item', classNames.item)\n    };\n    if (items.length === 0 && status === 'idle') {\n      return createElement(\"section\", _extends({}, props, {\n        className: cssClasses.emptyRoot\n      }), createElement(EmptyComponent, null));\n    }\n    return createElement(\"section\", _extends({}, props, {\n      className: cssClasses.root\n    }), createElement(HeaderComponent, {\n      classNames: cssClasses,\n      items: items,\n      translations: translations\n    }), createElement(View, {\n      classNames: cssClasses,\n      translations: translations,\n      itemComponent: ItemComponent,\n      items: items,\n      sendEvent: sendEvent\n    }));\n  };\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"classNames\", \"emptyComponent\", \"headerComponent\", \"itemComponent\", \"view\", \"items\", \"status\", \"translations\", \"sendEvent\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { cx } from \"../lib/index.js\";\nimport { createDefaultEmptyComponent, createDefaultHeaderComponent, createDefaultItemComponent, createListViewComponent } from \"./recommend-shared/index.js\";\nexport function createTrendingItemsComponent(_ref) {\n  var createElement = _ref.createElement,\n    Fragment = _ref.Fragment;\n  return function TrendingItems(userProps) {\n    var _userProps$classNames = userProps.classNames,\n      classNames = _userProps$classNames === void 0 ? {} : _userProps$classNames,\n      _userProps$emptyCompo = userProps.emptyComponent,\n      EmptyComponent = _userProps$emptyCompo === void 0 ? createDefaultEmptyComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$emptyCompo,\n      _userProps$headerComp = userProps.headerComponent,\n      HeaderComponent = _userProps$headerComp === void 0 ? createDefaultHeaderComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$headerComp,\n      _userProps$itemCompon = userProps.itemComponent,\n      ItemComponent = _userProps$itemCompon === void 0 ? createDefaultItemComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$itemCompon,\n      _userProps$view = userProps.view,\n      View = _userProps$view === void 0 ? createListViewComponent({\n        createElement: createElement,\n        Fragment: Fragment\n      }) : _userProps$view,\n      items = userProps.items,\n      status = userProps.status,\n      userTranslations = userProps.translations,\n      sendEvent = userProps.sendEvent,\n      props = _objectWithoutProperties(userProps, _excluded);\n    var translations = _objectSpread({\n      title: 'Trending items',\n      sliderLabel: 'Trending items'\n    }, userTranslations);\n    var cssClasses = {\n      root: cx('ais-TrendingItems', classNames.root),\n      emptyRoot: cx('ais-TrendingItems', classNames.root, 'ais-TrendingItems--empty', classNames.emptyRoot, props.className),\n      title: cx('ais-TrendingItems-title', classNames.title),\n      container: cx('ais-TrendingItems-container', classNames.container),\n      list: cx('ais-TrendingItems-list', classNames.list),\n      item: cx('ais-TrendingItems-item', classNames.item)\n    };\n    if (items.length === 0 && status === 'idle') {\n      return createElement(\"section\", _extends({}, props, {\n        className: cssClasses.emptyRoot\n      }), createElement(EmptyComponent, null));\n    }\n    return createElement(\"section\", _extends({}, props, {\n      className: cssClasses.root\n    }), createElement(HeaderComponent, {\n      classNames: cssClasses,\n      items: items,\n      translations: translations\n    }), createElement(View, {\n      classNames: cssClasses,\n      translations: translations,\n      itemComponent: ItemComponent,\n      items: items,\n      sendEvent: sendEvent\n    }));\n  };\n}","import { uniq } from '../utils/uniq';\n\nimport type { HoganHelpers, Templates } from '../../types';\nimport type { HoganOptions } from 'hogan.js';\n\ntype TemplatesConfig = {\n  helpers?: HoganHelpers;\n  compileOptions?: HoganOptions;\n};\n\nexport type PreparedTemplateProps<TTemplates extends Templates> = {\n  templatesConfig: TemplatesConfig;\n  templates: TTemplates;\n  useCustomCompileOptions: {\n    [TKey in keyof Partial<TTemplates>]: boolean;\n  };\n};\n\nfunction prepareTemplates<TTemplates extends Templates>(\n  // can not use = {} here, since the template could have different constraints\n  defaultTemplates?: TTemplates,\n  templates: Partial<TTemplates> = {}\n) {\n  const allKeys = uniq([\n    ...Object.keys(defaultTemplates || {}),\n    ...Object.keys(templates),\n  ]);\n\n  return allKeys.reduce(\n    (config, key: keyof TTemplates) => {\n      const defaultTemplate = defaultTemplates\n        ? defaultTemplates[key]\n        : undefined;\n      const customTemplate = templates[key];\n      const isCustomTemplate =\n        customTemplate !== undefined && customTemplate !== defaultTemplate;\n\n      config.templates[key] = isCustomTemplate\n        ? customTemplate\n        : defaultTemplate!;\n\n      config.useCustomCompileOptions[key] = isCustomTemplate;\n\n      return config;\n    },\n    {\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      templates: {} as TTemplates,\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      useCustomCompileOptions: {} as {\n        [TKey in keyof TTemplates]: boolean;\n      },\n    }\n  );\n}\n\n/**\n * Prepares an object to be passed to the Template widget\n */\nexport function prepareTemplateProps<TTemplates extends Templates>({\n  defaultTemplates,\n  templates,\n  templatesConfig,\n}: {\n  defaultTemplates: TTemplates;\n  templates?: Partial<TTemplates>;\n  templatesConfig: TemplatesConfig;\n}): PreparedTemplateProps<TTemplates> {\n  const preparedTemplates = prepareTemplates(defaultTemplates, templates);\n\n  return {\n    templatesConfig,\n    ...preparedTemplates,\n  };\n}\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// This file is for use with Node.js. See dist/ for browser files.\n\nvar Hogan = require('./compiler');\nHogan.Template = require('./template').Template;\nHogan.template = Hogan.Template;\nmodule.exports = Hogan;\n","var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n","import{h as r,Component as o,render as t}from\"preact\";export{h,render,Component}from\"preact\";import e from\"htm\";var m=e.bind(r);export{m as html};\n","import { createHighlightComponent } from 'instantsearch-ui-components';\nimport { createElement, Fragment } from 'preact';\n\nexport const InternalHighlight = createHighlightComponent({\n  createElement,\n  Fragment,\n});\n","/** @jsx h */\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from 'instantsearch-ui-components';\n\nexport type HighlightClassNames = InternalHighlightClassNames;\nexport type HighlightProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<HighlightClassNames>;\n};\n\nexport function Highlight({ classNames = {}, ...props }: HighlightProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-Highlight', classNames.root),\n        highlighted: cx('ais-Highlight-highlighted', classNames.highlighted),\n        nonHighlighted: cx(\n          'ais-Highlight-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-Highlight-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { Highlight as HighlightUiComponent } from '../../components/Highlight/Highlight';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type { HighlightProps as HighlightUiComponentProps } from '../../components/Highlight/Highlight';\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeHighlightResult,\n  PartialKeys,\n} from '../../types';\n\nexport type HighlightProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: HighlightUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<HighlightUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function Highlight<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: HighlightProps<THit>) {\n  const property: HitAttributeHighlightResult | HitAttributeHighlightResult[] =\n    getPropertyByPath(hit._highlightResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable highlight for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || ''))\n  );\n\n  return (\n    <HighlightUiComponent {...props} parts={parts} classNames={cssClasses} />\n  );\n}\n","/** @jsx h */\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from 'instantsearch-ui-components';\n\nexport type ReverseHighlightClassNames = InternalHighlightClassNames;\nexport type ReverseHighlightProps = Omit<\n  InternalHighlightProps,\n  'classNames'\n> & {\n  classNames?: Partial<ReverseHighlightClassNames>;\n};\n\nexport function ReverseHighlight({\n  classNames = {},\n  ...props\n}: ReverseHighlightProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-ReverseHighlight', classNames.root),\n        highlighted: cx(\n          'ais-ReverseHighlight-highlighted',\n          classNames.highlighted\n        ),\n        nonHighlighted: cx(\n          'ais-ReverseHighlight-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-ReverseHighlight-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { ReverseHighlight as ReverseHighlightUiComponent } from '../../components/ReverseHighlight/ReverseHighlight';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type { ReverseHighlightProps as ReverseHighlightUiComponentProps } from '../../components/ReverseHighlight/ReverseHighlight';\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeHighlightResult,\n  PartialKeys,\n} from '../../types';\n\nexport type ReverseHighlightProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: ReverseHighlightUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<ReverseHighlightUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function ReverseHighlight<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: ReverseHighlightProps<THit>) {\n  const property: HitAttributeHighlightResult | HitAttributeHighlightResult[] =\n    getPropertyByPath(hit._highlightResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable highlight for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || '')).map(\n      ({ isHighlighted, ...rest }) => ({\n        ...rest,\n        isHighlighted: !isHighlighted,\n      })\n    )\n  );\n\n  return (\n    <ReverseHighlightUiComponent\n      {...props}\n      parts={parts}\n      classNames={cssClasses}\n    />\n  );\n}\n","/** @jsx h */\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from 'instantsearch-ui-components';\n\nexport type ReverseSnippetClassNames = InternalHighlightClassNames;\nexport type ReverseSnippetProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<ReverseSnippetClassNames>;\n};\n\nexport function ReverseSnippet({\n  classNames = {},\n  ...props\n}: ReverseSnippetProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-ReverseSnippet', classNames.root),\n        highlighted: cx(\n          'ais-ReverseSnippet-highlighted',\n          classNames.highlighted\n        ),\n        nonHighlighted: cx(\n          'ais-ReverseSnippet-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-ReverseSnippet-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { ReverseSnippet as ReverseSnippetUiComponent } from '../../components/ReverseSnippet/ReverseSnippet';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type { ReverseSnippetProps as ReverseSnippetUiComponentProps } from '../../components/ReverseSnippet/ReverseSnippet';\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeSnippetResult,\n  PartialKeys,\n} from '../../types';\n\nexport type ReverseSnippetProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: ReverseSnippetUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<ReverseSnippetUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function ReverseSnippet<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: ReverseSnippetProps<THit>) {\n  const property: HitAttributeSnippetResult | HitAttributeSnippetResult[] =\n    getPropertyByPath(hit._snippetResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable snippet for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || '')).map(\n      ({ isHighlighted, ...rest }) => ({\n        ...rest,\n        isHighlighted: !isHighlighted,\n      })\n    )\n  );\n\n  return (\n    <ReverseSnippetUiComponent\n      {...props}\n      parts={parts}\n      classNames={cssClasses}\n    />\n  );\n}\n","/** @jsx h */\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from 'instantsearch-ui-components';\n\nexport type SnippetClassNames = InternalHighlightClassNames;\nexport type SnippetProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<SnippetClassNames>;\n};\n\nexport function Snippet({ classNames = {}, ...props }: SnippetProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-Snippet', classNames.root),\n        highlighted: cx('ais-Snippet-highlighted', classNames.highlighted),\n        nonHighlighted: cx(\n          'ais-Snippet-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-Snippet-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { Snippet as SnippetUiComponent } from '../../components/Snippet/Snippet';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type { SnippetProps as SnippetUiComponentProps } from '../../components/Snippet/Snippet';\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeSnippetResult,\n  PartialKeys,\n} from '../../types';\n\nexport type SnippetProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: SnippetUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<SnippetUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function Snippet<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: SnippetProps<THit>) {\n  const property: HitAttributeSnippetResult | HitAttributeSnippetResult[] =\n    getPropertyByPath(hit._snippetResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable snippet for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || ''))\n  );\n\n  return (\n    <SnippetUiComponent {...props} parts={parts} classNames={cssClasses} />\n  );\n}\n","import hogan from 'hogan.js';\nimport { html } from 'htm/preact';\n\nimport {\n  Highlight,\n  ReverseHighlight,\n  ReverseSnippet,\n  Snippet,\n} from '../../helpers/components';\n\nimport type { Templates, HoganHelpers, TemplateParams } from '../../types';\nimport type {\n  BindEventForHits,\n  SendEventForHits,\n} from '../utils/createSendEventForHits';\nimport type { HoganOptions, Template } from 'hogan.js';\n\ntype TransformedHoganHelpers = {\n  [helper: string]: () => (text: string) => string;\n};\n\n// We add all our template helper methods to the template as lambdas. Note\n// that lambdas in Mustache are supposed to accept a second argument of\n// `render` to get the rendered value, not the literal `{{value}}`. But\n// this is currently broken (see https://github.com/twitter/hogan.js/issues/222).\nfunction transformHelpersToHogan(\n  helpers: HoganHelpers = {},\n  compileOptions?: HoganOptions,\n  data?: Record<string, any>\n) {\n  return Object.keys(helpers).reduce<TransformedHoganHelpers>(\n    (acc, helperKey) => ({\n      ...acc,\n      [helperKey]() {\n        return (text) => {\n          const render = (value: string) =>\n            (hogan.compile(value, compileOptions) as Template).render(this);\n\n          return helpers[helperKey].call(data, text, render);\n        };\n      },\n    }),\n    {}\n  );\n}\n\nexport function renderTemplate({\n  templates,\n  templateKey,\n  compileOptions,\n  helpers,\n  data,\n  bindEvent,\n  sendEvent,\n}: {\n  templates: Templates;\n  templateKey: string;\n  compileOptions?: HoganOptions;\n  helpers?: HoganHelpers;\n  data?: Record<string, any>;\n  bindEvent?: BindEventForHits;\n  sendEvent?: SendEventForHits;\n}) {\n  const template = templates[templateKey];\n\n  if (typeof template !== 'string' && typeof template !== 'function') {\n    throw new Error(\n      `Template must be 'string' or 'function', was '${typeof template}' (key: ${templateKey})`\n    );\n  }\n\n  if (typeof template === 'function') {\n    // @MAJOR no longer pass bindEvent when string templates are removed\n    const params = (bindEvent || {}) as TemplateParams;\n\n    params.html = html;\n    (params as any).sendEvent = sendEvent;\n    params.components = {\n      Highlight,\n      ReverseHighlight,\n      Snippet,\n      ReverseSnippet,\n    };\n\n    // @MAJOR remove the `as any` when string templates are removed\n    // needed because not every template receives sendEvent\n    return template(data, params as any);\n  }\n\n  const transformedHelpers = transformHelpersToHogan(\n    helpers,\n    compileOptions,\n    data\n  );\n\n  return (hogan.compile(template, compileOptions) as Template)\n    .render({\n      ...data,\n      helpers: transformedHelpers,\n    })\n    .replace(/[ \\n\\r\\t\\f\\xA0]+/g, (spaces) =>\n      spaces.replace(/(^|\\xA0+)[^\\xA0]+/g, '$1 ')\n    )\n    .trim();\n}\n","/** @jsx h */\n\nimport { h, Component, Fragment, createRef } from 'preact';\n\nimport { renderTemplate } from '../../lib/templating';\nimport { warning, isEqual } from '../../lib/utils';\n\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { BindEventForHits, SendEventForHits } from '../../lib/utils';\nimport type { Templates } from '../../types';\nimport type { JSX } from 'preact';\n\nclass RawHtml extends Component<{ content: string }> {\n  ref = createRef();\n  nodes: ChildNode[] = [];\n\n  componentDidMount() {\n    const fragment = new DocumentFragment();\n    const root = document.createElement('div');\n    root.innerHTML = this.props.content;\n    this.nodes = [...root.childNodes];\n    this.nodes.forEach((node) => fragment.appendChild(node));\n    this.ref.current.replaceWith(fragment);\n  }\n\n  componentWillUnmount() {\n    this.nodes.forEach((node) => {\n      if (node instanceof Element) {\n        node.outerHTML = '';\n        return;\n      }\n      node.nodeValue = '';\n    });\n    // if there is one TextNode first and one TextNode last, the\n    // last one's nodeValue will be assigned to the first.\n    if (this.nodes[0].nodeValue) {\n      this.nodes[0].nodeValue = '';\n    }\n  }\n\n  render() {\n    return <div ref={this.ref} />;\n  }\n}\n\nconst defaultProps = {\n  data: {},\n  rootTagName: 'div',\n  useCustomCompileOptions: {},\n  templates: {},\n  templatesConfig: {},\n};\n\nexport type TemplateProps = {\n  data?: Record<string, any>;\n  rootProps?: Record<string, any>;\n  rootTagName: keyof JSX.IntrinsicElements | 'fragment';\n  templateKey: string;\n  bindEvent?: BindEventForHits;\n  sendEvent?: SendEventForHits;\n} & PreparedTemplateProps<Templates> &\n  Readonly<typeof defaultProps>;\n\n// @TODO: Template should be a generic and receive TData to pass to Templates (to avoid TTemplateData to be set as `any`)\nclass Template extends Component<TemplateProps> {\n  public static readonly defaultProps = defaultProps;\n\n  public shouldComponentUpdate(nextProps: TemplateProps) {\n    return (\n      !isEqual(this.props.data, nextProps.data) ||\n      this.props.templateKey !== nextProps.templateKey ||\n      !isEqual(this.props.rootProps, nextProps.rootProps)\n    );\n  }\n\n  public render() {\n    if (__DEV__) {\n      const nonFunctionTemplates = Object.keys(this.props.templates).filter(\n        (key) => typeof this.props.templates[key] !== 'function'\n      );\n      warning(\n        nonFunctionTemplates.length === 0,\n        `Hogan.js and string-based templates are deprecated and will not be supported in InstantSearch.js 5.x.\n\nYou can replace them with function-form templates and use either the provided \\`html\\` function or JSX templates.\n\nString-based templates: ${nonFunctionTemplates.join(', ')}.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#upgrade-templates`\n      );\n    }\n\n    const RootTagName =\n      this.props.rootTagName === 'fragment' ? Fragment : this.props.rootTagName;\n\n    const useCustomCompileOptions =\n      this.props.useCustomCompileOptions[this.props.templateKey];\n    const compileOptions = useCustomCompileOptions\n      ? this.props.templatesConfig.compileOptions\n      : {};\n\n    const content = renderTemplate({\n      templates: this.props.templates,\n      templateKey: this.props.templateKey,\n      compileOptions,\n      helpers: this.props.templatesConfig.helpers,\n      data: this.props.data,\n      bindEvent: this.props.bindEvent,\n      sendEvent: this.props.sendEvent,\n    });\n\n    if (content === null) {\n      // Adds a noscript to the DOM but virtual DOM is null\n      // See http://facebook.github.io/react/docs/component-specs.html#render\n      return null;\n    }\n\n    if (typeof content === 'object') {\n      return <RootTagName {...this.props.rootProps}>{content}</RootTagName>;\n    }\n\n    // This is to handle Hogan templates with Fragment as rootTagName\n    if (RootTagName === Fragment) {\n      return <RawHtml content={content} key={Math.random()} />;\n    }\n\n    return (\n      <RootTagName\n        {...this.props.rootProps}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    );\n  }\n}\n\nexport default Template;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { warning } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses, Hit } from '../../types';\nimport type {\n  AnswersCSSClasses,\n  AnswersTemplates,\n} from '../../widgets/answers/answers';\n\nexport type AnswersComponentCSSClasses = ComponentCSSClasses<AnswersCSSClasses>;\n\nexport type AnswersComponentTemplates = Required<AnswersTemplates>;\n\nexport type AnswersProps = {\n  hits: Hit[];\n  isLoading: boolean;\n  cssClasses: AnswersComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: AnswersComponentTemplates;\n  };\n};\n\nconst Answers = ({\n  hits,\n  isLoading,\n  cssClasses,\n  templateProps,\n}: AnswersProps) => (\n  <div\n    className={cx(cssClasses.root, hits.length === 0 && cssClasses.emptyRoot)}\n  >\n    <Template\n      {...templateProps}\n      templateKey=\"header\"\n      rootProps={{ className: cssClasses.header }}\n      data={{\n        hits,\n        isLoading,\n      }}\n    />\n    {isLoading ? (\n      <Template\n        {...templateProps}\n        templateKey=\"loader\"\n        rootProps={{ className: cssClasses.loader }}\n      />\n    ) : (\n      <ul className={cssClasses.list}>\n        {hits.map((hit, index) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              get __hitIndex() {\n                warning(\n                  false,\n                  'The `__hitIndex` property is deprecated. Use the absolute `__position` instead.'\n                );\n                return index;\n              },\n            }}\n          />\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\nexport default Answers;\n","import type { AnswersComponentTemplates } from '../../components/Answers/Answers';\n\nconst defaultTemplates: AnswersComponentTemplates = {\n  header() {\n    return '';\n  },\n  loader() {\n    return '';\n  },\n  item(item) {\n    return JSON.stringify(item);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport Answers from '../../components/Answers/Answers';\nimport connectAnswers from '../../connectors/answers/connectAnswers';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  createDocumentationMessageGenerator,\n  deprecate,\n  getContainerNode,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  AnswersComponentCSSClasses,\n  AnswersComponentTemplates,\n} from '../../components/Answers/Answers';\nimport type {\n  AnswersRenderState,\n  AnswersConnectorParams,\n  AnswersWidgetDescription,\n} from '../../connectors/answers/connectAnswers';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template, Hit, Renderer } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'answers' });\nconst suit = component('Answers');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: AnswersComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<AnswersComponentTemplates>;\n    };\n    templates: AnswersTemplates;\n  }): Renderer<AnswersRenderState, Partial<AnswersWidgetParams>> =>\n  ({ hits, isLoading, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <Answers\n        cssClasses={cssClasses}\n        hits={hits}\n        isLoading={isLoading}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type AnswersTemplates = Partial<{\n  /**\n   * Template to use for the header. This template will receive an object containing `hits` and `isLoading`.\n   */\n  header: Template<{\n    hits: Hit[];\n    isLoading: boolean;\n  }>;\n\n  /**\n   * Template to use for the loader.\n   */\n  loader: Template;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   */\n  item: Template<Hit>;\n}>;\n\nexport type AnswersCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header: string | string[];\n\n  /**\n   * CSS classes to add to the loader.\n   */\n  loader: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item: string | string[];\n}>;\n\nexport type AnswersWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: AnswersTemplates;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: AnswersCSSClasses;\n};\n\nexport type AnswersWidget = WidgetFactory<\n  AnswersWidgetDescription & { $$widgetType: 'ais.answers' },\n  AnswersConnectorParams,\n  AnswersWidgetParams\n>;\n\n/**\n * @deprecated the answers service is no longer offered, and this widget will be removed in InstantSearch.js v5\n */\nconst answersWidget: AnswersWidget = (widgetParams) => {\n  const {\n    container,\n    attributesForPrediction,\n    queryLanguages,\n    nbHits,\n    searchDebounceTime,\n    renderDebounceTime,\n    escapeHTML,\n    extraParameters,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    loader: cx(suit({ descendantName: 'loader' }), userCssClasses.loader),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectAnswers(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributesForPrediction,\n      queryLanguages,\n      nbHits,\n      searchDebounceTime,\n      renderDebounceTime,\n      escapeHTML,\n      extraParameters,\n    }),\n    $$widgetType: 'ais.answers',\n  };\n};\n\nexport default deprecate(\n  answersWidget,\n  'The answers widget is deprecated and will be removed in InstantSearch.js 5.0'\n);\n","import connectDynamicWidgets from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport { component } from '../../lib/suit';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getWidgetAttribute,\n} from '../../lib/utils';\n\nimport type {\n  DynamicWidgetsConnectorParams,\n  DynamicWidgetsWidgetDescription,\n} from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport type { Widget, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n});\nconst suit = component('DynamicWidgets');\n\nexport type DynamicWidgetsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * An array of widget creator functions, displayed in the order defined by\n   * `facetOrdering`.\n   */\n  widgets: Array<(container: HTMLElement) => Widget>;\n\n  /**\n   * Function to return a fallback widget when an attribute isn't found in\n   * `widgets`.\n   */\n  fallbackWidget?: (args: {\n    /** The attribute name to create a widget for. */\n    attribute: string;\n    /** CSS Selector or HTMLElement to insert the widget */\n    container: HTMLElement;\n  }) => Widget;\n};\n\nexport type DynamicWidgetsWidget = WidgetFactory<\n  DynamicWidgetsWidgetDescription & { $$widgetType: 'ais.dynamicWidgets' },\n  Omit<DynamicWidgetsConnectorParams, 'widgets' | 'fallbackWidget'>,\n  DynamicWidgetsWidgetParams\n>;\n\nfunction createContainer(rootContainer: HTMLElement) {\n  const container = document.createElement('div');\n  container.className = suit({ descendantName: 'widget' });\n\n  rootContainer.appendChild(container);\n\n  return container;\n}\n\nconst dynamicWidgets: DynamicWidgetsWidget = function dynamicWidgets(\n  widgetParams\n) {\n  const {\n    container: containerSelector,\n    widgets,\n    fallbackWidget,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  if (!containerSelector) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (\n    !(\n      widgets &&\n      Array.isArray(widgets) &&\n      widgets.every((widget) => typeof widget === 'function')\n    )\n  ) {\n    throw new Error(\n      withUsage('The `widgets` option expects an array of callbacks.')\n    );\n  }\n\n  const userContainer = getContainerNode(containerSelector);\n  const rootContainer = document.createElement('div');\n  rootContainer.className = suit();\n\n  const containers = new Map<string, HTMLElement>();\n  const connectorWidgets: Widget[] = [];\n\n  const makeWidget = connectDynamicWidgets(\n    ({ attributesToRender }, isFirstRender) => {\n      if (isFirstRender) {\n        userContainer.appendChild(rootContainer);\n      }\n\n      attributesToRender.forEach((attribute) => {\n        if (!containers.has(attribute)) {\n          return;\n        }\n        const container = containers.get(attribute)!;\n        rootContainer.appendChild(container);\n      });\n    },\n    () => {\n      userContainer.removeChild(rootContainer);\n    }\n  );\n\n  const widget = makeWidget({\n    ...otherWidgetParams,\n    widgets: connectorWidgets,\n    fallbackWidget:\n      typeof fallbackWidget === 'function'\n        ? ({ attribute }) => {\n            const container = createContainer(rootContainer);\n            containers.set(attribute, container);\n            return fallbackWidget({ attribute, container });\n          }\n        : undefined,\n  });\n\n  return {\n    ...widget,\n    init(initOptions) {\n      widgets.forEach((cb) => {\n        const container = createContainer(rootContainer);\n\n        const childWidget = cb(container);\n        const attribute = getWidgetAttribute(childWidget, initOptions);\n\n        containers.set(attribute, container);\n        connectorWidgets.push(childWidget);\n      });\n\n      widget.init!(initOptions);\n    },\n    $$widgetType: 'ais.dynamicWidgets',\n  };\n};\nexport default dynamicWidgets;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport CurrentRefinements from '../../components/CurrentRefinements/CurrentRefinements';\nimport connectCurrentRefinements from '../../connectors/current-refinements/connectCurrentRefinements';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsRenderState,\n  CurrentRefinementsWidgetDescription,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport type { ComponentCSSClasses, Renderer, WidgetFactory } from '../../types';\n\nexport type CurrentRefinementsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to the each item element.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to the label element.\n   */\n  label: string | string[];\n\n  /**\n   * CSS class to add to the category element.\n   */\n  category: string | string[];\n\n  /**\n   * CSS class to add to the categoryLabel element.\n   */\n  categoryLabel: string | string[];\n\n  /**\n   * CSS class to add to the delete element.\n   */\n  delete: string | string[];\n}>;\n\nexport type CurrentRefinementsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: CurrentRefinementsCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n});\nconst suit = component('CurrentRefinements');\n\nconst renderer: Renderer<\n  CurrentRefinementsRenderState,\n  Partial<CurrentRefinementsWidgetParams>\n> = ({ items, widgetParams, canRefine }, isFirstRender) => {\n  if (isFirstRender) {\n    return;\n  }\n\n  const { container, cssClasses } = widgetParams as {\n    container: HTMLElement;\n    cssClasses: ComponentCSSClasses<CurrentRefinementsCSSClasses>;\n  };\n\n  render(\n    <CurrentRefinements\n      cssClasses={cssClasses}\n      items={items}\n      canRefine={canRefine}\n    />,\n    container\n  );\n};\n\nexport type CurrentRefinementsWidget = WidgetFactory<\n  CurrentRefinementsWidgetDescription & {\n    $$widgetType: 'ais.currentRefinements';\n  },\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsWidgetParams\n>;\n\nconst currentRefinements: CurrentRefinementsWidget =\n  function currentRefinements(widgetParams) {\n    const {\n      container,\n      includedAttributes,\n      excludedAttributes,\n      cssClasses: userCssClasses = {},\n      transformItems,\n    } = widgetParams || {};\n\n    if (!container) {\n      throw new Error(withUsage('The `container` option is required.'));\n    }\n\n    const containerNode = getContainerNode(container);\n    const cssClasses: CurrentRefinementsCSSClasses = {\n      root: cx(suit(), userCssClasses.root),\n      noRefinementRoot: cx(\n        suit({ modifierName: 'noRefinement' }),\n        userCssClasses.noRefinementRoot\n      ),\n      list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n      item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n      label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n      category: cx(\n        suit({ descendantName: 'category' }),\n        userCssClasses.category\n      ),\n      categoryLabel: cx(\n        suit({ descendantName: 'categoryLabel' }),\n        userCssClasses.categoryLabel\n      ),\n      delete: cx(suit({ descendantName: 'delete' }), userCssClasses.delete),\n    };\n\n    const makeWidget =\n      connectCurrentRefinements<CurrentRefinementsWidgetParams>(renderer, () =>\n        render(null, containerNode)\n      );\n\n    return {\n      ...makeWidget({\n        container: containerNode,\n        cssClasses,\n        includedAttributes,\n        excludedAttributes,\n        transformItems,\n      }),\n      $$widgetType: 'ais.currentRefinements',\n    };\n  };\n\nexport default currentRefinements;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport type { ComponentChildren } from 'preact';\n\ntype Props = {\n  className: string;\n  onClick: (event: MouseEvent) => void;\n  children: ComponentChildren;\n  disabled?: boolean;\n};\n\nconst GeoSearchButton = ({\n  className,\n  disabled = false,\n  onClick,\n  children,\n}: Props) => (\n  <button className={className} onClick={onClick} disabled={disabled}>\n    {children}\n  </button>\n);\n\nexport default GeoSearchButton;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport type { ComponentChildren } from 'preact';\n\ntype Props = {\n  classNameLabel: string;\n  classNameInput: string;\n  checked: boolean;\n  onToggle: (event: Event) => void;\n  children: ComponentChildren;\n};\n\nconst GeoSearchToggle = ({\n  classNameLabel,\n  classNameInput,\n  checked,\n  onToggle,\n  children,\n}: Props) => (\n  <label className={classNameLabel}>\n    <input\n      className={classNameInput}\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onToggle}\n    />\n    {children}\n  </label>\n);\n\nexport default GeoSearchToggle;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\n\nimport GeoSearchControls from '../../components/GeoSearchControls/GeoSearchControls';\nimport { prepareTemplateProps } from '../../lib/templating';\n\nconst refineWithMap = ({ refine, mapInstance }) =>\n  refine({\n    northEast: mapInstance.getBounds().getNorthEast().toJSON(),\n    southWest: mapInstance.getBounds().getSouthWest().toJSON(),\n  });\n\nconst collectMarkersForNextRender = (markers, nextIds) =>\n  markers.reduce(\n    ([update, exit], marker) => {\n      const persist = nextIds.includes(marker.__id);\n\n      return persist\n        ? [update.concat(marker), exit]\n        : [update, exit.concat(marker)];\n    },\n    [[], []]\n  );\n\nconst createBoundingBoxFromMarkers = (google, markers) => {\n  const latLngBounds = markers.reduce(\n    (acc, marker) => acc.extend(marker.getPosition()),\n    new google.maps.LatLngBounds()\n  );\n\n  return {\n    northEast: latLngBounds.getNorthEast().toJSON(),\n    southWest: latLngBounds.getSouthWest().toJSON(),\n  };\n};\n\nconst lockUserInteraction = (renderState, functionThatAltersTheMapPosition) => {\n  renderState.isUserInteraction = false;\n  functionThatAltersTheMapPosition();\n  renderState.isUserInteraction = true;\n};\n\nconst renderer = (\n  {\n    items,\n    position,\n    currentRefinement,\n    refine,\n    clearMapRefinement,\n    toggleRefineOnMapMove,\n    isRefineOnMapMove,\n    setMapMoveSinceLastRefine,\n    hasMapMoveSinceLastRefine,\n    isRefinedWithMap,\n    widgetParams,\n    instantSearchInstance,\n  },\n  isFirstRendering\n) => {\n  const {\n    container,\n    googleReference,\n    cssClasses,\n    templates,\n    initialZoom,\n    initialPosition,\n    enableRefine,\n    enableClearMapRefinement,\n    enableRefineControl,\n    mapOptions,\n    createMarker,\n    markerOptions,\n    renderState,\n  } = widgetParams;\n\n  if (isFirstRendering) {\n    renderState.isUserInteraction = true;\n    renderState.isPendingRefine = false;\n    renderState.markers = [];\n\n    const rootElement = document.createElement('div');\n    rootElement.className = cssClasses.root;\n    container.appendChild(rootElement);\n\n    const mapElement = document.createElement('div');\n    mapElement.className = cssClasses.map;\n    rootElement.appendChild(mapElement);\n\n    const treeElement = document.createElement('div');\n    treeElement.className = cssClasses.tree;\n    rootElement.appendChild(treeElement);\n\n    renderState.mapInstance = new googleReference.maps.Map(mapElement, {\n      mapTypeControl: false,\n      fullscreenControl: false,\n      streetViewControl: false,\n      clickableIcons: false,\n      zoomControlOptions: {\n        position: googleReference.maps.ControlPosition.LEFT_TOP,\n      },\n      ...mapOptions,\n    });\n\n    const setupListenersWhenMapIsReady = () => {\n      const onChange = () => {\n        if (renderState.isUserInteraction && enableRefine) {\n          setMapMoveSinceLastRefine();\n\n          if (isRefineOnMapMove()) {\n            renderState.isPendingRefine = true;\n          }\n        }\n      };\n\n      renderState.mapInstance.addListener('center_changed', onChange);\n      renderState.mapInstance.addListener('zoom_changed', onChange);\n      renderState.mapInstance.addListener('dragstart', onChange);\n\n      renderState.mapInstance.addListener('idle', () => {\n        if (renderState.isUserInteraction && renderState.isPendingRefine) {\n          renderState.isPendingRefine = false;\n\n          refineWithMap({\n            mapInstance: renderState.mapInstance,\n            refine,\n          });\n        }\n      });\n    };\n\n    googleReference.maps.event.addListenerOnce(\n      renderState.mapInstance,\n      'idle',\n      setupListenersWhenMapIsReady\n    );\n\n    renderState.templateProps = prepareTemplateProps({\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  // Collect markers that need to be updated or removed\n  const nextItemsIds = items.map((_) => _.objectID);\n  const [updateMarkers, exitMarkers] = collectMarkersForNextRender(\n    renderState.markers,\n    nextItemsIds\n  );\n\n  // Collect items that will be added\n  const updateMarkerIds = updateMarkers.map((_) => _.__id);\n  const nextPendingItems = items.filter(\n    (item) => !updateMarkerIds.includes(item.objectID)\n  );\n\n  // Remove all markers that need to be removed\n  exitMarkers.forEach((marker) => marker.setMap(null));\n\n  // Create the markers from the items\n  renderState.markers = updateMarkers.concat(\n    nextPendingItems.map((item) => {\n      const marker = createMarker({\n        map: renderState.mapInstance,\n        item,\n      });\n\n      Object.keys(markerOptions.events).forEach((eventName) => {\n        marker.addListener(eventName, (event) => {\n          markerOptions.events[eventName]({\n            map: renderState.mapInstance,\n            event,\n            item,\n            marker,\n          });\n        });\n      });\n\n      return marker;\n    })\n  );\n\n  const shouldUpdate = !hasMapMoveSinceLastRefine();\n\n  // We use this value for differentiate the padding to apply during\n  // fitBounds. When we don't have a currenRefinement (boundingBox)\n  // we let Google Maps compute the automatic padding. But when we\n  // provide the currentRefinement we explicitly set the padding\n  // to `0` otherwise the map will decrease the zoom on each refine.\n  const boundingBoxPadding = currentRefinement ? 0 : null;\n  const boundingBox =\n    !currentRefinement && Boolean(renderState.markers.length)\n      ? createBoundingBoxFromMarkers(googleReference, renderState.markers)\n      : currentRefinement;\n\n  if (boundingBox && shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.fitBounds(\n        new googleReference.maps.LatLngBounds(\n          boundingBox.southWest,\n          boundingBox.northEast\n        ),\n        boundingBoxPadding\n      );\n    });\n  } else if (shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.setCenter(position || initialPosition);\n      renderState.mapInstance.setZoom(initialZoom);\n    });\n  }\n\n  render(\n    <GeoSearchControls\n      cssClasses={cssClasses}\n      enableRefine={enableRefine}\n      enableRefineControl={enableRefineControl}\n      enableClearMapRefinement={enableClearMapRefinement}\n      isRefineOnMapMove={isRefineOnMapMove()}\n      isRefinedWithMap={isRefinedWithMap()}\n      hasMapMoveSinceLastRefine={hasMapMoveSinceLastRefine()}\n      onRefineToggle={toggleRefineOnMapMove}\n      onRefineClick={() =>\n        refineWithMap({\n          mapInstance: renderState.mapInstance,\n          refine,\n        })\n      }\n      onClearClick={clearMapRefinement}\n      templateProps={renderState.templateProps}\n    />,\n    container.querySelector(`.${cssClasses.tree}`)\n  );\n};\n\nexport default renderer;\n","import { createDocumentationMessageGenerator, warning } from '../../lib/utils';\n\nimport type { WidgetFactory, WidgetRenderState } from '../../types';\nimport type { SearchParameters, SearchResults } from 'algoliasearch-helper';\n\nexport type AnalyticsWidgetParamsPushFunction = (\n  /**\n   * Contains the search parameters, serialized as a query string.\n   */\n  formattedParameters: string,\n\n  /**\n   * Contains the whole search state.\n   */\n  state: SearchParameters,\n\n  /**\n   * The last received results.\n   */\n  results: SearchResults\n) => void;\n\nexport type AnalyticsWidgetParams = {\n  /**\n   * A function that is called every time the query or refinements changes. You\n   * need to add the logic to push the data to your analytics platform.\n   */\n  pushFunction: AnalyticsWidgetParamsPushFunction;\n\n  /**\n   * The number of milliseconds between the last search keystroke and calling `pushFunction`.\n   *\n   * @default 3000\n   */\n  delay?: number;\n\n  /**\n   * Triggers `pushFunction` after click on page or redirecting the page. This is useful if\n   * you want the pushFunction to be called for the last actions before the user leaves the\n   * current page, even if the delay wasn’t reached.\n   *\n   * @default false\n   */\n  triggerOnUIInteraction?: boolean;\n\n  /**\n   * Triggers `pushFunction` when InstantSearch is initialized. This means\n   * the `pushFunction` might be called even though the user didn’t perfom\n   * any search-related action.\n   *\n   * @default true\n   */\n  pushInitialSearch?: boolean;\n\n  /**\n   * Triggers `pushFunction` when the page changes, either through the UI or programmatically.\n   *\n   * @default false\n   */\n  pushPagination?: boolean;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'analytics' });\n\nexport type AnalyticsWidgetDescription = {\n  $$type: 'ais.analytics';\n  $$widgetType: 'ais.analytics';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    analytics: WidgetRenderState<\n      Record<string, unknown>,\n      AnalyticsWidgetParams\n    >;\n  };\n};\n\nexport type AnalyticsWidget = WidgetFactory<\n  AnalyticsWidgetDescription,\n  AnalyticsWidgetParams,\n  AnalyticsWidgetParams\n>;\n\n// @major this widget will be removed from the next major version.\nconst analytics: AnalyticsWidget = function analytics(widgetParams) {\n  const {\n    pushFunction,\n    delay = 3000,\n    triggerOnUIInteraction = false,\n    pushInitialSearch = true,\n    pushPagination = false,\n  } = widgetParams || {};\n\n  if (!pushFunction) {\n    throw new Error(withUsage('The `pushFunction` option is required.'));\n  }\n\n  warning(\n    false,\n    `\\`analytics\\` widget has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor the migration, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#analytics-widget`\n  );\n\n  type AnalyticsState = {\n    results: SearchResults;\n    state: SearchParameters;\n  } | null;\n\n  let cachedState: AnalyticsState = null;\n\n  type RefinementParameters = {\n    [key: string]: string[];\n  };\n\n  const serializeRefinements = function (\n    parameters: RefinementParameters\n  ): string {\n    const refinements: string[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const parameter in parameters) {\n      if (parameters.hasOwnProperty(parameter)) {\n        const values = parameters[parameter].join('+');\n        refinements.push(\n          `${encodeURIComponent(parameter)}=${encodeURIComponent(\n            parameter\n          )}_${encodeURIComponent(values)}`\n        );\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  const serializeNumericRefinements = function (\n    numericRefinements: SearchParameters['numericRefinements']\n  ): string {\n    const refinements: string[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const attribute in numericRefinements) {\n      if (numericRefinements.hasOwnProperty(attribute)) {\n        const filter = numericRefinements[attribute];\n\n        if (filter.hasOwnProperty('>=') && filter.hasOwnProperty('<=')) {\n          if (\n            filter['>='] &&\n            filter['>='][0] === filter['<='] &&\n            filter['<='][0]\n          ) {\n            refinements.push(`${attribute}=${attribute}_${filter['>=']}`);\n          } else {\n            refinements.push(\n              `${attribute}=${attribute}_${filter['>=']}to${filter['<=']}`\n            );\n          }\n        } else if (filter.hasOwnProperty('>=')) {\n          refinements.push(`${attribute}=${attribute}_from${filter['>=']}`);\n        } else if (filter.hasOwnProperty('<=')) {\n          refinements.push(`${attribute}=${attribute}_to${filter['<=']}`);\n        } else if (filter.hasOwnProperty('=')) {\n          const equals: string[] = [];\n\n          // eslint-disable-next-line no-restricted-syntax\n          for (const equal in filter['=']) {\n            // eslint-disable-next-line max-depth\n            if (filter['='].hasOwnProperty(equal)) {\n              // @ts-ignore somehow 'equal' is a string, even though it's a number?\n              equals.push(filter['='][equal]);\n            }\n          }\n\n          refinements.push(`${attribute}=${attribute}_${equals.join('-')}`);\n        }\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  let lastSentData = '';\n\n  const sendAnalytics = function (analyticsState: AnalyticsState | null): void {\n    if (analyticsState === null) {\n      return;\n    }\n\n    const serializedParams: string[] = [];\n\n    const serializedRefinements = serializeRefinements({\n      ...analyticsState.state.disjunctiveFacetsRefinements,\n      ...analyticsState.state.facetsRefinements,\n      ...analyticsState.state.hierarchicalFacetsRefinements,\n    });\n\n    const serializedNumericRefinements = serializeNumericRefinements(\n      analyticsState.state.numericRefinements\n    );\n\n    if (serializedRefinements !== '') {\n      serializedParams.push(serializedRefinements);\n    }\n\n    if (serializedNumericRefinements !== '') {\n      serializedParams.push(serializedNumericRefinements);\n    }\n\n    const stringifiedParams = serializedParams.join('&');\n\n    let dataToSend = `Query: ${\n      analyticsState.state.query || ''\n    }, ${stringifiedParams}`;\n    if (pushPagination === true) {\n      dataToSend += `, Page: ${analyticsState.state.page || 0}`;\n    }\n\n    if (lastSentData !== dataToSend) {\n      pushFunction(\n        stringifiedParams,\n        analyticsState.state,\n        analyticsState.results\n      );\n\n      lastSentData = dataToSend;\n    }\n  };\n\n  let pushTimeout: number;\n  let isInitialSearch = true;\n\n  if (pushInitialSearch === true) {\n    isInitialSearch = false;\n  }\n\n  const onClick = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  const onUnload = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  return {\n    $$type: 'ais.analytics',\n    $$widgetType: 'ais.analytics',\n\n    init() {\n      if (triggerOnUIInteraction === true) {\n        document.addEventListener('click', onClick);\n        window.addEventListener('beforeunload', onUnload);\n      }\n    },\n\n    render({ results, state }) {\n      if (isInitialSearch === true) {\n        isInitialSearch = false;\n\n        return;\n      }\n\n      cachedState = { results, state };\n\n      if (pushTimeout) {\n        clearTimeout(pushTimeout);\n      }\n\n      pushTimeout = window.setTimeout(() => sendAnalytics(cachedState), delay);\n    },\n\n    dispose() {\n      if (triggerOnUIInteraction === true) {\n        document.removeEventListener('click', onClick);\n        window.removeEventListener('beforeunload', onUnload);\n      }\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        analytics: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default analytics;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { BreadcrumbConnectorParamsItem } from '../../connectors/breadcrumb/connectBreadcrumb';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  BreadcrumbCSSClasses,\n  BreadcrumbTemplates,\n} from '../../widgets/breadcrumb/breadcrumb';\n\nexport type BreadcrumbComponentCSSClasses =\n  ComponentCSSClasses<BreadcrumbCSSClasses>;\n\nexport type BreadcrumbComponentTemplates = Required<BreadcrumbTemplates>;\n\nexport type BreadcrumbProps = {\n  items: BreadcrumbConnectorParamsItem[];\n  cssClasses: BreadcrumbComponentCSSClasses;\n  templateProps: PreparedTemplateProps<BreadcrumbComponentTemplates>;\n  createURL: (value: BreadcrumbConnectorParamsItem['value']) => string;\n  refine: (value: BreadcrumbConnectorParamsItem['value']) => void;\n  canRefine?: boolean;\n};\n\nconst Breadcrumb = ({\n  items,\n  cssClasses,\n  templateProps,\n  createURL,\n  refine,\n}: BreadcrumbProps) => (\n  <div\n    className={cx(\n      cssClasses.root,\n      items.length === 0 && cssClasses.noRefinementRoot\n    )}\n  >\n    <ul className={cssClasses.list}>\n      <li\n        className={cx(\n          cssClasses.item,\n          items.length === 0 && cssClasses.selectedItem\n        )}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"home\"\n          rootTagName=\"a\"\n          rootProps={{\n            className: cssClasses.link,\n            href: createURL(null),\n            onClick: (event: MouseEvent) => {\n              event.preventDefault();\n              refine(null);\n            },\n          }}\n        />\n      </li>\n\n      {items.map((item, idx) => {\n        const isLast = idx === items.length - 1;\n\n        return (\n          <li\n            key={item.label + idx}\n            className={cx(cssClasses.item, isLast && cssClasses.selectedItem)}\n          >\n            <Template\n              {...templateProps}\n              templateKey=\"separator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.separator,\n                'aria-hidden': true,\n              }}\n            />\n            {isLast ? (\n              item.label\n            ) : (\n              <a\n                className={cssClasses.link}\n                href={createURL(item.value)}\n                onClick={(event) => {\n                  event.preventDefault();\n                  refine(item.value);\n                }}\n              >\n                {item.label}\n              </a>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </div>\n);\n\nexport default Breadcrumb;\n","import type { BreadcrumbComponentTemplates } from '../../components/Breadcrumb/Breadcrumb';\n\nconst defaultTemplates: BreadcrumbComponentTemplates = {\n  home() {\n    return 'Home';\n  },\n  separator() {\n    return '>';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\nimport connectBreadcrumb from '../../connectors/breadcrumb/connectBreadcrumb';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  BreadcrumbComponentCSSClasses,\n  BreadcrumbComponentTemplates,\n} from '../../components/Breadcrumb/Breadcrumb';\nimport type {\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams,\n  BreadcrumbRenderState,\n} from '../../connectors/breadcrumb/connectBreadcrumb';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'breadcrumb' });\nconst suit = component('Breadcrumb');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: BreadcrumbComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<BreadcrumbComponentTemplates>;\n    };\n    templates: BreadcrumbTemplates;\n  }): Renderer<BreadcrumbRenderState, Partial<BreadcrumbWidgetParams>> =>\n  (\n    { canRefine, createURL, instantSearchInstance, items, refine },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <Breadcrumb\n        canRefine={canRefine}\n        cssClasses={cssClasses}\n        createURL={createURL}\n        items={items}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type BreadcrumbCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to the items of the list. The items contains the link and the separator.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to the selected item in the list: the last one or the home if there are no refinements.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS class to add to the separator.\n   */\n  separator: string | string[];\n\n  /**\n   * CSS class to add to the links in the items.\n   */\n  link: string | string[];\n}>;\n\nexport type BreadcrumbTemplates = Partial<{\n  /**\n   * Label of the breadcrumb's first element.\n   */\n  home: Template;\n\n  /**\n   * Symbol used to separate the elements of the breadcrumb.\n   */\n  separator: Template;\n}>;\n\nexport type BreadcrumbWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: BreadcrumbTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: BreadcrumbCSSClasses;\n};\n\nexport type BreadcrumbWidget = WidgetFactory<\n  BreadcrumbWidgetDescription & { $$widgetType: 'ais.breadcrumb' },\n  BreadcrumbConnectorParams,\n  BreadcrumbWidgetParams\n>;\n\nconst breadcrumb: BreadcrumbWidget = function breadcrumb(widgetParams) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectBreadcrumb(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attributes, separator, rootPath, transformItems }),\n    $$widgetType: 'ais.breadcrumb',\n  };\n};\n\nexport default breadcrumb;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { ClearRefinementsRenderState } from '../../connectors/clear-refinements/connectClearRefinements';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  ClearRefinementsCSSClasses,\n  ClearRefinementsTemplates,\n} from '../../widgets/clear-refinements/clear-refinements';\n\nexport type ClearRefinementsComponentCSSClasses =\n  ComponentCSSClasses<ClearRefinementsCSSClasses>;\n\nexport type ClearRefinementsComponentTemplates =\n  Required<ClearRefinementsTemplates>;\n\nexport type ClearRefinementsProps = {\n  refine: ClearRefinementsRenderState['refine'];\n  cssClasses: ClearRefinementsComponentCSSClasses;\n  hasRefinements: ClearRefinementsRenderState['hasRefinements'];\n  templateProps: PreparedTemplateProps<ClearRefinementsComponentTemplates>;\n};\n\nconst ClearRefinements = ({\n  hasRefinements,\n  refine,\n  cssClasses,\n  templateProps,\n}: ClearRefinementsProps) => (\n  <div className={cssClasses.root}>\n    <Template\n      {...templateProps}\n      templateKey=\"resetLabel\"\n      rootTagName=\"button\"\n      rootProps={{\n        className: cx(\n          cssClasses.button,\n          !hasRefinements && cssClasses.disabledButton\n        ),\n        onClick: refine,\n        disabled: !hasRefinements,\n      }}\n      data={{ hasRefinements }}\n    />\n  </div>\n);\n\nexport default ClearRefinements;\n","import type { ClearRefinementsComponentTemplates } from '../../components/ClearRefinements/ClearRefinements';\n\nconst defaultTemplates: ClearRefinementsComponentTemplates = {\n  resetLabel() {\n    return 'Clear refinements';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport ClearRefinements from '../../components/ClearRefinements/ClearRefinements';\nimport connectClearRefinements from '../../connectors/clear-refinements/connectClearRefinements';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  ClearRefinementsComponentCSSClasses,\n  ClearRefinementsComponentTemplates,\n} from '../../components/ClearRefinements/ClearRefinements';\nimport type {\n  ClearRefinementsConnectorParams,\n  ClearRefinementsRenderState,\n  ClearRefinementsWidgetDescription,\n} from '../../connectors/clear-refinements/connectClearRefinements';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n});\nconst suit = component('ClearRefinements');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ClearRefinementsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<ClearRefinementsComponentTemplates>;\n    };\n    templates: ClearRefinementsTemplates;\n  }): Renderer<\n    ClearRefinementsRenderState,\n    Partial<ClearRefinementsWidgetParams>\n  > =>\n  ({ refine, canRefine, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <ClearRefinements\n        refine={refine}\n        cssClasses={cssClasses}\n        hasRefinements={canRefine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type ClearRefinementsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapper element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the button of the widget.\n   */\n  button: string | string[];\n\n  /**\n   * CSS class to add to the button when there are no refinements.\n   */\n  disabledButton: string | string[];\n}>;\n\nexport type ClearRefinementsTemplates = Partial<{\n  /**\n   * Template for the content of the button\n   */\n  resetLabel: Template<{ hasRefinements: boolean }>;\n}>;\n\nexport type ClearRefinementsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ClearRefinementsTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ClearRefinementsCSSClasses;\n};\n\nexport type ClearRefinementsWidget = WidgetFactory<\n  ClearRefinementsWidgetDescription & { $$widgetType: 'ais.clearRefinements' },\n  ClearRefinementsConnectorParams,\n  ClearRefinementsWidgetParams\n>;\n\nconst clearRefinements: ClearRefinementsWidget = (widgetParams) => {\n  const {\n    container,\n    templates = {},\n    includedAttributes,\n    excludedAttributes,\n    transformItems,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    disabledButton: cx(\n      suit({ descendantName: 'button', modifierName: 'disabled' }),\n      userCssClasses.disabledButton\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectClearRefinements(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      includedAttributes,\n      excludedAttributes,\n      transformItems,\n    }),\n    $$widgetType: 'ais.clearRefinements',\n  };\n};\n\nexport default clearRefinements;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { isSpecialClick, capitalize } from '../../lib/utils';\n\nimport type {\n  CurrentRefinementsConnectorParamsItem,\n  CurrentRefinementsConnectorParamsRefinement,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { CurrentRefinementsCSSClasses } from '../../widgets/current-refinements/current-refinements';\n\nexport type CurrentRefinementsComponentCSSClasses =\n  ComponentCSSClasses<CurrentRefinementsCSSClasses>;\n\nexport type CurrentRefinementsProps = {\n  items: CurrentRefinementsConnectorParamsItem[];\n  cssClasses: CurrentRefinementsComponentCSSClasses;\n  canRefine: boolean;\n};\n\nconst createItemKey = ({\n  attribute,\n  value,\n  type,\n  operator,\n}: CurrentRefinementsConnectorParamsRefinement): string =>\n  [attribute, type, value, operator]\n    .map((key) => key)\n    .filter(Boolean)\n    .join(':');\n\nconst handleClick = (callback: () => void) => (event: any) => {\n  if (isSpecialClick(event)) {\n    return;\n  }\n\n  event.preventDefault();\n  callback();\n};\n\nconst CurrentRefinements = ({\n  items,\n  cssClasses,\n  canRefine,\n}: CurrentRefinementsProps) => (\n  <div\n    className={cx(cssClasses.root, !canRefine && cssClasses.noRefinementRoot)}\n  >\n    <ul className={cssClasses.list}>\n      {items.map((item, index) => (\n        <li\n          key={`${item.indexName}-${item.attribute}-${index}`}\n          className={cssClasses.item}\n        >\n          <span className={cssClasses.label}>{capitalize(item.label)}: </span>\n\n          {item.refinements.map((refinement) => (\n            <span\n              key={createItemKey(refinement)}\n              className={cssClasses.category}\n            >\n              <span className={cssClasses.categoryLabel}>\n                {refinement.attribute === 'query' ? (\n                  <q>{refinement.label}</q>\n                ) : (\n                  refinement.label\n                )}\n              </span>\n\n              <button\n                className={cssClasses.delete}\n                type=\"button\"\n                onClick={handleClick(item.refine.bind(null, refinement))}\n              >\n                ✕\n              </button>\n            </span>\n          ))}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default CurrentRefinements;\n","export function capitalize(text: string): string {\n  return text.toString().charAt(0).toUpperCase() + text.toString().slice(1);\n}\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport type { GeoSearchComponentTemplates } from './geo-search';\n\nconst defaultTemplates: GeoSearchComponentTemplates = {\n  HTMLMarker() {\n    return <p>Your custom HTML Marker</p>;\n  },\n  reset() {\n    return 'Clear the map refinement';\n  },\n  toggle() {\n    return 'Search as I move the map';\n  },\n  redo() {\n    return 'Redo search here';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, Fragment } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport GeoSearchButton from './GeoSearchButton';\nimport GeoSearchToggle from './GeoSearchToggle';\n\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  GeoSearchCSSClasses,\n  GeoSearchTemplates,\n} from '../../widgets/geo-search/geo-search';\n\ntype Props = {\n  cssClasses: ComponentCSSClasses<GeoSearchCSSClasses>;\n  enableRefine: boolean;\n  enableRefineControl: boolean;\n  enableClearMapRefinement: boolean;\n  isRefineOnMapMove: boolean;\n  isRefinedWithMap: boolean;\n  hasMapMoveSinceLastRefine: boolean;\n  onRefineToggle: (event: Event) => void;\n  onRefineClick: (event: MouseEvent) => void;\n  onClearClick: (event: MouseEvent) => void;\n  templateProps: PreparedTemplateProps<GeoSearchTemplates>;\n};\n\nconst GeoSearchControls = ({\n  cssClasses,\n  enableRefine,\n  enableRefineControl,\n  enableClearMapRefinement,\n  isRefineOnMapMove,\n  isRefinedWithMap,\n  hasMapMoveSinceLastRefine,\n  onRefineToggle,\n  onRefineClick,\n  onClearClick,\n  templateProps,\n}: Props) => (\n  <Fragment>\n    {enableRefine && (\n      <div>\n        {enableRefineControl && (\n          <div className={cssClasses.control}>\n            {isRefineOnMapMove || !hasMapMoveSinceLastRefine ? (\n              <GeoSearchToggle\n                classNameLabel={cx(\n                  cssClasses.label,\n                  isRefineOnMapMove && cssClasses.selectedLabel\n                )}\n                classNameInput={cssClasses.input}\n                checked={isRefineOnMapMove}\n                onToggle={onRefineToggle}\n              >\n                <Template\n                  {...templateProps}\n                  templateKey=\"toggle\"\n                  rootTagName=\"span\"\n                />\n              </GeoSearchToggle>\n            ) : (\n              <GeoSearchButton\n                className={cssClasses.redo}\n                disabled={!hasMapMoveSinceLastRefine}\n                onClick={onRefineClick}\n              >\n                <Template\n                  {...templateProps}\n                  templateKey=\"redo\"\n                  rootTagName=\"span\"\n                />\n              </GeoSearchButton>\n            )}\n          </div>\n        )}\n\n        {!enableRefineControl && !isRefineOnMapMove && (\n          <div className={cssClasses.control}>\n            <GeoSearchButton\n              className={cx(\n                cssClasses.redo,\n                !hasMapMoveSinceLastRefine && cssClasses.disabledRedo\n              )}\n              disabled={!hasMapMoveSinceLastRefine}\n              onClick={onRefineClick}\n            >\n              <Template\n                {...templateProps}\n                templateKey=\"redo\"\n                rootTagName=\"span\"\n              />\n            </GeoSearchButton>\n          </div>\n        )}\n\n        {enableClearMapRefinement && isRefinedWithMap && (\n          <GeoSearchButton className={cssClasses.reset} onClick={onClearClick}>\n            <Template\n              {...templateProps}\n              templateKey=\"reset\"\n              rootTagName=\"span\"\n            />\n          </GeoSearchButton>\n        )}\n      </div>\n    )}\n  </Fragment>\n);\n\nexport default GeoSearchControls;\n","// global for TypeScript alone\n/* global google */\nimport { cx } from 'instantsearch-ui-components';\nimport { render } from 'preact';\n\nimport connectGeoSearch from '../../connectors/geo-search/connectGeoSearch';\nimport { component } from '../../lib/suit';\nimport { renderTemplate } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport createHTMLMarker from './createHTMLMarker';\nimport defaultTemplates from './defaultTemplates';\nimport renderer from './GeoSearchRenderer';\n\nimport type {\n  GeoSearchConnectorParams,\n  GeoSearchWidgetDescription,\n  GeoHit,\n} from '../../connectors/geo-search/connectGeoSearch';\nimport type { GeoLoc, Template, WidgetFactory } from '../../types';\nimport type { HTMLMarkerArguments } from './createHTMLMarker';\n\nexport type CreateMarker = (args: {\n  item: GeoHit;\n  map: google.maps.Map;\n}) => google.maps.OverlayView | google.maps.Marker;\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'geo-search' });\nconst suit = component('GeoSearch');\n\nexport type GeoSearchTemplates<THit extends GeoHit = GeoHit> = Partial<{\n  /** Template to use for the marker. */\n  HTMLMarker: Template<THit>;\n  /** Template for the reset button. */\n  reset: Template;\n  /** Template for the toggle label. */\n  toggle: Template;\n  /** Template for the redo button. */\n  redo: Template;\n}>;\n\nexport type GeoSearchComponentTemplates = Required<GeoSearchTemplates>;\n\nexport type GeoSearchCSSClasses = Partial<{\n  /** The root div of the widget. */\n  root: string | string[];\n  /** The map container of the widget. */\n  map: string | string[];\n  /** The control element of the widget. */\n  control: string | string[];\n  /** The label of the control element. */\n  label: string | string[];\n  /** The selected label of the control element. */\n  selectedLabel: string | string[];\n  /** The input of the control element. */\n  input: string | string[];\n  /** The redo search button. */\n  redo: string | string[];\n  /** The disabled redo search button. */\n  disabledRedo: string | string[];\n  /** The reset refinement button. */\n  reset: string | string[];\n}>;\n\nexport type GeoSearchMarker<TOptions, THit extends GeoHit = GeoHit> = {\n  /**\n   * Function used to create the options passed to the Google Maps marker.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MarkerOptions\n   */\n  createOptions?: (item: THit) => TOptions;\n  /**\n   * Object that takes an event type (ex: `click`, `mouseover`) as key and a\n   * listener as value. The listener is provided with an object that contains:\n   * `event`, `item`, `marker`, `map`.\n   */\n  events: {\n    [key: string]: (event: {\n      item: any;\n      marker: any;\n      map: any;\n      event: any;\n    }) => void;\n  };\n};\n\nexport type GeoSearchWidgetParams<THit extends GeoHit = GeoHit> = {\n  /**\n   * By default the map will set the zoom accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we\n   * need to provide a zoom to render the map.\n   * @default 1\n   */\n  initialZoom?: number;\n  /**\n   * By default the map will set the position accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we need\n   * to provide a position to render the map. This option is ignored when the `position`\n   * is provided.\n   * @default { lat: 0, lng: 0 }\n   */\n  initialPosition?: GeoLoc;\n  /** Templates to use for the widget. */\n  templates?: GeoSearchTemplates<THit>;\n  /** CSS classes to add to the wrapping elements. */\n  cssClasses?: GeoSearchCSSClasses;\n  /**\n   * Options for customize the built-in Google Maps marker. This option is\n   * ignored when the `customHTMLMarker` is provided.\n   */\n  builtInMarker?: Partial<GeoSearchMarker<google.maps.MarkerOptions>>;\n  /**\n   * Options to customize the HTML marker. We provide an alternative to the\n   * built-in Google Maps marker in order to have a full control of the marker\n   * rendering. You can use plain HTML to build your marker.\n   */\n  customHTMLMarker?:\n    | Partial<GeoSearchMarker<Partial<HTMLMarkerArguments>>>\n    | boolean;\n  /**\n   * If true, the map is used to search - otherwise it's for display purposes only.\n   * @default true\n   */\n  enableRefine?: boolean;\n  /**\n   * If true, a button is displayed on the map when the refinement is coming from\n   * the map in order to remove it.\n   * @default true\n   */\n  enableClearMapRefinement?: boolean;\n  /**\n   * If true, the user can toggle the option `enableRefineOnMapMove` directly from the map.\n   * @default true\n   */\n  enableRefineControl?: boolean;\n  /**\n   * Option forwarded to the Google Maps constructor.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MapOptions\n   */\n  mapOptions?: google.maps.MapOptions;\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Reference to the global `window.google` object.\n   * See [the documentation](https://developers.google.com/maps/documentation/javascript/tutorial) for more information.\n   */\n  googleReference: typeof window['google'];\n};\n\nexport type GeoSearchWidget = WidgetFactory<\n  GeoSearchWidgetDescription & { $$widgetType: 'ais.geoSearch' },\n  GeoSearchConnectorParams,\n  GeoSearchWidgetParams\n>;\n\n/**\n * The **GeoSearch** widget displays the list of results from the search on a Google Maps. It also provides a way to search for results based on their position. The widget also provide some of the common GeoSearch patterns like search on map interaction.\n *\n * @requirements\n *\n * Note that the GeoSearch widget uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be displayed on the map.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n *\n * You are also responsible for loading the Google Maps library, it's not shipped with InstantSearch. You need to load the Google Maps library and pass a reference to the widget. You can find more information about how to install the library in [the Google Maps documentation](https://developers.google.com/maps/documentation/javascript/tutorial).\n *\n * Don't forget to explicitly set the `height` of the map container (default class `.ais-geo-search--map`), otherwise it won't be shown (it's a requirement of Google Maps).\n */\nexport default (function geoSearch<THit extends GeoHit = GeoHit>(\n  widgetParams: GeoSearchWidgetParams<THit> & GeoSearchConnectorParams<THit>\n) {\n  const {\n    initialZoom = 1,\n    initialPosition = { lat: 0, lng: 0 },\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    builtInMarker: userBuiltInMarker = {},\n    customHTMLMarker: userCustomHTMLMarker,\n    enableRefine = true,\n    enableClearMapRefinement = true,\n    enableRefineControl = true,\n    container,\n    googleReference,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  const defaultBuiltInMarker: GeoSearchMarker<google.maps.MarkerOptions> = {\n    createOptions: () => ({}),\n    events: {},\n  };\n\n  const defaultCustomHTMLMarker: GeoSearchMarker<Partial<HTMLMarkerArguments>> =\n    {\n      createOptions: () => ({}),\n      events: {},\n    };\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (!googleReference) {\n    throw new Error(withUsage('The `googleReference` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    // Required only to mount / unmount the Preact tree\n    tree: suit({ descendantName: 'tree' }),\n    map: cx(suit({ descendantName: 'map' }), userCssClasses.map),\n    control: cx(suit({ descendantName: 'control' }), userCssClasses.control),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    selectedLabel: cx(\n      suit({ descendantName: 'label', modifierName: 'selected' }),\n      userCssClasses.selectedLabel\n    ),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    redo: cx(suit({ descendantName: 'redo' }), userCssClasses.redo),\n    disabledRedo: cx(\n      suit({ descendantName: 'redo', modifierName: 'disabled' }),\n      userCssClasses.disabledRedo\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n  };\n\n  const templates: GeoSearchTemplates<THit> = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const builtInMarker = {\n    ...defaultBuiltInMarker,\n    ...userBuiltInMarker,\n  };\n\n  const isCustomHTMLMarker =\n    Boolean(userCustomHTMLMarker) || Boolean(userTemplates.HTMLMarker);\n\n  const customHTMLMarker = isCustomHTMLMarker && {\n    ...defaultCustomHTMLMarker,\n    ...(userCustomHTMLMarker as Partial<\n      GeoSearchMarker<Partial<HTMLMarkerArguments>>\n    >),\n  };\n\n  const createBuiltInMarker: CreateMarker = ({ item, ...rest }) =>\n    new googleReference.maps.Marker({\n      ...builtInMarker.createOptions!(item),\n      ...rest,\n      // @ts-expect-error @types/googlemaps doesn't document this\n      __id: item.objectID,\n      position: item._geoloc,\n    });\n\n  const HTMLMarker = createHTMLMarker(googleReference);\n  const createCustomHTMLMarker: CreateMarker = ({ item, ...rest }) =>\n    new HTMLMarker({\n      // this is only called when customHTMLMarker is defined\n      ...(customHTMLMarker as GeoSearchMarker<Partial<HTMLMarkerArguments>>)\n        .createOptions!(item),\n      ...rest,\n      __id: item.objectID,\n      position: item._geoloc,\n      className: cx(suit({ descendantName: 'marker' })),\n      template: renderTemplate({\n        templateKey: 'HTMLMarker',\n        templates,\n        data: item,\n      }),\n    });\n\n  const createMarker = !customHTMLMarker\n    ? createBuiltInMarker\n    : createCustomHTMLMarker;\n\n  const markerOptions = !customHTMLMarker ? builtInMarker : customHTMLMarker;\n\n  const makeWidget = connectGeoSearch(renderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget<THit>({\n      ...otherWidgetParams,\n      // @TODO: this type doesn't preserve the generic correctly,\n      // (but as they're internal only it's not a big problem)\n      templates: templates as any,\n      renderState: {},\n      container: containerNode,\n      googleReference,\n      initialZoom,\n      initialPosition,\n      cssClasses,\n      createMarker,\n      markerOptions,\n      enableRefine,\n      enableClearMapRefinement,\n      enableRefineControl,\n    }),\n    $$widgetType: 'ais.geoSearch',\n  };\n} satisfies GeoSearchWidget);\n","/** @jsx h */\n\nimport { h, createRef, Component } from 'preact';\n\nimport { noop } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  SearchBoxCSSClasses,\n  SearchBoxTemplates,\n} from '../../widgets/search-box/search-box';\n\nexport type SearchBoxComponentCSSClasses =\n  ComponentCSSClasses<SearchBoxCSSClasses>;\n\nexport type SearchBoxComponentTemplates = Required<SearchBoxTemplates>;\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  cssClasses: SearchBoxComponentCSSClasses;\n  templates: SearchBoxComponentTemplates;\n  query?: string;\n  showSubmit?: boolean;\n  showReset?: boolean;\n  showLoadingIndicator?: boolean;\n  refine?: (value: string) => void;\n  autofocus?: boolean;\n  searchAsYouType?: boolean;\n  ignoreCompositionEvents?: boolean;\n  isSearchStalled?: boolean;\n  disabled?: boolean;\n  ariaLabel?: string;\n  onChange?: (event: Event) => void;\n  onSubmit?: (event: Event) => void;\n  onReset?: (event: Event) => void;\n};\n\nconst defaultProps = {\n  query: '',\n  showSubmit: true,\n  showReset: true,\n  showLoadingIndicator: true,\n  autofocus: false,\n  searchAsYouType: true,\n  ignoreCompositionEvents: false,\n  isSearchStalled: false,\n  disabled: false,\n  ariaLabel: 'Search',\n  onChange: noop,\n  onSubmit: noop,\n  onReset: noop,\n  refine: noop,\n};\n\ntype SearchBoxPropsWithDefaultProps = SearchBoxProps &\n  Readonly<typeof defaultProps>;\n\ntype SearchBoxState = {\n  query: string;\n  focused: boolean;\n};\n\nclass SearchBox extends Component<\n  SearchBoxPropsWithDefaultProps,\n  SearchBoxState\n> {\n  public static defaultProps = defaultProps;\n\n  public state = {\n    query: this.props.query,\n    focused: false,\n  };\n\n  private input = createRef<HTMLInputElement>();\n\n  /**\n   * This public method is used in the RefinementList SFFV search box\n   * to reset the input state when an item is selected.\n   *\n   * @see RefinementList#componentWillReceiveProps\n   * @return {undefined}\n   */\n  public resetInput() {\n    this.setState({ query: '' });\n  }\n\n  private onInput = (event: Event) => {\n    const { searchAsYouType, refine, onChange } = this.props;\n    const query = (event.target as HTMLInputElement).value;\n\n    if (\n      !(\n        this.props.ignoreCompositionEvents &&\n        (event as KeyboardEvent).isComposing\n      )\n    ) {\n      if (searchAsYouType) {\n        refine(query);\n      }\n      this.setState({ query });\n\n      onChange(event);\n    }\n  };\n\n  public componentWillReceiveProps(nextProps: SearchBoxPropsWithDefaultProps) {\n    /**\n     * when the user is typing, we don't want to replace the query typed\n     * by the user (state.query) with the query exposed by the connector (props.query)\n     * see: https://github.com/algolia/instantsearch/issues/4141\n     */\n    if (!this.state.focused && nextProps.query !== this.state.query) {\n      this.setState({ query: nextProps.query });\n    }\n  }\n\n  private onSubmit = (event: Event) => {\n    const { searchAsYouType, refine, onSubmit } = this.props;\n\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.input.current) {\n      this.input.current.blur();\n    }\n\n    if (!searchAsYouType) {\n      refine(this.state.query);\n    }\n\n    onSubmit(event);\n\n    return false;\n  };\n\n  private onReset = (event: Event) => {\n    const { refine, onReset } = this.props;\n    const query = '';\n\n    if (this.input.current) {\n      this.input.current.focus();\n    }\n\n    refine(query);\n    this.setState({ query });\n\n    onReset(event);\n  };\n\n  private onBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  private onFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  public render() {\n    const {\n      cssClasses,\n      placeholder,\n      autofocus,\n      showSubmit,\n      showReset,\n      showLoadingIndicator,\n      templates,\n      isSearchStalled,\n      ariaLabel,\n    } = this.props;\n\n    return (\n      <div className={cssClasses.root}>\n        <form\n          action=\"\"\n          role=\"search\"\n          className={cssClasses.form}\n          noValidate\n          onSubmit={this.onSubmit}\n          onReset={this.onReset}\n        >\n          <input\n            ref={this.input}\n            value={this.state.query}\n            disabled={this.props.disabled}\n            className={cssClasses.input}\n            type=\"search\"\n            placeholder={placeholder}\n            autoFocus={autofocus}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            // @ts-expect-error `spellCheck` attribute is missing in preact JSX types\n            spellCheck=\"false\"\n            maxLength={512}\n            onInput={this.onInput}\n            // see: https://github.com/preactjs/preact/issues/1978\n            // eslint-disable-next-line react/no-unknown-property\n            oncompositionend={this.onInput}\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n            aria-label={ariaLabel}\n          />\n\n          <Template\n            templateKey=\"submit\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.submit,\n              type: 'submit',\n              title: 'Submit the search query',\n              hidden: !showSubmit,\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          <Template\n            templateKey=\"reset\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.reset,\n              type: 'reset',\n              title: 'Clear the search query',\n              hidden: !(\n                showReset &&\n                this.state.query.trim() &&\n                !isSearchStalled\n              ),\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          {showLoadingIndicator && (\n            <Template\n              templateKey=\"loadingIndicator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.loadingIndicator,\n                hidden: !isSearchStalled,\n              }}\n              templates={templates}\n              data={{ cssClasses }}\n            />\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { JSX } from 'preact';\n\nexport type RefinementListItemProps = {\n  facetValueToRefine: string;\n  handleClick: (args: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) => void;\n  isRefined: boolean;\n  subItems?: JSX.Element;\n  templateData: Record<string, any>;\n  templateKey: string;\n  templateProps?: Record<string, any>;\n  className: string;\n};\n\nfunction RefinementListItem({\n  className,\n  handleClick,\n  facetValueToRefine,\n  isRefined,\n  templateProps,\n  templateKey,\n  templateData,\n  subItems,\n}: RefinementListItemProps) {\n  return (\n    <li\n      className={className}\n      onClick={(originalEvent) => {\n        handleClick({\n          facetValueToRefine,\n          isRefined,\n          originalEvent,\n        });\n      }}\n    >\n      {/* @MAJOR ensure conformity with InstantSearch.css specs */}\n      <Template\n        {...templateProps}\n        templateKey={templateKey}\n        data={templateData}\n      />\n      {subItems}\n    </li>\n  );\n}\n\nexport default RefinementListItem;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, createRef, Component } from 'preact';\n\nimport { isSpecialClick, isEqual } from '../../lib/utils';\nimport SearchBox from '../SearchBox/SearchBox';\nimport Template from '../Template/Template';\n\nimport RefinementListItem from './RefinementListItem';\n\nimport type { HierarchicalMenuItem } from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses, CreateURL, Templates } from '../../types';\nimport type { HierarchicalMenuComponentCSSClasses } from '../../widgets/hierarchical-menu/hierarchical-menu';\nimport type { RatingMenuComponentCSSClasses } from '../../widgets/rating-menu/rating-menu';\nimport type { RefinementListOwnCSSClasses } from '../../widgets/refinement-list/refinement-list';\nimport type {\n  SearchBoxComponentCSSClasses,\n  SearchBoxComponentTemplates,\n} from '../SearchBox/SearchBox';\nimport type { JSX } from 'preact';\n\n// CSS types\ntype RefinementListOptionalClasses =\n  | 'noResults'\n  | 'checkbox'\n  | 'labelText'\n  | 'showMore'\n  | 'disabledShowMore'\n  | 'searchBox'\n  | 'count';\n\ntype RefinementListWidgetCSSClasses =\n  ComponentCSSClasses<RefinementListOwnCSSClasses>;\n\ntype RefinementListRequiredCSSClasses = Omit<\n  RefinementListWidgetCSSClasses,\n  RefinementListOptionalClasses\n> &\n  Partial<Pick<RefinementListWidgetCSSClasses, RefinementListOptionalClasses>>;\n\nexport type RefinementListComponentCSSClasses =\n  RefinementListRequiredCSSClasses & {\n    searchable?: SearchBoxComponentCSSClasses;\n  } & Partial<Pick<RatingMenuComponentCSSClasses, 'disabledItem'>> &\n    Partial<\n      Pick<HierarchicalMenuComponentCSSClasses, 'childList' | 'parentItem'>\n    >;\n\ntype FacetValue = {\n  value: string;\n  label: string;\n  highlighted?: string;\n  count?: number;\n  isRefined: boolean;\n  data?: HierarchicalMenuItem[] | null;\n};\n\nexport type RefinementListProps<TTemplates extends Templates> = {\n  createURL: CreateURL<string>;\n  cssClasses: RefinementListComponentCSSClasses;\n  depth?: number;\n  facetValues?: FacetValue[];\n  attribute?: string;\n  templateProps: PreparedTemplateProps<TTemplates>;\n  toggleRefinement: (value: string) => void;\n  showMore?: boolean;\n  toggleShowMore?: () => void;\n  isShowingMore?: boolean;\n  hasExhaustiveItems?: boolean;\n  canToggleShowMore?: boolean;\n  className?: string;\n  children?: JSX.Element;\n\n  // searchable props are optional, but will definitely be present in a searchable context\n  isFromSearch?: boolean;\n  searchIsAlwaysActive?: boolean;\n  searchFacetValues?: (query: string) => void;\n  searchPlaceholder?: string;\n  searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxComponentTemplates>;\n};\n\nconst defaultProps = {\n  cssClasses: {},\n  depth: 0,\n};\n\ntype RefinementListPropsWithDefaultProps<TTemplates extends Templates> =\n  RefinementListProps<TTemplates> & Readonly<typeof defaultProps>;\n\ntype RefinementListItemTemplateData<TTemplates extends Templates> =\n  FacetValue & {\n    url: string;\n  } & Pick<\n      RefinementListProps<TTemplates>,\n      'attribute' | 'cssClasses' | 'isFromSearch'\n    >;\n\nfunction isHierarchicalMenuItem(\n  facetValue: FacetValue\n): facetValue is HierarchicalMenuItem {\n  return (facetValue as HierarchicalMenuItem).data !== undefined;\n}\n\nclass RefinementList<TTemplates extends Templates> extends Component<\n  RefinementListPropsWithDefaultProps<TTemplates>\n> {\n  public static defaultProps = defaultProps;\n\n  private searchBox = createRef<SearchBox>();\n\n  public shouldComponentUpdate(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    const areFacetValuesDifferent = !isEqual(\n      this.props.facetValues,\n      nextProps.facetValues\n    );\n\n    return areFacetValuesDifferent;\n  }\n\n  private refine(facetValueToRefine: string) {\n    this.props.toggleRefinement(facetValueToRefine);\n  }\n\n  private _generateFacetItem = (facetValue: FacetValue) => {\n    let subItems;\n    if (\n      isHierarchicalMenuItem(facetValue) &&\n      Array.isArray(facetValue.data) &&\n      facetValue.data.length > 0\n    ) {\n      const { root, ...cssClasses } = this.props.cssClasses;\n\n      subItems = (\n        <RefinementList\n          {...this.props}\n          // We want to keep `root` required for external usage but not for the\n          // sub items.\n          cssClasses={cssClasses as RefinementListComponentCSSClasses}\n          depth={this.props.depth + 1}\n          facetValues={facetValue.data}\n          showMore={false}\n          className={this.props.cssClasses.childList}\n        />\n      );\n    }\n\n    const url = this.props.createURL(facetValue.value);\n    const templateData: RefinementListItemTemplateData<TTemplates> = {\n      ...facetValue,\n      url,\n      attribute: this.props.attribute,\n      cssClasses: this.props.cssClasses,\n      isFromSearch: this.props.isFromSearch,\n    };\n\n    let { value: key } = facetValue;\n    if (facetValue.isRefined !== undefined) {\n      key += `/${facetValue.isRefined}`;\n    }\n\n    if (facetValue.count !== undefined) {\n      key += `/${facetValue.count}`;\n    }\n\n    const refinementListItemClassName = cx(\n      this.props.cssClasses.item,\n      facetValue.isRefined && this.props.cssClasses.selectedItem,\n      !facetValue.count && this.props.cssClasses.disabledItem,\n      Boolean(\n        isHierarchicalMenuItem(facetValue) &&\n          Array.isArray(facetValue.data) &&\n          facetValue.data.length > 0\n      ) && this.props.cssClasses.parentItem!\n    );\n\n    return (\n      <RefinementListItem\n        templateKey=\"item\"\n        key={key}\n        facetValueToRefine={facetValue.value}\n        handleClick={this.handleItemClick}\n        isRefined={facetValue.isRefined}\n        className={refinementListItemClassName}\n        subItems={subItems}\n        templateData={templateData}\n        templateProps={this.props.templateProps}\n      />\n    );\n  };\n\n  // Click events on DOM tree like LABEL > INPUT will result in two click events\n  // instead of one.\n  // No matter the framework, see https://www.google.com/search?q=click+label+twice\n  //\n  // Thus making it hard to distinguish activation from deactivation because both click events\n  // are very close. Debounce is a solution but hacky.\n  //\n  // So the code here checks if the click was done on or in a LABEL. If this LABEL\n  // has a checkbox inside, we ignore the first click event because we will get another one.\n  //\n  // We also check if the click was done inside a link and then e.preventDefault() because we already\n  // handle the url\n  //\n  // Finally, we always stop propagation of the event to avoid multiple levels RefinementLists to fail: click\n  // on child would click on parent also\n  private handleItemClick = ({\n    facetValueToRefine,\n    isRefined,\n    originalEvent,\n  }: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) => {\n    if (isSpecialClick(originalEvent)) {\n      // do not alter the default browser behavior\n      // if one special key is down\n      return;\n    }\n\n    let parent = originalEvent.target as HTMLElement | null;\n\n    if (parent === null || parent.parentNode === null) {\n      return;\n    }\n\n    if (\n      isRefined &&\n      parent.parentNode.querySelector('input[type=\"radio\"]:checked')\n    ) {\n      // Prevent refinement for being reset if the user clicks on an already checked radio button\n      return;\n    }\n\n    if (parent.tagName === 'INPUT') {\n      this.refine(facetValueToRefine);\n      return;\n    }\n\n    while (parent !== originalEvent.currentTarget) {\n      if (\n        parent.tagName === 'LABEL' &&\n        (parent.querySelector('input[type=\"checkbox\"]') ||\n          parent.querySelector('input[type=\"radio\"]'))\n      ) {\n        return;\n      }\n\n      if (parent.tagName === 'A' && (parent as HTMLAnchorElement).href) {\n        originalEvent.preventDefault();\n      }\n\n      parent = parent.parentNode as HTMLElement;\n    }\n\n    originalEvent.stopPropagation();\n\n    this.refine(facetValueToRefine);\n  };\n\n  public componentWillReceiveProps(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    if (this.searchBox.current && !nextProps.isFromSearch) {\n      this.searchBox.current.resetInput();\n    }\n  }\n\n  private refineFirstValue() {\n    const firstValue = this.props.facetValues && this.props.facetValues[0];\n    if (firstValue) {\n      const actualValue = firstValue.value;\n      this.props.toggleRefinement(actualValue);\n    }\n  }\n\n  public render() {\n    const showMoreButtonClassName = cx(\n      this.props.cssClasses.showMore,\n      !(this.props.showMore === true && this.props.canToggleShowMore) &&\n        this.props.cssClasses.disabledShowMore\n    );\n\n    const showMoreButton = this.props.showMore === true && (\n      <Template\n        {...this.props.templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: showMoreButtonClassName,\n          disabled: !this.props.canToggleShowMore,\n          onClick: this.props.toggleShowMore,\n        }}\n        data={{\n          isShowingMore: this.props.isShowingMore,\n        }}\n      />\n    );\n\n    const shouldDisableSearchBox =\n      this.props.searchIsAlwaysActive !== true &&\n      !(this.props.isFromSearch || !this.props.hasExhaustiveItems);\n\n    const searchBox = this.props.searchFacetValues && (\n      <div className={this.props.cssClasses.searchBox}>\n        <SearchBox\n          ref={this.searchBox}\n          placeholder={this.props.searchPlaceholder}\n          disabled={shouldDisableSearchBox}\n          cssClasses={this.props.cssClasses.searchable!}\n          templates={this.props.searchBoxTemplateProps!.templates}\n          onChange={(event: Event) =>\n            this.props.searchFacetValues!(\n              (event.target as HTMLInputElement).value\n            )\n          }\n          onReset={() => this.props.searchFacetValues!('')}\n          onSubmit={() => this.refineFirstValue()}\n          // This sets the search box to a controlled state because\n          // we don't rely on the `refine` prop but on `onChange`.\n          searchAsYouType={false}\n          ariaLabel=\"Search for filters\"\n        />\n      </div>\n    );\n\n    const facetValues = this.props.facetValues &&\n      this.props.facetValues.length > 0 && (\n        <ul className={this.props.cssClasses.list}>\n          {this.props.facetValues.map(this._generateFacetItem, this)}\n        </ul>\n      );\n\n    const noResults = this.props.searchFacetValues &&\n      this.props.isFromSearch &&\n      (!this.props.facetValues || this.props.facetValues.length === 0) && (\n        <Template\n          {...this.props.templateProps}\n          templateKey=\"searchableNoResults\"\n          rootProps={{ className: this.props.cssClasses.noResults }}\n        />\n      );\n\n    const rootClassName = cx(\n      this.props.cssClasses.root,\n      (!this.props.facetValues || this.props.facetValues.length === 0) &&\n        this.props.cssClasses.noRefinementRoot,\n      this.props.className\n    );\n\n    return (\n      <div className={rootClassName}>\n        {this.props.children}\n        {searchBox}\n        {facetValues}\n        {noResults}\n        {showMoreButton}\n      </div>\n    );\n  }\n}\n\nexport default RefinementList;\n","export function formatNumber(value: number, numberLocale?: string) {\n  return value.toLocaleString(numberLocale);\n}\n","/** @jsx h */\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\n\nimport type { HierarchicalMenuComponentTemplates } from './hierarchical-menu';\n\nconst defaultTemplates: HierarchicalMenuComponentTemplates = {\n  item({ url, label, count, cssClasses, isRefined }) {\n    return (\n      <a\n        className={cx(\n          cx(cssClasses.link),\n          cx(isRefined ? cssClasses.selectedItemLink : undefined)\n        )}\n        href={url}\n      >\n        <span className={cx(cssClasses.label)}>{label}</span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </a>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectHierarchicalMenu from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  HierarchicalMenuItem,\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuRenderState,\n  HierarchicalMenuWidgetDescription,\n} from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  TransformItems,\n  Template,\n  WidgetFactory,\n  RendererOptions,\n  SortBy,\n  ComponentCSSClasses,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n});\nconst suit = component('HierarchicalMenu');\n\ntype HierarchicalMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n    label: string;\n    cssClasses: HierarchicalMenuCSSClasses;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n}>;\n\nexport type HierarchicalMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to the child list element.\n   */\n  childList: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each parent item element.\n   */\n  parentItem: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to the link of each selected item element (when using the default template).\n   */\n  selectedItemLink: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the show more element.\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more element.\n   */\n  disabledShowMore: string | string[];\n}>;\n\nexport type HierarchicalMenuComponentCSSClasses =\n  ComponentCSSClasses<HierarchicalMenuCSSClasses>;\n\nexport type HierarchicalMenuComponentTemplates =\n  Required<HierarchicalMenuTemplates>;\n\nexport type HierarchicalMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n  /**\n   * Show the siblings of the selected parent level of the current refined value.\n   *\n   * With `showParentLevel` set to `true` (default):\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   *     - lvl2\n   *     - lvl2\n   *   - lvl 1\n   *   - lvl 1\n   * - Parent lvl0\n   * - Parent lvl0\n   *\n   * With `showParentLevel` set to `false`:\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   * - Parent lvl0\n   * - Parent lvl0\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   * does not impact the root level.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   */\n  sortBy?: SortBy<HierarchicalMenuItem>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HierarchicalMenuTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: HierarchicalMenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    cssClasses,\n    containerNode,\n    showMore,\n    templates,\n    renderState,\n  }: {\n    cssClasses: HierarchicalMenuComponentCSSClasses;\n    containerNode: HTMLElement;\n    showMore: boolean;\n    templates: HierarchicalMenuTemplates;\n    renderState: {\n      templateProps?: PreparedTemplateProps<HierarchicalMenuComponentTemplates>;\n    };\n  }) =>\n  (\n    {\n      createURL,\n      items,\n      refine,\n      instantSearchInstance,\n      isShowingMore,\n      toggleShowMore,\n      canToggleShowMore,\n    }: HierarchicalMenuRenderState &\n      RendererOptions<HierarchicalMenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        showMore={showMore}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The hierarchical menu widget is used to create a navigation based on a hierarchy of facet attributes.\n *\n * It is commonly used for categories with subcategories.\n *\n * All attributes (lvl0, lvl1 here) must be declared as [attributes for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting) in your\n * Algolia settings.\n *\n * By default, the separator we expect is ` > ` (with spaces) but you can use\n * a different one by using the `separator` option.\n * @requirements\n * Your objects must be formatted in a specific way to be\n * able to display hierarchical menus. Here's an example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": \"fruits\",\n *     \"lvl1\": \"fruits > citrus\"\n *   }\n * }\n * ```\n *\n * Every level must be specified entirely.\n * It's also possible to have multiple values per level, for example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": [\"fruits\", \"vitamins\"],\n *     \"lvl1\": [\"fruits > citrus\", \"vitamins > C\"]\n *   }\n * }\n * ```\n * @type {WidgetFactory}\n * @devNovel HierarchicalMenu\n * @category filter\n * @param {HierarchicalMenuWidgetParams} widgetParams The HierarchicalMenu widget options.\n * @return {Widget} A new HierarchicalMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.hierarchicalMenu({\n *     container: '#hierarchical-categories',\n *     attributes: ['hierarchicalCategories.lvl0', 'hierarchicalCategories.lvl1', 'hierarchicalCategories.lvl2'],\n *   })\n * ]);\n */\nexport type HierarchicalMenuWidget = WidgetFactory<\n  HierarchicalMenuWidgetDescription & { $$widgetType: 'ais.hierarchicalMenu' },\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuWidgetParams\n>;\n\nconst hierarchicalMenu: HierarchicalMenuWidget = function hierarchicalMenu(\n  widgetParams\n) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    showParentLevel,\n    limit,\n    showMore = false,\n    showMoreLimit,\n    sortBy,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    childList: cx(\n      suit({ descendantName: 'list', modifierName: 'child' }),\n      userCssClasses.childList\n    ),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    parentItem: cx(\n      suit({ descendantName: 'item', modifierName: 'parent' }),\n      userCssClasses.parentItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    selectedItemLink: cx(\n      suit({ descendantName: 'link', modifierName: 'selected' }),\n      userCssClasses.selectedItemLink\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    cssClasses,\n    containerNode,\n    templates,\n    showMore,\n    renderState: {},\n  });\n\n  const makeWidget = connectHierarchicalMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributes,\n      separator,\n      rootPath,\n      showParentLevel,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.hierarchicalMenu',\n  };\n};\n\nexport default hierarchicalMenu;\n","import { omit } from '../../lib/utils';\n\n// false positive lint error\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport type { HitsTemplates } from './hits';\n\nconst defaultTemplates = {\n  empty() {\n    return 'No results';\n  },\n  item(data) {\n    return JSON.stringify(omit(data, ['__hitIndex']), null, 2);\n  },\n} satisfies HitsTemplates;\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { createHitsComponent } from 'instantsearch-ui-components';\nimport { Fragment, h, render } from 'preact';\n\nimport TemplateComponent from '../../components/Template/Template';\nimport connectHits from '../../connectors/hits/connectHits';\nimport { withInsights } from '../../lib/insights';\nimport { createInsightsEventHandler } from '../../lib/insights/listener';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n  warning,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  HitsConnectorParams,\n  HitsRenderState,\n  HitsWidgetDescription,\n} from '../../connectors/hits/connectHits';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  WidgetFactory,\n  Renderer,\n  BaseHit,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type {\n  HitsClassNames as HitsUiComponentClassNames,\n  HitsProps as HitsUiComponentProps,\n} from 'instantsearch-ui-components';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'hits' });\n\nconst Hits = createHitsComponent({ createElement: h, Fragment });\n\nconst renderer =\n  <THit extends NonNullable<object> = BaseHit>({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: HitsCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<HitsTemplates<THit>>;\n    };\n    templates: HitsTemplates<THit>;\n  }): Renderer<HitsRenderState, Partial<HitsWidgetParams>> =>\n  (\n    {\n      items,\n      results,\n      instantSearchInstance,\n      insights,\n      bindEvent,\n      sendEvent,\n      banner,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps<HitsTemplates<THit>>({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const handleInsightsClick = createInsightsEventHandler({\n      insights,\n      sendEvent,\n    });\n\n    const emptyComponent: HitsUiComponentProps<Hit>['emptyComponent'] = ({\n      ...rootProps\n    }) => (\n      <TemplateComponent\n        {...renderState.templateProps}\n        rootProps={rootProps}\n        templateKey=\"empty\"\n        data={results}\n        rootTagName=\"fragment\"\n      />\n    );\n\n    // @MAJOR: Move default hit component back to the UI library\n    // once flavour specificities are erased\n    const itemComponent: HitsUiComponentProps<Hit>['itemComponent'] = ({\n      hit,\n      index,\n      ...rootProps\n    }) => (\n      <TemplateComponent\n        {...renderState.templateProps}\n        templateKey=\"item\"\n        rootTagName=\"li\"\n        rootProps={{\n          ...rootProps,\n          onClick: (event: MouseEvent) => {\n            handleInsightsClick(event);\n            rootProps.onClick();\n          },\n          onAuxClick: (event: MouseEvent) => {\n            handleInsightsClick(event);\n            rootProps.onAuxClick();\n          },\n        }}\n        data={{\n          ...hit,\n          get __hitIndex() {\n            warning(\n              false,\n              'The `__hitIndex` property is deprecated. Use the absolute `__position` instead.'\n            );\n            return index;\n          },\n        }}\n        bindEvent={bindEvent}\n        sendEvent={sendEvent}\n      />\n    );\n\n    const bannerComponent: HitsUiComponentProps<Hit>['bannerComponent'] = (\n      props\n    ) => (\n      <TemplateComponent\n        {...renderState.templateProps}\n        templateKey=\"banner\"\n        data={props}\n        rootTagName=\"fragment\"\n      />\n    );\n\n    render(\n      <Hits\n        hits={items}\n        itemComponent={itemComponent}\n        sendEvent={sendEvent}\n        classNames={cssClasses}\n        emptyComponent={emptyComponent}\n        banner={banner}\n        bannerComponent={templates.banner ? bannerComponent : undefined}\n      />,\n      containerNode\n    );\n  };\n\nexport type HitsCSSClasses = Partial<HitsUiComponentClassNames>;\n\nexport type HitsTemplates<THit extends NonNullable<object> = BaseHit> =\n  Partial<{\n    /**\n     * Template to use when there are no results.\n     *\n     * @default 'No Results'\n     */\n    empty: Template<SearchResults<THit>>;\n\n    /**\n     * Template to use for each result. This template will receive an object containing a single record.\n     *\n     * @default ''\n     */\n    item: TemplateWithBindEvent<\n      Hit<THit> & {\n        /** @deprecated the index in the hits array, use __position instead, which is the absolute position */\n        __hitIndex: number;\n      }\n    >;\n\n    /**\n     * Template to use for the banner.\n     */\n    banner: Template<{\n      banner: Required<HitsRenderState['banner']>;\n      className: string;\n    }>;\n  }>;\n\nexport type HitsWidgetParams<THit extends NonNullable<object> = BaseHit> = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HitsTemplates<THit>;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: HitsCSSClasses;\n};\n\nexport type HitsWidget = WidgetFactory<\n  HitsWidgetDescription & { $$widgetType: 'ais.hits' },\n  HitsConnectorParams,\n  HitsWidgetParams\n>;\n\nexport default (function hits<THit extends NonNullable<object> = BaseHit>(\n  widgetParams: HitsWidgetParams<THit> & HitsConnectorParams<THit>\n) {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = withInsights(connectHits)(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      escapeHTML,\n      transformItems,\n    }),\n    $$widgetType: 'ais.hits',\n  };\n} satisfies HitsWidget);\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nexport type SelectorOption = {\n  value: string | number | undefined;\n  label: string;\n};\n\nexport type SelectorComponentCSSClasses = {\n  root: string;\n  select: string;\n  option: string;\n};\n\nexport type SelectorProps = {\n  cssClasses: SelectorComponentCSSClasses;\n  currentValue?: string | number;\n  options: SelectorOption[];\n  setValue: (value: string) => void;\n  ariaLabel?: string;\n};\n\nfunction Selector({\n  currentValue,\n  options,\n  cssClasses,\n  setValue,\n  ariaLabel,\n}: SelectorProps) {\n  return (\n    <select\n      className={cx(cssClasses.select)}\n      onChange={(event) => setValue((event.target as HTMLSelectElement).value)}\n      value={`${currentValue}`}\n      aria-label={ariaLabel}\n    >\n      {options.map((option) => (\n        <option\n          className={cx(cssClasses.option)}\n          key={option.label + option.value}\n          value={`${option.value}`}\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Selector;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport Selector from '../../components/Selector/Selector';\nimport connectHitsPerPage from '../../connectors/hits-per-page/connectHitsPerPage';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n  find,\n} from '../../lib/utils';\n\nimport type {\n  HitsPerPageConnectorParams,\n  HitsPerPageRenderState,\n  HitsPerPageWidgetDescription,\n} from '../../connectors/hits-per-page/connectHitsPerPage';\nimport type { ComponentCSSClasses, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n});\nconst suit = component('HitsPerPage');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ComponentCSSClasses<HitsPerPageCSSClasses>;\n  }) =>\n  ({ items, refine }: HitsPerPageRenderState, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    const { value: currentValue } =\n      find(items, ({ isRefined }) => isRefined) || {};\n\n    render(\n      <div className={cssClasses.root}>\n        <Selector\n          cssClasses={cssClasses}\n          currentValue={currentValue}\n          options={items}\n          // @ts-expect-error: the refine function expects a number, but setValue will call it with a string. We don't want to change the type of the refine function because it's part of the connector API.\n          setValue={refine}\n        />\n      </div>,\n      containerNode\n    );\n  };\n\nexport type HitsPerPageCSSClasses = Partial<{\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n}>;\n\nexport type HitsPerPageWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: HitsPerPageCSSClasses;\n};\n\nexport type HitsPerPageWidget = WidgetFactory<\n  HitsPerPageWidgetDescription & { $$widgetType: 'ais.hitsPerPage' },\n  HitsPerPageConnectorParams,\n  HitsPerPageWidgetParams\n>;\n\nconst hitsPerPage: HitsPerPageWidget = function hitsPerPage(widgetParams) {\n  const {\n    container,\n    items,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectHitsPerPage(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ items, transformItems }),\n    $$widgetType: 'ais.hitsPerPage',\n  };\n};\n\nexport default hitsPerPage;\n","import algoliasearchHelper from 'algoliasearch-helper';\n\nimport {\n  checkIndexUiState,\n  createDocumentationMessageGenerator,\n  resolveSearchParameters,\n  mergeSearchParameters,\n  warning,\n  isIndexWidget,\n  createInitArgs,\n  createRenderArgs,\n} from '../../lib/utils';\nimport { addWidgetId } from '../../lib/utils/addWidgetId';\n\nimport type {\n  InstantSearch,\n  UiState,\n  IndexUiState,\n  Widget,\n  ScopedResult,\n  SearchClient,\n  IndexRenderState,\n  RenderOptions,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper as Helper,\n  DerivedHelper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n  AlgoliaSearchHelper,\n  RecommendParameters,\n  RecommendResultItem,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'index-widget',\n});\n\nexport type IndexWidgetParams = {\n  indexName: string;\n  indexId?: string;\n};\n\nexport type IndexInitOptions = {\n  instantSearchInstance: InstantSearch;\n  parent: IndexWidget | null;\n  uiState: UiState;\n};\n\nexport type IndexRenderOptions = {\n  instantSearchInstance: InstantSearch;\n};\n\ntype WidgetSearchParametersOptions = Parameters<\n  NonNullable<Widget['getWidgetSearchParameters']>\n>[1];\ntype LocalWidgetSearchParametersOptions = WidgetSearchParametersOptions & {\n  initialSearchParameters: SearchParameters;\n};\ntype LocalWidgetRecommendParametersOptions = WidgetSearchParametersOptions & {\n  initialRecommendParameters: RecommendParameters;\n};\n\nexport type IndexWidgetDescription = {\n  $$type: 'ais.index';\n  $$widgetType: 'ais.index';\n};\n\nexport type IndexWidget<TUiState extends UiState = UiState> = Omit<\n  Widget<IndexWidgetDescription & { widgetParams: IndexWidgetParams }>,\n  'getWidgetUiState' | 'getWidgetState'\n> & {\n  getIndexName: () => string;\n  getIndexId: () => string;\n  getHelper: () => Helper | null;\n  getResults: () => SearchResults | null;\n  getResultsForWidget: (\n    widget: IndexWidget | Widget\n  ) => SearchResults | RecommendResultItem | null;\n  getPreviousState: () => SearchParameters | null;\n  getScopedResults: () => ScopedResult[];\n  getParent: () => IndexWidget | null;\n  getWidgets: () => Array<Widget | IndexWidget>;\n  createURL: (\n    nextState: SearchParameters | ((state: IndexUiState) => IndexUiState)\n  ) => string;\n\n  addWidgets: (widgets: Array<Widget | IndexWidget>) => IndexWidget;\n  removeWidgets: (widgets: Array<Widget | IndexWidget>) => IndexWidget;\n\n  init: (options: IndexInitOptions) => void;\n  render: (options: IndexRenderOptions) => void;\n  dispose: () => void;\n  /**\n   * @deprecated\n   */\n  getWidgetState: (uiState: UiState) => UiState;\n  getWidgetUiState: <TSpecificUiState extends UiState = TUiState>(\n    uiState: TSpecificUiState\n  ) => TSpecificUiState;\n  getWidgetSearchParameters: (\n    searchParameters: SearchParameters,\n    searchParametersOptions: { uiState: IndexUiState }\n  ) => SearchParameters;\n  /**\n   * Set this index' UI state back to the state defined by the widgets.\n   * Can only be called after `init`.\n   */\n  refreshUiState: () => void;\n  /**\n   * Set this index' UI state and search. This is the equivalent of calling\n   * a spread `setUiState` on the InstantSearch instance.\n   * Can only be called after `init`.\n   */\n  setIndexUiState: (\n    indexUiState:\n      | TUiState[string]\n      | ((previousIndexUiState: TUiState[string]) => TUiState[string])\n  ) => void;\n};\n\n/**\n * This is the same content as helper._change / setState, but allowing for extra\n * UiState to be synchronized.\n * see: https://github.com/algolia/algoliasearch-helper-js/blob/6b835ffd07742f2d6b314022cce6848f5cfecd4a/src/algoliasearch.helper.js#L1311-L1324\n */\nfunction privateHelperSetState(\n  helper: AlgoliaSearchHelper,\n  {\n    state,\n    recommendState,\n    isPageReset,\n    _uiState,\n  }: {\n    state: SearchParameters;\n    recommendState: RecommendParameters;\n    isPageReset?: boolean;\n    _uiState?: IndexUiState;\n  }\n) {\n  if (state !== helper.state) {\n    helper.state = state;\n\n    helper.emit('change', {\n      state: helper.state,\n      results: helper.lastResults,\n      isPageReset,\n      _uiState,\n    });\n  }\n\n  if (recommendState !== helper.recommendState) {\n    helper.recommendState = recommendState;\n\n    // eslint-disable-next-line no-warning-comments\n    // TODO: emit \"change\" event when events for Recommend are implemented\n  }\n}\n\ntype WidgetUiStateOptions = Parameters<\n  NonNullable<Widget['getWidgetUiState']>\n>[1];\n\nfunction getLocalWidgetsUiState(\n  widgets: Array<Widget | IndexWidget>,\n  widgetStateOptions: WidgetUiStateOptions,\n  initialUiState: IndexUiState = {}\n) {\n  return widgets.reduce((uiState, widget) => {\n    if (isIndexWidget(widget)) {\n      return uiState;\n    }\n\n    if (!widget.getWidgetUiState && !widget.getWidgetState) {\n      return uiState;\n    }\n\n    if (widget.getWidgetUiState) {\n      return widget.getWidgetUiState(uiState, widgetStateOptions);\n    }\n\n    return widget.getWidgetState!(uiState, widgetStateOptions);\n  }, initialUiState);\n}\n\nfunction getLocalWidgetsSearchParameters(\n  widgets: Array<Widget | IndexWidget>,\n  widgetSearchParametersOptions: LocalWidgetSearchParametersOptions\n): SearchParameters {\n  const { initialSearchParameters, ...rest } = widgetSearchParametersOptions;\n\n  return widgets.reduce<SearchParameters>((state, widget) => {\n    if (!widget.getWidgetSearchParameters || isIndexWidget(widget)) {\n      return state;\n    }\n\n    if (widget.dependsOn === 'search' && widget.getWidgetParameters) {\n      return widget.getWidgetParameters(state, rest);\n    }\n\n    return widget.getWidgetSearchParameters(state, rest);\n  }, initialSearchParameters);\n}\n\nfunction getLocalWidgetsRecommendParameters(\n  widgets: Array<Widget | IndexWidget>,\n  widgetRecommendParametersOptions: LocalWidgetRecommendParametersOptions\n): RecommendParameters {\n  const { initialRecommendParameters, ...rest } =\n    widgetRecommendParametersOptions;\n\n  return widgets.reduce((state, widget) => {\n    if (\n      !isIndexWidget(widget) &&\n      widget.dependsOn === 'recommend' &&\n      widget.getWidgetParameters\n    ) {\n      return widget.getWidgetParameters(state, rest);\n    }\n    return state;\n  }, initialRecommendParameters);\n}\n\nfunction resetPageFromWidgets(widgets: Array<Widget | IndexWidget>): void {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  if (indexWidgets.length === 0) {\n    return;\n  }\n\n  indexWidgets.forEach((widget) => {\n    const widgetHelper = widget.getHelper()!;\n\n    privateHelperSetState(widgetHelper, {\n      state: widgetHelper.state.resetPage(),\n      recommendState: widgetHelper.recommendState,\n      isPageReset: true,\n    });\n\n    resetPageFromWidgets(widget.getWidgets());\n  });\n}\n\nfunction resolveScopedResultsFromWidgets(\n  widgets: Array<Widget | IndexWidget>\n): ScopedResult[] {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  return indexWidgets.reduce<ScopedResult[]>((scopedResults, current) => {\n    return scopedResults.concat(\n      {\n        indexId: current.getIndexId(),\n        results: current.getResults()!,\n        helper: current.getHelper()!,\n      },\n      ...resolveScopedResultsFromWidgets(current.getWidgets())\n    );\n  }, []);\n}\n\nconst index = (widgetParams: IndexWidgetParams): IndexWidget => {\n  if (widgetParams === undefined || widgetParams.indexName === undefined) {\n    throw new Error(withUsage('The `indexName` option is required.'));\n  }\n\n  const { indexName, indexId = indexName } = widgetParams;\n\n  let localWidgets: Array<Widget | IndexWidget> = [];\n  let localUiState: IndexUiState = {};\n  let localInstantSearchInstance: InstantSearch | null = null;\n  let localParent: IndexWidget | null = null;\n  let helper: Helper | null = null;\n  let derivedHelper: DerivedHelper | null = null;\n  let lastValidSearchParameters: SearchParameters | null = null;\n  let hasRecommendWidget: boolean = false;\n  let hasSearchWidget: boolean = false;\n\n  return {\n    $$type: 'ais.index',\n    $$widgetType: 'ais.index',\n\n    getIndexName() {\n      return indexName;\n    },\n\n    getIndexId() {\n      return indexId;\n    },\n\n    getHelper() {\n      return helper;\n    },\n\n    getResults() {\n      if (!derivedHelper?.lastResults) return null;\n\n      // To make the UI optimistic, we patch the state to display to the current\n      // one instead of the one associated with the latest results.\n      // This means user-driven UI changes (e.g., checked checkbox) are reflected\n      // immediately instead of waiting for Algolia to respond, regardless of\n      // the status of the network request.\n      derivedHelper.lastResults._state = helper!.state;\n\n      return derivedHelper.lastResults;\n    },\n\n    getResultsForWidget(widget) {\n      if (\n        widget.dependsOn !== 'recommend' ||\n        isIndexWidget(widget) ||\n        widget.$$id === undefined\n      ) {\n        return this.getResults();\n      }\n\n      if (!helper?.lastRecommendResults) {\n        return null;\n      }\n\n      return helper.lastRecommendResults[widget.$$id];\n    },\n\n    getPreviousState() {\n      return lastValidSearchParameters;\n    },\n\n    getScopedResults() {\n      const widgetParent = this.getParent();\n      let widgetSiblings;\n\n      if (widgetParent) {\n        widgetSiblings = widgetParent.getWidgets();\n      } else if (indexName.length === 0) {\n        // The widget is the root but has no index name:\n        // we resolve results from its children index widgets\n        widgetSiblings = this.getWidgets();\n      } else {\n        // The widget is the root and has an index name:\n        // we consider itself as the only sibling\n        widgetSiblings = [this];\n      }\n\n      return resolveScopedResultsFromWidgets(widgetSiblings);\n    },\n\n    getParent() {\n      return localParent;\n    },\n\n    createURL(\n      nextState: SearchParameters | ((state: IndexUiState) => IndexUiState)\n    ) {\n      if (typeof nextState === 'function') {\n        return localInstantSearchInstance!._createURL({\n          [indexId]: nextState(localUiState),\n        });\n      }\n      return localInstantSearchInstance!._createURL({\n        [indexId]: getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        }),\n      });\n    },\n\n    getWidgets() {\n      return localWidgets;\n    },\n\n    addWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `addWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (\n        widgets.some(\n          (widget) =>\n            typeof widget.init !== 'function' &&\n            typeof widget.render !== 'function'\n        )\n      ) {\n        throw new Error(\n          withUsage(\n            'The widget definition expects a `render` and/or an `init` method.'\n          )\n        );\n      }\n\n      widgets.forEach((widget) => {\n        if (isIndexWidget(widget)) {\n          return;\n        }\n\n        if (localInstantSearchInstance && widget.dependsOn === 'recommend') {\n          localInstantSearchInstance._hasRecommendWidget = true;\n        } else if (localInstantSearchInstance) {\n          localInstantSearchInstance._hasSearchWidget = true;\n        } else if (widget.dependsOn === 'recommend') {\n          hasRecommendWidget = true;\n        } else {\n          hasSearchWidget = true;\n        }\n\n        addWidgetId(widget);\n      });\n\n      localWidgets = localWidgets.concat(widgets);\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        privateHelperSetState(helper!, {\n          state: getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: helper!.state,\n          }),\n          recommendState: getLocalWidgetsRecommendParameters(localWidgets, {\n            uiState: localUiState,\n            initialRecommendParameters: helper!.recommendState,\n          }),\n          _uiState: localUiState,\n        });\n\n        // We compute the render state before calling `init` in a separate loop\n        // to construct the whole render state object that is then passed to\n        // `init`.\n        widgets.forEach((widget) => {\n          if (widget.getRenderState) {\n            const renderState = widget.getRenderState(\n              localInstantSearchInstance!.renderState[this.getIndexId()] || {},\n              createInitArgs(\n                localInstantSearchInstance!,\n                this,\n                localInstantSearchInstance!._initialUiState\n              )\n            );\n\n            storeRenderState({\n              renderState,\n              instantSearchInstance: localInstantSearchInstance!,\n              parent: this,\n            });\n          }\n        });\n\n        widgets.forEach((widget) => {\n          if (widget.init) {\n            widget.init(\n              createInitArgs(\n                localInstantSearchInstance!,\n                this,\n                localInstantSearchInstance!._initialUiState\n              )\n            );\n          }\n        });\n\n        localInstantSearchInstance.scheduleSearch();\n      }\n\n      return this;\n    },\n\n    removeWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `removeWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (widgets.some((widget) => typeof widget.dispose !== 'function')) {\n        throw new Error(\n          withUsage('The widget definition expects a `dispose` method.')\n        );\n      }\n\n      localWidgets = localWidgets.filter(\n        (widget) => widgets.indexOf(widget) === -1\n      );\n\n      localWidgets.forEach((widget) => {\n        if (isIndexWidget(widget)) {\n          return;\n        }\n\n        if (localInstantSearchInstance && widget.dependsOn === 'recommend') {\n          localInstantSearchInstance._hasRecommendWidget = true;\n        } else if (localInstantSearchInstance) {\n          localInstantSearchInstance._hasSearchWidget = true;\n        } else if (widget.dependsOn === 'recommend') {\n          hasRecommendWidget = true;\n        } else {\n          hasSearchWidget = true;\n        }\n      });\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        const { cleanedSearchState, cleanedRecommendState } = widgets.reduce(\n          (states, widget) => {\n            // the `dispose` method exists at this point we already assert it\n            const next = widget.dispose!({\n              helper: helper!,\n              state: states.cleanedSearchState,\n              recommendState: states.cleanedRecommendState,\n              parent: this,\n            });\n\n            if (next instanceof algoliasearchHelper.RecommendParameters) {\n              states.cleanedRecommendState = next;\n            } else if (next) {\n              states.cleanedSearchState = next;\n            }\n\n            return states;\n          },\n          {\n            cleanedSearchState: helper!.state,\n            cleanedRecommendState: helper!.recommendState,\n          }\n        );\n\n        const newState = localInstantSearchInstance.future\n          .preserveSharedStateOnUnmount\n          ? getLocalWidgetsSearchParameters(localWidgets, {\n              uiState: localUiState,\n              initialSearchParameters: new algoliasearchHelper.SearchParameters(\n                {\n                  index: this.getIndexName(),\n                }\n              ),\n            })\n          : getLocalWidgetsSearchParameters(localWidgets, {\n              uiState: getLocalWidgetsUiState(localWidgets, {\n                searchParameters: cleanedSearchState,\n                helper: helper!,\n              }),\n              initialSearchParameters: cleanedSearchState,\n            });\n\n        localUiState = getLocalWidgetsUiState(localWidgets, {\n          searchParameters: newState,\n          helper: helper!,\n        });\n\n        helper!.setState(newState);\n        helper!.recommendState = cleanedRecommendState;\n\n        if (localWidgets.length) {\n          localInstantSearchInstance.scheduleSearch();\n        }\n      }\n\n      return this;\n    },\n\n    init({ instantSearchInstance, parent, uiState }: IndexInitOptions) {\n      if (helper !== null) {\n        // helper is already initialized, therefore we do not need to set up\n        // any listeners\n        return;\n      }\n\n      localInstantSearchInstance = instantSearchInstance;\n      localParent = parent;\n      localUiState = uiState[indexId] || {};\n\n      // The `mainHelper` is already defined at this point. The instance is created\n      // inside InstantSearch at the `start` method, which occurs before the `init`\n      // step.\n      const mainHelper = instantSearchInstance.mainHelper!;\n      const parameters = getLocalWidgetsSearchParameters(localWidgets, {\n        uiState: localUiState,\n        initialSearchParameters: new algoliasearchHelper.SearchParameters({\n          index: indexName,\n        }),\n      });\n      const recommendParameters = getLocalWidgetsRecommendParameters(\n        localWidgets,\n        {\n          uiState: localUiState,\n          initialRecommendParameters:\n            new algoliasearchHelper.RecommendParameters(),\n        }\n      );\n\n      // This Helper is only used for state management we do not care about the\n      // `searchClient`. Only the \"main\" Helper created at the `InstantSearch`\n      // level is aware of the client.\n      helper = algoliasearchHelper(\n        {} as SearchClient,\n        parameters.index,\n        parameters\n      );\n      helper.recommendState = recommendParameters;\n\n      // We forward the call to `search` to the \"main\" instance of the Helper\n      // which is responsible for managing the queries (it's the only one that is\n      // aware of the `searchClient`).\n      helper.search = () => {\n        if (instantSearchInstance.onStateChange) {\n          instantSearchInstance.onStateChange({\n            uiState: instantSearchInstance.mainIndex.getWidgetUiState({}),\n            setUiState: (nextState) =>\n              instantSearchInstance.setUiState(nextState, false),\n          });\n\n          // We don't trigger a search when controlled because it becomes the\n          // responsibility of `setUiState`.\n          return mainHelper;\n        }\n\n        return mainHelper.search();\n      };\n\n      helper.searchWithoutTriggeringOnStateChange = () => {\n        return mainHelper.search();\n      };\n\n      // We use the same pattern for the `searchForFacetValues`.\n      helper.searchForFacetValues = (\n        facetName,\n        facetValue,\n        maxFacetHits,\n        userState: PlainSearchParameters\n      ) => {\n        const state = helper!.state.setQueryParameters(userState);\n\n        return mainHelper.searchForFacetValues(\n          facetName,\n          facetValue,\n          maxFacetHits,\n          state\n        );\n      };\n\n      derivedHelper = mainHelper.derive(\n        () =>\n          mergeSearchParameters(\n            mainHelper.state,\n            ...resolveSearchParameters(this)\n          ),\n        () => this.getHelper()!.recommendState\n      );\n\n      const indexInitialResults =\n        instantSearchInstance._initialResults?.[this.getIndexId()];\n\n      if (indexInitialResults?.results) {\n        // We restore the shape of the results provided to the instance to respect\n        // the helper's structure.\n        const results = new algoliasearchHelper.SearchResults(\n          new algoliasearchHelper.SearchParameters(indexInitialResults.state),\n          indexInitialResults.results\n        );\n\n        derivedHelper.lastResults = results;\n        helper.lastResults = results;\n      }\n\n      if (indexInitialResults?.recommendResults) {\n        const recommendResults = new algoliasearchHelper.RecommendResults(\n          new algoliasearchHelper.RecommendParameters({\n            params: indexInitialResults.recommendResults.params,\n          }),\n          indexInitialResults.recommendResults.results\n        );\n        derivedHelper.lastRecommendResults = recommendResults;\n        helper.lastRecommendResults = recommendResults;\n      }\n\n      // Subscribe to the Helper state changes for the page before widgets\n      // are initialized. This behavior mimics the original one of the Helper.\n      // It makes sense to replicate it at the `init` step. We have another\n      // listener on `change` below, once `init` is done.\n      helper.on('change', ({ isPageReset }) => {\n        if (isPageReset) {\n          resetPageFromWidgets(localWidgets);\n        }\n      });\n\n      derivedHelper.on('search', () => {\n        // The index does not manage the \"staleness\" of the search. This is the\n        // responsibility of the main instance. It does not make sense to manage\n        // it at the index level because it's either: all of them or none of them\n        // that are stalled. The queries are performed into a single network request.\n        instantSearchInstance.scheduleStalledRender();\n\n        if (__DEV__) {\n          checkIndexUiState({ index: this, indexUiState: localUiState });\n        }\n      });\n\n      derivedHelper.on('result', ({ results }) => {\n        // The index does not render the results it schedules a new render\n        // to let all the other indices emit their own results. It allows us to\n        // run the render process in one pass.\n        instantSearchInstance.scheduleRender();\n\n        // the derived helper is the one which actually searches, but the helper\n        // which is exposed e.g. via instance.helper, doesn't search, and thus\n        // does not have access to lastResults, which it used to in pre-federated\n        // search behavior.\n        helper!.lastResults = results;\n        lastValidSearchParameters = results?._state;\n      });\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO: listen to \"result\" event when events for Recommend are implemented\n      derivedHelper.on('recommend:result', ({ recommend }) => {\n        // The index does not render the results it schedules a new render\n        // to let all the other indices emit their own results. It allows us to\n        // run the render process in one pass.\n        instantSearchInstance.scheduleRender();\n\n        // the derived helper is the one which actually searches, but the helper\n        // which is exposed e.g. via instance.helper, doesn't search, and thus\n        // does not have access to lastRecommendResults.\n        helper!.lastRecommendResults = recommend.results;\n      });\n\n      // We compute the render state before calling `init` in a separate loop\n      // to construct the whole render state object that is then passed to\n      // `init`.\n      localWidgets.forEach((widget) => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            createInitArgs(instantSearchInstance, this, uiState)\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach((widget) => {\n        warning(\n          // if it has NO getWidgetState or if it has getWidgetUiState, we don't warn\n          // aka we warn if there's _only_ getWidgetState\n          !widget.getWidgetState || Boolean(widget.getWidgetUiState),\n          'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n        );\n\n        if (widget.init) {\n          widget.init(createInitArgs(instantSearchInstance, this, uiState));\n        }\n      });\n\n      // Subscribe to the Helper state changes for the `uiState` once widgets\n      // are initialized. Until the first render, state changes are part of the\n      // configuration step. This is mainly for backward compatibility with custom\n      // widgets. When the subscription happens before the `init` step, the (static)\n      // configuration of the widget is pushed in the URL. That's what we want to avoid.\n      // https://github.com/algolia/instantsearch/pull/994/commits/4a672ae3fd78809e213de0368549ef12e9dc9454\n      helper.on('change', (event) => {\n        const { state } = event;\n\n        const _uiState = (event as any)._uiState;\n\n        localUiState = getLocalWidgetsUiState(\n          localWidgets,\n          {\n            searchParameters: state,\n            helper: helper!,\n          },\n          _uiState || {}\n        );\n\n        // We don't trigger an internal change when controlled because it\n        // becomes the responsibility of `setUiState`.\n        if (!instantSearchInstance.onStateChange) {\n          instantSearchInstance.onInternalStateChange();\n        }\n      });\n\n      if (indexInitialResults) {\n        // If there are initial results, we're not notified of the next results\n        // because we don't trigger an initial search. We therefore need to directly\n        // schedule a render that will render the results injected on the helper.\n        instantSearchInstance.scheduleRender();\n      }\n\n      if (hasRecommendWidget) {\n        instantSearchInstance._hasRecommendWidget = true;\n      }\n      if (hasSearchWidget) {\n        instantSearchInstance._hasSearchWidget = true;\n      }\n    },\n\n    render({ instantSearchInstance }: IndexRenderOptions) {\n      // we can't attach a listener to the error event of search, as the error\n      // then would no longer be thrown for global handlers.\n      if (\n        instantSearchInstance.status === 'error' &&\n        !instantSearchInstance.mainHelper!.hasPendingRequests() &&\n        lastValidSearchParameters\n      ) {\n        helper!.setState(lastValidSearchParameters);\n      }\n\n      // We only render index widgets if there are no results.\n      // This makes sure `render` is never called with `results` being `null`.\n      let widgetsToRender =\n        this.getResults() || derivedHelper?.lastRecommendResults\n          ? localWidgets\n          : localWidgets.filter(isIndexWidget);\n\n      widgetsToRender = widgetsToRender.filter((widget) => {\n        if (!widget.shouldRender) {\n          return true;\n        }\n\n        return widget.shouldRender({ instantSearchInstance });\n      });\n\n      widgetsToRender.forEach((widget) => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            createRenderArgs(\n              instantSearchInstance,\n              this,\n              widget\n            ) as RenderOptions\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      widgetsToRender.forEach((widget) => {\n        // At this point, all the variables used below are set. Both `helper`\n        // and `derivedHelper` have been created at the `init` step. The attribute\n        // `lastResults` might be `null` though. It's possible that a stalled render\n        // happens before the result e.g with a dynamically added index the request might\n        // be delayed. The render is triggered for the complete tree but some parts do\n        // not have results yet.\n\n        if (widget.render) {\n          widget.render(\n            createRenderArgs(\n              instantSearchInstance,\n              this,\n              widget\n            ) as RenderOptions\n          );\n        }\n      });\n    },\n\n    dispose() {\n      localWidgets.forEach((widget) => {\n        if (widget.dispose && helper) {\n          // The dispose function is always called once the instance is started\n          // (it's an effect of `removeWidgets`). The index is initialized and\n          // the Helper is available. We don't care about the return value of\n          // `dispose` because the index is removed. We can't call `removeWidgets`\n          // because we want to keep the widgets on the instance, to allow idempotent\n          // operations on `add` & `remove`.\n          widget.dispose({\n            helper,\n            state: helper.state,\n            recommendState: helper.recommendState,\n            parent: this,\n          });\n        }\n      });\n\n      localInstantSearchInstance = null;\n      localParent = null;\n      helper?.removeAllListeners();\n      helper = null;\n\n      derivedHelper?.detach();\n      derivedHelper = null;\n    },\n\n    getWidgetUiState<TUiState extends UiState = UiState>(uiState: TUiState) {\n      return localWidgets\n        .filter(isIndexWidget)\n        .reduce<TUiState>(\n          (previousUiState, innerIndex) =>\n            innerIndex.getWidgetUiState(previousUiState),\n          {\n            ...uiState,\n            [indexId]: {\n              ...uiState[indexId],\n              ...localUiState,\n            },\n          }\n        );\n    },\n\n    getWidgetState(uiState: UiState) {\n      warning(\n        false,\n        'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n      );\n\n      return this.getWidgetUiState(uiState);\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      return getLocalWidgetsSearchParameters(localWidgets, {\n        uiState,\n        initialSearchParameters: searchParameters,\n      });\n    },\n\n    refreshUiState() {\n      localUiState = getLocalWidgetsUiState(\n        localWidgets,\n        {\n          searchParameters: this.getHelper()!.state,\n          helper: this.getHelper()!,\n        },\n        localUiState\n      );\n    },\n\n    setIndexUiState<TIndexUiState extends IndexUiState = IndexUiState>(\n      indexUiState:\n        | TIndexUiState\n        | ((previousIndexUiState: TIndexUiState) => TIndexUiState)\n    ) {\n      const nextIndexUiState =\n        typeof indexUiState === 'function'\n          ? indexUiState(localUiState as TIndexUiState)\n          : indexUiState;\n\n      localInstantSearchInstance!.setUiState((state) => ({\n        ...state,\n        [indexId]: nextIndexUiState,\n      }));\n    },\n  };\n};\n\nexport default index;\n\nfunction storeRenderState({\n  renderState,\n  instantSearchInstance,\n  parent,\n}: {\n  renderState: IndexRenderState;\n  instantSearchInstance: InstantSearch;\n  parent?: IndexWidget;\n}) {\n  const parentIndexName = parent\n    ? parent.getIndexId()\n    : instantSearchInstance.mainIndex.getIndexId();\n\n  instantSearchInstance.renderState = {\n    ...instantSearchInstance.renderState,\n    [parentIndexName]: {\n      ...instantSearchInstance.renderState[parentIndexName],\n      ...renderState,\n    },\n  };\n}\n","import type { IndexWidget } from '../../types';\nimport type { SearchParameters } from 'algoliasearch-helper';\n\nexport function resolveSearchParameters(\n  current: IndexWidget\n): SearchParameters[] {\n  let parent = current.getParent();\n  let states = [current.getHelper()!.state];\n\n  while (parent !== null) {\n    states = [parent.getHelper()!.state].concat(states);\n    parent = parent.getParent();\n  }\n\n  return states;\n}\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { createInsightsEventHandler } from '../../lib/insights/listener';\nimport { warning } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport type { ComponentCSSClasses, Hit, InsightsClient } from '../../types';\nimport type {\n  InfiniteHitsCSSClasses,\n  InfiniteHitsTemplates,\n} from '../../widgets/infinite-hits/infinite-hits';\nimport type { Banner, SearchResults } from 'algoliasearch-helper';\n\nexport type InfiniteHitsComponentCSSClasses =\n  ComponentCSSClasses<InfiniteHitsCSSClasses>;\nexport type InfiniteHitsComponentTemplates = InfiniteHitsTemplates;\n\nexport type InfiniteHitsProps = {\n  cssClasses: InfiniteHitsComponentCSSClasses;\n  hits: Hit[];\n  results: SearchResults;\n  hasShowPrevious: boolean;\n  showPrevious: () => void;\n  showMore: () => void;\n  templateProps: {\n    [key: string]: any;\n    templates: InfiniteHitsComponentTemplates;\n  };\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  insights?: InsightsClient;\n  sendEvent: SendEventForHits;\n  bindEvent: BindEventForHits;\n  banner?: Banner;\n};\n\nconst DefaultBanner = ({\n  banner,\n  classNames,\n}: {\n  banner: Banner;\n  classNames: Pick<\n    InfiniteHitsCSSClasses,\n    'bannerRoot' | 'bannerLink' | 'bannerImage'\n  >;\n}) => {\n  if (!banner.image.urls[0].url) {\n    return null;\n  }\n\n  return (\n    <aside className={cx(classNames.bannerRoot)}>\n      {banner.link ? (\n        <a\n          className={cx(classNames.bannerLink)}\n          href={banner.link.url}\n          target={banner.link.target}\n        >\n          <img\n            className={cx(classNames.bannerImage)}\n            src={banner.image.urls[0].url}\n            alt={banner.image.title}\n          />\n        </a>\n      ) : (\n        <img\n          className={cx(classNames.bannerImage)}\n          src={banner.image.urls[0].url}\n          alt={banner.image.title}\n        />\n      )}\n    </aside>\n  );\n};\n\nconst InfiniteHits = ({\n  results,\n  hits,\n  insights,\n  bindEvent,\n  sendEvent,\n  hasShowPrevious,\n  showPrevious,\n  showMore,\n  isFirstPage,\n  isLastPage,\n  cssClasses,\n  templateProps,\n  banner,\n}: InfiniteHitsProps) => {\n  const handleInsightsClick = createInsightsEventHandler({\n    insights,\n    sendEvent,\n  });\n\n  if (results.hits.length === 0) {\n    return (\n      <div\n        className={cx(cssClasses.root, cssClasses.emptyRoot)}\n        onClick={handleInsightsClick}\n      >\n        {banner &&\n          (templateProps.templates.banner ? (\n            <Template\n              {...templateProps}\n              templateKey=\"banner\"\n              rootTagName=\"fragment\"\n              data={{\n                banner,\n                className: cssClasses.bannerRoot,\n              }}\n            />\n          ) : (\n            <DefaultBanner banner={banner} classNames={cssClasses} />\n          ))}\n        <Template\n          {...templateProps}\n          templateKey=\"empty\"\n          rootTagName=\"fragment\"\n          data={results}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      {hasShowPrevious && (\n        <Template\n          {...templateProps}\n          templateKey=\"showPreviousText\"\n          rootTagName=\"button\"\n          rootProps={{\n            className: cx(\n              cssClasses.loadPrevious,\n              isFirstPage && cssClasses.disabledLoadPrevious\n            ),\n            disabled: isFirstPage,\n            onClick: showPrevious,\n          }}\n        />\n      )}\n\n      {banner &&\n        (templateProps.templates.banner ? (\n          <Template\n            {...templateProps}\n            templateKey=\"banner\"\n            rootTagName=\"fragment\"\n            data={{\n              banner,\n              className: cssClasses.bannerRoot,\n            }}\n          />\n        ) : (\n          <DefaultBanner banner={banner} classNames={cssClasses} />\n        ))}\n\n      <ol className={cssClasses.list}>\n        {hits.map((hit, index) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{\n              className: cssClasses.item,\n              onClick: (event: MouseEvent) => {\n                handleInsightsClick(event);\n                sendEvent('click:internal', hit, 'Hit Clicked');\n              },\n              onAuxClick: (event: MouseEvent) => {\n                handleInsightsClick(event);\n                sendEvent('click:internal', hit, 'Hit Clicked');\n              },\n            }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              get __hitIndex() {\n                warning(\n                  false,\n                  'The `__hitIndex` property is deprecated. Use the absolute `__position` instead.'\n                );\n                return index;\n              },\n            }}\n            bindEvent={bindEvent}\n            sendEvent={sendEvent}\n          />\n        ))}\n      </ol>\n\n      <Template\n        {...templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cx(\n            cssClasses.loadMore,\n            isLastPage && cssClasses.disabledLoadMore\n          ),\n          disabled: isLastPage,\n          onClick: showMore,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default InfiniteHits;\n","import { omit } from '../../lib/utils';\n\nimport type { InfiniteHitsComponentTemplates } from '../../components/InfiniteHits/InfiniteHits';\n\nconst defaultTemplates: InfiniteHitsComponentTemplates = {\n  empty() {\n    return 'No results';\n  },\n  showPreviousText() {\n    return 'Show previous results';\n  },\n  showMoreText() {\n    return 'Show more results';\n  },\n  item(data) {\n    return JSON.stringify(omit(data, ['__hitIndex']), null, 2);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport InfiniteHits from '../../components/InfiniteHits/InfiniteHits';\nimport connectInfiniteHits from '../../connectors/infinite-hits/connectInfiniteHits';\nimport { withInsights } from '../../lib/insights';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  InfiniteHitsComponentCSSClasses,\n  InfiniteHitsComponentTemplates,\n} from '../../components/InfiniteHits/InfiniteHits';\nimport type {\n  InfiniteHitsConnectorParams,\n  InfiniteHitsRenderState,\n  InfiniteHitsCache,\n  InfiniteHitsWidgetDescription,\n} from '../../connectors/infinite-hits/connectInfiniteHits';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  WidgetFactory,\n  Template,\n  TemplateWithBindEvent,\n  InsightsClient,\n  Renderer,\n  BaseHit,\n  Hit,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n});\nconst suit = component('InfiniteHits');\n\nexport type InfiniteHitsCSSClasses = Partial<{\n  /**\n   * The root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * The root container without results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * The list of results.\n   */\n  list: string | string[];\n\n  /**\n   * The list item.\n   */\n  item: string | string[];\n\n  /**\n   * The “Show previous” button.\n   */\n  loadPrevious: string | string[];\n\n  /**\n   * The disabled “Show previous” button.\n   */\n  disabledLoadPrevious: string | string[];\n\n  /**\n   * The “Show more” button.\n   */\n  loadMore: string | string[];\n\n  /**\n   * The disabled “Show more” button.\n   */\n  disabledLoadMore: string | string[];\n\n  /**\n   * Class names to apply to the banner element\n   */\n  bannerRoot: string | string[];\n\n  /**\n   * Class names to apply to the banner image element\n   */\n  bannerImage: string | string[];\n\n  /**\n   * Class names to apply to the banner link element\n   */\n  bannerLink: string | string[];\n}>;\n\nexport type InfiniteHitsTemplates<THit extends NonNullable<object> = BaseHit> =\n  Partial<{\n    /**\n     * The template to use when there are no results.\n     */\n    empty: Template<SearchResults<THit>>;\n\n    /**\n     * The template to use for the “Show previous” label.\n     */\n    showPreviousText: Template;\n\n    /**\n     * The template to use for the “Show more” label.\n     */\n    showMoreText: Template;\n\n    /**\n     * The template to use for each result.\n     */\n    item: TemplateWithBindEvent<\n      Hit<THit> & {\n        /** @deprecated the index in the hits array, use __position instead, which is the absolute position */\n        __hitIndex: number;\n      }\n    >;\n\n    /**\n     * Template to use for the banner.\n     */\n    banner: Template<{\n      banner: Required<InfiniteHitsRenderState['banner']>;\n      className: string;\n    }>;\n  }>;\n\nexport type InfiniteHitsWidgetParams<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: InfiniteHitsCSSClasses;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: InfiniteHitsTemplates<THit>;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache;\n};\n\nexport type InfiniteHitsWidget = WidgetFactory<\n  InfiniteHitsWidgetDescription & { $$widgetType: 'ais.infiniteHits' },\n  InfiniteHitsConnectorParams,\n  InfiniteHitsWidgetParams\n>;\n\nconst renderer =\n  <THit extends NonNullable<object> = BaseHit>({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n    showPrevious: hasShowPrevious,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: InfiniteHitsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<InfiniteHitsComponentTemplates>;\n    };\n    templates: InfiniteHitsTemplates<THit>;\n    showPrevious?: boolean;\n  }): Renderer<InfiniteHitsRenderState, Partial<InfiniteHitsWidgetParams>> =>\n  (\n    {\n      items,\n      results,\n      showMore,\n      showPrevious,\n      isFirstPage,\n      isLastPage,\n      instantSearchInstance,\n      insights,\n      bindEvent,\n      sendEvent,\n      banner,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps =\n        prepareTemplateProps<InfiniteHitsComponentTemplates>({\n          defaultTemplates,\n          templatesConfig: instantSearchInstance.templatesConfig,\n          templates: templates as InfiniteHitsComponentTemplates,\n        });\n      return;\n    }\n\n    render(\n      <InfiniteHits\n        cssClasses={cssClasses}\n        hits={items}\n        results={results!}\n        hasShowPrevious={hasShowPrevious!}\n        showPrevious={showPrevious}\n        showMore={showMore}\n        templateProps={renderState.templateProps!}\n        isFirstPage={isFirstPage}\n        isLastPage={isLastPage}\n        insights={insights as InsightsClient}\n        sendEvent={sendEvent}\n        bindEvent={bindEvent}\n        banner={banner}\n      />,\n      containerNode\n    );\n  };\n\nexport default (function infiniteHits<\n  THit extends NonNullable<object> = BaseHit\n>(\n  widgetParams: InfiniteHitsWidgetParams<THit> &\n    InfiniteHitsConnectorParams<THit>\n) {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n    showPrevious,\n    cache,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    loadPrevious: cx(\n      suit({ descendantName: 'loadPrevious' }),\n      userCssClasses.loadPrevious\n    ),\n    disabledLoadPrevious: cx(\n      suit({ descendantName: 'loadPrevious', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadPrevious\n    ),\n    loadMore: cx(suit({ descendantName: 'loadMore' }), userCssClasses.loadMore),\n    disabledLoadMore: cx(\n      suit({ descendantName: 'loadMore', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadMore\n    ),\n    bannerRoot: cx(\n      suit({ descendantName: 'banner' }),\n      userCssClasses.bannerRoot\n    ),\n    bannerImage: cx(\n      suit({ descendantName: 'banner-image' }),\n      userCssClasses.bannerImage\n    ),\n    bannerLink: cx(\n      suit({ descendantName: 'banner-link' }),\n      userCssClasses.bannerLink\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showPrevious,\n    renderState: {},\n  });\n\n  const makeWidget = withInsights(connectInfiniteHits)(\n    specializedRenderer,\n    () => render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      escapeHTML,\n      transformItems,\n      showPrevious,\n      cache,\n    }),\n    $$widgetType: 'ais.infiniteHits',\n  };\n} satisfies InfiniteHitsWidget);\n","/** @jsx h */\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\n\nimport type { MenuComponentTemplates } from './menu';\n\nconst defaultTemplates: MenuComponentTemplates = {\n  item({ cssClasses, url, label, count }) {\n    return (\n      <a className={cx(cssClasses.link)} href={url}>\n        <span className={cx(cssClasses.label)}>{label}</span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </a>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectMenu from '../../connectors/menu/connectMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu' });\nconst suit = component('Menu');\n\nexport type MenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the show more button.\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more button.\n   */\n  disabledShowMore: string | string[];\n}>;\n\nexport type MenuTemplates = Partial<{\n  /**\n   * Item template. The string template gets the same values as the function.\n   */\n  item: Template<{\n    count: number;\n    cssClasses: MenuCSSClasses;\n    isRefined: boolean;\n    label: string;\n    url: string;\n    value: string;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{\n    isShowingMore: boolean;\n  }>;\n}>;\n\nexport type MenuComponentCSSClasses = ComponentCSSClasses<MenuCSSClasses>;\n\nexport type MenuComponentTemplates = Required<MenuTemplates>;\n\nexport type MenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: MenuTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n    showMore,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: MenuComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<MenuComponentTemplates>;\n    };\n    templates: MenuTemplates;\n    showMore?: boolean;\n  }) =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      instantSearchInstance,\n      isShowingMore,\n      toggleShowMore,\n      canToggleShowMore,\n    }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const facetValues = items.map((facetValue) => ({\n      ...facetValue,\n      url: createURL(facetValue.value),\n    }));\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={facetValues}\n        showMore={showMore}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\nexport type MenuWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menu' },\n  MenuConnectorParams,\n  MenuWidgetParams\n>;\n\nconst menu: MenuWidget = function menu(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n    showMore,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.menu',\n  };\n};\n\nexport default menu;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { find } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { MenuRenderState } from '../../connectors/menu/connectMenu';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  MenuSelectCSSClasses,\n  MenuSelectTemplates,\n} from '../../widgets/menu-select/menu-select';\n\nexport type MenuSelectComponentCSSClasses =\n  ComponentCSSClasses<MenuSelectCSSClasses>;\n\nexport type MenuSelectComponentTemplates = Required<MenuSelectTemplates>;\n\ntype MenuItem = {\n  /**\n   * The value of the menu item.\n   **/\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   **/\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   **/\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   **/\n  isRefined: boolean;\n};\n\ntype Props = {\n  cssClasses: MenuSelectComponentCSSClasses;\n  items: MenuItem[];\n  refine: MenuRenderState['refine'];\n  templateProps: {\n    templates: MenuSelectComponentTemplates;\n  };\n};\n\nfunction MenuSelect({ cssClasses, templateProps, items, refine }: Props) {\n  const { value: selectedValue } = find(items, (item) => item.isRefined) || {\n    value: '',\n  };\n\n  return (\n    <div\n      className={cx(\n        cssClasses.root,\n        items.length === 0 && cssClasses.noRefinementRoot\n      )}\n    >\n      <select\n        className={cssClasses.select}\n        value={selectedValue}\n        onChange={(event) => {\n          refine((event.target as HTMLSelectElement).value);\n        }}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"defaultOption\"\n          rootTagName=\"option\"\n          rootProps={{\n            value: '',\n            className: cssClasses.option,\n          }}\n        />\n\n        {items.map((item) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"option\"\n            rootProps={{\n              value: item.value,\n              className: cssClasses.option,\n            }}\n            key={item.value}\n            data={item}\n          />\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default MenuSelect;\n","import { formatNumber } from '../../lib/formatNumber';\n\nimport type { MenuSelectComponentTemplates } from '../../components/MenuSelect/MenuSelect';\n\nconst defaultTemplates: MenuSelectComponentTemplates = {\n  item({ label, count }) {\n    return `${label} (${formatNumber(count)})`;\n  },\n  defaultOption() {\n    return 'See all';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport MenuSelect from '../../components/MenuSelect/MenuSelect';\nimport connectMenu from '../../connectors/menu/connectMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  MenuSelectComponentCSSClasses,\n  MenuSelectComponentTemplates,\n} from '../../components/MenuSelect/MenuSelect';\nimport type {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { RendererOptions, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu-select' });\nconst suit = component('MenuSelect');\n\nexport type MenuSelectCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root when there are no items to display\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the select element.\n   */\n  select: string | string[];\n  /**\n   * CSS class to add to the option element.\n   */\n  option: string | string[];\n}>;\n\nexport type MenuSelectTemplates = Partial<{\n  /**\n   * Item template, provided with `label`, `count`, `isRefined` and `value` data properties.\n   */\n  item: Template<{\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n  }>;\n  /**\n   * Label of the \"see all\" option in the select.\n   */\n  defaultOption: Template;\n}>;\n\nexport type MenuSelectWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: MenuSelectTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuSelectCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: MenuSelectComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<MenuSelectComponentTemplates>;\n    };\n    templates: MenuSelectTemplates;\n  }) =>\n  (\n    {\n      refine,\n      items,\n      instantSearchInstance,\n    }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <MenuSelect\n        cssClasses={cssClasses}\n        items={items}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type MenuSelectWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menuSelect' },\n  MenuConnectorParams,\n  MenuSelectWidgetParams\n>;\n\nconst menuSelect: MenuSelectWidget = function menuSelect(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy = ['name:asc'],\n    limit = 10,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, limit, sortBy, transformItems }),\n    $$widgetType: 'ais.menuSelect',\n  };\n};\n\nexport default menuSelect;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { NumericMenuComponentTemplates } from './numeric-menu';\n\nconst defaultTemplates: NumericMenuComponentTemplates = {\n  item({ cssClasses, attribute, label, isRefined }) {\n    return (\n      <label className={cssClasses.label}>\n        <input\n          type=\"radio\"\n          className={cssClasses.radio}\n          name={attribute}\n          defaultChecked={isRefined}\n        />\n        <span className={cssClasses.labelText}>{label}</span>\n      </label>\n    );\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectNumericMenu from '../../connectors/numeric-menu/connectNumericMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  NumericMenuConnectorParams,\n  NumericMenuRenderState,\n  NumericMenuWidgetDescription,\n} from '../../connectors/numeric-menu/connectNumericMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  ComponentCSSClasses,\n  Renderer,\n  Template,\n  WidgetFactory,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'numeric-menu' });\nconst suit = component('NumericMenu');\n\nconst renderer =\n  ({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    attribute: string;\n    cssClasses: NumericMenuComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<NumericMenuTemplates>;\n    };\n    templates: NumericMenuTemplates;\n  }): Renderer<NumericMenuRenderState, Partial<NumericMenuWidgetParams>> =>\n  (\n    { createURL, instantSearchInstance, refine, items },\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        attribute={attribute}\n      />,\n      containerNode\n    );\n  };\n\nexport type NumericMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS class to add to each label element.\n   */\n  label: string | string[];\n\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText: string | string[];\n\n  /**\n   * CSS class to add to each radio element (when using the default template).\n   */\n  radio: string | string[];\n}>;\n\nexport type NumericMenuComponentCSSClasses =\n  ComponentCSSClasses<NumericMenuCSSClasses>;\n\nexport type NumericMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `label` (the name in the configuration), `isRefined`, `url`, `value` (the setting for the filter) data properties.\n   */\n  item: Template<{\n    /**\n     * The name of the attribute.\n     */\n    attribute: string;\n\n    /**\n     * The label for the option.\n     */\n    label: string;\n\n    /**\n     * The encoded URL of the bounds object with a {start, end} form. This\n     * value can be used verbatim in the webpage and can be read by refine\n     * directly. If you want to inspect the value, you can do JSON.parse(window.decodeURI(value))\n     * to get the object.\n     */\n    value: string;\n\n    /**\n     *  Whether or not the refinement is selected.\n     */\n    isRefined: boolean;\n\n    /**\n     * The URL with the applied refinement.\n     */\n    url: string;\n\n    /**\n     * The CSS classes provided to the widget.\n     */\n    cssClasses: NumericMenuComponentCSSClasses;\n  }>;\n}>;\n\nexport type NumericMenuComponentTemplates = Required<NumericMenuTemplates>;\n\nexport type NumericMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: NumericMenuTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: NumericMenuCSSClasses;\n};\n\nexport type NumericMenuWidget = WidgetFactory<\n  NumericMenuWidgetDescription & { $$widgetType: 'ais.numericMenu' },\n  NumericMenuConnectorParams,\n  NumericMenuWidgetParams\n>;\n\nconst numericMenu: NumericMenuWidget = function numericMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    items,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    radio: cx(suit({ descendantName: 'radio' }), userCssClasses.radio),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectNumericMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      items,\n      transformItems,\n    }),\n    $$widgetType: 'ais.numericMenu',\n  };\n};\n\nexport default numericMenu;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { isSpecialClick } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  PaginationCSSClasses,\n  PaginationTemplates,\n} from '../../widgets/pagination/pagination';\n\nexport type PaginationComponentCSSClasses =\n  ComponentCSSClasses<PaginationCSSClasses>;\n\nexport type PaginationComponentTemplates = Required<PaginationTemplates>;\n\nexport type PaginationProps = {\n  createURL: (value: number) => string;\n  cssClasses: PaginationComponentCSSClasses;\n  templates: PaginationComponentTemplates;\n  currentPage: number;\n  nbPages: number;\n  pages: number[];\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  setCurrentPage: (value: number) => void;\n  showFirst?: boolean;\n  showLast?: boolean;\n  showPrevious?: boolean;\n  showNext?: boolean;\n};\n\nfunction Pagination(props: PaginationProps) {\n  function createClickHandler(pageNumber: number) {\n    return (event: MouseEvent) => {\n      if (isSpecialClick(event)) {\n        // do not alter the default browser behavior\n        // if one special key is down\n        return;\n      }\n      event.preventDefault();\n      props.setCurrentPage(pageNumber);\n    };\n  }\n\n  return (\n    <div\n      className={cx(\n        props.cssClasses.root,\n        props.nbPages <= 1 && props.cssClasses.noRefinementRoot\n      )}\n    >\n      <ul className={props.cssClasses.list}>\n        {props.showFirst && (\n          <PaginationLink\n            ariaLabel=\"First Page\"\n            className={props.cssClasses.firstPageItem}\n            isDisabled={props.isFirstPage}\n            templates={props.templates}\n            templateKey=\"first\"\n            pageNumber={0}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.showPrevious && (\n          <PaginationLink\n            ariaLabel=\"Previous Page\"\n            className={props.cssClasses.previousPageItem}\n            isDisabled={props.isFirstPage}\n            templates={props.templates}\n            templateKey=\"previous\"\n            pageNumber={props.currentPage - 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.pages.map((pageNumber) => (\n          <PaginationLink\n            key={pageNumber}\n            ariaLabel={`Page ${pageNumber + 1}`}\n            className={props.cssClasses.pageItem}\n            isSelected={pageNumber === props.currentPage}\n            templates={props.templates}\n            templateKey=\"page\"\n            pageNumber={pageNumber}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        ))}\n\n        {props.showNext && (\n          <PaginationLink\n            ariaLabel=\"Next Page\"\n            className={props.cssClasses.nextPageItem}\n            isDisabled={props.isLastPage}\n            templates={props.templates}\n            templateKey=\"next\"\n            pageNumber={props.currentPage + 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.showLast && (\n          <PaginationLink\n            ariaLabel={`Last Page, Page ${props.nbPages}`}\n            className={props.cssClasses.lastPageItem}\n            isDisabled={props.isLastPage}\n            templates={props.templates}\n            templateKey=\"last\"\n            pageNumber={props.nbPages - 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n      </ul>\n    </div>\n  );\n}\n\ntype PaginationLinkProps = {\n  templates: PaginationTemplates;\n  templateKey: keyof PaginationTemplates;\n  ariaLabel: string;\n  pageNumber: number;\n  isDisabled?: boolean;\n  isSelected?: boolean;\n  className?: string;\n  cssClasses: PaginationComponentCSSClasses;\n  createURL: (value: number) => string;\n  createClickHandler: (pageNumber: number) => (event: MouseEvent) => void;\n};\n\nfunction PaginationLink({\n  templates,\n  templateKey,\n  ariaLabel,\n  pageNumber,\n  className,\n  isDisabled = false,\n  isSelected = false,\n  cssClasses,\n  createURL,\n  createClickHandler,\n}: PaginationLinkProps) {\n  return (\n    <li\n      className={cx(\n        cssClasses.item,\n        isDisabled && cssClasses.disabledItem,\n        className,\n        isSelected && cssClasses.selectedItem\n      )}\n    >\n      {isDisabled ? (\n        <Template\n          rootTagName=\"span\"\n          rootProps={{\n            className: cssClasses.link,\n            'aria-label': ariaLabel,\n          }}\n          templateKey={templateKey}\n          templates={templates}\n          data={{\n            page: pageNumber + 1,\n          }}\n        />\n      ) : (\n        <Template\n          rootTagName=\"a\"\n          rootProps={{\n            className: cssClasses.link,\n            'aria-label': ariaLabel,\n            href: createURL(pageNumber),\n            onClick: createClickHandler(pageNumber),\n          }}\n          templateKey={templateKey}\n          templates={templates}\n          data={{\n            page: pageNumber + 1,\n          }}\n        />\n      )}\n    </li>\n  );\n}\n\nexport default Pagination;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport Pagination from '../../components/Pagination/Pagination';\nimport connectPagination from '../../connectors/pagination/connectPagination';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  PaginationComponentCSSClasses,\n  PaginationComponentTemplates,\n} from '../../components/Pagination/Pagination';\nimport type {\n  PaginationConnectorParams,\n  PaginationRenderState,\n  PaginationWidgetDescription,\n} from '../../connectors/pagination/connectPagination';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\n\nconst suit = component('Pagination');\nconst withUsage = createDocumentationMessageGenerator({ name: 'pagination' });\n\nconst defaultTemplates: PaginationComponentTemplates = {\n  previous: () => '‹',\n  next: () => '›',\n  page: ({ page }) => `${page}`,\n  first: () => '«',\n  last: () => '»',\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: PaginationComponentCSSClasses;\n    templates: PaginationComponentTemplates;\n    showFirst: boolean;\n    showLast: boolean;\n    showPrevious: boolean;\n    showNext: boolean;\n    scrollToNode: HTMLElement | false;\n  }): Renderer<PaginationRenderState, Partial<PaginationWidgetParams>> =>\n  (\n    {\n      createURL,\n      currentRefinement,\n      nbPages,\n      pages,\n      isFirstPage,\n      isLastPage,\n      refine,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) return;\n\n    const setCurrentPage = (pageNumber: number) => {\n      refine(pageNumber);\n\n      if (scrollToNode !== false) {\n        scrollToNode.scrollIntoView();\n      }\n    };\n\n    render(\n      <Pagination\n        createURL={createURL}\n        cssClasses={cssClasses}\n        currentPage={currentRefinement}\n        templates={templates}\n        nbPages={nbPages}\n        pages={pages}\n        isFirstPage={isFirstPage}\n        isLastPage={isLastPage}\n        setCurrentPage={setCurrentPage}\n        showFirst={showFirst}\n        showLast={showLast}\n        showPrevious={showPrevious}\n        showNext={showNext}\n      />,\n      containerNode\n    );\n  };\n\nexport type PaginationCSSClasses = Partial<{\n  /**\n   * CSS classes added to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS classes added to the wrapping `<ul>`.\n   */\n  list: string | string[];\n\n  /**\n   * CSS classes added to each `<li>`.\n   */\n  item: string | string[];\n\n  /**\n   * CSS classes added to the first `<li>`.\n   */\n  firstPageItem: string | string[];\n\n  /**\n   * CSS classes added to the last `<li>`.\n   */\n  lastPageItem: string | string[];\n\n  /**\n   * CSS classes added to the previous `<li>`.\n   */\n  previousPageItem: string | string[];\n\n  /**\n   * CSS classes added to the next `<li>`.\n   */\n  nextPageItem: string | string[];\n\n  /**\n   * CSS classes added to page `<li>`.\n   */\n  pageItem: string | string[];\n\n  /**\n   * CSS classes added to the selected `<li>`.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS classes added to the disabled `<li>`.\n   */\n  disabledItem: string | string[];\n\n  /**\n   * CSS classes added to each link.\n   */\n  link: string | string[];\n}>;\n\nexport type PaginationTemplates = Partial<{\n  /**\n   * Label for the Previous link.\n   */\n  previous: Template;\n\n  /**\n   * Label for the Next link.\n   */\n  next: Template;\n\n  /**\n   * Label for the link of a certain page\n   * Page is one-based, so `page` will be `1` for the first page.\n   */\n  page: Template<{ page: number }>;\n\n  /**\n   * Label for the First link.\n   */\n  first: Template;\n\n  /**\n   * Label for the Last link.\n   */\n  last: Template;\n}>;\n\nexport type PaginationWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The max number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The number of pages to display on each side of the current page.\n   * @default 3\n   */\n  padding?: number;\n\n  /**\n   * Where to scroll after a click, set to `false` to disable.\n   * @default body\n   */\n  scrollTo?: string | HTMLElement | boolean;\n\n  /**\n   * Whether to show the \"first page\" control\n   * @default true\n   */\n  showFirst?: boolean;\n\n  /**\n   * Whether to show the \"last page\" control\n   * @default true\n   */\n  showLast?: boolean;\n\n  /**\n   * Whether to show the \"next page\" control\n   * @default true\n   */\n  showNext?: boolean;\n\n  /**\n   * Whether to show the \"previous page\" control\n   * @default true\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Text to display in the links.\n   */\n  templates?: PaginationTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: PaginationCSSClasses;\n};\n\nexport type PaginationWidget = WidgetFactory<\n  PaginationWidgetDescription & { $$widgetType: 'ais.pagination' },\n  PaginationConnectorParams,\n  PaginationWidgetParams\n>;\n\nconst pagination: PaginationWidget = function pagination(widgetParams) {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    totalPages,\n    padding,\n    showFirst = true,\n    showLast = true,\n    showPrevious = true,\n    showNext = true,\n    scrollTo: userScrollTo = 'body',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const scrollTo = userScrollTo === true ? 'body' : userScrollTo;\n  const scrollToNode = scrollTo !== false ? getContainerNode(scrollTo) : false;\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    firstPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'firstPage' }),\n      userCssClasses.firstPageItem\n    ),\n    lastPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'lastPage' }),\n      userCssClasses.lastPageItem\n    ),\n    previousPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'previousPage' }),\n      userCssClasses.previousPageItem\n    ),\n    nextPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'nextPage' }),\n      userCssClasses.nextPageItem\n    ),\n    pageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'page' }),\n      userCssClasses.pageItem\n    ),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  });\n\n  const makeWidget = connectPagination(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ totalPages, padding }),\n    $$widgetType: 'ais.pagination',\n  };\n};\n\nexport default pagination;\n","import{options as n,Fragment as t}from\"preact\";var r,u,i,o,f=0,c=[],e=[],a=n.__b,v=n.__r,l=n.diffed,m=n.__c,d=n.unmount;function p(t,r){n.__h&&n.__h(u,t,f||r),f=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:e}),i.__[t]}function y(n){return f=1,h(C,n)}function h(n,t,i){var o=p(r++,2);if(o.t=n,!o.__c&&(o.__=[i?i(t):C(void 0,t),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=u,!u.u)){u.u=!0;var f=u.shouldComponentUpdate;u.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!!i&&(!f||f.call(this,n,t,r))}}return o.__N||o.__}function s(t,i){var o=p(r++,3);!n.__s&&B(o.__H,i)&&(o.__=t,o.i=i,u.__H.__h.push(o))}function _(t,i){var o=p(r++,4);!n.__s&&B(o.__H,i)&&(o.__=t,o.i=i,u.__h.push(o))}function A(n){return f=5,T(function(){return{current:n}},[])}function F(n,t,r){f=6,_(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function T(n,t){var u=p(r++,7);return B(u.__H,t)?(u.__V=n(),u.i=t,u.__h=n,u.__V):u.__}function q(n,t){return f=8,T(function(){return n},t)}function x(n){var t=u.context[n.__c],i=p(r++,9);return i.c=n,t?(null==i.__&&(i.__=!0,t.sub(u)),t.props.value):n.__}function P(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function V(n){var t=p(r++,10),i=y();return t.__=n,u.componentDidCatch||(u.componentDidCatch=function(n,r){t.__&&t.__(n,r),i[1](n)}),[i[0],function(){i[1](void 0)}]}function b(){var n=p(r++,11);return n.__||(n.__=\"P\"+function(n){for(var t=0,r=n.length;r>0;)t=(t<<5)-t+n.charCodeAt(--r)|0;return t}(u.__v.o)+r),n.__}function g(){for(var t;t=c.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(w),t.__H.__h.forEach(z),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){\"function\"!=typeof n.type||n.o||n.type===t?n.o||(n.o=n.__&&n.__.o?n.__.o:\"\"):n.o=(n.__&&n.__.o?n.__.o:\"\")+(n.__&&n.__.__k?n.__.__k.indexOf(n):0),u=null,a&&a(n)},n.__r=function(n){v&&v(n),r=0;var t=(u=n.__c).__H;t&&(i===u?(t.__h=[],u.__h=[],t.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=e,n.__N=n.i=void 0})):(t.__h.forEach(w),t.__h.forEach(z),t.__h=[])),i=u},n.diffed=function(t){l&&l(t);var r=t.__c;r&&r.__H&&(r.__H.__h.length&&(1!==c.push(r)&&o===n.requestAnimationFrame||((o=n.requestAnimationFrame)||k)(g)),r.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==e&&(n.__=n.__V),n.i=void 0,n.__V=e})),i=u=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(w),t.__h=t.__h.filter(function(n){return!n.__||z(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),m&&m(t,r)},n.unmount=function(t){d&&d(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{w(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var j=\"function\"==typeof requestAnimationFrame;function k(n){var t,r=function(){clearTimeout(u),j&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);j&&(t=requestAnimationFrame(r))}function w(n){var t=u,r=n.__c;\"function\"==typeof r&&(n.__c=void 0,r()),u=t}function z(n){var t=u;n.__c=n.__(),u=t}function B(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function C(n,t){return\"function\"==typeof t?t(n):t}export{q as useCallback,x as useContext,P as useDebugValue,s as useEffect,V as useErrorBoundary,b as useId,F as useImperativeHandle,_ as useLayoutEffect,T as useMemo,h as useReducer,A as useRef,y as useState};\n//# sourceMappingURL=hooks.module.js.map\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\n\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses, UnknownWidgetFactory } from '../../types';\nimport type {\n  PanelCSSClasses,\n  PanelSharedOptions,\n  PanelTemplates,\n} from '../../widgets/panel/panel';\n\nexport type PanelComponentCSSClasses = ComponentCSSClasses<\n  // `collapseIcon` is only used in the default templates of the widget\n  Omit<PanelCSSClasses, 'collapseIcon'>\n>;\n\nexport type PanelComponentTemplates<TWidget extends UnknownWidgetFactory> =\n  PanelTemplates<TWidget>;\n\nexport type PanelProps<TWidget extends UnknownWidgetFactory> = {\n  hidden: boolean;\n  collapsible: boolean;\n  isCollapsed: boolean;\n  data: PanelSharedOptions<TWidget>;\n  cssClasses: PanelComponentCSSClasses;\n  templates: PanelComponentTemplates<TWidget>;\n  bodyElement: HTMLElement;\n};\n\nfunction Panel<TWidget extends UnknownWidgetFactory>(\n  props: PanelProps<TWidget>\n) {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(props.isCollapsed);\n  const [isControlled, setIsControlled] = useState<boolean>(false);\n  const bodyRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const node = bodyRef.current;\n    if (!node) {\n      return undefined;\n    }\n\n    node.appendChild(props.bodyElement);\n\n    return () => {\n      node.removeChild(props.bodyElement);\n    };\n  }, [bodyRef, props.bodyElement]);\n\n  if (!isControlled && props.isCollapsed !== isCollapsed) {\n    setIsCollapsed(props.isCollapsed);\n  }\n\n  return (\n    <div\n      className={cx(\n        props.cssClasses.root,\n        props.hidden && props.cssClasses.noRefinementRoot,\n        props.collapsible && props.cssClasses.collapsibleRoot,\n        isCollapsed && props.cssClasses.collapsedRoot\n      )}\n      hidden={props.hidden}\n    >\n      {props.templates.header && (\n        <div className={props.cssClasses.header}>\n          <Template\n            templates={props.templates}\n            templateKey=\"header\"\n            rootTagName=\"span\"\n            data={props.data}\n          />\n\n          {props.collapsible && (\n            <button\n              className={props.cssClasses.collapseButton}\n              aria-expanded={!isCollapsed}\n              onClick={(event) => {\n                event.preventDefault();\n\n                setIsControlled(true);\n                setIsCollapsed((prevIsCollapsed) => !prevIsCollapsed);\n              }}\n            >\n              <Template\n                templates={props.templates}\n                templateKey=\"collapseButtonText\"\n                rootTagName=\"span\"\n                data={{ collapsed: isCollapsed }}\n              />\n            </button>\n          )}\n        </div>\n      )}\n\n      <div className={props.cssClasses.body} ref={bodyRef} />\n\n      {props.templates.footer && (\n        <Template\n          templates={props.templates}\n          templateKey=\"footer\"\n          rootProps={{\n            className: props.cssClasses.footer,\n          }}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Panel;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport Panel from '../../components/Panel/Panel';\nimport { component } from '../../lib/suit';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getObjectType,\n  warning,\n} from '../../lib/utils';\n\nimport type { PanelComponentCSSClasses } from '../../components/Panel/Panel';\nimport type {\n  Template,\n  RenderOptions,\n  WidgetFactory,\n  InitOptions,\n  Widget,\n} from '../../types';\n\nexport type PanelCSSClasses = Partial<{\n  /**\n   * CSS classes to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS classes to add to the root element of the widget when there's no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsible (`collapse` is defined).\n   */\n  collapsibleRoot: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsed.\n   */\n  collapsedRoot: string | string[];\n\n  /**\n   * CSS classes to add to the collapse button element.\n   */\n  collapseButton: string | string[];\n\n  /**\n   * CSS classes to add to the collapse icon of the button.\n   */\n  collapseIcon: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header: string | string[];\n\n  /**\n   * CSS classes to add to the body.\n   */\n  body: string | string[];\n\n  /**\n   * CSS classes to add to the footer.\n   */\n  footer: string | string[];\n}>;\n\ntype AnyWidgetFactory = WidgetFactory<\n  {\n    $$type: string;\n  },\n  Record<string, any>,\n  // @TODO: this really should be _at least_ { container: string | HTMLElement }\n  // but that or { container: string | HTMLElement; [key: string]: any }\n  // still doesn't allow wider types with another key required.\n  any\n>;\n\nexport type PanelTemplates<TWidget extends AnyWidgetFactory> = Partial<{\n  /**\n   * Template to use for the header.\n   */\n  header: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for the footer.\n   */\n  footer: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for collapse button.\n   */\n  collapseButtonText: Template<{ collapsed: boolean }>;\n}>;\n\ntype GetWidgetRenderState<TWidgetFactory extends AnyWidgetFactory> =\n  ReturnType<TWidgetFactory>['getWidgetRenderState'] extends (\n    renderOptions: any\n  ) => infer TRenderState\n    ? TRenderState extends Record<string, unknown>\n      ? TRenderState\n      : never\n    : Record<string, unknown>;\n\nexport type PanelRenderOptions<TWidgetFactory extends AnyWidgetFactory> =\n  RenderOptions & GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelSharedOptions<TWidgetFactory extends AnyWidgetFactory> = (\n  | InitOptions\n  | RenderOptions\n) &\n  GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelWidgetParams<TWidgetFactory extends AnyWidgetFactory> = {\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be hidden based on the render options.\n   */\n  hidden?: (options: PanelRenderOptions<TWidgetFactory>) => boolean;\n\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be collapsed based on the render options.\n   */\n  collapsed?: (options: PanelRenderOptions<TWidgetFactory>) => boolean;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: PanelTemplates<TWidgetFactory>;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: PanelCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'panel' });\nconst suit = component('Panel');\n\nconst renderer =\n  <TWidget extends AnyWidgetFactory>({\n    containerNode,\n    bodyContainerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    bodyContainerNode: HTMLElement;\n    cssClasses: PanelComponentCSSClasses;\n    templates: PanelTemplates<TWidget>;\n  }) =>\n  ({\n    options,\n    hidden,\n    collapsible,\n    collapsed,\n  }: {\n    options: PanelSharedOptions<TWidget>;\n    hidden: boolean;\n    collapsible: boolean;\n    collapsed: boolean;\n  }) => {\n    render(\n      <Panel<TWidget>\n        cssClasses={cssClasses}\n        hidden={hidden}\n        collapsible={collapsible}\n        isCollapsed={collapsed}\n        templates={templates}\n        data={options}\n        bodyElement={bodyContainerNode}\n      />,\n      containerNode\n    );\n  };\n\ntype AugmentedWidget<\n  TWidgetFactory extends AnyWidgetFactory,\n  TOverriddenKeys extends keyof Widget = 'init' | 'render' | 'dispose'\n> = Omit<\n  ReturnType<TWidgetFactory>,\n  TOverriddenKeys | 'dependsOn' | 'getWidgetParameters'\n> &\n  Pick<Required<Widget>, TOverriddenKeys>;\n\nexport type PanelWidget = <TWidgetFactory extends AnyWidgetFactory>(\n  panelWidgetParams?: PanelWidgetParams<TWidgetFactory>\n) => (\n  widgetFactory: TWidgetFactory\n) => (\n  widgetParams: Parameters<TWidgetFactory>[0]\n) => AugmentedWidget<TWidgetFactory>;\n\n/**\n * The panel widget wraps other widgets in a consistent panel design.\n * It also reacts, indicates and sets CSS classes when widgets are no longer relevant for refining.\n */\nconst panel: PanelWidget = (panelWidgetParams) => {\n  const {\n    templates = {},\n    hidden = () => false,\n    collapsed,\n    cssClasses: userCssClasses = {},\n  } = panelWidgetParams || {};\n\n  warning(\n    typeof hidden === 'function',\n    `The \\`hidden\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      hidden\n    )}).`\n  );\n\n  warning(\n    typeof collapsed === 'undefined' || typeof collapsed === 'function',\n    `The \\`collapsed\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      collapsed\n    )}).`\n  );\n\n  const bodyContainerNode = document.createElement('div');\n  const collapsible = Boolean(collapsed);\n  const collapsedFn = typeof collapsed === 'function' ? collapsed : () => false;\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    collapsibleRoot: cx(\n      suit({ modifierName: 'collapsible' }),\n      userCssClasses.collapsibleRoot\n    ),\n    collapsedRoot: cx(\n      suit({ modifierName: 'collapsed' }),\n      userCssClasses.collapsedRoot\n    ),\n    collapseButton: cx(\n      suit({ descendantName: 'collapseButton' }),\n      userCssClasses.collapseButton\n    ),\n    collapseIcon: cx(\n      suit({ descendantName: 'collapseIcon' }),\n      userCssClasses.collapseIcon\n    ),\n    body: cx(suit({ descendantName: 'body' }), userCssClasses.body),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    footer: cx(suit({ descendantName: 'footer' }), userCssClasses.footer),\n  };\n\n  return (widgetFactory) => (widgetParams) => {\n    if (!(widgetParams && widgetParams.container)) {\n      throw new Error(\n        withUsage(\n          `The \\`container\\` option is required in the widget within the panel.`\n        )\n      );\n    }\n\n    const containerNode = getContainerNode(widgetParams.container);\n\n    const defaultTemplates: PanelTemplates<typeof widgetFactory> = {\n      collapseButtonText: ({ collapsed: isCollapsed }) =>\n        `<svg\n          class=\"${cssClasses.collapseIcon}\"\n          style=\"width: 1em; height: 1em;\"\n          viewBox=\"0 0 500 500\"\n        >\n        <path d=\"${\n          isCollapsed ? 'M100 250l300-150v300z' : 'M250 400l150-300H100z'\n        }\" fill=\"currentColor\" />\n        </svg>`,\n    };\n\n    const renderPanel = renderer<typeof widgetFactory>({\n      containerNode,\n      bodyContainerNode,\n      cssClasses,\n      templates: {\n        ...defaultTemplates,\n        ...templates,\n      },\n    });\n\n    const widget = widgetFactory({\n      ...widgetParams,\n      container: bodyContainerNode,\n    });\n\n    // TypeScript somehow loses track of the ...widget type, since it's\n    // not directly returned. Eventually the \"as AugmentedWidget<typeof widgetFactory>\"\n    // will not be needed anymore.\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return {\n      ...widget,\n      init(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...(widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: true,\n          collapsible,\n          collapsed: false,\n        });\n\n        if (typeof widget.init === 'function') {\n          widget.init.call(this, ...args);\n        }\n      },\n      render(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...((widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}) as GetWidgetRenderState<typeof widgetFactory>),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: Boolean(hidden(options)),\n          collapsible,\n          collapsed: Boolean(collapsedFn(options)),\n        });\n\n        if (typeof widget.render === 'function') {\n          widget.render.call(this, ...args);\n        }\n      },\n      dispose(...args) {\n        render(null, containerNode);\n\n        if (typeof widget.dispose === 'function') {\n          return widget.dispose.call(this, ...args);\n        }\n\n        return undefined;\n      },\n    } as AugmentedWidget<typeof widgetFactory>;\n  };\n};\n\nexport default panel;\n","import { deprecate } from '../../lib/utils';\n\nimport type { WidgetFactory, WidgetRenderState } from '../../types';\n/* Places.js is an optional dependency, no error should be reported if the package is missing */\n/** @ts-ignore */\nimport type * as Places from 'places.js';\n\n// using the type like this requires only one ts-ignore\ntype StaticOptions = Places.StaticOptions;\ntype ChangeEvent = Places.ChangeEvent;\ntype PlacesInstance = Places.PlacesInstance;\ntype ReconfigurableOptions = Places.ReconfigurableOptions;\n\nexport type PlacesWidgetParams = {\n  /**\n   * The Algolia Places reference to use.\n   *\n   * @see https://github.com/algolia/places\n   */\n  placesReference: (\n    options: StaticOptions & ReconfigurableOptions\n  ) => PlacesInstance;\n  /**\n   * The default position when the input is empty.\n   */\n  defaultPosition?: string[];\n} & StaticOptions;\n\ntype PlacesWidgetState = {\n  query: string;\n  initialLatLngViaIP: boolean | undefined;\n  isInitialLatLngViaIPSet: boolean;\n};\n\nexport type PlacesWidgetDescription = {\n  $$type: 'ais.places';\n  $$widgetType: 'ais.places';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    places: WidgetRenderState<Record<string, unknown>, PlacesWidgetParams>;\n  };\n  indexUiState: {\n    places: {\n      query: string;\n      position: string;\n    };\n  };\n};\n\nexport type PlacesWidget = WidgetFactory<\n  PlacesWidgetDescription,\n  PlacesWidgetParams,\n  PlacesWidgetParams\n>;\n\n/**\n * This widget sets the geolocation value for the search based on the selected\n * result in the Algolia Places autocomplete.\n * @deprecated the places service is no longer offered, and this widget will be removed in InstantSearch.js v5\n */\nconst placesWidget: PlacesWidget = (widgetParams) => {\n  const {\n    placesReference,\n    defaultPosition = [],\n    ...placesOptions\n  } = widgetParams || {};\n\n  if (typeof placesReference !== 'function') {\n    throw new Error(\n      'The `placesReference` option requires a valid Places.js reference.'\n    );\n  }\n\n  const placesAutocomplete = placesReference(placesOptions);\n\n  const state: PlacesWidgetState = {\n    query: '',\n    initialLatLngViaIP: undefined,\n    isInitialLatLngViaIPSet: false,\n  };\n\n  return {\n    $$type: 'ais.places',\n    $$widgetType: 'ais.places',\n\n    init({ helper }) {\n      placesAutocomplete.on('change', (eventOptions: ChangeEvent) => {\n        const {\n          suggestion: {\n            value,\n            latlng: { lat, lng },\n          },\n        } = eventOptions;\n\n        state.query = value;\n\n        helper\n          .setQueryParameter('insideBoundingBox', undefined)\n          .setQueryParameter('aroundLatLngViaIP', false)\n          .setQueryParameter('aroundLatLng', `${lat},${lng}`)\n          .search();\n      });\n\n      placesAutocomplete.on('clear', () => {\n        state.query = '';\n\n        helper.setQueryParameter('insideBoundingBox', undefined);\n\n        if (defaultPosition.length > 1) {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', false)\n            .setQueryParameter('aroundLatLng', defaultPosition.join(','));\n        } else {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', state.initialLatLngViaIP)\n            .setQueryParameter('aroundLatLng', undefined);\n        }\n\n        helper.search();\n      });\n    },\n\n    getWidgetUiState(uiState, { searchParameters }) {\n      const position =\n        searchParameters.aroundLatLng || defaultPosition.join(',');\n      const hasPositionSet = position !== defaultPosition.join(',');\n\n      if (!hasPositionSet && !state.query) {\n        const { places, ...uiStateWithoutPlaces } = uiState;\n\n        return uiStateWithoutPlaces;\n      }\n\n      return {\n        ...uiState,\n        places: {\n          query: state.query,\n          position,\n        },\n      };\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      const { query = '', position = defaultPosition.join(',') } =\n        uiState.places || {};\n\n      state.query = query;\n\n      if (!state.isInitialLatLngViaIPSet) {\n        state.isInitialLatLngViaIPSet = true;\n        state.initialLatLngViaIP = searchParameters.aroundLatLngViaIP;\n      }\n\n      placesAutocomplete.setVal(query);\n      placesAutocomplete.close();\n\n      return searchParameters\n        .setQueryParameter('insideBoundingBox', undefined)\n        .setQueryParameter('aroundLatLngViaIP', false)\n        .setQueryParameter('aroundLatLng', position || undefined);\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        places: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default deprecate(\n  placesWidget,\n  'The places widget is deprecated and will be removed in InstantSearch.js 5.0.'\n);\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PoweredByCSSClasses } from '../../widgets/powered-by/powered-by';\n\nexport type PoweredByComponentCSSClasses =\n  ComponentCSSClasses<PoweredByCSSClasses>;\n\nexport type PoweredByProps = {\n  url: string;\n  theme: string;\n  cssClasses: PoweredByComponentCSSClasses;\n};\n\nconst PoweredBy = ({ url, theme, cssClasses }: PoweredByProps) => (\n  <div className={cssClasses.root}>\n    <a\n      href={url}\n      target=\"_blank\"\n      className={cssClasses.link}\n      aria-label=\"Search by Algolia\"\n      rel=\"noopener noreferrer\"\n    >\n      <svg\n        height=\"1.2em\"\n        className={cssClasses.logo}\n        viewBox=\"0 0 572 64\"\n        // This style is necessary as long as it's not included in InstantSearch.css.\n        // For now, InstantSearch.css sets a maximum width of 70px.\n        style={{\n          width: 'auto',\n        }}\n      >\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#36395A'}\n          d=\"M16 48.3c-3.4 0-6.3-.6-8.7-1.7A12.4 12.4 0 0 1 1.9 42C.6 40 0 38 0 35.4h6.5a6.7 6.7 0 0 0 3.9 6c1.4.7 3.3 1.1 5.6 1.1 2.2 0 4-.3 5.4-1a7 7 0 0 0 3-2.4 6 6 0 0 0 1-3.4c0-1.5-.6-2.8-1.9-3.7-1.3-1-3.3-1.6-5.9-1.8l-4-.4c-3.7-.3-6.6-1.4-8.8-3.4a10 10 0 0 1-3.3-7.9c0-2.4.6-4.6 1.8-6.4a12 12 0 0 1 5-4.3c2.2-1 4.7-1.6 7.5-1.6s5.5.5 7.6 1.6a12 12 0 0 1 5 4.4c1.2 1.8 1.8 4 1.8 6.7h-6.5a6.4 6.4 0 0 0-3.5-5.9c-1-.6-2.6-1-4.4-1s-3.2.3-4.4 1c-1.1.6-2 1.4-2.6 2.4-.5 1-.8 2-.8 3.1a5 5 0 0 0 1.5 3.6c1 1 2.6 1.7 4.7 1.9l4 .3c2.8.2 5.2.8 7.2 1.8 2.1 1 3.7 2.2 4.9 3.8a9.7 9.7 0 0 1 1.7 5.8c0 2.5-.7 4.7-2 6.6a13 13 0 0 1-5.6 4.4c-2.4 1-5.2 1.6-8.4 1.6Zm35.6 0c-2.6 0-4.8-.4-6.7-1.3a13 13 0 0 1-4.7-3.5 17.1 17.1 0 0 1-3.6-10.4v-1c0-2 .3-3.8 1-5.6a13 13 0 0 1 7.3-8.3 15 15 0 0 1 6.3-1.4A13.2 13.2 0 0 1 64 24.3c1 2.2 1.6 4.6 1.6 7.2V34H39.4v-4.3h21.8l-1.8 2.2c0-2-.3-3.7-.9-5.1a7.3 7.3 0 0 0-2.7-3.4c-1.2-.7-2.7-1.1-4.6-1.1s-3.4.4-4.7 1.3a8 8 0 0 0-2.9 3.6c-.6 1.5-.9 3.3-.9 5.4 0 2 .3 3.7 1 5.3a7.9 7.9 0 0 0 2.8 3.7c1.3.8 3 1.3 5 1.3s3.8-.5 5.1-1.3c1.3-1 2.1-2 2.4-3.2h6a11.8 11.8 0 0 1-7 8.7 16 16 0 0 1-6.4 1.2ZM80 48c-2.2 0-4-.3-5.7-1a8.4 8.4 0 0 1-3.7-3.3 9.7 9.7 0 0 1-1.3-5.2c0-2 .5-3.8 1.5-5.2a9 9 0 0 1 4.3-3.1c1.8-.7 4-1 6.7-1H89v4.1h-7.5c-2 0-3.4.5-4.4 1.4-1 1-1.6 2.1-1.6 3.6s.5 2.7 1.6 3.6c1 1 2.5 1.4 4.4 1.4 1.1 0 2.2-.2 3.2-.7 1-.4 1.9-1 2.6-2 .6-1 1-2.4 1-4.2l1.7 2.1c-.2 2-.7 3.8-1.5 5.2a9 9 0 0 1-3.4 3.3 12 12 0 0 1-5.3 1Zm9.5-.7v-8.8h-1v-10c0-1.8-.5-3.2-1.4-4.1-1-1-2.4-1.4-4.2-1.4a142.9 142.9 0 0 0-10.2.4v-5.6a74.8 74.8 0 0 1 8.6-.4c3 0 5.5.4 7.5 1.2s3.4 2 4.4 3.6c1 1.7 1.4 4 1.4 6.7v18.4h-5Zm12.9 0V17.8h5v12.3h-.2c0-4.2 1-7.4 2.8-9.5a11 11 0 0 1 8.3-3.1h1v5.6h-2a9 9 0 0 0-6.3 2.2c-1.5 1.5-2.2 3.6-2.2 6.4v15.6h-6.4Zm34.4 1a15 15 0 0 1-6.6-1.3c-1.9-.9-3.4-2-4.7-3.5a15.5 15.5 0 0 1-2.7-5c-.6-1.7-1-3.6-1-5.4v-1c0-2 .4-3.8 1-5.6a15 15 0 0 1 2.8-4.9c1.3-1.5 2.8-2.6 4.6-3.5a16.4 16.4 0 0 1 13.3.2c2 1 3.5 2.3 4.8 4a12 12 0 0 1 2 6H144c-.2-1.6-1-3-2.2-4.1a7.5 7.5 0 0 0-5.2-1.7 8 8 0 0 0-4.7 1.3 8 8 0 0 0-2.8 3.6 13.8 13.8 0 0 0 0 10.3c.6 1.5 1.5 2.7 2.8 3.6s2.8 1.3 4.8 1.3c1.5 0 2.7-.2 3.8-.8a7 7 0 0 0 2.6-2c.7-1 1-2 1.2-3.2h6.2a11 11 0 0 1-2 6.2 15.1 15.1 0 0 1-11.8 5.5Zm19.7-1v-40h6.4V31h-1.3c0-3 .4-5.5 1.1-7.6a9.7 9.7 0 0 1 3.5-4.8A9.9 9.9 0 0 1 172 17h.3c3.5 0 6 1.1 7.9 3.5 1.7 2.3 2.6 5.7 2.6 10v16.8h-6.4V29.6c0-2.1-.6-3.8-1.8-5a6.4 6.4 0 0 0-4.8-1.8c-2 0-3.7.7-5 2a7.8 7.8 0 0 0-1.9 5.5v17h-6.4Zm63.8 1a12.2 12.2 0 0 1-10.9-6.2 19 19 0 0 1-1.8-7.3h1.4v12.5h-5.1v-40h6.4v19.8l-2 3.5c.2-3.1.8-5.7 1.9-7.7a11 11 0 0 1 4.4-4.5c1.8-1 3.9-1.5 6.1-1.5a13.4 13.4 0 0 1 12.8 9.1c.7 1.9 1 3.8 1 6v1c0 2.2-.3 4.1-1 6a13.6 13.6 0 0 1-13.2 9.4Zm-1.2-5.5a8.4 8.4 0 0 0 7.9-5c.7-1.5 1.1-3.3 1.1-5.3s-.4-3.8-1.1-5.3a8.7 8.7 0 0 0-3.2-3.6 9.6 9.6 0 0 0-9.2-.2 8.5 8.5 0 0 0-3.3 3.2c-.8 1.4-1.3 3-1.3 5v2.3a9 9 0 0 0 1.3 4.8 9 9 0 0 0 3.4 3c1.4.7 2.8 1 4.4 1Zm27.3 3.9-10-28.9h6.5l9.5 28.9h-6Zm-7.5 12.2v-5.7h4.9c1 0 2-.1 2.9-.4a4 4 0 0 0 2-1.4c.4-.7.9-1.6 1.2-2.7l8.6-30.9h6.2l-9.3 32.4a14 14 0 0 1-2.5 5 8.9 8.9 0 0 1-4 2.8c-1.5.6-3.4.9-5.6.9h-4.4Zm9-12.2v-5.2h6.4v5.2H248Z\"\n        />\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#003DFF'}\n          d=\"M534.4 9.1H528a.8.8 0 0 1-.7-.7V1.8c0-.4.2-.7.6-.8l6.5-1c.4 0 .8.2.9.6v7.8c0 .4-.4.7-.8.7zM428 35.2V.8c0-.5-.3-.8-.7-.8h-.2l-6.4 1c-.4 0-.7.4-.7.8v35c0 1.6 0 11.8 12.3 12.2.5 0 .8-.4.8-.8V43c0-.4-.3-.7-.6-.8-4.5-.5-4.5-6-4.5-7zm106.5-21.8H528c-.4 0-.7.4-.7.8v34c0 .4.3.8.7.8h6.5c.4 0 .8-.4.8-.8v-34c0-.5-.4-.8-.8-.8zm-17.7 21.8V.8c0-.5-.3-.8-.8-.8l-6.5 1c-.4 0-.7.4-.7.8v35c0 1.6 0 11.8 12.3 12.2.4 0 .8-.4.8-.8V43c0-.4-.3-.7-.7-.8-4.4-.5-4.4-6-4.4-7zm-22.2-20.6a16.5 16.5 0 0 1 8.6 9.3c.8 2.2 1.3 4.8 1.3 7.5a19.4 19.4 0 0 1-4.6 12.6 14.8 14.8 0 0 1-5.2 3.6c-2 .9-5.2 1.4-6.8 1.4a21 21 0 0 1-6.7-1.4 15.4 15.4 0 0 1-8.6-9.3 21.3 21.3 0 0 1 0-14.4 15.2 15.2 0 0 1 8.6-9.3c2-.8 4.3-1.2 6.7-1.2s4.6.4 6.7 1.2zm-6.7 27.6c2.7 0 4.7-1 6.2-3s2.2-4.3 2.2-7.8-.7-6.3-2.2-8.3-3.5-3-6.2-3-4.7 1-6.1 3c-1.5 2-2.2 4.8-2.2 8.3s.7 5.8 2.2 7.8 3.5 3 6.2 3zm-88.8-28.8c-6.2 0-11.7 3.3-14.8 8.2a18.6 18.6 0 0 0 4.8 25.2c1.8 1.2 4 1.8 6.2 1.7s.1 0 .1 0h.9c4.2-.7 8-4 9.1-8.1v7.4c0 .4.3.7.8.7h6.4a.7.7 0 0 0 .7-.7V14.2c0-.5-.3-.8-.7-.8h-13.5zm6.3 26.5a9.8 9.8 0 0 1-5.7 2h-.5a10 10 0 0 1-9.2-14c1.4-3.7 5-6.3 9-6.3h6.4v18.3zm152.3-26.5h13.5c.5 0 .8.3.8.7v33.7c0 .4-.3.7-.8.7h-6.4a.7.7 0 0 1-.8-.7v-7.4c-1.2 4-4.8 7.4-9 8h-.1a4.2 4.2 0 0 1-.5.1h-.9a10.3 10.3 0 0 1-7-2.6c-4-3.3-6.5-8.4-6.5-14.2 0-3.7 1-7.2 3-10 3-5 8.5-8.3 14.7-8.3zm.6 28.4c2.2-.1 4.2-.6 5.7-2V21.7h-6.3a9.8 9.8 0 0 0-9 6.4 10.2 10.2 0 0 0 9.1 13.9h.5zM452.8 13.4c-6.2 0-11.7 3.3-14.8 8.2a18.5 18.5 0 0 0 3.6 24.3 10.4 10.4 0 0 0 13 .6c2.2-1.5 3.8-3.7 4.5-6.1v7.8c0 2.8-.8 5-2.2 6.3-1.5 1.5-4 2.2-7.5 2.2l-6-.3c-.3 0-.7.2-.8.5l-1.6 5.5c-.1.4.1.8.5 1h.1c2.8.4 5.5.6 7 .6 6.3 0 11-1.4 14-4.1 2.7-2.5 4.2-6.3 4.5-11.4V14.2c0-.5-.4-.8-.8-.8h-13.5zm6.3 8.2v18.3a9.6 9.6 0 0 1-5.6 2h-1a10.3 10.3 0 0 1-8.8-14c1.4-3.7 5-6.3 9-6.3h6.4zM291 31.5A32 32 0 0 1 322.8 0h30.8c.6 0 1.2.5 1.2 1.2v61.5c0 1.1-1.3 1.7-2.2 1l-19.2-17a18 18 0 0 1-11 3.4 18.1 18.1 0 1 1 18.2-14.8c-.1.4-.5.7-.9.6-.1 0-.3 0-.4-.2l-3.8-3.4c-.4-.3-.6-.8-.7-1.4a12 12 0 1 0-2.4 8.3c.4-.4 1-.5 1.6-.2l14.7 13.1v-46H323a26 26 0 1 0 10 49.7c.8-.4 1.6-.2 2.3.3l3 2.7c.3.2.3.7 0 1l-.2.2a32 32 0 0 1-47.2-28.6z\"\n        />\n      </svg>\n    </a>\n  </div>\n);\n\nexport default PoweredBy;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport PoweredBy from '../../components/PoweredBy/PoweredBy';\nimport connectPoweredBy from '../../connectors/powered-by/connectPoweredBy';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type { PoweredByComponentCSSClasses } from '../../components/PoweredBy/PoweredBy';\nimport type {\n  PoweredByConnectorParams,\n  PoweredByRenderState,\n  PoweredByWidgetDescription,\n} from '../../connectors/powered-by/connectPoweredBy';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('PoweredBy');\nconst withUsage = createDocumentationMessageGenerator({ name: 'powered-by' });\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: PoweredByComponentCSSClasses;\n  }): Renderer<PoweredByRenderState, Partial<PoweredByWidgetParams>> =>\n  ({ url, widgetParams }, isFirstRendering) => {\n    if (isFirstRendering) {\n      const { theme = 'light' } = widgetParams;\n\n      render(\n        <PoweredBy cssClasses={cssClasses} url={url} theme={theme} />,\n        containerNode\n      );\n\n      return;\n    }\n  };\n\nexport type PoweredByCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the link.\n   */\n  link: string | string[];\n\n  /**\n   * CSS class to add to the SVG logo.\n   */\n  logo: string | string[];\n}>;\n\nexport type PoweredByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The theme of the logo.\n   * @default 'light'\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: PoweredByCSSClasses;\n};\n\nexport type PoweredByWidget = WidgetFactory<\n  PoweredByWidgetDescription & { $$widgetType: 'ais.poweredBy' },\n  PoweredByConnectorParams,\n  PoweredByWidgetParams\n>;\n\nconst poweredBy: PoweredByWidget = function poweredBy(widgetParams) {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    theme = 'light',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(\n      suit(),\n      suit({ modifierName: theme === 'dark' ? 'dark' : 'light' }),\n      userCssClasses.root\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    logo: cx(suit({ descendantName: 'logo' }), userCssClasses.logo),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectPoweredBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ theme }),\n    $$widgetType: 'ais.poweredBy',\n  };\n};\n\nexport default poweredBy;\n","import connectQueryRules from '../../connectors/query-rules/connectQueryRules';\nimport { createDocumentationMessageGenerator, noop } from '../../lib/utils';\n\nimport type {\n  ParamTrackedFilters,\n  ParamTransformRuleContexts,\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport type { WidgetFactory } from '../../types';\n\nexport type QueryRuleContextWidgetParams = {\n  trackedFilters: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n};\n\nexport type QueryRuleContextWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleContext' },\n  QueryRulesConnectorParams,\n  QueryRuleContextWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-context',\n});\n\nconst queryRuleContext: QueryRuleContextWidget = (\n  widgetParams = {} as QueryRuleContextWidgetParams\n) => {\n  if (!widgetParams.trackedFilters) {\n    throw new Error(withUsage('The `trackedFilters` option is required.'));\n  }\n\n  return {\n    ...connectQueryRules<QueryRuleContextWidgetParams>(noop)(widgetParams),\n    $$widgetType: 'ais.queryRuleContext',\n  };\n};\n\nexport default queryRuleContext;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  QueryRuleCustomDataCSSClasses,\n  QueryRuleCustomDataTemplates,\n} from '../../widgets/query-rule-custom-data/query-rule-custom-data';\n\nexport type QueryRuleCustomDataComponentCSSClasses =\n  ComponentCSSClasses<QueryRuleCustomDataCSSClasses>;\n\nexport type QueryRuleCustomDataComponentTemplates =\n  Required<QueryRuleCustomDataTemplates>;\n\nexport type QueryRuleCustomDataProps = {\n  cssClasses: QueryRuleCustomDataComponentCSSClasses;\n  templates: QueryRuleCustomDataComponentTemplates;\n  items: any[];\n};\n\nconst QueryRuleCustomData = ({\n  cssClasses,\n  templates,\n  items,\n}: QueryRuleCustomDataProps) => (\n  <Template\n    templateKey=\"default\"\n    templates={templates}\n    rootProps={{ className: cssClasses.root }}\n    data={{ items }}\n  />\n);\n\nexport default QueryRuleCustomData;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport CustomData from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport connectQueryRules from '../../connectors/query-rules/connectQueryRules';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  QueryRuleCustomDataComponentCSSClasses,\n  QueryRuleCustomDataComponentTemplates,\n} from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport type {\n  QueryRulesConnectorParams,\n  QueryRulesRenderState,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template } from '../../types';\n\nexport type QueryRuleCustomDataCSSClasses = Partial<{\n  root: string | string[];\n}>;\n\nexport type QueryRuleCustomDataTemplates = Partial<{\n  default: Template<{ items: any[] }>;\n}>;\n\nexport type QueryRuleCustomDataWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: QueryRuleCustomDataCSSClasses;\n  templates?: QueryRuleCustomDataTemplates;\n};\n\nexport type QueryRuleCustomDataWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleCustomData' },\n  QueryRulesConnectorParams,\n  QueryRuleCustomDataWidgetParams\n>;\n\nexport const defaultTemplates: QueryRuleCustomDataComponentTemplates = {\n  default: ({ items }) => JSON.stringify(items, null, 2),\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-custom-data',\n});\n\nconst suit = component('QueryRuleCustomData');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: QueryRuleCustomDataComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<QueryRuleCustomDataComponentTemplates>;\n    };\n    templates: QueryRuleCustomDataComponentTemplates;\n  }) =>\n  ({ items }: QueryRulesRenderState) => {\n    render(\n      <CustomData\n        cssClasses={cssClasses}\n        templates={templates}\n        items={items}\n      />,\n      containerNode\n    );\n  };\n\nconst queryRuleCustomData: QueryRuleCustomDataWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n    transformItems = ((items) =>\n      items) as QueryRulesConnectorParams['transformItems'],\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n  };\n\n  const containerNode = getContainerNode(container);\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectQueryRules(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({\n      transformItems,\n    }),\n    $$widgetType: 'ais.queryRuleCustomData',\n  };\n};\n\nexport default queryRuleCustomData;\n","/** @jsx h */\n\nimport { createRelatedProductsComponent } from 'instantsearch-ui-components';\nimport { Fragment, h, render } from 'preact';\n\nimport TemplateComponent from '../../components/Template/Template';\nimport connectRelatedProducts from '../../connectors/related-products/connectRelatedProducts';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  RelatedProductsWidgetDescription,\n  RelatedProductsConnectorParams,\n  RelatedProductsRenderState,\n} from '../../connectors/related-products/connectRelatedProducts';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  Template,\n  WidgetFactory,\n  Hit,\n  Renderer,\n  BaseHit,\n} from '../../types';\nimport type { RecommendResultItem } from 'algoliasearch-helper';\nimport type {\n  RecommendClassNames,\n  RelatedProductsProps as RelatedProductsUiProps,\n} from 'instantsearch-ui-components';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'related-products',\n});\n\nconst RelatedProducts = createRelatedProductsComponent({\n  createElement: h,\n  Fragment,\n});\n\ntype CreateRendererProps<THit extends NonNullable<object> = BaseHit> = {\n  containerNode: HTMLElement;\n  cssClasses: RelatedProductsCSSClasses;\n  renderState: {\n    templateProps?: PreparedTemplateProps<RelatedProductsTemplates<THit>>;\n  };\n  templates: RelatedProductsTemplates<THit>;\n};\n\nfunction createRenderer<THit extends NonNullable<object> = BaseHit>({\n  renderState,\n  cssClasses,\n  containerNode,\n  templates,\n}: CreateRendererProps<THit>): Renderer<\n  RelatedProductsRenderState,\n  Partial<RelatedProductsWidgetParams>\n> {\n  return function renderer(\n    { items, results, instantSearchInstance },\n    isFirstRendering\n  ) {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates: {} as unknown as Required<\n          RelatedProductsTemplates<THit>\n        >,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    const headerComponent = (\n      templates.header\n        ? (data) => (\n            <TemplateComponent\n              {...renderState.templateProps}\n              templateKey=\"header\"\n              rootTagName=\"fragment\"\n              data={{\n                cssClasses: data.classNames,\n                items: data.items,\n              }}\n            />\n          )\n        : undefined\n    ) as RelatedProductsUiProps<Hit>['headerComponent'];\n\n    const itemComponent = (\n      templates.item\n        ? ({ item }) => {\n            return (\n              <TemplateComponent\n                {...renderState.templateProps}\n                templateKey=\"item\"\n                rootTagName=\"fragment\"\n                data={item}\n              />\n            );\n          }\n        : undefined\n    ) as RelatedProductsUiProps<Hit>['itemComponent'];\n\n    const emptyComponent = (\n      templates.empty\n        ? () => (\n            <TemplateComponent\n              {...renderState.templateProps}\n              templateKey=\"empty\"\n              rootTagName=\"fragment\"\n              data={results}\n            />\n          )\n        : undefined\n    ) as RelatedProductsUiProps<Hit>['emptyComponent'];\n\n    render(\n      <RelatedProducts\n        items={items}\n        sendEvent={() => {}}\n        classNames={cssClasses}\n        headerComponent={headerComponent}\n        itemComponent={itemComponent}\n        emptyComponent={emptyComponent}\n        status={instantSearchInstance.status}\n      />,\n      containerNode\n    );\n  };\n}\n\nexport type RelatedProductsCSSClasses = Partial<RecommendClassNames>;\n\nexport type RelatedProductsTemplates<\n  THit extends NonNullable<object> = BaseHit\n> = Partial<{\n  /**\n   * Template to use when there are no results.\n   */\n  empty: Template<RecommendResultItem<Hit<THit>>>;\n\n  /**\n   * Template to use for the header of the widget.\n   */\n  header: Template<\n    Pick<\n      Parameters<\n        NonNullable<RelatedProductsUiProps<Hit<THit>>['headerComponent']>\n      >[0],\n      'items'\n    > & { cssClasses: RecommendClassNames }\n  >;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   */\n  item: Template<Hit<THit>>;\n}>;\n\ntype RelatedProductsWidgetParams<THit extends NonNullable<object> = BaseHit> = {\n  /**\n   * CSS selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to customize the widget.\n   */\n  templates?: RelatedProductsTemplates<THit>;\n\n  /**\n   * CSS classes to add to the widget elements.\n   */\n  cssClasses?: RelatedProductsCSSClasses;\n};\n\nexport type RelatedProductsWidget = WidgetFactory<\n  RelatedProductsWidgetDescription & {\n    $$widgetType: 'ais.relatedProducts';\n  },\n  RelatedProductsConnectorParams,\n  RelatedProductsWidgetParams\n>;\n\nexport default (function relatedProducts<\n  THit extends NonNullable<object> = BaseHit\n>(\n  widgetParams: RelatedProductsWidgetParams<THit> &\n    RelatedProductsConnectorParams<THit>\n) {\n  const {\n    container,\n    objectIDs,\n    limit,\n    queryParameters,\n    fallbackParameters,\n    threshold,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const specializedRenderer = createRenderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRelatedProducts(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      objectIDs,\n      limit,\n      queryParameters,\n      fallbackParameters,\n      threshold,\n      escapeHTML,\n      transformItems,\n    }),\n    $$widgetType: 'ais.relatedProducts',\n  };\n} satisfies RelatedProductsWidget);\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, Component } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type {\n  Range,\n  RangeBoundaries,\n} from '../../connectors/range/connectRange';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  RangeInputCSSClasses,\n  RangeInputTemplates,\n} from '../../widgets/range-input/range-input';\n\nexport type RangeInputComponentCSSClasses =\n  ComponentCSSClasses<RangeInputCSSClasses>;\n\nexport type RangeInputComponentTemplates = Required<RangeInputTemplates>;\n\nexport type RangeInputProps = {\n  min?: number;\n  max?: number;\n  step: number;\n  values: Partial<Range>;\n  cssClasses: RangeInputComponentCSSClasses;\n  templateProps: {\n    templates: RangeInputComponentTemplates;\n  };\n  refine: (rangeValue: RangeBoundaries) => void;\n};\n\n// Strips leading `0` from a positive number value\nfunction stripLeadingZeroFromInput(value: string): string {\n  return value.replace(/^(0+)\\d/, (part) => Number(part).toString());\n}\n\nclass RangeInput extends Component<\n  RangeInputProps,\n  { min?: string; max?: string }\n> {\n  public state = {\n    min: this.props.values.min?.toString(),\n    max: this.props.values.max?.toString(),\n  };\n\n  public componentWillReceiveProps(nextProps: RangeInputProps) {\n    this.setState({\n      min: nextProps.values.min?.toString(),\n      max: nextProps.values.max?.toString(),\n    });\n  }\n\n  private onInput = (key: keyof typeof this.state) => (event: Event) => {\n    const { value } = event.currentTarget as HTMLInputElement;\n\n    this.setState({\n      [key]: value,\n    });\n  };\n\n  private onSubmit = (event: Event) => {\n    event.preventDefault();\n\n    const { min, max } = this.state;\n    this.props.refine([\n      min ? Number(min) : undefined,\n      max ? Number(max) : undefined,\n    ]);\n  };\n\n  public render() {\n    const { min: minValue, max: maxValue } = this.state;\n    const { min, max, step, cssClasses, templateProps } = this.props;\n    const isDisabled = min && max ? min >= max : false;\n    const hasRefinements = Boolean(minValue || maxValue);\n    const rootClassNames = cx(\n      cssClasses.root,\n      !hasRefinements && cssClasses.noRefinement\n    );\n\n    return (\n      <div className={rootClassNames}>\n        <form className={cssClasses.form} onSubmit={this.onSubmit}>\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMin)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={stripLeadingZeroFromInput(minValue ?? '')}\n              onInput={this.onInput('min')}\n              placeholder={min?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"separatorText\"\n            rootTagName=\"span\"\n            rootProps={{\n              className: cssClasses.separator,\n            }}\n          />\n\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMax)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={stripLeadingZeroFromInput(maxValue ?? '')}\n              onInput={this.onInput('max')}\n              placeholder={max?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"submitText\"\n            rootTagName=\"button\"\n            rootProps={{\n              type: 'submit',\n              className: cssClasses.submit,\n              disabled: isDisabled,\n            }}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RangeInput;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport type { PitProps } from './Rheostat';\n\nconst Pit = ({ style, children }: PitProps) => {\n  // first, end & middle\n  const positionValue = Math.round(parseFloat(style.left as string));\n  const shouldDisplayValue = [0, 50, 100].includes(positionValue);\n\n  const value = children as string;\n  const pitValue = Math.round(parseInt(value, 10) * 100) / 100;\n\n  return (\n    <div\n      style={{ ...style, marginLeft: positionValue === 100 ? '-2px' : 0 }}\n      className={cx(\n        'rheostat-marker',\n        'rheostat-marker-horizontal',\n        shouldDisplayValue && 'rheostat-marker-large'\n      )}\n    >\n      {shouldDisplayValue && <div className={'rheostat-value'}>{pitValue}</div>}\n    </div>\n  );\n};\n\nexport default Pit;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport RangeInput from '../../components/RangeInput/RangeInput';\nimport connectRange from '../../connectors/range/connectRange';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  RangeInputComponentCSSClasses,\n  RangeInputComponentTemplates,\n} from '../../components/RangeInput/RangeInput';\nimport type {\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-input' });\nconst suit = component('RangeInput');\n\nconst defaultTemplates: RangeInputComponentTemplates = {\n  separatorText() {\n    return 'to';\n  },\n  submitText() {\n    return 'Go';\n  },\n};\n\nexport type RangeInputTemplates = Partial<{\n  /**\n   * The label of the separator, between min and max.\n   * @default \"to\"\n   */\n  separatorText: Template;\n  /**\n   * The label of the submit button\n   * @default \"Go\"\n   */\n  submitText: Template;\n}>;\n\nexport type RangeInputCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinement: string | string[];\n  /**\n   * CSS class to add to the form element.\n   */\n  form: string | string[];\n  /**\n   * CSS class to add to the label element.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to the input element.\n   */\n  input: string | string[];\n  /**\n   * CSS class to add to the min input element.\n   */\n  inputMin: string | string[];\n  /**\n   * CSS class to add to the max input element.\n   */\n  separator: string | string[];\n  /**\n   * CSS class to add to the separator of the form.\n   */\n  inputMax: string | string[];\n  /**\n   * CSS class to add to the submit button of the form.\n   */\n  submit: string | string[];\n}>;\n\nexport type RangeInputWidgetParams = {\n  /**\n   * Valid CSS Selector as a string or DOMElement.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Labels to use for the widget.\n   */\n  templates?: RangeInputTemplates;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RangeInputCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RangeInputComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RangeInputComponentTemplates>;\n    };\n    templates: RangeInputTemplates;\n  }): Renderer<RangeRenderState, Partial<RangeInputWidgetParams>> =>\n  (\n    { refine, range, start, widgetParams, instantSearchInstance },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const { min: rangeMin, max: rangeMax } = range;\n    const [minValue, maxValue] = start;\n\n    const step = 1 / Math.pow(10, widgetParams.precision || 0);\n\n    const values = {\n      min:\n        minValue !== -Infinity && minValue !== rangeMin ? minValue : undefined,\n      max:\n        maxValue !== Infinity && maxValue !== rangeMax ? maxValue : undefined,\n    };\n\n    render(\n      <RangeInput\n        min={rangeMin}\n        max={rangeMax}\n        step={step}\n        values={values}\n        cssClasses={cssClasses}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type RangeInputWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeInput';\n    $$type: 'ais.rangeInput';\n  },\n  RangeConnectorParams,\n  RangeInputWidgetParams\n>;\n\nconst rangeInput: RangeInputWidget = function rangeInput(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    precision = 0,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinement: cx(suit({ modifierName: 'noRefinement' })),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    inputMin: cx(\n      suit({ descendantName: 'input', modifierName: 'min' }),\n      userCssClasses.inputMin\n    ),\n    inputMax: cx(\n      suit({ descendantName: 'input', modifierName: 'max' }),\n      userCssClasses.inputMax\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      min,\n      max,\n      precision,\n    }),\n\n    $$type: 'ais.rangeInput',\n    $$widgetType: 'ais.rangeInput',\n  };\n};\n\nexport default rangeInput;\n","/**\n * This is a fork of Rheostat for Preact X.\n *\n * @see https://github.com/airbnb/rheostat\n */\n\n/** @jsx h */\n\nimport { h, Component, createRef } from 'preact';\n\nimport type { ComponentChildren, ComponentType, JSX } from 'preact';\n\ntype BoundingBox = {\n  height: number;\n  left: number;\n  top: number;\n  width: number;\n};\n\nconst KEYS = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  LEFT: 37,\n  PAGE_DOWN: 34,\n  PAGE_UP: 33,\n  RIGHT: 39,\n  UP: 38,\n} as const;\nconst PERCENT_EMPTY = 0;\nconst PERCENT_FULL = 100;\n\nfunction getPosition(value: number, min: number, max: number) {\n  return ((value - min) / (max - min)) * 100;\n}\n\nfunction getValue(pos: number, min: number, max: number) {\n  const decimal = pos / 100;\n\n  if (pos === 0) {\n    return min;\n  } else if (pos === 100) {\n    return max;\n  }\n\n  return Math.round((max - min) * decimal + min);\n}\n\nfunction getClassName(props: Props) {\n  const orientation =\n    props.orientation === 'vertical'\n      ? 'rheostat-vertical'\n      : 'rheostat-horizontal';\n\n  return ['rheostat', orientation]\n    .concat(props.className!.split(' '))\n    .join(' ');\n}\n\nfunction getHandleFor(ev: Event) {\n  return Number(\n    (ev.currentTarget as HTMLElement).getAttribute('data-handle-key')\n  );\n}\n\nfunction killEvent(ev: Event) {\n  ev.stopPropagation();\n  ev.preventDefault();\n}\n\nfunction Button(props: JSX.IntrinsicElements['button']) {\n  return <button {...props} type=\"button\" />;\n}\n\n// Preact doesn't have builtin types for Style, JSX.HTMLAttributes['style'] is just object\n// maybe migrate to csstype later?\ntype Style = {\n  position?: 'absolute';\n  top?: number | string;\n  left?: number | string;\n  height?: string;\n  width?: string;\n};\n\nexport type PitProps = {\n  children: number | string;\n  style: Style;\n};\n\nexport type HandleProps = {\n  'aria-valuemax'?: number;\n  'aria-valuemin'?: number;\n  'aria-valuenow'?: number;\n  'aria-disabled': boolean;\n  'data-handle-key': number;\n  className: 'rheostat-handle';\n  key: string;\n  onClick: (e: MouseEvent) => void;\n  onKeyDown?: (e: KeyboardEvent) => void;\n  onMouseDown?: (e: MouseEvent) => void;\n  onTouchStart?: (e: TouchEvent) => void;\n  role: 'slider';\n  style: JSX.HTMLAttributes['style'];\n  tabIndex: number;\n};\n\ntype Bounds = [min: number, max: number];\n\ntype PublicState = {\n  max?: number;\n  min?: number;\n  values: Bounds;\n};\n\ntype Props = {\n  children?: ComponentChildren;\n  className?: string;\n  disabled?: boolean;\n  handle?: ComponentType<HandleProps>;\n  max?: number;\n  min?: number;\n  onClick?: () => void;\n  onChange?: (state: PublicState) => void;\n  onKeyPress?: () => void;\n  onSliderDragEnd?: () => void;\n  onSliderDragMove?: () => void;\n  onSliderDragStart?: () => void;\n  onValuesUpdated?: (state: PublicState) => void;\n  orientation?: 'horizontal' | 'vertical';\n  pitComponent?: ComponentType<PitProps>;\n  pitPoints?: number[];\n  progressBar?: ComponentType<JSX.HTMLAttributes>;\n  snap?: boolean;\n  snapPoints?: number[];\n  values?: Bounds;\n};\n\ntype State = {\n  className: string;\n  handlePos: Bounds;\n  handleDimensions: number;\n  mousePos: { x: number; y: number } | null;\n  sliderBox: Partial<BoundingBox>;\n  slidingIndex: number | null;\n  values: Bounds;\n};\n\nclass Rheostat extends Component<Props, State> {\n  public static defaultProps = {\n    className: '',\n    children: null,\n    disabled: false,\n    handle: Button,\n    max: PERCENT_FULL,\n    min: PERCENT_EMPTY,\n    onClick: null,\n    onChange: null,\n    onKeyPress: null,\n    onSliderDragEnd: null,\n    onSliderDragMove: null,\n    onSliderDragStart: null,\n    onValuesUpdated: null,\n    orientation: 'horizontal',\n    pitComponent: null,\n    pitPoints: [],\n    progressBar: 'div',\n    snap: false,\n    snapPoints: [],\n    values: [PERCENT_EMPTY],\n  };\n\n  x = [0, 0].map((y) => y);\n\n  public state: State = {\n    className: getClassName(this.props),\n    // non-null thanks to defaultProps\n    handlePos: this.props.values!.map((value) =>\n      getPosition(value, this.props.min!, this.props.max!)\n    ) as Bounds,\n    handleDimensions: 0,\n    mousePos: null,\n    sliderBox: {},\n    slidingIndex: null,\n    // non-null thanks to defaultProps\n    values: this.props.values!,\n  };\n\n  private rheostat = createRef<HTMLDivElement>();\n\n  public componentWillReceiveProps = (nextProps: Required<Props>) => {\n    const { className, disabled, min, max, orientation } = this.props;\n    const { values, slidingIndex } = this.state;\n\n    const minMaxChanged = nextProps.min !== min || nextProps.max !== max;\n\n    const valuesChanged =\n      values.length !== nextProps.values.length ||\n      values.some((value, idx) => nextProps.values[idx] !== value);\n\n    const orientationChanged =\n      nextProps.className !== className ||\n      nextProps.orientation !== orientation;\n\n    const willBeDisabled = nextProps.disabled && !disabled;\n\n    if (orientationChanged) {\n      this.setState({\n        className: getClassName(nextProps),\n      });\n    }\n\n    if (minMaxChanged || valuesChanged) this.updateNewValues(nextProps);\n\n    if (willBeDisabled && slidingIndex !== null) {\n      this.endSlide();\n    }\n  };\n\n  private getPublicState = () => {\n    const { min, max } = this.props;\n    const { values } = this.state;\n\n    return { max, min, values };\n  };\n\n  private getSliderBoundingBox = (): BoundingBox => {\n    // only gets called after render, so it will always be defined\n    const node = this.rheostat.current!;\n    const rect = node.getBoundingClientRect();\n\n    return {\n      height: rect.height || node.clientHeight,\n      left: rect.left,\n      top: rect.top,\n      width: rect.width || node.clientWidth,\n    };\n  };\n\n  private getProgressStyle = (idx: number): Style => {\n    const { handlePos } = this.state;\n\n    const value = handlePos[idx];\n\n    if (idx === 0) {\n      return this.props.orientation === 'vertical'\n        ? { height: `${value}%`, top: 0 }\n        : { left: 0, width: `${value}%` };\n    }\n\n    const prevValue = handlePos[idx - 1];\n    const diffValue = value - prevValue;\n\n    return this.props.orientation === 'vertical'\n      ? { height: `${diffValue}%`, top: `${prevValue}%` }\n      : { left: `${prevValue}%`, width: `${diffValue}%` };\n  };\n\n  private getMinValue = (idx: number) => {\n    return this.state.values[idx - 1]\n      ? Math.max(this.props.min!, this.state.values[idx - 1])\n      : this.props.min;\n  };\n\n  private getMaxValue = (idx: number) => {\n    return this.state.values[idx + 1]\n      ? Math.min(this.props.max!, this.state.values[idx + 1])\n      : this.props.max;\n  };\n\n  private getHandleDimensions = (ev: Event, sliderBox: BoundingBox) => {\n    const handleNode = (ev.currentTarget as HTMLElement) || null;\n\n    if (!handleNode) return 0;\n\n    return this.props.orientation === 'vertical'\n      ? ((handleNode.clientHeight / sliderBox.height) * PERCENT_FULL) / 2\n      : ((handleNode.clientWidth / sliderBox.width) * PERCENT_FULL) / 2;\n  };\n\n  private getClosestSnapPoint = (value: number) => {\n    // non-null thanks to defaultProps\n    if (!this.props.snapPoints!.length) return value;\n\n    return this.props.snapPoints!.reduce((snapTo, snap) =>\n      Math.abs(snapTo - value) < Math.abs(snap - value) ? snapTo : snap\n    );\n  };\n\n  private getSnapPosition = (positionPercent: number) => {\n    if (!this.props.snap) return positionPercent;\n\n    const { max, min } = this.props as Required<Props>;\n\n    const value = getValue(positionPercent, min, max);\n\n    const snapValue = this.getClosestSnapPoint(value);\n\n    return getPosition(snapValue, min, max);\n  };\n\n  private getNextPositionForKey = (idx: number, keyCode: number) => {\n    const { handlePos, values } = this.state;\n    const { max, min, snapPoints } = this.props as Required<Props>;\n\n    const shouldSnap = this.props.snap;\n\n    let proposedValue = values[idx];\n    let proposedPercentage = handlePos[idx];\n    const originalPercentage = proposedPercentage;\n    let stepValue = 1;\n\n    if (max >= 100) {\n      proposedPercentage = Math.round(proposedPercentage);\n    } else {\n      stepValue = 100 / (max - min);\n    }\n\n    let currentIndex: number | null = null;\n\n    if (shouldSnap) {\n      currentIndex = snapPoints.indexOf(this.getClosestSnapPoint(values[idx]));\n    }\n\n    type StepMultiplier = { [key: number]: (value: number) => number };\n\n    const stepMultiplier: StepMultiplier = {\n      [KEYS.LEFT]: (v) => v * -1,\n      [KEYS.RIGHT]: (v) => v,\n      [KEYS.UP]: (v) => v,\n      [KEYS.DOWN]: (v) => v * -1,\n      [KEYS.PAGE_DOWN]: (v) => (v > 1 ? -v : v * -10),\n      [KEYS.PAGE_UP]: (v) => (v > 1 ? v : v * 10),\n    };\n\n    if (Object.prototype.hasOwnProperty.call(stepMultiplier, keyCode)) {\n      proposedPercentage += stepMultiplier[keyCode](stepValue);\n\n      if (shouldSnap) {\n        if (!currentIndex) {\n          // nothing happens\n        } else if (proposedPercentage > originalPercentage) {\n          // move cursor right unless overflow\n          if (currentIndex < snapPoints.length - 1) {\n            proposedValue = snapPoints[currentIndex + 1];\n          }\n          // move cursor left unless there is overflow\n        } else if (currentIndex > 0) {\n          proposedValue = snapPoints[currentIndex - 1];\n        }\n      }\n    } else if (keyCode === KEYS.HOME) {\n      proposedPercentage = PERCENT_EMPTY;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[0];\n      }\n    } else if (keyCode === KEYS.END) {\n      proposedPercentage = PERCENT_FULL;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[snapPoints.length - 1];\n      }\n    } else {\n      return null;\n    }\n\n    return shouldSnap\n      ? getPosition(proposedValue, min, max)\n      : proposedPercentage;\n  };\n\n  private getNextState = (idx: number, proposedPosition: number) => {\n    const { handlePos } = this.state;\n    const { max, min } = this.props as Required<Props>;\n\n    const actualPosition = this.validatePosition(idx, proposedPosition);\n\n    const nextHandlePos = handlePos.map((pos, index) =>\n      index === idx ? actualPosition : pos\n    ) as Bounds;\n\n    return {\n      handlePos: nextHandlePos,\n      values: nextHandlePos.map((pos) => getValue(pos, min, max)) as Bounds,\n    };\n  };\n\n  private getClosestHandle = (positionPercent: number) => {\n    const { handlePos } = this.state;\n\n    return handlePos.reduce((closestIdx, _node, idx) => {\n      const challenger = Math.abs(handlePos[idx] - positionPercent);\n      const current = Math.abs(handlePos[closestIdx] - positionPercent);\n      return challenger < current ? idx : closestIdx;\n    }, 0);\n  };\n\n  private setStartSlide = (\n    ev: MouseEvent | TouchEvent,\n    x: number,\n    y: number\n  ) => {\n    const sliderBox = this.getSliderBoundingBox();\n\n    this.setState({\n      handleDimensions: this.getHandleDimensions(ev, sliderBox),\n      mousePos: { x, y },\n      sliderBox,\n      slidingIndex: getHandleFor(ev),\n    });\n  };\n\n  private startMouseSlide = (ev: MouseEvent) => {\n    this.setStartSlide(ev, ev.clientX, ev.clientY);\n\n    document.addEventListener('mousemove', this.handleMouseSlide, false);\n    document.addEventListener('mouseup', this.endSlide, false);\n\n    killEvent(ev);\n  };\n\n  private startTouchSlide = (ev: TouchEvent) => {\n    if (ev.changedTouches.length > 1) return;\n\n    const touch = ev.changedTouches[0];\n\n    this.setStartSlide(ev, touch.clientX, touch.clientY);\n\n    document.addEventListener('touchmove', this.handleTouchSlide, false);\n    document.addEventListener('touchend', this.endSlide, false);\n\n    if (this.props.onSliderDragStart) this.props.onSliderDragStart();\n\n    killEvent(ev);\n  };\n\n  private handleMouseSlide = (ev: MouseEvent) => {\n    if (this.state.slidingIndex === null) return;\n    this.handleSlide(ev.clientX, ev.clientY);\n    killEvent(ev);\n  };\n\n  private handleTouchSlide = (ev: TouchEvent) => {\n    if (this.state.slidingIndex === null) return;\n\n    if (ev.changedTouches.length > 1) {\n      this.endSlide();\n      return;\n    }\n\n    const touch = ev.changedTouches[0];\n\n    this.handleSlide(touch.clientX, touch.clientY);\n    killEvent(ev);\n  };\n\n  private handleSlide = (x: number, y: number) => {\n    const { slidingIndex: idx, sliderBox } = this.state;\n\n    const positionPercent =\n      this.props.orientation === 'vertical'\n        ? ((y - sliderBox.top!) / sliderBox.height!) * PERCENT_FULL\n        : ((x - sliderBox.left!) / sliderBox.width!) * PERCENT_FULL;\n\n    this.slideTo(idx!, positionPercent);\n\n    if (this.canMove(idx!, positionPercent)) {\n      // update mouse positions\n      this.setState({ mousePos: { x, y } });\n      if (this.props.onSliderDragMove) this.props.onSliderDragMove();\n    }\n  };\n\n  private endSlide = () => {\n    const idx = this.state.slidingIndex;\n\n    this.setState({ slidingIndex: null });\n\n    document.removeEventListener('mouseup', this.endSlide, false);\n    document.removeEventListener('touchend', this.endSlide, false);\n    document.removeEventListener('touchmove', this.handleTouchSlide, false);\n    document.removeEventListener('mousemove', this.handleMouseSlide, false);\n\n    if (this.props.onSliderDragEnd) this.props.onSliderDragEnd();\n    if (this.props.snap) {\n      const positionPercent = this.getSnapPosition(this.state.handlePos[idx!]);\n      this.slideTo(idx!, positionPercent, () => this.fireChangeEvent());\n    } else {\n      this.fireChangeEvent();\n    }\n  };\n\n  private handleClick = (ev: MouseEvent) => {\n    if ((ev.target as HTMLDivElement).getAttribute('data-handle-key')) {\n      return;\n    }\n\n    // Calculate the position of the slider on the page so we can determine\n    // the position where you click in relativity.\n    const sliderBox = this.getSliderBoundingBox();\n\n    const positionDecimal =\n      this.props.orientation === 'vertical'\n        ? (ev.clientY - sliderBox.top) / sliderBox.height\n        : (ev.clientX - sliderBox.left) / sliderBox.width;\n\n    const positionPercent = positionDecimal * PERCENT_FULL;\n\n    const handleId = this.getClosestHandle(positionPercent);\n\n    const validPositionPercent = this.getSnapPosition(positionPercent);\n\n    // Move the handle there\n    this.slideTo(handleId, validPositionPercent, () => this.fireChangeEvent());\n\n    if (this.props.onClick) this.props.onClick();\n  };\n\n  private handleKeydown = (ev: KeyboardEvent) => {\n    const idx = getHandleFor(ev);\n\n    if (ev.keyCode === KEYS.ESC) {\n      (ev.currentTarget as HTMLElement).blur();\n      return;\n    }\n\n    const proposedPercentage = this.getNextPositionForKey(idx, ev.keyCode);\n\n    if (proposedPercentage === null) return;\n\n    if (this.canMove(idx, proposedPercentage)) {\n      this.slideTo(idx, proposedPercentage, () => this.fireChangeEvent());\n      if (this.props.onKeyPress) this.props.onKeyPress();\n    }\n\n    killEvent(ev);\n  };\n\n  // Make sure the proposed position respects the bounds and\n  // does not collide with other handles too much.\n  private validatePosition = (idx: number, proposedPosition: number) => {\n    const { handlePos, handleDimensions } = this.state;\n\n    return Math.max(\n      Math.min(\n        proposedPosition,\n        handlePos[idx + 1] !== undefined\n          ? handlePos[idx + 1] - handleDimensions\n          : PERCENT_FULL // 100% is the highest value\n      ),\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : PERCENT_EMPTY // 0% is the lowest value\n    );\n  };\n\n  private validateValues = (proposedValues: Bounds, props: Required<Props>) => {\n    const { max, min } = props || this.props;\n\n    return proposedValues.map((value, idx, values) => {\n      const realValue = Math.max(Math.min(value, max), min);\n\n      if (values.length && realValue < values[idx - 1]) {\n        return values[idx - 1];\n      }\n\n      return realValue;\n    }) as Bounds;\n  };\n\n  public canMove = (idx: number, proposedPosition: number) => {\n    const { handlePos, handleDimensions } = this.state;\n\n    if (proposedPosition < PERCENT_EMPTY) return false;\n    if (proposedPosition > PERCENT_FULL) return false;\n\n    const nextHandlePosition =\n      handlePos[idx + 1] !== undefined\n        ? handlePos[idx + 1] - handleDimensions\n        : Infinity;\n\n    if (proposedPosition > nextHandlePosition) return false;\n\n    const prevHandlePosition =\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : -Infinity;\n\n    if (proposedPosition < prevHandlePosition) return false;\n\n    return true;\n  };\n\n  public fireChangeEvent = () => {\n    const { onChange } = this.props;\n    if (onChange) onChange(this.getPublicState());\n  };\n\n  public slideTo = (\n    idx: number,\n    proposedPosition: number,\n    onAfterSet?: () => void\n  ) => {\n    const nextState = this.getNextState(idx, proposedPosition);\n\n    this.setState(nextState, () => {\n      const { onValuesUpdated } = this.props;\n      if (onValuesUpdated) onValuesUpdated(this.getPublicState());\n      if (onAfterSet) onAfterSet();\n    });\n  };\n\n  public updateNewValues = (nextProps: Required<Props>) => {\n    const { slidingIndex } = this.state;\n\n    // Don't update while the slider is sliding\n    if (slidingIndex !== null) {\n      return;\n    }\n\n    const { max, min, values } = nextProps;\n\n    const nextValues = this.validateValues(values, nextProps);\n\n    this.setState(\n      {\n        handlePos: nextValues.map((value) =>\n          getPosition(value, min, max)\n        ) as Bounds,\n        values: nextValues,\n      },\n      () => this.fireChangeEvent()\n    );\n  };\n\n  public render = () => {\n    const {\n      children,\n      disabled,\n      handle: Handle,\n      max,\n      min,\n      orientation,\n      pitComponent: PitComponent,\n      pitPoints,\n      progressBar: ProgressBar,\n    } = this.props as Required<Props>; // all required thanks to defaultProps\n    const { className, handlePos, values } = this.state;\n\n    return (\n      <div\n        className={className}\n        ref={this.rheostat}\n        onClick={disabled ? undefined : this.handleClick}\n        style={{ position: 'relative' }}\n      >\n        <div className=\"rheostat-background\" />\n        {handlePos.map((pos, idx) => {\n          const handleStyle: Style =\n            orientation === 'vertical'\n              ? { top: `${pos}%`, position: 'absolute' }\n              : { left: `${pos}%`, position: 'absolute' };\n\n          return (\n            <Handle\n              aria-valuemax={this.getMaxValue(idx)}\n              aria-valuemin={this.getMinValue(idx)}\n              aria-valuenow={values[idx]}\n              aria-disabled={disabled}\n              data-handle-key={idx}\n              className=\"rheostat-handle\"\n              key={`handle-${idx}`}\n              onClick={killEvent}\n              onKeyDown={disabled ? undefined : this.handleKeydown}\n              onMouseDown={disabled ? undefined : this.startMouseSlide}\n              onTouchStart={disabled ? undefined : this.startTouchSlide}\n              role=\"slider\"\n              style={handleStyle}\n              tabIndex={0}\n            />\n          );\n        })}\n\n        {handlePos.map((_node, idx, arr) => {\n          if (idx === 0 && arr.length > 1) {\n            return null;\n          }\n\n          return (\n            <ProgressBar\n              className=\"rheostat-progress\"\n              key={`progress-bar-${idx}`}\n              style={this.getProgressStyle(idx)}\n            />\n          );\n        })}\n\n        {PitComponent &&\n          pitPoints.map((n) => {\n            const pos = getPosition(n, min, max);\n            const pitStyle: Style =\n              orientation === 'vertical'\n                ? { top: `${pos}%`, position: 'absolute' }\n                : { left: `${pos}%`, position: 'absolute' };\n\n            return (\n              <PitComponent key={`pit-${n}`} style={pitStyle}>\n                {n}\n              </PitComponent>\n            );\n          })}\n        {children}\n      </div>\n    );\n  };\n}\n\nexport default Rheostat;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, Component } from 'preact';\n\nimport { range } from '../../lib/utils';\n\nimport Pit from './Pit';\nimport Rheostat from './Rheostat';\n\nimport type { RangeBoundaries } from '../../connectors/range/connectRange';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  RangeSliderCssClasses,\n  RangeSliderWidgetParams,\n} from '../../widgets/range-slider/range-slider';\nimport type { HandleProps } from './Rheostat';\n\nexport type RangeSliderComponentCSSClasses =\n  ComponentCSSClasses<RangeSliderCssClasses>;\n\nexport type SliderProps = {\n  refine: (values: RangeBoundaries) => void;\n  min?: number;\n  max?: number;\n  values: RangeBoundaries;\n  pips?: boolean;\n  step?: number;\n  tooltips?: RangeSliderWidgetParams['tooltips'];\n  cssClasses: RangeSliderComponentCSSClasses;\n};\n\nclass Slider extends Component<SliderProps> {\n  private get isDisabled() {\n    return this.props.min! >= this.props.max!;\n  }\n\n  private handleChange = ({ values }: { values: RangeBoundaries }) => {\n    if (!this.isDisabled) {\n      this.props.refine(values);\n    }\n  };\n\n  // creates an array number where to display a pit point on the slider\n  private computeDefaultPitPoints({ min, max }: { min: number; max: number }) {\n    const totalLength = max - min;\n    const steps = 34;\n    const stepsLength = totalLength / steps;\n\n    const pitPoints = [\n      min,\n      ...range({\n        end: steps - 1,\n      }).map((step) => min + stepsLength * (step + 1)),\n      max,\n    ];\n\n    return pitPoints;\n  }\n\n  // creates an array of values where the slider should snap to\n  private computeSnapPoints({\n    min,\n    max,\n    step,\n  }: {\n    min: number;\n    max: number;\n    step?: number;\n  }) {\n    if (!step) return undefined;\n    return [...range({ start: min, end: max, step }), max];\n  }\n\n  private createHandleComponent =\n    (tooltips: RangeSliderWidgetParams['tooltips']) => (props: HandleProps) => {\n      // display only two decimals after comma,\n      // and apply `tooltips.format()` if any\n      const roundedValue =\n        Math.round(\n          // have to cast as a string, as the value given to the prop is a number, but becomes a string when read\n          parseFloat(props['aria-valuenow'] as unknown as string) * 100\n        ) / 100;\n      const value =\n        typeof tooltips === 'object' && tooltips.format\n          ? tooltips.format(roundedValue)\n          : roundedValue;\n\n      const className = cx(\n        props.className,\n        props['data-handle-key'] === 0 && 'rheostat-handle-lower',\n        props['data-handle-key'] === 1 && 'rheostat-handle-upper'\n      );\n\n      const ariaLabel =\n        props['data-handle-key'] === 0\n          ? 'Minimum Filter Handle'\n          : 'Maximum Filter Handle';\n\n      return (\n        <div {...props} className={className} aria-label={ariaLabel}>\n          {tooltips && <div className=\"rheostat-tooltip\">{value}</div>}\n        </div>\n      );\n    };\n\n  public render() {\n    const { tooltips, step, pips, values, cssClasses } = this.props;\n\n    // @TODO: figure out why this.props needs to be non-null asserted\n    const { min, max } = this.isDisabled\n      ? { min: this.props.min!, max: this.props.max! + 0.001 }\n      : (this.props as Required<SliderProps>);\n\n    const snapPoints = this.computeSnapPoints({ min, max, step });\n    const pitPoints =\n      pips === false ? [] : this.computeDefaultPitPoints({ min, max });\n\n    return (\n      <div\n        className={cx(\n          cssClasses.root,\n          this.isDisabled && cssClasses.disabledRoot\n        )}\n      >\n        <Rheostat\n          handle={this.createHandleComponent(tooltips)}\n          onChange={this.handleChange}\n          min={min}\n          max={max}\n          pitComponent={Pit}\n          pitPoints={pitPoints}\n          snap={true}\n          snapPoints={snapPoints}\n          values={(this.isDisabled ? [min, max] : values) as [number, number]}\n          disabled={this.isDisabled}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport Slider from '../../components/Slider/Slider';\nimport connectRange from '../../connectors/range/connectRange';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type { RangeSliderComponentCSSClasses } from '../../components/Slider/Slider';\nimport type {\n  RangeBoundaries,\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-slider' });\nconst suit = component('RangeSlider');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    pips,\n    step,\n    tooltips,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RangeSliderComponentCSSClasses;\n    pips: boolean;\n    step?: number;\n    tooltips: RangeSliderWidgetParams['tooltips'];\n  }): Renderer<RangeRenderState, Partial<RangeSliderWidgetParams>> =>\n  ({ refine, range, start }, isFirstRendering) => {\n    if (isFirstRendering) {\n      // There's no information at this point, let's render nothing.\n      return;\n    }\n\n    const { min: minRange, max: maxRange } = range;\n\n    const [minStart, maxStart] = start;\n    const minFinite = minStart === -Infinity ? minRange : minStart;\n    const maxFinite = maxStart === Infinity ? maxRange : maxStart;\n\n    // Clamp values to the range for avoid extra rendering & refinement\n    // Should probably be done on the connector side, but we need to stay\n    // backward compatible so we still need to pass [-Infinity, Infinity]\n    const values: RangeBoundaries = [\n      minFinite! > maxRange! ? maxRange : minFinite,\n      maxFinite! < minRange! ? minRange : maxFinite,\n    ];\n\n    render(\n      <Slider\n        cssClasses={cssClasses}\n        refine={refine}\n        min={minRange}\n        max={maxRange}\n        values={values}\n        tooltips={tooltips}\n        step={step}\n        pips={pips}\n      />,\n      containerNode\n    );\n  };\n\nexport type RangeSliderCssClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the disabled root element.\n   */\n  disabledRoot: string | string[];\n}>;\n\ntype RangeSliderTooltipOptions = {\n  /**\n   * The function takes the raw value as input, and should return\n   * a string for the label that should be used for this value.\n   * @example\n   * { format(rawValue) {return '$' + Math.round(rawValue).toLocaleString() } }\n   */\n  format: (value: number) => string;\n};\n\nexport type RangeSliderWidgetParams = {\n  /**\n   * CSS Selector or DOMElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.;\n   */\n  attribute: string;\n  /**\n   * Should we show tooltips or not.\n   * The default tooltip will show the raw value.\n   * You can also provide an object with a format function as an attribute.\n   * So that you can format the tooltip display value as you want.\n   * @default true\n   */\n  tooltips?: boolean | RangeSliderTooltipOptions;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RangeSliderCssClasses;\n  /**\n   * Show slider pips.\n   * @default true\n   */\n  pips?: boolean;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Every handle move will jump that number of steps.\n   */\n  step?: number;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n};\n\nexport type RangeSliderWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeSlider';\n    $$type: 'ais.rangeSlider';\n  },\n  RangeConnectorParams,\n  RangeSliderWidgetParams\n>;\n\n/**\n * The range slider is a widget which provides a user-friendly way to filter the\n * results based on a single numeric range.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n */\nconst rangeSlider: RangeSliderWidget = function rangeSlider(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    cssClasses: userCssClasses = {},\n    step,\n    pips = true,\n    precision = 0,\n    tooltips = true,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    disabledRoot: cx(\n      suit({ modifierName: 'disabled' }),\n      userCssClasses.disabledRoot\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    step,\n    pips,\n    tooltips,\n    cssClasses,\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, min, max, precision }),\n\n    $$type: 'ais.rangeSlider',\n    $$widgetType: 'ais.rangeSlider',\n  };\n};\n\nexport default rangeSlider;\n","/** @jsx h */\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\n\nimport type {\n  RatingMenuComponentTemplates,\n  RatingMenuCSSClasses,\n} from './rating-menu';\nimport type { ComponentChild } from 'preact';\n\ntype ItemWrapperProps = { children: ComponentChild } & {\n  value: string;\n  count: number;\n  url: string;\n  cssClasses: RatingMenuCSSClasses;\n};\n\nfunction ItemWrapper({\n  children,\n  count,\n  value,\n  url,\n  cssClasses,\n}: ItemWrapperProps) {\n  if (count) {\n    return (\n      <a\n        className={cx(cssClasses.link)}\n        aria-label={`${value} & up`}\n        href={url}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <div className={cx(cssClasses.link)} aria-label={`${value} & up`} disabled>\n      {children}\n    </div>\n  );\n}\n\nconst defaultTemplates: RatingMenuComponentTemplates = {\n  item({ count, value, url, stars, cssClasses }) {\n    return (\n      <ItemWrapper\n        count={count}\n        value={value}\n        url={url}\n        cssClasses={cssClasses}\n      >\n        {stars.map((isFull, index) => (\n          <svg\n            key={index}\n            className={cx(\n              cssClasses.starIcon,\n              isFull ? cssClasses.fullStarIcon : cssClasses.emptyStarIcon\n            )}\n            aria-hidden=\"true\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <use\n              xlinkHref={\n                isFull\n                  ? '#ais-RatingMenu-starSymbol'\n                  : '#ais-RatingMenu-starEmptySymbol'\n              }\n            />\n          </svg>\n        ))}\n        <span aria-hidden=\"true\" className={cx(cssClasses.label)}>\n          &amp; Up\n        </span>\n        {count && (\n          <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n        )}\n      </ItemWrapper>\n    );\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectRatingMenu from '../../connectors/rating-menu/connectRatingMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams,\n  RatingMenuRenderState,\n} from '../../connectors/rating-menu/connectRatingMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'rating-menu' });\nconst suit = component('RatingMenu');\n\nexport type RatingMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n    stars: [boolean, boolean, boolean, boolean, boolean];\n    cssClasses: RatingMenuCSSClasses;\n    attribute?: string;\n    isFromSearch?: boolean;\n  }>;\n}>;\n\nexport type RatingMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add the selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add a disabled item element.\n   */\n  disabledItem: string | string[];\n  /**\n   * CSS class to add to each link element.\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to each star element (when using the default template).\n   */\n  starIcon: string | string[];\n  /**\n   * CSS class to add to each full star element (when using the default template).\n   */\n  fullStarIcon: string | string[];\n  /**\n   * CSS class to add to each empty star element (when using the default template).\n   */\n  emptyStarIcon: string | string[];\n  /**\n   * CSS class to add to each label.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each counter.\n   */\n  count: string | string[];\n}>;\n\nexport type RatingMenuComponentCSSClasses =\n  ComponentCSSClasses<RatingMenuCSSClasses>;\n\nexport type RatingMenuComponentTemplates = Required<RatingMenuTemplates>;\n\nexport type RatingMenuWidgetParams = {\n  /**\n   * Place where to insert the widget in your webpage.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute in your records that contains the ratings.\n   */\n  attribute: string;\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: RatingMenuTemplates;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RatingMenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RatingMenuComponentCSSClasses;\n    templates: RatingMenuTemplates;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RatingMenuComponentTemplates>;\n    };\n  }) =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      instantSearchInstance,\n    }: RatingMenuRenderState & RendererOptions<RatingMenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n      >\n        <svg style=\"display:none;\">\n          <symbol\n            id={suit({ descendantName: 'starSymbol' })}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\n          </symbol>\n          <symbol\n            id={suit({ descendantName: 'starEmptySymbol' })}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n          </symbol>\n        </svg>\n      </RefinementList>,\n      containerNode\n    );\n  };\n\n/**\n * Rating menu is used for displaying grade like filters. The values are normalized within boundaries.\n *\n * The maximum value can be set (with `max`), the minimum is always 0.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n *\n * @type {WidgetFactory}\n * @devNovel RatingMenu\n * @category filter\n * @param {RatingMenuWidgetParams} widgetParams RatingMenu widget options.\n * @return {Widget} A new RatingMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.ratingMenu({\n *     container: '#stars',\n *     attribute: 'rating',\n *     max: 5,\n *   })\n * ]);\n */\nexport type RatingMenuWidget = WidgetFactory<\n  RatingMenuWidgetDescription & { $$widgetType: 'ais.ratingMenu' },\n  RatingMenuConnectorParams,\n  RatingMenuWidgetParams\n>;\n\nconst ratingMenu: RatingMenuWidget = function ratingMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    max = 5,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    starIcon: cx(suit({ descendantName: 'starIcon' }), userCssClasses.starIcon),\n    fullStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'full' }),\n      userCssClasses.fullStarIcon\n    ),\n    emptyStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'empty' }),\n      userCssClasses.emptyStarIcon\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRatingMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, max }),\n    $$widgetType: 'ais.ratingMenu',\n  };\n};\n\nexport default ratingMenu;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { SearchBoxComponentTemplates } from '../../components/SearchBox/SearchBox';\n\nconst defaultTemplate: SearchBoxComponentTemplates = {\n  reset({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.resetIcon}\n        viewBox=\"0 0 20 20\"\n        width=\"10\"\n        height=\"10\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\" />\n      </svg>\n    );\n  },\n  submit({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.submitIcon}\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 40 40\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\" />\n      </svg>\n    );\n  },\n  loadingIndicator({ cssClasses }) {\n    /* eslint-disable react/no-unknown-property */\n    // Preact supports kebab case attributes, and using camel case would\n    // require using `preact/compat`.\n    // @TODO: reconsider using the `react` ESLint preset\n    return (\n      <svg\n        aria-label=\"Results are loading\"\n        className={cssClasses.loadingIcon}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 38 38\"\n        stroke=\"#444\"\n        aria-hidden=\"true\"\n      >\n        <g fill=\"none\" fill-rule=\"evenodd\">\n          <g transform=\"translate(1 1)\" stroke-width=\"2\">\n            <circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n              <animateTransform\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 18 18\"\n                to=\"360 18 18\"\n                dur=\"1s\"\n                repeatCount=\"indefinite\"\n              />\n            </path>\n          </g>\n        </g>\n      </svg>\n    );\n    /* eslint-enable react/no-unknown-property */\n  },\n};\n\nexport default defaultTemplate;\n","/** @jsx h */\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\n\nimport type { RefinementListComponentTemplates } from './refinement-list';\n\nconst defaultTemplates: RefinementListComponentTemplates = {\n  item({ cssClasses, count, value, highlighted, isRefined, isFromSearch }) {\n    return (\n      <label className={cx(cssClasses.label)}>\n        <input\n          type=\"checkbox\"\n          className={cx(cssClasses.checkbox)}\n          value={value}\n          defaultChecked={isRefined}\n        />\n        {/* @MAJOR: use the `<Highlight>` component instead */}\n        <span\n          className={cx(cssClasses.labelText)}\n          dangerouslySetInnerHTML={\n            isFromSearch ? { __html: highlighted } : undefined\n          }\n        >\n          {!isFromSearch && highlighted}\n        </span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </label>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n  searchableNoResults() {\n    return 'No results';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectRefinementList from '../../connectors/refinement-list/connectRefinementList';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport searchBoxDefaultTemplates from '../search-box/defaultTemplates';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type { RefinementListComponentCSSClasses } from '../../components/RefinementList/RefinementList';\nimport type { SearchBoxComponentTemplates } from '../../components/SearchBox/SearchBox';\nimport type {\n  RefinementListRenderState,\n  RefinementListConnectorParams,\n  RefinementListWidgetDescription,\n} from '../../connectors/refinement-list/connectRefinementList';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { Template, WidgetFactory, Renderer } from '../../types';\nimport type { SearchBoxTemplates } from '../search-box/search-box';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n});\nconst suit = component('RefinementList');\nconst searchBoxSuit = component('SearchBox');\n\nexport type RefinementListOwnCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the root element with no results.\n   */\n  noResults: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each label element (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each checkbox element (when using the default template).\n   */\n  checkbox: string | string[];\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText: string | string[];\n  /**\n   * CSS class to add to the show more element\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more element\n   */\n  disabledShowMore: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the searchable container.\n   */\n  searchBox: string | string[];\n}>;\n\ntype RefinementListSearchableCSSClasses = Partial<{\n  searchableRoot: string | string[];\n  searchableForm: string | string[];\n  searchableInput: string | string[];\n  searchableSubmit: string | string[];\n  searchableSubmitIcon: string | string[];\n  searchableReset: string | string[];\n  searchableResetIcon: string | string[];\n  searchableLoadingIndicator: string | string[];\n  searchableLoadingIcon: string | string[];\n}>;\n\nexport type RefinementListCSSClasses = RefinementListOwnCSSClasses &\n  RefinementListSearchableCSSClasses;\n\nexport type RefinementListItemData = {\n  /**\n   * The number of occurrences of the facet in the result set.\n   */\n  count: number;\n  /**\n   * True if the value is selected.\n   */\n  isRefined: boolean;\n  /**\n   * The label to display.\n   */\n  label: string;\n  /**\n   * The value used for refining.\n   */\n  value: string;\n  /**\n   * The label highlighted (when using search for facet values). This value is displayed in the default template.\n   */\n  highlighted: string;\n  /**\n   * The url with this refinement selected.\n   */\n  url: string;\n  /**\n   * Object containing all the classes computed for the item.\n   */\n  cssClasses: RefinementListCSSClasses;\n  /**\n   * Whether the `items` prop contains facet values from the global search or from the search inside the items.\n   */\n  isFromSearch: boolean;\n};\n\nexport type RefinementListOwnTemplates = Partial<{\n  /**\n   * Item template, provided with `label`, `highlighted`, `value`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<RefinementListItemData>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n  /**\n   * Templates to use for search for facet values when there are no results.\n   */\n  searchableNoResults: Template;\n}>;\n\ntype RefinementListSearchableTemplates = Partial<{\n  /**\n   * Templates to use for search for facet values submit button.\n   */\n  searchableSubmit: SearchBoxTemplates['submit'];\n  /**\n   * Templates to use for search for facet values reset button.\n   */\n  searchableReset: SearchBoxTemplates['reset'];\n  /**\n   * Templates to use for the search for facet values loading indicator.\n   */\n  searchableLoadingIndicator: SearchBoxTemplates['loadingIndicator'];\n}>;\n\nexport type RefinementListTemplates = RefinementListOwnTemplates &\n  RefinementListSearchableTemplates;\nexport type RefinementListComponentTemplates =\n  Required<RefinementListOwnTemplates>;\n\nexport type RefinementListWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Add a search input to let the user search for more facet values. In order\n   * to make this feature work, you need to make the attribute searchable\n   * [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting)\n   * or [the dashboard](https://www.algolia.com/explorer/display/)\n   */\n  searchable?: boolean;\n  /**\n   * Value of the search field placeholder.\n   */\n  searchablePlaceholder?: string;\n  /**\n   * When `false` the search field will become disabled if there are less items\n   * to display than the `options.limit`, otherwise the search field is always usable.\n   */\n  searchableIsAlwaysActive?: boolean;\n  /**\n   * When activated, it will escape the facet values that are returned from Algolia.\n   * In this case, the surrounding tags will always be `<mark></mark>`.\n   */\n  searchableEscapeFacetValues?: boolean;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: RefinementListTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RefinementListCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    searchBoxTemplates,\n    renderState,\n    showMore,\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RefinementListComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RefinementListComponentTemplates>;\n      searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxComponentTemplates>;\n    };\n    templates: RefinementListOwnTemplates;\n    searchBoxTemplates: SearchBoxTemplates;\n    showMore?: boolean;\n    searchable?: boolean;\n    searchablePlaceholder?: string;\n    searchableIsAlwaysActive?: boolean;\n  }): Renderer<RefinementListRenderState, RefinementListConnectorParams> =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      searchForItems,\n      isFromSearch,\n      instantSearchInstance,\n      toggleShowMore,\n      isShowingMore,\n      hasExhaustiveItems,\n      canToggleShowMore,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      renderState.searchBoxTemplateProps = prepareTemplateProps({\n        defaultTemplates: searchBoxDefaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates: searchBoxTemplates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        searchBoxTemplateProps={renderState.searchBoxTemplateProps}\n        toggleRefinement={refine}\n        searchFacetValues={searchable ? searchForItems : undefined}\n        searchPlaceholder={searchablePlaceholder}\n        searchIsAlwaysActive={searchableIsAlwaysActive}\n        isFromSearch={isFromSearch}\n        showMore={showMore && !isFromSearch && items.length > 0}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        hasExhaustiveItems={hasExhaustiveItems}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\nexport type RefinementListWidget = WidgetFactory<\n  RefinementListWidgetDescription & { $$widgetType: 'ais.refinementList' },\n  RefinementListConnectorParams,\n  RefinementListWidgetParams\n>;\n\n/**\n * The refinement list widget is one of the most common widget that you can find\n * in a search UI. With this widget, the user can filter the dataset based on facets.\n *\n * The refinement list displays only the most relevant facets for the current search\n * context. The sort option only affects the facet that are returned by the engine,\n * not which facets are returned.\n *\n * This widget also implements search for facet values, which is a mini search inside the\n * values of the facets. This makes easy to deal with uncommon facet values.\n *\n * @requirements\n *\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * If you also want to use search for facet values on this attribute, you need to make it searchable using the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).\n */\nconst refinementList: RefinementListWidget = function refinementList(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    operator,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    searchable = false,\n    searchablePlaceholder = 'Search...',\n    searchableEscapeFacetValues = true,\n    searchableIsAlwaysActive = true,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const escapeFacetValues = searchable\n    ? Boolean(searchableEscapeFacetValues)\n    : false;\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    searchBox: cx(\n      suit({ descendantName: 'searchBox' }),\n      userCssClasses.searchBox\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    noResults: cx(\n      suit({ descendantName: 'noResults' }),\n      userCssClasses.noResults\n    ),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n    searchable: {\n      root: cx(searchBoxSuit(), userCssClasses.searchableRoot),\n      form: cx(\n        searchBoxSuit({ descendantName: 'form' }),\n        userCssClasses.searchableForm\n      ),\n      input: cx(\n        searchBoxSuit({ descendantName: 'input' }),\n        userCssClasses.searchableInput\n      ),\n      submit: cx(\n        searchBoxSuit({ descendantName: 'submit' }),\n        userCssClasses.searchableSubmit\n      ),\n      submitIcon: cx(\n        searchBoxSuit({ descendantName: 'submitIcon' }),\n        userCssClasses.searchableSubmitIcon\n      ),\n      reset: cx(\n        searchBoxSuit({ descendantName: 'reset' }),\n        userCssClasses.searchableReset\n      ),\n      resetIcon: cx(\n        searchBoxSuit({ descendantName: 'resetIcon' }),\n        userCssClasses.searchableResetIcon\n      ),\n      loadingIndicator: cx(\n        searchBoxSuit({ descendantName: 'loadingIndicator' }),\n        userCssClasses.searchableLoadingIndicator\n      ),\n      loadingIcon: cx(\n        searchBoxSuit({ descendantName: 'loadingIcon' }),\n        userCssClasses.searchableLoadingIcon\n      ),\n    },\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    searchBoxTemplates: {\n      submit: templates.searchableSubmit,\n      reset: templates.searchableReset,\n      loadingIndicator: templates.searchableLoadingIndicator,\n    },\n    renderState: {},\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n    showMore,\n  });\n\n  const makeWidget = connectRefinementList(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      operator,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      escapeFacetValues,\n      transformItems,\n    }),\n    $$widgetType: 'ais.refinementList',\n  };\n};\n\nexport default refinementList;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  RelevantSortCSSClasses,\n  RelevantSortTemplates,\n} from '../../widgets/relevant-sort/relevant-sort';\n\nexport type RelevantSortComponentCSSClasses =\n  ComponentCSSClasses<RelevantSortCSSClasses>;\n\nexport type RelevantSortComponentTemplates = Required<RelevantSortTemplates>;\n\ntype RelevantSortProps = {\n  cssClasses: RelevantSortComponentCSSClasses;\n  templates: RelevantSortComponentTemplates;\n  isRelevantSorted: boolean;\n  isVirtualReplica: boolean;\n  refine: (relevancyStrictness: number | undefined) => void;\n};\n\nconst RelevantSort = ({\n  cssClasses,\n  templates,\n  isRelevantSorted,\n  isVirtualReplica,\n  refine,\n}: RelevantSortProps) =>\n  isVirtualReplica ? (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"text\"\n        templates={templates}\n        rootProps={{\n          className: cssClasses.text,\n        }}\n        data={{ isRelevantSorted }}\n      />\n      <button\n        type=\"button\"\n        className={cssClasses.button}\n        onClick={() => {\n          if (isRelevantSorted) {\n            refine(0);\n          } else {\n            refine(undefined);\n          }\n        }}\n      >\n        <Template\n          rootTagName=\"span\"\n          templateKey=\"button\"\n          templates={templates}\n          data={{ isRelevantSorted }}\n        />\n      </button>\n    </div>\n  ) : null;\n\nexport default RelevantSort;\n","import type { RelevantSortComponentTemplates } from '../../components/RelevantSort/RelevantSort';\n\nconst defaultTemplates: RelevantSortComponentTemplates = {\n  text() {\n    return '';\n  },\n  button({ isRelevantSorted }) {\n    return isRelevantSorted ? 'See all results' : 'See relevant results';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport RelevantSort from '../../components/RelevantSort/RelevantSort';\nimport connectRelevantSort from '../../connectors/relevant-sort/connectRelevantSort';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  RelevantSortComponentCSSClasses,\n  RelevantSortComponentTemplates,\n} from '../../components/RelevantSort/RelevantSort';\nimport type {\n  RelevantSortConnectorParams,\n  RelevantSortRenderState,\n  RelevantSortWidgetDescription,\n} from '../../connectors/relevant-sort/connectRelevantSort';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template } from '../../types';\n\nexport type RelevantSortCSSClasses = Partial<{\n  root: string;\n  text: string;\n  button: string;\n}>;\n\nexport type RelevantSortTemplates = Partial<{\n  text: Template<{ isRelevantSorted: boolean }>;\n  button: Template<{ isRelevantSorted: boolean }>;\n}>;\n\nexport type RelevantSortWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: RelevantSortCSSClasses;\n  templates?: RelevantSortTemplates;\n};\n\nexport type RelevantSortWidget = WidgetFactory<\n  RelevantSortWidgetDescription & { $$widgetType: 'ais.relevantSort' },\n  RelevantSortConnectorParams,\n  RelevantSortWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'relevant-sort',\n});\n\nconst suit = component('RelevantSort');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RelevantSortComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RelevantSortComponentTemplates>;\n    };\n    templates: RelevantSortComponentTemplates;\n  }) =>\n  ({ isRelevantSorted, isVirtualReplica, refine }: RelevantSortRenderState) => {\n    render(\n      <RelevantSort\n        cssClasses={cssClasses}\n        templates={templates}\n        isRelevantSorted={isRelevantSorted}\n        isVirtualReplica={isVirtualReplica}\n        refine={refine}\n      />,\n      containerNode\n    );\n  };\n\nconst relevantSort: RelevantSortWidget = (widgetParams) => {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams;\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRelevantSort(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.relevantSort',\n  };\n};\n\nexport default relevantSort;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport connectSearchBox from '../../connectors/search-box/connectSearchBox';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  SearchBoxComponentCSSClasses,\n  SearchBoxComponentTemplates,\n} from '../../components/SearchBox/SearchBox';\nimport type {\n  SearchBoxConnectorParams,\n  SearchBoxRenderState,\n  SearchBoxWidgetDescription,\n} from '../../connectors/search-box/connectSearchBox';\nimport type { WidgetFactory, Template, RendererOptions } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'search-box' });\nconst suit = component('SearchBox');\n\nexport type SearchBoxTemplates = Partial<{\n  /**\n   * Template used for displaying the submit button. Can accept a function or a Hogan string.\n   */\n  submit: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n  /**\n   * Template used for displaying the reset button. Can accept a function or a Hogan string.\n   */\n  reset: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n  /**\n   * Template used for displaying the loading indicator. Can accept a function or a Hogan string.\n   */\n  loadingIndicator: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n}>;\n\nexport type SearchBoxCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping `<div>`\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the form\n   */\n  form: string | string[];\n  /**\n   * CSS class to add to the input.\n   */\n  input: string | string[];\n  /**\n   * CSS classes added to the submit button.\n   */\n  submit: string | string[];\n  /**\n   * CSS classes added to the submit icon.\n   */\n  submitIcon: string | string[];\n  /**\n   * CSS classes added to the reset button.\n   */\n  reset: string | string[];\n  /**\n   * CSS classes added to the reset icon.\n   */\n  resetIcon: string | string[];\n  /**\n   * CSS classes added to the loading indicator element.\n   */\n  loadingIndicator: string | string[];\n  /**\n   * CSS classes added to the loading indicator icon.\n   */\n  loadingIcon: string | string[];\n}>;\n\nexport type SearchBoxWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget\n   */\n  container: string | HTMLElement;\n  /**\n   * The placeholder of the input\n   */\n  placeholder?: string;\n  /**\n   * Whether the input should be autofocused\n   */\n  autofocus?: boolean;\n  /**\n   * If set, trigger the search\n   * once `<Enter>` is pressed only.\n   */\n  searchAsYouType?: boolean;\n  /**\n   * Whether to update the search state in the middle of a\n   * composition session.\n   * @default false\n   */\n  ignoreCompositionEvents?: boolean;\n  /**\n   * Whether to show the reset button\n   */\n  showReset?: boolean;\n  /**\n   * Whether to show the submit button\n   */\n  showSubmit?: boolean;\n  /**\n   * Whether to show the loading indicator (replaces the submit if\n   * the search is stalled)\n   */\n  showLoadingIndicator?: boolean;\n  /**\n   * CSS classes to add\n   */\n  cssClasses?: SearchBoxCSSClasses;\n\n  /**\n   * Templates used for customizing the rendering of the searchbox\n   */\n  templates?: SearchBoxTemplates;\n  /**\n   * A function that is called every time a new search is done. You\n   * will get the query as the first parameter and a search (query) function to call as the second parameter.\n   * This `queryHook` can be used to debounce the number of searches done from the search box.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates,\n    autofocus,\n    searchAsYouType,\n    ignoreCompositionEvents,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: SearchBoxComponentCSSClasses;\n    placeholder: string;\n    templates: SearchBoxComponentTemplates;\n    autofocus: boolean;\n    searchAsYouType: boolean;\n    ignoreCompositionEvents: boolean;\n    showReset: boolean;\n    showSubmit: boolean;\n    showLoadingIndicator: boolean;\n  }) =>\n  ({\n    refine,\n    query,\n    isSearchStalled,\n  }: SearchBoxRenderState & RendererOptions<SearchBoxConnectorParams>) => {\n    render(\n      <SearchBox\n        query={query}\n        placeholder={placeholder}\n        autofocus={autofocus}\n        refine={refine}\n        searchAsYouType={searchAsYouType}\n        ignoreCompositionEvents={ignoreCompositionEvents}\n        templates={templates}\n        showSubmit={showSubmit}\n        showReset={showReset}\n        showLoadingIndicator={showLoadingIndicator}\n        isSearchStalled={isSearchStalled}\n        cssClasses={cssClasses}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The searchbox widget is used to let the user set a text based query.\n *\n * This is usually the  main entry point to start the search in an instantsearch context. For that\n * reason is usually placed on top, and not hidden so that the user can start searching right\n * away.\n *\n */\nexport type SearchBoxWidget = WidgetFactory<\n  SearchBoxWidgetDescription & { $$widgetType: 'ais.searchBox' },\n  SearchBoxConnectorParams,\n  SearchBoxWidgetParams\n>;\n\nconst searchBox: SearchBoxWidget = function searchBox(widgetParams) {\n  const {\n    container,\n    placeholder = '',\n    cssClasses: userCssClasses = {},\n    autofocus = false,\n    searchAsYouType = true,\n    ignoreCompositionEvents = false,\n    showReset = true,\n    showSubmit = true,\n    showLoadingIndicator = true,\n    queryHook,\n    templates: userTemplates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n    submitIcon: cx(\n      suit({ descendantName: 'submitIcon' }),\n      userCssClasses.submitIcon\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n    resetIcon: cx(\n      suit({ descendantName: 'resetIcon' }),\n      userCssClasses.resetIcon\n    ),\n    loadingIndicator: cx(\n      suit({ descendantName: 'loadingIndicator' }),\n      userCssClasses.loadingIndicator\n    ),\n    loadingIcon: cx(\n      suit({ descendantName: 'loadingIcon' }),\n      userCssClasses.loadingIcon\n    ),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates,\n    autofocus,\n    searchAsYouType,\n    ignoreCompositionEvents,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  });\n\n  const makeWidget = connectSearchBox(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ queryHook }),\n    $$widgetType: 'ais.searchBox',\n  };\n};\n\nexport default searchBox;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport Selector from '../../components/Selector/Selector';\nimport connectSortBy from '../../connectors/sort-by/connectSortBy';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type { SelectorComponentCSSClasses } from '../../components/Selector/Selector';\nimport type {\n  SortByConnectorParams,\n  SortByItem,\n  SortByRenderState,\n  SortByWidgetDescription,\n} from '../../connectors/sort-by/connectSortBy';\nimport type { Renderer, TransformItems, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'sort-by' });\nconst suit = component('SortBy');\n\nexport type SortByWidgetCssClasses = Partial<{\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n}>;\n\nexport type SortByIndexDefinition = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByIndexDefinition[];\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: SortByWidgetCssClasses;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByWidget = WidgetFactory<\n  SortByWidgetDescription & { $$widgetType: 'ais.sortBy' },\n  SortByConnectorParams,\n  SortByWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: SelectorComponentCSSClasses;\n  }): Renderer<SortByRenderState, SortByWidgetParams> =>\n  ({ currentRefinement, options, refine }, isFirstRendering) => {\n    if (isFirstRendering) {\n      return;\n    }\n\n    render(\n      <div className={cssClasses.root}>\n        <Selector\n          cssClasses={cssClasses}\n          currentValue={currentRefinement}\n          options={options}\n          setValue={refine}\n          ariaLabel=\"Sort results by\"\n        />\n      </div>,\n      containerNode\n    );\n  };\n\n/**\n * Sort by selector is a widget used for letting the user choose between different\n * indices that contains the same data with a different order / ranking formula.\n */\nconst sortBy: SortByWidget = (widgetParams) => {\n  const {\n    container,\n    items,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectSortBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ container: containerNode, items, transformItems }),\n    $$widgetType: 'ais.sortBy',\n  };\n};\n\nexport default sortBy;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  StatsCSSClasses,\n  StatsTemplates,\n} from '../../widgets/stats/stats';\n\nexport type StatsComponentCSSClasses = ComponentCSSClasses<StatsCSSClasses>;\n\nexport type StatsComponentTemplates = Required<StatsTemplates>;\n\ntype StatsProps = {\n  cssClasses: StatsComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: StatsComponentTemplates;\n  };\n  hitsPerPage: number | undefined;\n  nbHits: number;\n  nbSortedHits: number | undefined;\n  areHitsSorted: boolean;\n  nbPages: number;\n  page: number;\n  processingTimeMS: number;\n  query: string;\n};\n\nconst Stats = ({\n  nbHits,\n  nbSortedHits,\n  cssClasses,\n  templateProps,\n  ...rest\n}: StatsProps) => (\n  <div className={cx(cssClasses.root)}>\n    <Template\n      {...templateProps}\n      templateKey=\"text\"\n      rootTagName=\"span\"\n      rootProps={{ className: cssClasses.text }}\n      data={{\n        hasManySortedResults: nbSortedHits && nbSortedHits > 1,\n        hasNoSortedResults: nbSortedHits === 0,\n        hasOneSortedResults: nbSortedHits === 1,\n        hasManyResults: nbHits > 1,\n        hasNoResults: nbHits === 0,\n        hasOneResult: nbHits === 1,\n        nbHits,\n        nbSortedHits,\n        cssClasses,\n        ...rest,\n      }}\n    />\n  </div>\n);\n\nexport default Stats;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport Stats from '../../components/Stats/Stats';\nimport connectStats from '../../connectors/stats/connectStats';\nimport { formatNumber } from '../../lib/formatNumber';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  StatsComponentCSSClasses,\n  StatsComponentTemplates,\n} from '../../components/Stats/Stats';\nimport type {\n  StatsConnectorParams,\n  StatsRenderState,\n  StatsWidgetDescription,\n} from '../../connectors/stats/connectStats';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'stats' });\nconst suit = component('Stats');\n\ntype TextTemplateProps = {\n  hasManyResults: boolean;\n  hasNoResults: boolean;\n  hasOneResult: boolean;\n  hasNoSortedResults: boolean;\n  hasOneSortedResults: boolean;\n  hasManySortedResults: boolean;\n};\n\nexport type StatsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the text span element.\n   */\n  text: string | string[];\n}>;\n\nexport type StatsTemplates = Partial<{\n  /**\n   * Text template, provided with `hasManyResults`, `hasNoResults`, `hasOneResult`, `hasNoSortedResults`, `hasOneSortedResults`, `hasManySortedResults`, `hitsPerPage`, `nbHits`, `nbSortedHits`, `nbPages`, `areHitsSorted`, `page`, `processingTimeMS`, `query`.\n   */\n  text: Template<TextTemplateProps & StatsRenderState>;\n}>;\n\nexport type StatsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: StatsTemplates;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: StatsCSSClasses;\n};\n\nexport type StatsWidget = WidgetFactory<\n  StatsWidgetDescription & { $$widgetType: 'ais.stats' },\n  StatsConnectorParams,\n  StatsWidgetParams\n>;\n\nexport const defaultTemplates: StatsComponentTemplates = {\n  text(props) {\n    return `${\n      props.areHitsSorted\n        ? getSortedResultsSentence(props)\n        : getResultsSentence(props)\n    } found in ${props.processingTimeMS}ms`;\n  },\n};\n\nfunction getSortedResultsSentence({\n  nbHits,\n  hasNoSortedResults,\n  hasOneSortedResults,\n  hasManySortedResults,\n  nbSortedHits,\n}: TextTemplateProps & StatsRenderState) {\n  const suffix = `sorted out of ${formatNumber(nbHits)}`;\n\n  if (hasNoSortedResults) {\n    return `No relevant results ${suffix}`;\n  }\n\n  if (hasOneSortedResults) {\n    return `1 relevant result ${suffix}`;\n  }\n\n  if (hasManySortedResults) {\n    return `${formatNumber(nbSortedHits || 0)} relevant results ${suffix}`;\n  }\n\n  return '';\n}\n\nfunction getResultsSentence({\n  nbHits,\n  hasNoResults,\n  hasOneResult,\n  hasManyResults,\n}: TextTemplateProps & StatsRenderState) {\n  if (hasNoResults) {\n    return 'No results';\n  }\n\n  if (hasOneResult) {\n    return '1 result';\n  }\n\n  if (hasManyResults) {\n    return `${formatNumber(nbHits)} results`;\n  }\n\n  return '';\n}\n\nconst renderer =\n  ({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    renderState: {\n      templateProps?: PreparedTemplateProps<StatsComponentTemplates>;\n    };\n    cssClasses: StatsComponentCSSClasses;\n    containerNode: HTMLElement;\n    templates: StatsTemplates;\n  }): Renderer<StatsRenderState, Partial<StatsWidgetParams>> =>\n  (\n    {\n      hitsPerPage,\n      nbHits,\n      nbSortedHits,\n      areHitsSorted,\n      nbPages,\n      page,\n      processingTimeMS,\n      query,\n      instantSearchInstance,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <Stats\n        cssClasses={cssClasses}\n        hitsPerPage={hitsPerPage}\n        nbHits={nbHits}\n        nbSortedHits={nbSortedHits}\n        areHitsSorted={areHitsSorted}\n        nbPages={nbPages}\n        page={page}\n        processingTimeMS={processingTimeMS}\n        query={query}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The `stats` widget is used to display useful insights about the current results.\n *\n * By default, it will display the **number of hits** and the time taken to compute the\n * results inside the engine.\n */\nconst stats: StatsWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses: StatsComponentCSSClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectStats(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.stats',\n  };\n};\n\nexport default stats;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type {\n  ToggleRefinementRenderState,\n  ToggleRefinementValue,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  ToggleRefinementTemplates,\n  ToggleRefinementCSSClasses,\n} from '../../widgets/toggle-refinement/toggle-refinement';\n\nexport type ToggleRefinementComponentCSSClasses =\n  ComponentCSSClasses<ToggleRefinementCSSClasses>;\n\nexport type ToggleRefinementComponentTemplates =\n  Required<ToggleRefinementTemplates>;\n\nexport type ToggleRefinementProps = {\n  currentRefinement: ToggleRefinementValue;\n  refine: ToggleRefinementRenderState['refine'];\n  cssClasses: ToggleRefinementComponentCSSClasses;\n  templateProps: PreparedTemplateProps<ToggleRefinementComponentTemplates>;\n};\n\nconst ToggleRefinement = ({\n  currentRefinement,\n  refine,\n  cssClasses,\n  templateProps,\n}: ToggleRefinementProps) => (\n  <div className={cssClasses.root}>\n    <label className={cssClasses.label}>\n      <input\n        className={cssClasses.checkbox}\n        type=\"checkbox\"\n        checked={currentRefinement.isRefined}\n        onChange={(event) =>\n          refine({ isRefined: !(event.target as HTMLInputElement).checked })\n        }\n      />\n\n      <Template\n        {...templateProps}\n        rootTagName=\"span\"\n        rootProps={{ className: cssClasses.labelText }}\n        templateKey=\"labelText\"\n        data={currentRefinement}\n      />\n    </label>\n  </div>\n);\n\nexport default ToggleRefinement;\n","import type { ToggleRefinementComponentTemplates } from '../../components/ToggleRefinement/ToggleRefinement';\n\nconst defaultTemplates: ToggleRefinementComponentTemplates = {\n  labelText({ name }) {\n    return name;\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport ToggleRefinement from '../../components/ToggleRefinement/ToggleRefinement';\nimport connectToggleRefinement from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  ToggleRefinementComponentCSSClasses,\n  ToggleRefinementComponentTemplates,\n} from '../../components/ToggleRefinement/ToggleRefinement';\nimport type {\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementRenderState,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { RendererOptions, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n});\nconst suit = component('ToggleRefinement');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ToggleRefinementComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<ToggleRefinementComponentTemplates>;\n    };\n    templates: ToggleRefinementTemplates;\n  }) =>\n  (\n    {\n      value,\n      refine,\n      instantSearchInstance,\n    }: ToggleRefinementRenderState &\n      RendererOptions<ToggleRefinementConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <ToggleRefinement\n        cssClasses={cssClasses}\n        currentRefinement={value}\n        templateProps={renderState.templateProps!}\n        refine={refine}\n      />,\n      containerNode\n    );\n  };\n\nexport type ToggleRefinementCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the label wrapping element.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to the checkbox.\n   */\n  checkbox: string | string[];\n  /**\n   * CSS class to add to the label text.\n   */\n  labelText: string | string[];\n}>;\n\nexport type ToggleRefinementTemplates = Partial<{\n  /**\n   * the text that describes the toggle action\n   */\n  labelText: Template<ToggleRefinementRenderState['value']>;\n}>;\n\nexport type ToggleRefinementWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ToggleRefinementTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ToggleRefinementCSSClasses;\n};\n\nexport type ToggleRefinementWidget = WidgetFactory<\n  ToggleRefinementWidgetDescription & {\n    $$widgetType: 'ais.toggleRefinement';\n  },\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetParams\n>;\n\n/**\n * The toggleRefinement widget lets the user either:\n *  - switch between two values for a single facetted attribute (free_shipping / not_free_shipping)\n *  - toggleRefinement a faceted value on and off (only 'canon' for brands)\n *\n * This widget is particularly useful if you have a boolean value in the records.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n */\nconst toggleRefinement: ToggleRefinementWidget = function toggleRefinement(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    on = true,\n    off,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectToggleRefinement(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, on, off }),\n    $$widgetType: 'ais.toggleRefinement',\n  };\n};\n\nexport default toggleRefinement;\n","/** @jsx h */\n\nimport { createTrendingItemsComponent } from 'instantsearch-ui-components';\nimport { Fragment, h, render } from 'preact';\n\nimport TemplateComponent from '../../components/Template/Template';\nimport connectTrendingItems from '../../connectors/trending-items/connectTrendingItems';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  TrendingItemsWidgetDescription,\n  TrendingItemsConnectorParams,\n  TrendingItemsRenderState,\n} from '../../connectors/trending-items/connectTrendingItems';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  Template,\n  WidgetFactory,\n  Hit,\n  Renderer,\n  BaseHit,\n} from '../../types';\nimport type { RecommendResultItem } from 'algoliasearch-helper';\nimport type {\n  RecommendClassNames,\n  TrendingItemsProps as TrendingItemsUiProps,\n} from 'instantsearch-ui-components';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'trending-items',\n});\n\nconst TrendingItems = createTrendingItemsComponent({\n  createElement: h,\n  Fragment,\n});\n\ntype CreateRendererProps<THit extends NonNullable<object> = BaseHit> = {\n  containerNode: HTMLElement;\n  cssClasses: TrendingItemsCSSClasses;\n  renderState: {\n    templateProps?: PreparedTemplateProps<TrendingItemsTemplates<THit>>;\n  };\n  templates: TrendingItemsTemplates<THit>;\n};\n\nfunction createRenderer<THit extends NonNullable<object> = BaseHit>({\n  renderState,\n  cssClasses,\n  containerNode,\n  templates,\n}: CreateRendererProps<THit>): Renderer<\n  TrendingItemsRenderState,\n  Partial<TrendingItemsWidgetParams>\n> {\n  return function renderer(\n    { items, results, instantSearchInstance },\n    isFirstRendering\n  ) {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates: {} as unknown as Required<\n          TrendingItemsTemplates<THit>\n        >,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    const headerComponent = (\n      templates.header\n        ? (data) => (\n            <TemplateComponent\n              {...renderState.templateProps}\n              templateKey=\"header\"\n              rootTagName=\"fragment\"\n              data={{\n                cssClasses: data.classNames,\n                items: data.items,\n              }}\n            />\n          )\n        : undefined\n    ) as TrendingItemsUiProps<Hit>['headerComponent'];\n\n    const itemComponent = (\n      templates.item\n        ? ({ item }) => {\n            return (\n              <TemplateComponent\n                {...renderState.templateProps}\n                templateKey=\"item\"\n                rootTagName=\"fragment\"\n                data={item}\n              />\n            );\n          }\n        : undefined\n    ) as TrendingItemsUiProps<Hit>['itemComponent'];\n\n    const emptyComponent = (\n      templates.empty\n        ? () => (\n            <TemplateComponent\n              {...renderState.templateProps}\n              templateKey=\"empty\"\n              rootTagName=\"fragment\"\n              data={results}\n            />\n          )\n        : undefined\n    ) as TrendingItemsUiProps<Hit>['emptyComponent'];\n\n    render(\n      <TrendingItems\n        items={items}\n        sendEvent={() => {}}\n        classNames={cssClasses}\n        headerComponent={headerComponent}\n        itemComponent={itemComponent}\n        emptyComponent={emptyComponent}\n        status={instantSearchInstance.status}\n      />,\n      containerNode\n    );\n  };\n}\n\nexport type TrendingItemsCSSClasses = Partial<RecommendClassNames>;\n\nexport type TrendingItemsTemplates<THit extends NonNullable<object> = BaseHit> =\n  Partial<{\n    /**\n     * Template to use when there are no results.\n     */\n    empty: Template<RecommendResultItem<Hit<THit>>>;\n\n    /**\n     * Template to use for the header of the widget.\n     */\n    header: Template<\n      Pick<\n        Parameters<\n          NonNullable<TrendingItemsUiProps<Hit<THit>>['headerComponent']>\n        >[0],\n        'items'\n      > & { cssClasses: RecommendClassNames }\n    >;\n\n    /**\n     * Template to use for each result. This template will receive an object containing a single record.\n     */\n    item: Template<Hit<THit>>;\n  }>;\n\ntype TrendingItemsWidgetParams<THit extends NonNullable<object> = BaseHit> = {\n  /**\n   * CSS selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to customize the widget.\n   */\n  templates?: TrendingItemsTemplates<THit>;\n\n  /**\n   * CSS classes to add to the widget elements.\n   */\n  cssClasses?: TrendingItemsCSSClasses;\n};\n\nexport type TrendingItemsWidget = WidgetFactory<\n  TrendingItemsWidgetDescription & {\n    $$widgetType: 'ais.trendingItems';\n  },\n  TrendingItemsConnectorParams,\n  TrendingItemsWidgetParams\n>;\n\nexport default (function trendingItems<\n  THit extends NonNullable<object> = BaseHit\n>(\n  widgetParams: TrendingItemsWidgetParams<THit> &\n    TrendingItemsConnectorParams<THit>\n) {\n  const {\n    container,\n    facetName,\n    facetValue,\n    limit,\n    queryParameters,\n    fallbackParameters,\n    threshold,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const specializedRenderer = createRenderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectTrendingItems(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  const facetParameters =\n    facetName && facetValue ? { facetName, facetValue } : {};\n\n  return {\n    ...makeWidget({\n      ...facetParameters,\n      limit,\n      queryParameters,\n      fallbackParameters,\n      threshold,\n      escapeHTML,\n      transformItems,\n    }),\n    $$widgetType: 'ais.trendingItems',\n  };\n} satisfies TrendingItemsWidget);\n","/** @jsx h */\nimport { Fragment, h } from 'preact';\n\nimport type { VoiceSearchComponentTemplates } from '../../components/VoiceSearch/VoiceSearch';\n\ntype ButtonInnerElementProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n};\n\nconst ButtonInnerElement = ({\n  status,\n  errorCode,\n  isListening,\n}: ButtonInnerElementProps) => {\n  if (status === 'error' && errorCode === 'not-allowed') {\n    return (\n      <Fragment>\n        <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\" />\n        <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\" />\n        <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\" />\n        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\" />\n        <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\" />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <path\n        d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n        fill={isListening ? 'currentColor' : 'none'}\n      />\n      <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\" />\n      <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\" />\n      <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\" />\n    </Fragment>\n  );\n};\n\nconst defaultTemplates: VoiceSearchComponentTemplates = {\n  buttonText({ status, errorCode, isListening }) {\n    return (\n      <svg\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        /* eslint-disable react/no-unknown-property */\n        // Preact supports kebab case attributes, and using camel case would\n        // require using `preact/compat`.\n        // @TODO: reconsider using the `react` ESLint preset\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        /* eslint-enable react/no-unknown-property */\n      >\n        <ButtonInnerElement\n          status={status}\n          errorCode={errorCode}\n          isListening={isListening}\n        />\n      </svg>\n    );\n  },\n  status({ transcript }) {\n    return <p>{transcript}</p>;\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { VoiceListeningState } from '../../lib/voiceSearchHelper/types';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  VoiceSearchCSSClasses,\n  VoiceSearchTemplates,\n} from '../../widgets/voice-search/voice-search';\n\nexport type VoiceSearchComponentCSSClasses =\n  ComponentCSSClasses<VoiceSearchCSSClasses>;\n\nexport type VoiceSearchComponentTemplates = Required<VoiceSearchTemplates>;\n\nexport type VoiceSearchProps = {\n  cssClasses: VoiceSearchComponentCSSClasses;\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n  templates: VoiceSearchComponentTemplates;\n};\n\nconst VoiceSearch = ({\n  cssClasses,\n  isBrowserSupported,\n  isListening,\n  toggleListening,\n  voiceListeningState,\n  templates,\n}: VoiceSearchProps) => {\n  const handleClick = (event: MouseEvent): void => {\n    if (event.currentTarget instanceof HTMLElement) {\n      event.currentTarget.blur();\n    }\n    toggleListening();\n  };\n\n  const { status, transcript, isSpeechFinal, errorCode } = voiceListeningState;\n  return (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"buttonText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cssClasses.button,\n          type: 'button',\n          title: `Search by voice${\n            isBrowserSupported ? '' : ' (not supported on this browser)'\n          }`,\n          onClick: handleClick,\n          disabled: !isBrowserSupported,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n      <Template\n        templateKey=\"status\"\n        rootProps={{\n          className: cssClasses.status,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n    </div>\n  );\n};\n\nexport default VoiceSearch;\n","/** @jsx h */\n\nimport { cx } from 'instantsearch-ui-components';\nimport { h, render } from 'preact';\n\nimport VoiceSearchComponent from '../../components/VoiceSearch/VoiceSearch';\nimport connectVoiceSearch from '../../connectors/voice-search/connectVoiceSearch';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  VoiceSearchComponentCSSClasses,\n  VoiceSearchComponentTemplates,\n} from '../../components/VoiceSearch/VoiceSearch';\nimport type {\n  VoiceSearchConnectorParams,\n  VoiceSearchRenderState,\n  VoiceSearchWidgetDescription,\n} from '../../connectors/voice-search/connectVoiceSearch';\nimport type { CreateVoiceSearchHelper } from '../../lib/voiceSearchHelper/types';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'voice-search' });\nconst suit = component('VoiceSearch');\n\nexport type VoiceSearchCSSClasses = Partial<{\n  root: string | string[];\n  button: string | string[];\n  status: string | string[];\n}>;\n\ntype VoiceSearchTemplateProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n  transcript: string;\n  isSpeechFinal: boolean;\n  isBrowserSupported: boolean;\n};\n\nexport type VoiceSearchTemplates = Partial<{\n  buttonText: Template<VoiceSearchTemplateProps>;\n  status: Template<VoiceSearchTemplateProps>;\n}>;\n\nexport type VoiceSearchWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: VoiceSearchCSSClasses;\n  templates?: VoiceSearchTemplates;\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchWidget = WidgetFactory<\n  VoiceSearchWidgetDescription & { $$type: 'ais.voiceSearch' },\n  VoiceSearchConnectorParams,\n  VoiceSearchWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: VoiceSearchComponentCSSClasses;\n    templates: VoiceSearchComponentTemplates;\n  }): Renderer<VoiceSearchRenderState, Partial<VoiceSearchWidgetParams>> =>\n  ({\n    isBrowserSupported,\n    isListening,\n    toggleListening,\n    voiceListeningState,\n  }) => {\n    render(\n      <VoiceSearchComponent\n        cssClasses={cssClasses}\n        templates={templates}\n        isBrowserSupported={isBrowserSupported}\n        isListening={isListening}\n        toggleListening={toggleListening}\n        voiceListeningState={voiceListeningState}\n      />,\n      containerNode\n    );\n  };\n\nconst voiceSearch: VoiceSearchWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n    searchAsYouSpeak = false,\n    language,\n    additionalQueryParameters,\n    createVoiceSearchHelper,\n  }: VoiceSearchWidgetParams = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    status: cx(suit({ descendantName: 'status' }), userCssClasses.status),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n  });\n\n  const makeWidget = connectVoiceSearch(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      container: containerNode,\n      cssClasses,\n      templates,\n      searchAsYouSpeak,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper,\n    }),\n    $$widgetType: 'ais.voiceSearch',\n  };\n};\n\nexport default voiceSearch;\n","/** @jsx h */\n\nimport { createFrequentlyBoughtTogetherComponent } from 'instantsearch-ui-components';\nimport { Fragment, h, render } from 'preact';\n\nimport TemplateComponent from '../../components/Template/Template';\nimport connectFrequentlyBoughtTogether from '../../connectors/frequently-bought-together/connectFrequentlyBoughtTogether';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  FrequentlyBoughtTogetherWidgetDescription,\n  FrequentlyBoughtTogetherConnectorParams,\n  FrequentlyBoughtTogetherRenderState,\n} from '../../connectors/frequently-bought-together/connectFrequentlyBoughtTogether';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  Template,\n  WidgetFactory,\n  Hit,\n  Renderer,\n  BaseHit,\n} from '../../types';\nimport type { RecommendResultItem } from 'algoliasearch-helper';\nimport type {\n  RecommendClassNames,\n  FrequentlyBoughtTogetherProps as FrequentlyBoughtTogetherUiProps,\n} from 'instantsearch-ui-components';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'frequently-bought-together',\n});\n\nconst FrequentlyBoughtTogether = createFrequentlyBoughtTogetherComponent({\n  createElement: h,\n  Fragment,\n});\n\nconst renderer =\n  <THit extends NonNullable<object> = BaseHit>({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: FrequentlyBoughtTogetherCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<\n        Required<FrequentlyBoughtTogetherTemplates<THit>>\n      >;\n    };\n    templates: FrequentlyBoughtTogetherTemplates<THit>;\n  }): Renderer<\n    FrequentlyBoughtTogetherRenderState,\n    Partial<FrequentlyBoughtTogetherWidgetParams>\n  > =>\n  ({ items, results, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates: {} as unknown as Required<\n          FrequentlyBoughtTogetherTemplates<THit>\n        >,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const headerComponent = (\n      templates.header\n        ? (data) => (\n            <TemplateComponent\n              {...renderState.templateProps}\n              templateKey=\"header\"\n              rootTagName=\"fragment\"\n              data={{ cssClasses: data.classNames, items: data.items }}\n            />\n          )\n        : undefined\n    ) as FrequentlyBoughtTogetherUiProps<Hit>['headerComponent'];\n\n    const itemComponent = (\n      templates.item\n        ? ({ item }) => {\n            return (\n              <TemplateComponent\n                {...renderState.templateProps}\n                templateKey=\"item\"\n                rootTagName=\"fragment\"\n                data={item}\n              />\n            );\n          }\n        : undefined\n    ) as FrequentlyBoughtTogetherUiProps<Hit>['itemComponent'];\n\n    const emptyComponent = (\n      templates.empty\n        ? () => (\n            <TemplateComponent\n              {...renderState.templateProps}\n              templateKey=\"empty\"\n              rootTagName=\"fragment\"\n              data={results}\n            />\n          )\n        : undefined\n    ) as FrequentlyBoughtTogetherUiProps<Hit>['emptyComponent'];\n\n    render(\n      <FrequentlyBoughtTogether\n        items={items}\n        headerComponent={headerComponent}\n        itemComponent={itemComponent}\n        sendEvent={() => {}}\n        classNames={cssClasses}\n        emptyComponent={emptyComponent}\n        status={instantSearchInstance.status}\n      />,\n      containerNode\n    );\n  };\n\nexport type FrequentlyBoughtTogetherCSSClasses = Partial<RecommendClassNames>;\n\nexport type FrequentlyBoughtTogetherTemplates<\n  THit extends NonNullable<object> = BaseHit\n> = Partial<{\n  /**\n   * Template to use when there are no results.\n   */\n  empty: Template<RecommendResultItem<Hit<THit>>>;\n\n  /**\n   * Template to use for the header of the widget.\n   */\n  header: Template<\n    Pick<\n      Parameters<\n        NonNullable<\n          FrequentlyBoughtTogetherUiProps<Hit<THit>>['headerComponent']\n        >\n      >[0],\n      'items'\n    > & { cssClasses: RecommendClassNames }\n  >;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   */\n  item: Template<Hit<THit>>;\n}>;\n\ntype FrequentlyBoughtTogetherWidgetParams<\n  THit extends NonNullable<object> = BaseHit\n> = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: FrequentlyBoughtTogetherTemplates<THit>;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: FrequentlyBoughtTogetherCSSClasses;\n};\n\nexport type FrequentlyBoughtTogetherWidget = WidgetFactory<\n  FrequentlyBoughtTogetherWidgetDescription & {\n    $$widgetType: 'ais.frequentlyBoughtTogether';\n  },\n  FrequentlyBoughtTogetherConnectorParams,\n  FrequentlyBoughtTogetherWidgetParams\n>;\n\nexport default (function frequentlyBoughtTogether<\n  THit extends NonNullable<object> = BaseHit\n>(\n  widgetParams: FrequentlyBoughtTogetherWidgetParams<THit> &\n    FrequentlyBoughtTogetherConnectorParams<THit>\n) {\n  const {\n    container,\n    objectIDs,\n    limit,\n    queryParameters,\n    threshold,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectFrequentlyBoughtTogether(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n  return {\n    ...makeWidget({\n      objectIDs,\n      limit,\n      queryParameters,\n      threshold,\n      escapeHTML,\n      transformItems,\n    }),\n    $$widgetType: 'ais.frequentlyBoughtTogether',\n  };\n} satisfies FrequentlyBoughtTogetherWidget);\n","/** @jsx h */\n\nimport { createLookingSimilarComponent } from 'instantsearch-ui-components';\nimport { Fragment, h, render } from 'preact';\n\nimport TemplateComponent from '../../components/Template/Template';\nimport connectLookingSimilar from '../../connectors/looking-similar/connectLookingSimilar';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  LookingSimilarWidgetDescription,\n  LookingSimilarConnectorParams,\n  LookingSimilarRenderState,\n} from '../../connectors/looking-similar/connectLookingSimilar';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  Template,\n  WidgetFactory,\n  Hit,\n  Renderer,\n  BaseHit,\n} from '../../types';\nimport type { RecommendResultItem } from 'algoliasearch-helper';\nimport type {\n  RecommendClassNames,\n  LookingSimilarProps as LookingSimilarUiProps,\n} from 'instantsearch-ui-components';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'looking-similar',\n});\n\nconst LookingSimilar = createLookingSimilarComponent({\n  createElement: h,\n  Fragment,\n});\n\nfunction createRenderer<THit extends NonNullable<object> = BaseHit>({\n  renderState,\n  cssClasses,\n  containerNode,\n  templates,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: LookingSimilarCSSClasses;\n  renderState: {\n    templateProps?: PreparedTemplateProps<\n      Required<LookingSimilarTemplates<THit>>\n    >;\n  };\n  templates: LookingSimilarTemplates<THit>;\n}): Renderer<LookingSimilarRenderState, Partial<LookingSimilarWidgetParams>> {\n  return ({ items, results, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates: {} as unknown as Required<\n          LookingSimilarTemplates<THit>\n        >,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const headerComponent = (\n      templates.header\n        ? (data) => (\n            <TemplateComponent\n              {...renderState.templateProps}\n              templateKey=\"header\"\n              rootTagName=\"fragment\"\n              data={{ cssClasses: data.classNames, items: data.items }}\n            />\n          )\n        : undefined\n    ) as LookingSimilarUiProps<Hit>['headerComponent'];\n\n    const itemComponent = (\n      templates.item\n        ? ({ item }) => {\n            return (\n              <TemplateComponent\n                {...renderState.templateProps}\n                templateKey=\"item\"\n                rootTagName=\"fragment\"\n                data={item}\n              />\n            );\n          }\n        : undefined\n    ) as LookingSimilarUiProps<Hit>['itemComponent'];\n\n    const emptyComponent = (\n      templates.empty\n        ? () => (\n            <TemplateComponent\n              {...renderState.templateProps}\n              templateKey=\"empty\"\n              rootTagName=\"fragment\"\n              data={results}\n            />\n          )\n        : undefined\n    ) as LookingSimilarUiProps<Hit>['emptyComponent'];\n\n    render(\n      <LookingSimilar\n        items={items}\n        headerComponent={headerComponent}\n        itemComponent={itemComponent}\n        sendEvent={() => {}}\n        classNames={cssClasses}\n        emptyComponent={emptyComponent}\n        status={instantSearchInstance.status}\n      />,\n      containerNode\n    );\n  };\n}\n\nexport type LookingSimilarCSSClasses = Partial<RecommendClassNames>;\n\nexport type LookingSimilarTemplates<\n  THit extends NonNullable<object> = BaseHit\n> = Partial<{\n  /**\n   * Template to use when there are no results.\n   */\n  empty: Template<RecommendResultItem<Hit<THit>>>;\n\n  /**\n   * Template to use for the header of the widget.\n   */\n  header: Template<\n    Pick<\n      Parameters<\n        NonNullable<LookingSimilarUiProps<Hit<THit>>['headerComponent']>\n      >[0],\n      'items'\n    > & { cssClasses: RecommendClassNames }\n  >;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   */\n  item: Template<Hit<THit>>;\n}>;\n\ntype LookingSimilarWidgetParams<THit extends NonNullable<object> = BaseHit> = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: LookingSimilarTemplates<THit>;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: LookingSimilarCSSClasses;\n};\n\nexport type LookingSimilarWidget = WidgetFactory<\n  LookingSimilarWidgetDescription & {\n    $$widgetType: 'ais.lookingSimilar';\n  },\n  LookingSimilarConnectorParams,\n  LookingSimilarWidgetParams\n>;\n\nexport default (function lookingSimilar<\n  THit extends NonNullable<object> = BaseHit\n>(\n  widgetParams: LookingSimilarWidgetParams<THit> &\n    LookingSimilarConnectorParams<THit>\n) {\n  const {\n    container,\n    objectIDs,\n    limit,\n    queryParameters,\n    fallbackParameters,\n    threshold,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const specializedRenderer = createRenderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectLookingSimilar(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n  return {\n    ...makeWidget({\n      objectIDs,\n      limit,\n      queryParameters,\n      fallbackParameters,\n      threshold,\n      escapeHTML,\n      transformItems,\n    }),\n    $$widgetType: 'ais.lookingSimilar',\n  };\n} satisfies LookingSimilarWidget);\n","import { deprecate } from '../lib/utils';\n\nimport answers from './answers/answers';\nimport dynamicWidgets from './dynamic-widgets/dynamic-widgets';\n\n/** @deprecated answers is no longer supported */\nexport const EXPERIMENTAL_answers = deprecate(\n  answers,\n  'answers is no longer supported'\n);\n\n/** @deprecated use dynamicWidgets */\nexport const EXPERIMENTAL_dynamicWidgets = deprecate(\n  dynamicWidgets,\n  'use dynamicWidgets'\n);\nexport { dynamicWidgets };\n\nexport { default as analytics } from './analytics/analytics';\nexport { default as breadcrumb } from './breadcrumb/breadcrumb';\nexport { default as clearRefinements } from './clear-refinements/clear-refinements';\nexport { default as configure } from './configure/configure';\nexport { default as currentRefinements } from './current-refinements/current-refinements';\nexport { default as EXPERIMENTAL_configureRelatedItems } from './configure-related-items/configure-related-items';\nexport { default as geoSearch } from './geo-search/geo-search';\nexport { default as hierarchicalMenu } from './hierarchical-menu/hierarchical-menu';\nexport { default as hits } from './hits/hits';\nexport { default as hitsPerPage } from './hits-per-page/hits-per-page';\nexport { default as index } from './index/index';\nexport type { IndexWidget } from './index/index';\nexport { default as infiniteHits } from './infinite-hits/infinite-hits';\nexport { default as menu } from './menu/menu';\nexport { default as menuSelect } from './menu-select/menu-select';\nexport { default as numericMenu } from './numeric-menu/numeric-menu';\nexport { default as pagination } from './pagination/pagination';\nexport { default as panel } from './panel/panel';\nexport { default as places } from './places/places';\nexport { default as poweredBy } from './powered-by/powered-by';\nexport { default as queryRuleContext } from './query-rule-context/query-rule-context';\nexport { default as queryRuleCustomData } from './query-rule-custom-data/query-rule-custom-data';\nexport { default as relatedProducts } from './related-products/related-products';\nexport { default as rangeInput } from './range-input/range-input';\nexport { default as rangeSlider } from './range-slider/range-slider';\nexport { default as ratingMenu } from './rating-menu/rating-menu';\nexport { default as refinementList } from './refinement-list/refinement-list';\nexport { default as relevantSort } from './relevant-sort/relevant-sort';\nexport { default as searchBox } from './search-box/search-box';\nexport { default as sortBy } from './sort-by/sort-by';\nexport { default as stats } from './stats/stats';\nexport { default as toggleRefinement } from './toggle-refinement/toggle-refinement';\nexport { default as trendingItems } from './trending-items/trending-items';\nexport { default as voiceSearch } from './voice-search/voice-search';\nexport { default as frequentlyBoughtTogether } from './frequently-bought-together/frequently-bought-together';\nexport { default as lookingSimilar } from './looking-similar/looking-similar';\n","import connectConfigure from '../../connectors/configure/connectConfigure';\nimport { noop } from '../../lib/utils';\n\nimport type {\n  ConfigureConnectorParams,\n  ConfigureWidgetDescription,\n} from '../../connectors/configure/connectConfigure';\nimport type { Widget } from '../../types';\n\n/**\n * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n * to enable when the widget mounts.\n */\nexport type ConfigureWidgetParams =\n  ConfigureConnectorParams['searchParameters'];\n\nexport type ConfigureWidget = (widgetParams: ConfigureWidgetParams) => Widget<\n  ConfigureWidgetDescription & {\n    $$widgetType: 'ais.configure';\n    widgetParams: ConfigureConnectorParams;\n  }\n>;\n\nconst configure: ConfigureWidget = function configure(widgetParams) {\n  // This is a renderless widget that falls back to the connector's\n  // noop render and unmount functions.\n  const makeWidget = connectConfigure(noop);\n\n  return {\n    ...makeWidget({ searchParameters: widgetParams }),\n    $$widgetType: 'ais.configure',\n  };\n};\n\nexport default configure;\n","import connectConfigureRelatedItems from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport { noop } from '../../lib/utils';\n\nimport type {\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetDescription,\n} from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport type { WidgetFactory } from '../../types';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\n\nexport type ConfigureRelatedItemsWidget = WidgetFactory<\n  ConfigureRelatedItemsWidgetDescription & {\n    $$widgetType: 'ais.configureRelatedItems';\n  },\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetParams\n>;\n\nexport type ConfigureRelatedItemsWidgetParams = PlainSearchParameters;\n\nconst configureRelatedItems: ConfigureRelatedItemsWidget =\n  function configureRelatedItems(widgetParams) {\n    const makeWidget = connectConfigureRelatedItems(noop);\n\n    return {\n      ...makeWidget(widgetParams),\n      $$widgetType: 'ais.configureRelatedItems',\n    };\n  };\n\nexport default configureRelatedItems;\n","/* global google EventListener */\nimport { render } from 'preact';\n\nimport type { renderTemplate } from '../../lib/templating';\n\nexport type HTMLMarkerArguments = {\n  __id: string;\n  position: google.maps.LatLngLiteral;\n  map: google.maps.Map;\n  template: ReturnType<typeof renderTemplate>;\n  title?: string;\n  className: string;\n  anchor?: { x: number; y: number };\n};\n\ninterface Marker {\n  __id: string;\n  anchor: { x: number; y: number };\n  offset?: { x: number; y: number };\n  listeners: { [key: string]: EventListener };\n  latLng: google.maps.LatLng;\n  element: HTMLDivElement;\n  getPosition: () => google.maps.LatLng;\n}\n\nconst createHTMLMarker = (\n  googleReference: typeof google\n): new (args: HTMLMarkerArguments) => google.maps.OverlayView & Marker => {\n  class HTMLMarker extends googleReference.maps.OverlayView {\n    public __id: string;\n    public anchor: {\n      x: number;\n      y: number;\n    };\n    public offset?: {\n      x: number;\n      y: number;\n    };\n    public listeners: { [key: string]: EventListener };\n    public latLng: google.maps.LatLng;\n    public element: HTMLDivElement;\n\n    public constructor({\n      __id,\n      position,\n      map,\n      template,\n      className,\n      anchor = {\n        x: 0,\n        y: 0,\n      },\n    }: HTMLMarkerArguments) {\n      super();\n\n      this.__id = __id;\n      this.anchor = anchor;\n      this.listeners = {};\n      this.latLng = new googleReference.maps.LatLng(position);\n\n      this.element = document.createElement('div');\n      this.element.className = className;\n      this.element.style.position = 'absolute';\n\n      if (typeof template === 'object') {\n        render(template, this.element);\n      } else {\n        this.element.innerHTML = template;\n      }\n\n      this.setMap(map);\n    }\n\n    public onAdd() {\n      // Append the element to the map\n      this.getPanes()!.overlayMouseTarget.appendChild(this.element);\n\n      // Compute the offset onAdd & cache it because afterwards\n      // it won't retrieve the correct values, we also avoid\n      // to read the values on every draw\n      const bbBox = this.element.getBoundingClientRect();\n\n      this.offset = {\n        x: this.anchor.x + bbBox.width / 2,\n        y: this.anchor.y + bbBox.height,\n      };\n\n      // Force the width of the element will avoid the\n      // content to collapse when we move the map\n      this.element.style.width = `${bbBox.width}px`;\n    }\n\n    public draw() {\n      const position = this.getProjection().fromLatLngToDivPixel(this.latLng)!;\n\n      this.element.style.left = `${Math.round(position.x - this.offset!.x)}px`;\n      this.element.style.top = `${Math.round(position.y - this.offset!.y)}px`;\n\n      // Markers to the south are in front of markers to the north\n      // This is the default behaviour of Google Maps\n      this.element.style.zIndex = String(parseInt(this.element.style.top, 10));\n    }\n\n    public onRemove() {\n      if (this.element) {\n        this.element.parentNode!.removeChild(this.element);\n\n        Object.keys(this.listeners).forEach((eventName) => {\n          this.element.removeEventListener(\n            eventName,\n            this.listeners[eventName]\n          );\n        });\n\n        // after onRemove the class is no longer used, thus it can be deleted\n        // @ts-expect-error\n        delete this.element;\n        // @ts-expect-error\n        delete this.listeners;\n      }\n    }\n\n    public addListener(eventName: string, listener: EventListener) {\n      this.listeners[eventName] = listener;\n\n      const element = this.element;\n\n      element.addEventListener(eventName, listener);\n\n      return {\n        remove() {\n          return element.removeEventListener(eventName, listener);\n        },\n      };\n    }\n\n    public getPosition() {\n      return this.latLng;\n    }\n  }\n\n  return HTMLMarker;\n};\n\nexport default createHTMLMarker;\n","import EventEmitter from '@algolia/events';\nimport algoliasearchHelper from 'algoliasearch-helper';\n\nimport { createInsightsMiddleware } from '../middlewares/createInsightsMiddleware';\nimport {\n  createMetadataMiddleware,\n  isMetadataEnabled,\n} from '../middlewares/createMetadataMiddleware';\nimport { createRouterMiddleware } from '../middlewares/createRouterMiddleware';\nimport { index } from '../widgets';\n\nimport createHelpers from './createHelpers';\nimport {\n  createDocumentationMessageGenerator,\n  createDocumentationLink,\n  defer,\n  hydrateRecommendCache,\n  hydrateSearchClient,\n  noop,\n  warning,\n  setIndexHelperState,\n  isIndexWidget,\n} from './utils';\nimport version from './version';\n\nimport type {\n  InsightsEvent,\n  InsightsProps,\n} from '../middlewares/createInsightsMiddleware';\nimport type { RouterProps } from '../middlewares/createRouterMiddleware';\nimport type {\n  InsightsClient as AlgoliaInsightsClient,\n  SearchClient,\n  Widget,\n  IndexWidget,\n  UiState,\n  CreateURL,\n  Middleware,\n  MiddlewareDefinition,\n  RenderState,\n  InitialResults,\n} from '../types';\nimport type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'instantsearch',\n});\n\nfunction defaultCreateURL() {\n  return '#';\n}\n\n// this purposely breaks typescript's type inference to ensure it's not used\n// as it's used for a default parameter for example\n// source: https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-504042546\ntype NoInfer<T> = T extends infer S ? S : never;\n\n/**\n * Global options for an InstantSearch instance.\n */\nexport type InstantSearchOptions<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> = {\n  /**\n   * The name of the main index. If no indexName is provided, you have to manually add an index widget.\n   */\n  indexName?: string;\n\n  /**\n   * The search client to plug to InstantSearch.js\n   *\n   * Usage:\n   * ```javascript\n   * // Using the default Algolia search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: algoliasearch('appId', 'apiKey')\n   * });\n   *\n   * // Using a custom search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: {\n   *     search(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     },\n   *     searchForFacetValues(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     }\n   *   }\n   * });\n   * ```\n   */\n  searchClient: SearchClient;\n\n  /**\n   * The locale used to display numbers. This will be passed\n   * to `Number.prototype.toLocaleString()`\n   */\n  numberLocale?: string;\n\n  /**\n   * A hook that will be called each time a search needs to be done, with the\n   * helper as a parameter. It's your responsibility to call `helper.search()`.\n   * This option allows you to avoid doing searches at page load for example.\n   * @deprecated use onStateChange instead\n   */\n  searchFunction?: (helper: AlgoliaSearchHelper) => void;\n\n  /**\n   * Function called when the state changes.\n   *\n   * Using this function makes the instance controlled. This means that you\n   * become in charge of updating the UI state with the `setUiState` function.\n   */\n  onStateChange?: (params: {\n    uiState: TUiState;\n    setUiState: (\n      uiState: TUiState | ((previousUiState: TUiState) => TUiState)\n    ) => void;\n  }) => void;\n\n  /**\n   * Injects a `uiState` to the `instantsearch` instance. You can use this option\n   * to provide an initial state to a widget. Note that the state is only used\n   * for the first search. To unconditionally pass additional parameters to the\n   * Algolia API, take a look at the `configure` widget.\n   */\n  initialUiState?: NoInfer<TUiState>;\n\n  /**\n   * Time before a search is considered stalled. The default is 200ms\n   */\n  stalledSearchDelay?: number;\n\n  /**\n   * Router configuration used to save the UI State into the URL or any other\n   * client side persistence. Passing `true` will use the default URL options.\n   */\n  routing?: RouterProps<TUiState, TRouteState> | boolean;\n\n  /**\n   * Enables the Insights middleware and loads the Insights library\n   * if not already loaded.\n   *\n   * The Insights middleware sends view and click events automatically, and lets\n   * you set up your own events.\n   *\n   * @default false\n   */\n  insights?: InsightsProps | boolean;\n\n  /**\n   * the instance of search-insights to use for sending insights events inside\n   * widgets like `hits`.\n   *\n   * @deprecated This property will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n   */\n  insightsClient?: AlgoliaInsightsClient;\n  future?: {\n    /**\n     * Changes the way `dispose` is used in InstantSearch lifecycle.\n     *\n     * If `false` (by default), each widget unmounting will remove its state as well, even if there are multiple widgets reading that UI State.\n     *\n     * If `true`, each widget unmounting will only remove its own state if it's the last of its type. This allows for dynamically adding and removing widgets without losing their state.\n     *\n     * @default false\n     */\n    // @MAJOR: Remove legacy behaviour\n    preserveSharedStateOnUnmount?: boolean;\n    /**\n     * Changes the way root levels of hierarchical facets have their count displayed.\n     *\n     * If `false` (by default), the count of the refined root level is updated to match the count of the actively refined parent level.\n     *\n     * If `true`, the count of the root level stays the same as the count of all children levels.\n     *\n     * @default false\n     */\n    // @MAJOR: Remove legacy behaviour here and in algoliasearch-helper\n    persistHierarchicalRootCount?: boolean;\n  };\n};\n\nexport type InstantSearchStatus = 'idle' | 'loading' | 'stalled' | 'error';\n\nexport const INSTANTSEARCH_FUTURE_DEFAULTS: Required<\n  InstantSearchOptions['future']\n> = {\n  preserveSharedStateOnUnmount: false,\n  persistHierarchicalRootCount: false,\n};\n\n/**\n * The actual implementation of the InstantSearch. This is\n * created using the `instantsearch` factory function.\n * It emits the 'render' event every time a search is done\n */\nclass InstantSearch<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> extends EventEmitter {\n  public client: InstantSearchOptions['searchClient'];\n  public indexName: string;\n  public insightsClient: AlgoliaInsightsClient | null;\n  public onStateChange: InstantSearchOptions<TUiState>['onStateChange'] | null =\n    null;\n  public future: NonNullable<InstantSearchOptions<TUiState>['future']>;\n  public helper: AlgoliaSearchHelper | null;\n  public mainHelper: AlgoliaSearchHelper | null;\n  public mainIndex: IndexWidget;\n  public started: boolean;\n  public templatesConfig: Record<string, unknown>;\n  public renderState: RenderState = {};\n  public _stalledSearchDelay: number;\n  public _searchStalledTimer: any;\n  public _initialUiState: TUiState;\n  public _initialResults: InitialResults | null;\n  public _createURL: CreateURL<TUiState>;\n  public _searchFunction?: InstantSearchOptions['searchFunction'];\n  public _mainHelperSearch?: AlgoliaSearchHelper['search'];\n  public _hasSearchWidget: boolean = false;\n  public _hasRecommendWidget: boolean = false;\n  public _insights: InstantSearchOptions['insights'];\n  public middleware: Array<{\n    creator: Middleware<TUiState>;\n    instance: MiddlewareDefinition<TUiState>;\n  }> = [];\n  public sendEventToInsights: (event: InsightsEvent) => void;\n  /**\n   * The status of the search. Can be \"idle\", \"loading\", \"stalled\", or \"error\".\n   */\n  public status: InstantSearchStatus = 'idle';\n  /**\n   * The last returned error from the Search API.\n   * The error gets cleared when the next valid search response is rendered.\n   */\n  public error: Error | undefined = undefined;\n\n  /**\n   * @deprecated use `status === 'stalled'` instead\n   */\n  public get _isSearchStalled(): boolean {\n    warning(\n      false,\n      `\\`InstantSearch._isSearchStalled\\` is deprecated and will be removed in InstantSearch.js 5.0.\n\nUse \\`InstantSearch.status === \"stalled\"\\` instead.`\n    );\n\n    return this.status === 'stalled';\n  }\n\n  public constructor(options: InstantSearchOptions<TUiState, TRouteState>) {\n    super();\n\n    // prevent `render` event listening from causing a warning\n    this.setMaxListeners(100);\n\n    const {\n      indexName = '',\n      numberLocale,\n      initialUiState = {} as TUiState,\n      routing = null,\n      insights = undefined,\n      searchFunction,\n      stalledSearchDelay = 200,\n      searchClient = null,\n      insightsClient = null,\n      onStateChange = null,\n      future = {\n        ...INSTANTSEARCH_FUTURE_DEFAULTS,\n        ...(options.future || {}),\n      },\n    } = options;\n\n    if (searchClient === null) {\n      throw new Error(withUsage('The `searchClient` option is required.'));\n    }\n\n    if (typeof searchClient.search !== 'function') {\n      throw new Error(\n        `The \\`searchClient\\` must implement a \\`search\\` method.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/going-further/backend-search/in-depth/backend-instantsearch/js/`\n      );\n    }\n\n    if (typeof searchClient.addAlgoliaAgent === 'function') {\n      searchClient.addAlgoliaAgent(`instantsearch.js (${version})`);\n    }\n\n    warning(\n      insightsClient === null,\n      `\\`insightsClient\\` property has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n\n    if (insightsClient && typeof insightsClient !== 'function') {\n      throw new Error(\n        withUsage('The `insightsClient` option should be a function.')\n      );\n    }\n\n    warning(\n      !(options as any).searchParameters,\n      `The \\`searchParameters\\` option is deprecated and will not be supported in InstantSearch.js 4.x.\n\nYou can replace it with the \\`configure\\` widget:\n\n\\`\\`\\`\nsearch.addWidgets([\n  configure(${JSON.stringify((options as any).searchParameters, null, 2)})\n]);\n\\`\\`\\`\n\nSee ${createDocumentationLink({\n        name: 'configure',\n      })}`\n    );\n\n    if (__DEV__ && options.future?.preserveSharedStateOnUnmount === undefined) {\n      // eslint-disable-next-line no-console\n      console.info(`Starting from the next major version, InstantSearch will change how widgets state is preserved when they are removed. InstantSearch will keep the state of unmounted widgets to be usable by other widgets with the same attribute.\n\nWe recommend setting \\`future.preserveSharedStateOnUnmount\\` to true to adopt this change today.\nTo stay with the current behaviour and remove this warning, set the option to false.\n\nSee documentation: ${createDocumentationLink({\n        name: 'instantsearch',\n      })}#widget-param-future\n          `);\n    }\n\n    this.client = searchClient;\n    this.future = future;\n    this.insightsClient = insightsClient;\n    this.indexName = indexName;\n    this.helper = null;\n    this.mainHelper = null;\n    this.mainIndex = index({\n      indexName,\n    });\n    this.onStateChange = onStateChange;\n\n    this.started = false;\n    this.templatesConfig = {\n      helpers: createHelpers({ numberLocale }),\n      compileOptions: {},\n    };\n\n    this._stalledSearchDelay = stalledSearchDelay;\n    this._searchStalledTimer = null;\n\n    this._createURL = defaultCreateURL;\n    this._initialUiState = initialUiState as TUiState;\n    this._initialResults = null;\n\n    this._insights = insights;\n\n    if (searchFunction) {\n      warning(\n        false,\n        `The \\`searchFunction\\` option is deprecated. Use \\`onStateChange\\` instead.`\n      );\n      this._searchFunction = searchFunction;\n    }\n\n    this.sendEventToInsights = noop;\n\n    if (routing) {\n      const routerOptions = typeof routing === 'boolean' ? {} : routing;\n      routerOptions.$$internal = true;\n      this.use(createRouterMiddleware(routerOptions));\n    }\n\n    // This is the default Insights middleware,\n    // added when `insights` is set to true by the user.\n    // Any user-provided middleware will be added later and override this one.\n    if (insights) {\n      const insightsOptions = typeof insights === 'boolean' ? {} : insights;\n      insightsOptions.$$internal = true;\n      this.use(createInsightsMiddleware(insightsOptions));\n    }\n\n    if (isMetadataEnabled()) {\n      this.use(createMetadataMiddleware({ $$internal: true }));\n    }\n  }\n\n  /**\n   * Hooks a middleware into the InstantSearch lifecycle.\n   */\n  public use(...middleware: Array<Middleware<TUiState>>): this {\n    const newMiddlewareList = middleware.map((fn) => {\n      const newMiddleware = {\n        $$type: '__unknown__',\n        $$internal: false,\n        subscribe: noop,\n        started: noop,\n        unsubscribe: noop,\n        onStateChange: noop,\n        ...fn({\n          instantSearchInstance: this as unknown as InstantSearch<\n            UiState,\n            UiState\n          >,\n        }),\n      };\n      this.middleware.push({\n        creator: fn,\n        instance: newMiddleware,\n      });\n      return newMiddleware;\n    });\n\n    // If the instance has already started, we directly subscribe the\n    // middleware so they're notified of changes.\n    if (this.started) {\n      newMiddlewareList.forEach((m) => {\n        m.subscribe();\n        m.started();\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes a middleware from the InstantSearch lifecycle.\n   */\n  public unuse(...middlewareToUnuse: Array<Middleware<TUiState>>): this {\n    this.middleware\n      .filter((m) => middlewareToUnuse.includes(m.creator))\n      .forEach((m) => m.instance.unsubscribe());\n\n    this.middleware = this.middleware.filter(\n      (m) => !middlewareToUnuse.includes(m.creator)\n    );\n\n    return this;\n  }\n\n  // @major we shipped with EXPERIMENTAL_use, but have changed that to just `use` now\n  public EXPERIMENTAL_use(...middleware: Middleware[]): this {\n    warning(\n      false,\n      'The middleware API is now considered stable, so we recommend replacing `EXPERIMENTAL_use` with `use` before upgrading to the next major version.'\n    );\n\n    return this.use(...middleware);\n  }\n\n  /**\n   * Adds a widget to the search instance.\n   * A widget can be added either before or after InstantSearch has started.\n   * @param widget The widget to add to InstantSearch.\n   *\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`.\n   */\n  public addWidget(widget: Widget) {\n    warning(\n      false,\n      'addWidget will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`'\n    );\n\n    return this.addWidgets([widget]);\n  }\n\n  /**\n   * Adds multiple widgets to the search instance.\n   * Widgets can be added either before or after InstantSearch has started.\n   * @param widgets The array of widgets to add to InstantSearch.\n   */\n  public addWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `addWidgets` method expects an array of widgets. Please use `addWidget`.'\n        )\n      );\n    }\n\n    if (\n      widgets.some(\n        (widget) =>\n          typeof widget.init !== 'function' &&\n          typeof widget.render !== 'function'\n      )\n    ) {\n      throw new Error(\n        withUsage(\n          'The widget definition expects a `render` and/or an `init` method.'\n        )\n      );\n    }\n\n    this.mainIndex.addWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Removes a widget from the search instance.\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`\n   * @param widget The widget instance to remove from InstantSearch.\n   *\n   * The widget must implement a `dispose()` method to clear its state.\n   */\n  public removeWidget(widget: Widget | IndexWidget) {\n    warning(\n      false,\n      'removeWidget will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`'\n    );\n\n    return this.removeWidgets([widget]);\n  }\n\n  /**\n   * Removes multiple widgets from the search instance.\n   * @param widgets Array of widgets instances to remove from InstantSearch.\n   *\n   * The widgets must implement a `dispose()` method to clear their states.\n   */\n  public removeWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `removeWidgets` method expects an array of widgets. Please use `removeWidget`.'\n        )\n      );\n    }\n\n    if (widgets.some((widget) => typeof widget.dispose !== 'function')) {\n      throw new Error(\n        withUsage('The widget definition expects a `dispose` method.')\n      );\n    }\n\n    this.mainIndex.removeWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Ends the initialization of InstantSearch.js and triggers the\n   * first search.\n   */\n  public start() {\n    if (this.started) {\n      throw new Error(\n        withUsage('The `start` method has already been called once.')\n      );\n    }\n\n    // This Helper is used for the queries, we don't care about its state. The\n    // states are managed at the `index` level. We use this Helper to create\n    // DerivedHelper scoped into the `index` widgets.\n    // In Vue InstantSearch' hydrate, a main helper gets set before start, so\n    // we need to respect this helper as a way to keep all listeners correct.\n    const mainHelper =\n      this.mainHelper ||\n      algoliasearchHelper(this.client, this.indexName, undefined, {\n        persistHierarchicalRootCount: this.future.persistHierarchicalRootCount,\n      });\n\n    mainHelper.search = () => {\n      this.status = 'loading';\n      this.scheduleRender(false);\n\n      warning(\n        Boolean(this.indexName) ||\n          this.mainIndex.getWidgets().some(isIndexWidget),\n        'No indexName provided, nor an explicit index widget in the widgets tree. This is required to be able to display results.'\n      );\n\n      // This solution allows us to keep the exact same API for the users but\n      // under the hood, we have a different implementation. It should be\n      // completely transparent for the rest of the codebase. Only this module\n      // is impacted.\n      if (this._hasSearchWidget) {\n        mainHelper.searchOnlyWithDerivedHelpers();\n      }\n\n      if (this._hasRecommendWidget) {\n        mainHelper.recommend();\n      }\n\n      return mainHelper;\n    };\n\n    if (this._searchFunction) {\n      // this client isn't used to actually search, but required for the helper\n      // to not throw errors\n      const fakeClient = {\n        search: () => new Promise(noop),\n      } as any as SearchClient;\n\n      this._mainHelperSearch = mainHelper.search.bind(mainHelper);\n      mainHelper.search = () => {\n        const mainIndexHelper = this.mainIndex.getHelper();\n        const searchFunctionHelper = algoliasearchHelper(\n          fakeClient,\n          mainIndexHelper!.state.index,\n          mainIndexHelper!.state\n        );\n        searchFunctionHelper.once('search', ({ state }) => {\n          mainIndexHelper!.overrideStateWithoutTriggeringChangeEvent(state);\n          this._mainHelperSearch!();\n        });\n        // Forward state changes from `searchFunctionHelper` to `mainIndexHelper`\n        searchFunctionHelper.on('change', ({ state }) => {\n          mainIndexHelper!.setState(state);\n        });\n        this._searchFunction!(searchFunctionHelper);\n        return mainHelper;\n      };\n    }\n\n    // Only the \"main\" Helper emits the `error` event vs the one for `search`\n    // and `results` that are also emitted on the derived one.\n    mainHelper.on('error', ({ error }) => {\n      if (!(error instanceof Error)) {\n        // typescript lies here, error is in some cases { name: string, message: string }\n        const err = error as Record<string, any>;\n        error = Object.keys(err).reduce((acc, key) => {\n          (acc as any)[key] = err[key];\n          return acc;\n        }, new Error(err.message));\n      }\n      // If an error is emitted, it is re-thrown by events. In previous versions\n      // we emitted {error}, which is thrown as:\n      // \"Uncaught, unspecified \\\"error\\\" event. ([object Object])\"\n      // To avoid breaking changes, we make the error available in both\n      // `error` and `error.error`\n      // @MAJOR emit only error\n      (error as any).error = error;\n      this.error = error;\n      this.status = 'error';\n      this.scheduleRender(false);\n\n      // This needs to execute last because it throws the error.\n      this.emit('error', error);\n    });\n\n    this.mainHelper = mainHelper;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.subscribe();\n    });\n\n    this.mainIndex.init({\n      instantSearchInstance: this as unknown as InstantSearch<UiState, UiState>,\n      parent: null,\n      uiState: this._initialUiState,\n    });\n\n    if (this._initialResults) {\n      hydrateSearchClient(this.client, this._initialResults);\n      hydrateRecommendCache(this.mainHelper, this._initialResults);\n\n      const originalScheduleSearch = this.scheduleSearch;\n      // We don't schedule a first search when initial results are provided\n      // because we already have the results to render. This skips the initial\n      // network request on the browser on `start`.\n      this.scheduleSearch = defer(noop);\n      // We also skip the initial network request when widgets are dynamically\n      // added in the first tick (that's the case in all the framework-based flavors).\n      // When we add a widget to `index`, it calls `scheduleSearch`. We can rely\n      // on our `defer` util to restore the original `scheduleSearch` value once\n      // widgets are added to hook back to the regular lifecycle.\n      defer(() => {\n        this.scheduleSearch = originalScheduleSearch;\n      })();\n    }\n    // We only schedule a search when widgets have been added before `start()`\n    // because there are listeners that can use these results.\n    // This is especially useful in framework-based flavors that wait for\n    // dynamically-added widgets to trigger a network request. It avoids\n    // having to batch this initial network request with the one coming from\n    // `addWidgets()`.\n    // Later, we could also skip `index()` widgets and widgets that don't read\n    // the results, but this is an optimization that has a very low impact for now.\n    else if (this.mainIndex.getWidgets().length > 0) {\n      this.scheduleSearch();\n    }\n\n    // Keep the previous reference for legacy purpose, some pattern use\n    // the direct Helper access `search.helper` (e.g multi-index).\n    this.helper = this.mainIndex.getHelper();\n\n    // track we started the search if we add more widgets,\n    // to init them directly after add\n    this.started = true;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.started();\n    });\n\n    // This is the automatic Insights middleware,\n    // added when `insights` is unset and the initial results possess `queryID`.\n    // Any user-provided middleware will be added later and override this one.\n    if (typeof this._insights === 'undefined') {\n      mainHelper.derivedHelpers[0].once('result', () => {\n        const hasAutomaticInsights = this.mainIndex\n          .getScopedResults()\n          .some(({ results }) => results?._automaticInsights);\n        if (hasAutomaticInsights) {\n          this.use(\n            createInsightsMiddleware({\n              $$internal: true,\n              $$automatic: true,\n            })\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Removes all widgets without triggering a search afterwards.\n   * @return {undefined} This method does not return anything\n   */\n  public dispose(): void {\n    this.scheduleSearch.cancel();\n    this.scheduleRender.cancel();\n    clearTimeout(this._searchStalledTimer);\n\n    this.removeWidgets(this.mainIndex.getWidgets());\n    this.mainIndex.dispose();\n\n    // You can not start an instance two times, therefore a disposed instance\n    // needs to set started as false otherwise this can not be restarted at a\n    // later point.\n    this.started = false;\n\n    // The helper needs to be reset to perform the next search from a fresh state.\n    // If not reset, it would use the state stored before calling `dispose()`.\n    this.removeAllListeners();\n    this.mainHelper?.removeAllListeners();\n    this.mainHelper = null;\n    this.helper = null;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.unsubscribe();\n    });\n  }\n\n  public scheduleSearch = defer(() => {\n    if (this.started) {\n      this.mainHelper!.search();\n    }\n  });\n\n  public scheduleRender = defer((shouldResetStatus: boolean = true) => {\n    if (!this.mainHelper?.hasPendingRequests()) {\n      clearTimeout(this._searchStalledTimer);\n      this._searchStalledTimer = null;\n\n      if (shouldResetStatus) {\n        this.status = 'idle';\n        this.error = undefined;\n      }\n    }\n\n    this.mainIndex.render({\n      instantSearchInstance: this as unknown as InstantSearch<UiState, UiState>,\n    });\n\n    this.emit('render');\n  });\n\n  public scheduleStalledRender() {\n    if (!this._searchStalledTimer) {\n      this._searchStalledTimer = setTimeout(() => {\n        this.status = 'stalled';\n        this.scheduleRender();\n      }, this._stalledSearchDelay);\n    }\n  }\n\n  /**\n   * Set the UI state and trigger a search.\n   * @param uiState The next UI state or a function computing it from the current state\n   * @param callOnStateChange private parameter used to know if the method is called from a state change\n   */\n  public setUiState(\n    uiState: TUiState | ((previousUiState: TUiState) => TUiState),\n    callOnStateChange: boolean = true\n  ): void {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `setUiState`.')\n      );\n    }\n\n    // We refresh the index UI state to update the local UI state that the\n    // main index passes to the function form of `setUiState`.\n    this.mainIndex.refreshUiState();\n    const nextUiState =\n      typeof uiState === 'function'\n        ? uiState(this.mainIndex.getWidgetUiState({}) as TUiState)\n        : uiState;\n\n    if (this.onStateChange && callOnStateChange) {\n      this.onStateChange({\n        uiState: nextUiState,\n        setUiState: (finalUiState) => {\n          setIndexHelperState(\n            typeof finalUiState === 'function'\n              ? finalUiState(nextUiState)\n              : finalUiState,\n            this.mainIndex\n          );\n\n          this.scheduleSearch();\n          this.onInternalStateChange();\n        },\n      });\n    } else {\n      setIndexHelperState(nextUiState, this.mainIndex);\n\n      this.scheduleSearch();\n      this.onInternalStateChange();\n    }\n  }\n\n  public getUiState(): TUiState {\n    if (this.started) {\n      // We refresh the index UI state to make sure changes from `refine` are taken in account\n      this.mainIndex.refreshUiState();\n    }\n\n    return this.mainIndex.getWidgetUiState({}) as TUiState;\n  }\n\n  public onInternalStateChange = defer(() => {\n    const nextUiState = this.mainIndex.getWidgetUiState({}) as TUiState;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.onStateChange({\n        uiState: nextUiState,\n      });\n    });\n  });\n\n  public createURL(nextState: TUiState = {} as TUiState): string {\n    if (!this.started) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `createURL`.')\n      );\n    }\n\n    return this._createURL(nextState);\n  }\n\n  public refresh() {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `refresh`.')\n      );\n    }\n\n    this.mainHelper.clearCache().search();\n  }\n}\n\nexport default InstantSearch;\n","import {\n  highlight,\n  reverseHighlight,\n  snippet,\n  reverseSnippet,\n  insights,\n} from '../helpers';\n\nimport { formatNumber } from './formatNumber';\n\nimport type {\n  HighlightOptions,\n  ReverseHighlightOptions,\n  SnippetOptions,\n  ReverseSnippetOptions,\n} from '../helpers';\nimport type {\n  Hit,\n  HoganHelpers,\n  InsightsClientMethod,\n  InsightsClientPayload,\n} from '../types';\n\ntype DefaultHoganHelpers = HoganHelpers<\n  | 'formatNumber'\n  | 'highlight'\n  | 'reverseHighlight'\n  | 'snippet'\n  | 'reverseSnippet'\n  | 'insights'\n>;\n\nexport default function hoganHelpers({\n  numberLocale,\n}: {\n  numberLocale?: string;\n}): DefaultHoganHelpers {\n  return {\n    formatNumber(value, render) {\n      return formatNumber(Number(render(value)), numberLocale);\n    },\n    highlight(options, render) {\n      try {\n        const highlightOptions: Omit<HighlightOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          highlight({\n            ...highlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe highlight helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseHighlight(options, render) {\n      try {\n        const reverseHighlightOptions: Omit<ReverseHighlightOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          reverseHighlight({\n            ...reverseHighlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseHighlight helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    snippet(options, render) {\n      try {\n        const snippetOptions: Omit<SnippetOptions, 'hit'> = JSON.parse(options);\n\n        return render(\n          snippet({\n            ...snippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe snippet helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseSnippet(options, render) {\n      try {\n        const reverseSnippetOptions: Omit<ReverseSnippetOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          reverseSnippet({\n            ...reverseSnippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseSnippet helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    insights(this: Hit, options, render) {\n      try {\n        type InsightsHelperOptions = {\n          method: InsightsClientMethod;\n          payload: Partial<InsightsClientPayload>;\n        };\n        const { method, payload }: InsightsHelperOptions = JSON.parse(options);\n\n        return render(\n          insights(method, { objectIDs: [this.objectID], ...payload })\n        );\n      } catch (error) {\n        throw new Error(`\nThe insights helper expects a JSON object of the format:\n{ \"method\": \"method-name\", \"payload\": { \"eventName\": \"name of the event\" } }`);\n      }\n    },\n  };\n}\n","export default '4.73.3';\n","import type { InitialResults } from '../../types';\nimport type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nexport function hydrateRecommendCache(\n  helper: AlgoliaSearchHelper,\n  initialResults: InitialResults\n) {\n  const recommendCache = Object.keys(initialResults).reduce(\n    (acc, indexName) => {\n      const initialResult = initialResults[indexName];\n      if (initialResult.recommendResults) {\n        // @MAJOR: Use `Object.assign` instead of spread operator\n        return { ...acc, ...initialResult.recommendResults.results };\n      }\n      return acc;\n    },\n    {}\n  );\n  helper._recommendCache = recommendCache;\n}\n","import type { StateMapping, IndexUiState, UiState } from '../../types';\n\nfunction getIndexStateWithoutConfigure<TIndexUiState extends IndexUiState>(\n  uiState: TIndexUiState\n): TIndexUiState {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState as TIndexUiState;\n}\n\nexport default function singleIndexStateMapping<\n  TUiState extends UiState = UiState\n>(\n  indexName: keyof TUiState\n): StateMapping<TUiState, TUiState[typeof indexName]> {\n  return {\n    $$type: 'ais.singleIndex',\n    stateToRoute(uiState) {\n      return getIndexStateWithoutConfigure(uiState[indexName] || {});\n    },\n    routeToState(routeState = {} as TUiState[typeof indexName]) {\n      return {\n        [indexName]: getIndexStateWithoutConfigure(routeState),\n      } as unknown as TUiState;\n    },\n  };\n}\n","import * as connectors from './connectors/index';\nimport * as helpers from './helpers/index';\nimport { createInfiniteHitsSessionStorageCache } from './lib/infiniteHitsCache/index';\nimport InstantSearch from './lib/InstantSearch';\nimport * as routers from './lib/routers/index';\nimport * as stateMappings from './lib/stateMappings/index';\nimport version from './lib/version';\nimport * as middlewares from './middlewares/index';\nimport * as widgets from './widgets/index';\n\nimport type { InstantSearchOptions } from './lib/InstantSearch';\nimport type { Expand, UiState } from './types';\n\ntype InstantSearchModule = {\n  <TUiState = Record<string, unknown>, TRouteState = TUiState>(\n    options: InstantSearchOptions<Expand<UiState & TUiState>, TRouteState>\n  ): InstantSearch<Expand<UiState & TUiState>, TRouteState>;\n  version: string;\n\n  connectors: typeof connectors;\n  widgets: typeof widgets;\n  middlewares: typeof middlewares;\n\n  routers: typeof routers;\n  stateMappings: typeof stateMappings;\n\n  createInfiniteHitsSessionStorageCache: typeof createInfiniteHitsSessionStorageCache;\n\n  /** @deprecated use html tagged templates and the Highlight component instead */\n  highlight: typeof helpers.highlight;\n  /** @deprecated use html tagged templates and the ReverseHighlight component instead */\n  reverseHighlight: typeof helpers.reverseHighlight;\n  /** @deprecated use html tagged templates and the Snippet component instead */\n  snippet: typeof helpers.snippet;\n  /** @deprecated use html tagged templates and the ReverseSnippet component instead */\n  reverseSnippet: typeof helpers.reverseSnippet;\n\n  /**\n   * @deprecated use createInsightsMiddleware\n   * @link https://www.algolia.com/doc/api-reference/widgets/insights/js/\n   */\n  insights: typeof helpers.insights;\n};\n\n/**\n * InstantSearch is the main component of InstantSearch.js. This object\n * manages the widget and lets you add new ones.\n *\n * Two parameters are required to get you started with InstantSearch.js:\n *  - `indexName`: the main index that you will use for your new search UI\n *  - `searchClient`: the search client to plug to InstantSearch.js\n *\n * The [search client provided by Algolia](algolia.com/doc/api-client/getting-started/what-is-the-api-client/javascript/)\n * needs an `appId` and an `apiKey`. Those parameters can be found in your\n * [Algolia dashboard](https://www.algolia.com/api-keys).\n *\n * If you want to get up and running quickly with InstantSearch.js, have a\n * look at the [getting started](https://www.algolia.com/doc/guides/building-search-ui/getting-started/js/).\n */\nconst instantsearch: InstantSearchModule = (options) =>\n  new InstantSearch(options);\n\ninstantsearch.version = version;\n\ninstantsearch.connectors = connectors;\ninstantsearch.widgets = widgets;\ninstantsearch.middlewares = middlewares;\n\ninstantsearch.routers = routers;\ninstantsearch.stateMappings = stateMappings;\n\ninstantsearch.createInfiniteHitsSessionStorageCache =\n  createInfiniteHitsSessionStorageCache;\ninstantsearch.highlight = helpers.highlight;\ninstantsearch.reverseHighlight = helpers.reverseHighlight;\ninstantsearch.snippet = helpers.snippet;\ninstantsearch.reverseSnippet = helpers.reverseSnippet;\ninstantsearch.insights = helpers.insights;\n\nexport default instantsearch;\n"],"names":["id","noop","deprecate","fn","message","getObjectType","object","Object","prototype","toString","call","slice","checkRendering","rendering","usage","undefined","Error","concat","clearRefinements","_ref","helper","_ref$attributesToClea","attributesToClear","finalState","state","setPage","reduce","attribute","isNumericRefined","removeNumericRefinement","isHierarchicalFacet","removeHierarchicalFacetRefinement","isDisjunctiveFacet","removeDisjunctiveFacetRefinement","isConjunctiveFacet","removeFacetRefinement","indexOf","setQuery","htmlEntities","&","<",">","\"","'","regexUnescapedHtml","regexHasUnescapedHtml","RegExp","source","htmlCharacters","&amp;","&lt;","&gt;","&quot;","&#39;","regexEscapedHtml","regexHasEscapedHtml","unescape","value","test","replace","character","isPlainObject","_typeof","getPrototypeOf","proto","TAG_PLACEHOLDER","highlightPreTag","highlightPostTag","TAG_REPLACEMENT","replaceTagsAndEscape","recursiveEscape","input","keys","acc","key","_objectSpread","_defineProperty","Array","isArray","map","escapeHits","hits","__escaped","hit","_extends","_objectDestructuringEmpty","_highlightResult","_snippetResult","concatHighlightedParts","parts","part","isHighlighted","join","createSendEventForFacet","instantSearchInstance","attr","widgetType","_len","arguments","length","args","_key","facet","facetValue","_args$","eventName","_args$2","additionalData","_args$0$split2","_slicedToArray","split","eventType","eventModifier","sendEventToInsights","isHierarchicalFacetRefined","isFacetRefined","isDisjunctiveFacetRefined","insightsMethod","payload","index","getIndex","filters","serializePayload","btoa","encodeURIComponent","JSON","stringify","deserializePayload","serialized","parse","decodeURIComponent","atob","_buildEventPayloadsForHits","queryID","hitsChunks","objectIDsByChunk","positionsByChunk","methodName","hitsArray","__queryID","arr","chunkSize","chunks","i","Math","ceil","push","batch","objectID","__position","status","objectIDs","positions","createSendEventForHits","_ref2","sentEvents","timer","forEach","clearTimeout","setTimeout","createBindEventForHits","_ref3","_len2","_key2","payloads","isIndexWidget","widget","$$type","setIndexHelperState","finalUiState","indexWidget","nextIndexUiState","getIndexId","getHelper","setState","getWidgetSearchParameters","uiState","getWidgets","filter","debounce","func","wait","lastTimeout","Promise","resolve","reject","apply","then","catch","nextMicroTask","defer","callback","progress","cancelled","cancel","createDocumentationMessageGenerator","widgets","links","name","_ref$connector","connector","Boolean","escapeFacetValue","String","find","items","predicate","latLngRegExp","insideBoundingBoxToBoundingBox","insideBoundingBoxArrayToBoundingBox","_value$","neLat","_value$3","neLng","swLat","swLng","northEast","lat","lng","southWest","_value$split$map2","parseFloat","getContainerNode","selectorOrHTMLElement","isSelectorString","domElement","document","querySelector","HTMLElement","nodeType","errorMessage","getHighlightedParts","highlightedValue","splitByPreTag","firstValue","shift","elements","splitByPostTag","hasAlphanumeric","getPropertyByPath","path","current","getRefinement","type","count","resultsFacets","res","escapedValue","resultsFacet","facetDeclaration","getHierarchicalFacetByName","nameParts","separator","_loop","facetData","data","refinementKey","refinement","exhaustive","getRefinements","results","includesQuery","refinements","_state$facetsRefineme","facetsRefinements","_state$facetsExcludes","facetsExcludes","_state$disjunctiveFac","disjunctiveFacetsRefinements","_state$hierarchicalFa","hierarchicalFacetsRefinements","_state$numericRefinem","numericRefinements","_state$tagRefinements","tagRefinements","refinementName","facets","exclude","disjunctiveFacets","hierarchicalFacets","operators","operatorOriginal","operator","valueOrValues","numericValue","query","trim","getWidgetAttribute","initOptions","renderState","_widget$getWidgetRend","getWidgetRenderState","widgetParams","attributes","addAbsolutePosition","page","hitsPerPage","idx","addQueryID","hydrateSearchClient","client","cachedRequest","baseMethod","cacheKey","_cacheHydrated","_useCache","addAlgoliaAgent","_results$key","requestParams","serverResults","mappedResults","result","indexName","params","serializeQueryParameters","parameter","_parameter$split2","cachedResults","search","requests","methodArgs","requestsWithSerializedParams","request","transporter","responsesCache","get","method","set","cache","parameters","format","isPrimitive","obj","isEqual","first","second","_i","_Object$keys","isFiniteNumber","isFinite","isSpecialClick","event","button","altKey","ctrlKey","metaKey","shiftKey","uniq","array","self","mergeSearchParameters","left","right","hierarchicalFacetsRefinementsMerged","mergeHierarchicalFacetsRefinements","hierarchicalFacetsMerged","mergeHierarchicalFacets","tagRefinementsMerged","mergeTagRefinements","numericRefinementsMerged","mergeNumericRefinements","disjunctiveFacetsRefinementsMerged","mergeDisjunctiveFacetsRefinements","facetsExcludesMerged","mergeFacetsExcludes","facetRefinementsMerged","mergeFacetRefinements","disjunctiveFacetsMerged","mergeDisjunctiveFacets","ruleContextsMerged","mergeRuleContexts","facetsMerged","mergeFacets","mergeWithRest","ruleContexts","rest","_objectWithoutProperties","_excluded","setQueryParameters","_","addFacet","addDisjunctiveFacet","comparator","nextFacets","splice","addTagRefinement","omit","excluded","target","range","_ref$start","start","end","_ref$step","step","limitStep","arrayLength","round","_toConsumableArray","createInitArgs","parent","templatesConfig","createURL","scopedResults","searchMetadata","isSearchStalled","error","createRenderArgs","getResultsForWidget","getScopedResults","_state","reverseHighlightedParts","some","isNextHighlighted","_parts","isPreviousHighlighted","_parts2","safelyRunOnBrowser","fallback","window","toArray","connectAnswers","renderFn","unmountFn","withUsage","runConcurrentSafePromise","basePromiseId","latestResolvedId","latestResolvedValue","lastHits","isLoading","debouncedRender","debouncedRefine","queryLanguages","attributesForPrediction","_ref$nbHits","nbHits","_ref$renderDebounceTi","renderDebounceTime","_ref$searchDebounceTi","searchDebounceTime","_ref$escapeHTML","escapeHTML","_ref$extraParameters","extraParameters","promise","currentPromiseId","x","init","answersIndex","initIndex","findAnswers","this","render","renderOptions","_this","hitsWithAbsolutePositionAndQueryID","getRenderState","answers","dispose","connectDynamicWidgets","localWidgets","_widgetParams$maxValu","maxValuesPerFacet","_widgetParams$facets","_widgetParams$transfo","transformItems","fallbackWidget","every","Map","isMounted","widgetsToUnmount","widgetsToMount","attributesToRender","has","shouldMount","addWidgets","removeWidgets","toRemove","curr","max","dynamicWidgets","_ref4","_results$renderingCon","_results$renderingCon2","renderingContent","_results$renderingCon3","facetOrdering","_results$renderingCon4","order","connectClearRefinements","_ref$includedAttribut","includedAttributes","_ref$excludedAttribut","excludedAttributes","_ref$transformItems","cachedRefine","connectorState","refine","cachedCreateURL","canRefine","scopedResult","_ref5","indexHelper","attributeToClear","hasRefinements","connectCurrentRefinements","currentRefinements","accResults","getRefinementsItems","indexId","clearRefinement","clearRefinementFromState","filterFunction","item","normalizeRefinement","allItems","currentItem","label","sort","a","b","resetPage","removeExcludeRefinement","removeTagRefinement","setQueryParameter","Number","normalizedRefinement","connectHierarchicalMenu","_ref$separator","_ref$rootPath","rootPath","_ref$showParentLevel","showParentLevel","_ref$limit","limit","_ref$showMore","showMore","_ref$showMoreLimit","showMoreLimit","_ref$sortBy","sortBy","DEFAULT_SORT","sendEvent","_refine","hierarchicalFacetName","toggleShowMore","cachedToggleShowMore","isShowingMore","getLimit","removeHierarchicalFacet","hierarchicalMenu","hasExhaustiveItems","canToggleShowMore","toggleFacetRefinement","facetItems","facetValues","getFacetValues","_prepareFacetValues","getWidgetUiState","searchParameters","getHierarchicalFacetBreadcrumb","indexUiState","_ref6","values","withFacetConfiguration","addHierarchicalFacet","currentMaxValuesPerFacet","nextMaxValuesPerFacet","withMaxValuesPerFacet","addHierarchicalFacetRefinement","bindEvent","banner","banners","_uiState","inferPayload","selectedHits","h","queryIDs","withInsights","isFirstRender","aa","insightsClient","insights","withInstantSearchUsage","TypeError","inferredPayload","n","l","u","t","o","f","e","c","s","parentNode","removeChild","r","children","defaultProps","v","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","y","p","d","context","g","__r","debounceRendering","__P","j","__n","ownerSVGElement","z","k","base","w","C","m","A","N","unmount","M","componentWillUnmount","appendChild","nextSibling","insertBefore","$","setProperty","H","style","cssText","toLowerCase","addEventListener","T","I","removeEventListener","setAttribute","removeAttribute","contextType","__E","O","sub","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","localName","createTextNode","createElementNS","createElement","is","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","diffed","P","firstChild","writeDataAttributes","serializedPayload","getDerivedStateFromError","componentDidCatch","forceUpdate","createInsightsEventHandler","insightsThroughSendEvent","findInsightsTarget","currentTarget","element","hasAttribute","insightsThroughFunction","getAttribute","single","_readDataAttributes","startElement","endElement","validator","parentElement","connectHitsPerPage","userItems","defaultItems","default","defaultItem","isRefined","hasNoResults","_ref7","connectHitsWithInsights","connectHits","getStateWithoutPage","normalizeState","clickAnalytics","userToken","_excluded2","cachedHits","cachedState","showPrevious","_ref5$escapeHTML","_ref5$transformItems","_ref5$cache","read","write","getFirstReceivedPage","_state$page","pages","min","getLastReceivedPage","_state$page2","widgetRenderState","currentPageHits","infiniteHits","hasDynamicWidgets","existingState","getPreviousState","isFirstPage","_state$page3","transformedHits","walkIndex","mainIndex","hasNoFacets","__isArtificial","overrideStateWithoutTriggeringChangeEvent","searchWithoutTriggeringOnStateChange","isLastPage","nbPages","_ref8","stateWithoutPage","_ref9","_ref10","widgetSearchParameters","connectMenu","_createURL","menu","refinedItem","connectInfiniteHitsWithInsights","connectInfiniteHits","connectNumericMenu","_ref2$attribute","_ref2$items","_ref2$transformItems","getNumericRefinements","equal","numericMenu","withMinRefinement","withoutRefinements","addNumericRefinement","_step","refinedState","getRefinedState","newState","preparedItems","encodeURI","allIsSelected","_iterator","done","decodeURI","err","option","hasNumericRefinement","refinedOption","resolvedState","includes","connectPagination","totalPages","_ref$padding","padding","pager","Paginator","currentPage","total","currentRefinement","pagination","_classCallCheck","_createClass","totalDisplayedPages","nbPagesDisplayed","paddingLeft","calculatePaddingLeft","toPrecision","precision","pow","floor","connectRange","minBound","maxBound","_ref2$precision","rangeFormatter","from","toLocaleString","to","toFixed","currentRange","nextMin","nextMax","currentRangeMin","currentRangeMax","getNumericRefinement","isResetMin","isResetMax","_toPrecision","nextMinAsNumber","nextMaxAsNumber","newNextMin","newNextMax","isResetNewNextMin","isGreaterThanCurrentRange","isMinValid","isResetNewNextMax","isLowerThanRange","isMaxValid","_ref12","_ref13","facetResult","stats","minValue","maxValue","Infinity","_ref14","removeDisjunctiveFacet","_ref15","_searchParameters$get","_searchParameters$get2","_searchParameters$get3","_ref16","lowerBound","upperBound","connectRefinementList","_ref$operator","_ref$escapeFacetValue","escapeFacetValues","formatItems","highlighted","lastResultsFromMainSearch","triggerRefine","lastItemsFromMainSearch","createSearchForFacetValues","tags","searchResults","searchForFacetValues","facetHits","normalizedFacetValues","isFromSearch","refinementList","searchFacetValues","maxValuesPerFacetConfig","currentLimit","canShowLess","canShowMore","searchForItems","withoutMaxValuesPerFacet","removeFacet","getDisjunctiveRefinements","getConjunctiveRefinements","isDisjunctive","addDisjunctiveFacetRefinement","addFacetRefinement","threshold","fallbackParameters","queryParameters","dependsOn","recommendState","removeParams","$$id","getWidgetParameters","addRelatedProducts","maxRecommendations","defaultQueryHook","hook","connectSearchBox","_clear","_ref$queryHook","queryHook","searchBox","q","clear","connectSortBy","currentIndex","initialIndex","setIndex","getIndexName","options","connectRatingMenu","getRefinedStar","_ref2$max","_values$","bind","ratingMenu","maxDecimalPlaces","refinementIsApplied","totalCount","facetResults","_facetResult$name$spl3","refinedStar","star","sum","stars","_v","reverse","withDisjunctiveFacet","emptyState","connectStats","nbSortedHits","areHitsSorted","appliedRelevancyStrictness","processingTimeMS","connectToggleRefinement","hasAnOffValue","on","off","_ref2$on","userOff","valuesToRemove","valuesToAdd","toggleRefinement","allFacetValues","onFacetValue","offFacetValue","nextRefinement","offValue","onData","offData","toggle","_uiState$toggle","_ref11","facetName","addTrendingItems","connectBreadcrumb","breadcrumb","prepareItems","getBoundingBoxAsString","insideBoundingBox","setBoundingBoxAsString","getPositionFromState","aroundLatLng","aroundLatLngToPosition","pattern","match","toggleRefineOnMapMove","widgetState","internalToggleRefineOnMapMove","createInternalToggleRefinementOnMapMove","isRefineOnMapMove","setMapMoveSinceLastRefine","internalSetMapMoveSinceLastRefine","createInternalSetMapMoveSinceLastRefine","shouldTriggerRender","hasMapMoveSinceLastRefine","_ref$enableRefineOnMa","enableRefineOnMapMove","lastRefinePosition","lastRefineBoundingBox","initArgs","renderArgs","positionChangedSinceLastRefine","boundingBoxChangedSinceLastRefine","_geoloc","position","ne","sw","boundingBox","clearMapRefinement","isRefinedWithMap","geoSearch","connectPoweredBy","defaultUrl","_window$location","location","hostname","_ref2$url","url","poweredBy","EventEmitter","_events","_maxListeners","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","emit","handler","len","listeners","er","addListener","listener","newListener","warned","console","trace","once","fired","removeListener","list","removeAllListeners","ret","listenerCount","evlistener","emitter","ctor","superCtor","create","enumerable","writable","configurable","DerivedHelper","mainHelper","recommendFn","main","lastResults","lastRecommendResults","detach","detachDerivedHelper","getModifiedState","getModifiedRecommendState","isObjectOrArrayOrFunction","_merge","sourceVal","targetVal","hasOwnProperty","sourceKeys","RecommendParameters","opts","addParams","newParams","param","addFrequentlyBoughtTogether","assign","model","addTrendingFacets","addLookingSimilar","_buildQueries","RecommendResults","_rawResults","sortObject","reduceRight","requestBuilder","_getQueries","queries","_getHitsSearchParams","getRefinedDisjunctiveFacets","refinedFacet","_getDisjunctiveFacetSearchParams","getRefinedHierarchicalFacets","filtersMap","hierarchicalFacet","getHierarchicalRefinement","_getHierarchicalFacetSeparator","segment","level","hasHierarchicalFacetFilter","filteredFacetFilters","facetFilters","facetFilter","filtered","filterValue","_getHitsHierarchicalFacetsAttributes","_getFacetFilters","numericFilters","_getNumericFilters","tagFilters","_getTagFilters","additionalParams","merge","getQueryParams","hierarchicalRootLevel","analytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributesIndex","_getHierarchicalRootPath","lastIndexOf","attributeToRefine","allAttributes","newAttributes","hierarchicalRefinement","rootLevel","parentLevel","attributeIndex","getSearchForFacetQuery","maxFacetHits","stateForSearchForFacetValues","searchForFacetSearchParameters","facetQuery","arr1","arr2","valToNumber","lib","addRefinement","mod","valueAsString","facetRefinement","defaultsPure","removeRefinement","refinementType","hasChanged","newRefinementList","objectHasKeys","memo","facetList","refinementValue","containsRefinements","isEqualNumericRefinement","el","SearchParameters","newParameters","_parseNumbers","warn","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","parsedValue","geoRect","parsedValues","vPrime","make","instance","toggleHierarchicalFacetRefinement","validate","currentState","patch","_clearNumericRefinements","RefinementList","clearTags","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","val","getExcludeRefinements","number","paramValue","op","newNumericRefinements","operatorList","outValues","addExcludeRefinement","tag","isTagRefined","modification","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","toggleTagRefinement","isExcludeRefined","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","disjunctiveNumericRefinedFacets","intersection","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","queryParams","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","_getHierarchicalShowParentLevel","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","collection","iteratees","orders","criteria","iteratee","other","valIsDefined","valIsNull","othIsDefined","othIsNull","hierarchicalFacetResult","hierarchicalFacetIndex","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","picked","subtree","tuple","parentPath","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","orderBy","facetCount","unescapeFacetValue","hierarchicalFacetRefinement","prepareHierarchicalFacetSortBy","rootExhaustive","fv","getIndices","indices","assignFacetStats","dest","facetStats","SearchResults","mainSubResponse","persistHierarchicalRootCount","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","isFacetDisjunctive","isFacetConjunctive","facetValueObject","facetIndex","idxAttributeName","findIndex","exhaustiveFacetsCount","facets_stats","compact","disjunctiveFacet","dfacet","dataFromMainRequest","defaultData","root","excludes","generateHierarchicalTree","extractNormalizedFacetValues","hierarchicalFacetValues","currentRefinementSplit","isExcluded","unshift","setIsRefined","depth","child","getFacetStatsIfAvailable","attributeName","getFacetByName","recSort","sortFn","node","names","sortedChildren","childNode","orderedFacets","remainingFacets","hide","reverseOrder","hidden","sortRemainingBy","ordering","formatSort","getFacetStats","rootFacet","intermediateFacet","newFacet","indexTracker","nrOfObjs","avgIndices","indexSum","avgOfIndices","orderedHits","avgIndexRef","require$$0","AlgoliaSearchHelper","searchResultsOptions","setClient","_queryId","_recommendQueryId","_lastQueryIdReceived","_lastRecommendQueryIdReceived","derivedHelpers","_currentNbQueries","_currentNbRecommendQueries","_searchResultsOptions","_recommendCache","setCurrentPage","_change","isPageReset","getCurrentPage","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","recommend","_recommend","getQuery","searchOnce","cb","tempState","content","_originalResponse","derivedHelper","derivedState","userState","clientHasSFFV","clientHasInitIndex","algoliaQuery","searchForFacetValuesPromise","response","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","_recommendChange","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","removeFrequentlyBoughtTogether","removeRelatedProducts","removeTrendingItems","removeTrendingFacets","removeLookingSimilar","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","isDisjunctiveRefined","hasTag","hasTagRefinements","getPage","getTags","states","mainQueries","derivedQueries","queriesCount","derivedStateQueries","queryId","_dispatchAlgoliaResponse","_dispatchAlgoliaError","searchState","ids","derivedIndex","getRecommendations","_dispatchRecommendResponse","_dispatchRecommendError","specificResults","idsMap","firstResult","sortAndMergeRecommendations","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","clearCache","newClient","getClient","derive","pos","hasPendingRequests","algoliasearchHelper","version","getInitialSearchParameters","connectConfigure","configure","_renderState$configur","actualState","nextSearchParameters","createOptionalFilter","attributeValue","attributeScore","connectConfigureRelatedItems","optionalFilters","matchingPatterns","_ref2$transformSearch","transformSearchParameters","score","attributeSubValue","sumOrFiltersScores","applyRuleContexts","sharedHelperState","trackedFilters","initialRuleContexts","transformRuleContexts","previousRuleContexts","newRuleContexts","facetRefinements","trackedFacetValues","getTrackedFacetValues","connectQueryRules","onHelperChange","_ref2$trackedFilters","_ref2$transformRuleCo","rules","hasTrackedFilters","_ref4$userData","userData","queryRules","createVoiceSearchHelper","resetState","getDefaultState","recognition","stop","onStart","onError","onResult","onEnd","searchAsYouSpeak","language","onQueryChange","onStateChange","SpeechRecognitionAPI","webkitSpeechRecognition","SpeechRecognition","transcript","isSpeechFinal","errorCode","isFinal","getState","isBrowserSupported","isListening","startListening","interimResults","lang","stopListening","connectVoiceSearch","_widgetParams$searchA","additionalQueryParameters","_widgetParams$createV","builtInCreateVoiceSearchHelper","voiceSearch","_voiceSearchHelper","ignorePlurals","removeStopWords","optionalWords","toggleListening","voiceListeningState","toReset","additional","connectRelevantSort","relevantSort","relevancyStrictness","isVirtualReplica","isRelevantSorted","_uiState$relevantSort","component","componentName","descendantName","modifierName","descendent","modifier","EXPERIMENTAL_connectAnswers","EXPERIMENTAL_connectDynamicWidgets","autocomplete","stateWithoutQuery","suit","highlight","_ref$highlightedTagNa","highlightedTagName","_ref$cssClasses","cssClasses","_ref2$value","className","reverseHighlight","snippet","reverseSnippet","ANONYMOUS_TOKEN_COOKIE_KEY","getInsightsAnonymousUserTokenInternal","getCookie","cookie","prefix","cookies","charAt","substring","KEY","ALGOLIA_INSIGHTS_VERSION","ALGOLIA_INSIGHTS_SRC","createInsightsMiddleware","_insightsClient","insightsInitParams","onEvent","_props$$$internal","$$internal","_props$$$automatic","$$automatic","potentialInsightsClient","pointer","AlgoliaAnalyticsObject","queue","shouldAddScript","existingInsightsMiddlewares","middleware","creator","unuse","_map","_map2","initialParameters","_getAppIdAndApiKey2","searchClient","headers","baseHeaders","baseQueryParameters","APP_ID","API_KEY","applicationID","apiKey","appId","queuedUserToken","queuedAuthenticatedUserToken","userTokenBeforeInit","authenticatedUserTokenBeforeInit","_error","normalizeUserToken","isModernInsightsClient","partial","subscribe","script","async","src","onerror","body","cause","started","scheduleSearch","setUserTokenToSearch","existingToken","immediate","normalizedUserToken","applyToken","anonymousUserToken","setUserToken","token","authenticatedUserToken","tokenBeforeInit","queuedToken","insightsClientWithLocalCredentials","X-Algolia-Application-Id","X-Algolia-API-Key","algoliaSource","unsubscribe","_split$map2","major","minor","isMetadataEnabled","_window$navigator","navigator","_window$navigator$use","userAgent","createMetadataMiddleware","_ref2$$$internal","payloadContainer","refNode","ua","_ua","extractWidgetPayload","_initialUiState","$$widgetType","internal","remove","arrayToObject","plainObjects","generateArrayPrefix","strictNullHandling","skipNulls","encoder","allowDots","serializeDate","formatter","encodeValuesOnly","charset","Date","utils","maybeMap","isNonNullishPrimitive","isBuffer","keyValue","valuesArray","valuesJoined","objKeys","keyPrefix","pushToArray","setWindowTitle","title","percentTwenties","Format","formatters","RFC1738","RFC3986","hexTable","toUpperCase","combine","prop","refs","compactQueue","pop","compacted","decode","str","decoder","strWithoutPlus","encode","defaultEncoder","kind","string","Symbol","escape","$0","parseInt","charCodeAt","formats","isRegExp","mapped","allowPrototypes","mergeTarget","targetItem","arrayPrefixGenerators","brackets","comma","repeat","valueOrArray","toISO","toISOString","defaultFormat","addQueryPrefix","charsetSentinel","delimiter","date","arrayLimit","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","numberStr","fromCharCode","parseArrayValue","isoSentinel","parseObject","chain","valuesParsed","leaf","cleanRoot","0","tempObj","cleanStr","skipIndex","bracketEqualsPos","encodedVal","newObj","givenKey","exec","arrayFormat","joined","BrowserHistory","windowTitle","_ref$writeDelay","writeDelay","parseURL","getLocation","cleanUrlOnDispose","writeTimer","_start","_dispose","_push","_cleanUrlOnDispose","latestAcknowledgedHistory","history","qsModule","qs","routeState","_this2","shouldWrite","pushState","inPopState","_this3","_onPopState","_this4","isDisposed","_this5","lastPushWasByISAfterDispose","href","historyRouter","_ref7$createURL","_ref7$parseURL","_ref7$writeDelay","_ref7$getLocation","protocol","_location$port","port","pathname","hash","queryString","portWithPrefix","getIndexStateWithoutConfigure","simpleStateMapping","stateToRoute","routeToState","createRouterMiddleware","_props$router","router","stateMapping","_props$stateMapping","nextState","previousUiState","route","lastRouteState","initialUiState","onUpdate","setUiState","_router$start","module","exports","iterator","hint","prim","toPrimitive","toPropertyKey","defineProperty","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","cx","classNames","createDefaultEmptyComponent","Fragment","createDefaultHeaderComponent","userProps","_userProps$classNames","translations","createDefaultItemComponent","createListViewComponent","ItemComponent","itemComponent","container","onClick","onAuxClick","ownKeys","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","prepareTemplateProps","defaultTemplates","templates","config","defaultTemplate","customTemplate","isCustomTemplate","useCustomCompileOptions","tagChange","text","buildTree","tokens","stack","customTags","instructions","opener","tail","allowedInSuper","Hogan","nodes","close","open","last","stringifyPartials","codeObj","partials","esc","subs","rSlash","rQuot","rNewline","rCr","rLineSep","rParagraphSep","chooseMethod","createPartial","serialNo","code","indent","tripleStache","rIsWhitespace","#","^","/","!","=","{","_t","scan","delimiters","closeIndex","tagType","buf","seenTag","lineStart","otag","ctag","addBuf","filterLine","haveSeenTag","noNewLine","isAllWhitespace","next","substr","\n","wrapMain","generate","tree","walk","asString","makeTemplate","template","Template","makePartials","Function","codegen","ctx","inPartial","nodelist","sectionTags","disableLambda","modelGet","compile","findInScope","scope","doModelGet","coerceToString","rAmp","rLt","rGt","rApos","hChars","compiler","ri","ep","symbol","stackText","activeSub","stackSubs","stackPartials","PartialTemplate","Substitutions","subsText","rp","rs","section","inverted","pass","ms","returnFound","found","mv","ls","oldTags","ct","fl","textSource","InternalHighlight","_userProps$highlighte","_userProps$nonHighlig","nonHighlightedTagName","_userProps$separator","partIndex","isLastPart","subPart","subPartIndex","HighlightPart","nonHighlighted","Highlight","_ref$classNames","HighlightUiComponent","ReverseHighlight","ReverseHighlightUiComponent","ReverseSnippet","ReverseSnippetUiComponent","Snippet","SnippetUiComponent","renderTemplate","templateKey","compileOptions","helpers","html","components","transformedHelpers","helperKey","hogan","spaces","RawHtml","_inherits","Component","_super","_createSuper","_assertThisInitialized","createRef","fragment","DocumentFragment","replaceWith","Element","outerHTML","nodeValue","_super2","nextProps","rootProps","RootTagName","rootTagName","random","Answers","templateProps","emptyRoot","header","loader","__hitIndex","containerNode","_ref3$templates","_ref3$cssClasses","userCssClasses","isFirstRendering","createContainer","rootContainer","userContainer","containers","connectorWidgets","containerSelector","otherWidgetParams","childWidget","renderer","CurrentRefinements","GeoSearchButton","_ref$disabled","disabled","GeoSearchToggle","classNameLabel","classNameInput","onToggle","onChange","_collectMarkersForNex2","updateMarkerIds","boundingBoxPadding","googleReference","initialZoom","initialPosition","enableRefine","enableClearMapRefinement","enableRefineControl","mapOptions","createMarker","markerOptions","isUserInteraction","isPendingRefine","markers","rootElement","mapElement","treeElement","mapInstance","maps","mapTypeControl","fullscreenControl","streetViewControl","clickableIcons","zoomControlOptions","ControlPosition","LEFT_TOP","addListenerOnce","refineWithMap","nextItemsIds","updateMarkers","collectMarkersForNextRender","exitMarkers","__id","nextPendingItems","marker","setMap","events","shouldUpdate","createBoundingBoxFromMarkers","lockUserInteraction","fitBounds","LatLngBounds","setCenter","setZoom","GeoSearchControls","onRefineToggle","onRefineClick","onClearClick","Breadcrumb","noRefinementRoot","selectedItem","link","preventDefault","isLast","aria-hidden","home","ClearRefinements","disabledButton","resetLabel","category","categoryLabel","delete","HTMLMarker","reset","redo","control","selectedLabel","disabledRedo","getBounds","getNorthEast","toJSON","getSouthWest","nextIds","update","exit","google","latLngBounds","extend","getPosition","functionThatAltersTheMapPosition","showSubmit","showReset","showLoadingIndicator","autofocus","searchAsYouType","ignoreCompositionEvents","ariaLabel","onSubmit","onReset","SearchBox","focused","_this$props","isComposing","_this$props2","stopPropagation","blur","_this$props3","focus","_this$props4","placeholder","action","role","form","noValidate","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","maxLength","onInput","oncompositionend","onBlur","onFocus","aria-label","submit","loadingIndicator","RefinementListItem","handleClick","facetValueToRefine","templateData","subItems","originalEvent","isHierarchicalMenuItem","_this$props$cssClasse","childList","refinementListItemClassName","disabledItem","parentItem","handleItemClick","tagName","resetInput","actualValue","showMoreButtonClassName","disabledShowMore","showMoreButton","shouldDisableSearchBox","searchIsAlwaysActive","searchPlaceholder","searchable","searchBoxTemplateProps","refineFirstValue","_generateFacetItem","noResults","formatNumber","numberLocale","selectedItemLink","showMoreText","empty","Hits","EmptyComponent","emptyComponent","BannerComponent","bannerComponent","bannerRoot","DefaultBannerComponent","image","urls","bannerLink","bannerImage","alt","Selector","setValue","select","privateHelperSetState","getLocalWidgetsUiState","widgetStateOptions","getWidgetState","getLocalWidgetsSearchParameters","widgetSearchParametersOptions","initialSearchParameters","getLocalWidgetsRecommendParameters","widgetRecommendParametersOptions","initialRecommendParameters","_widgetParams$indexId","localUiState","localInstantSearchInstance","localParent","lastValidSearchParameters","hasRecommendWidget","hasSearchWidget","getResults","_derivedHelper","_helper","widgetParent","getParent","widgetSiblings","resolveScopedResultsFromWidgets","_hasRecommendWidget","_hasSearchWidget","storeRenderState","cleanedRecommendState","cleanedSearchState","_widgets$reduce","future","preserveSharedStateOnUnmount","recommendParameters","indexInitialResults","_instantSearchInstanc","_initialResults","recommendResults","resetPageFromWidgets","indexWidgets","widgetHelper","scheduleStalledRender","scheduleRender","onInternalStateChange","widgetsToRender","_derivedHelper2","shouldRender","_derivedHelper3","_helper2","innerIndex","refreshUiState","setIndexUiState","parentIndexName","DefaultBanner","InfiniteHits","hasShowPrevious","handleInsightsClick","loadPrevious","disabledLoadPrevious","loadMore","disabledLoadMore","showPreviousText","MenuSelect","selectedValue","defaultOption","radio","defaultChecked","labelText","Pagination","createClickHandler","pageNumber","showFirst","PaginationLink","firstPageItem","isDisabled","previousPageItem","pageItem","isSelected","showNext","nextPageItem","showLast","lastPageItem","_ref$isDisabled","_ref$isSelected","__H","__V","__N","B","requestAnimationFrame","cancelAnimationFrame","Panel","_useState2","useState","isCollapsed","setIsCollapsed","_useState4","isControlled","setIsControlled","bodyRef","useRef","bodyElement","collapsible","collapsibleRoot","collapsedRoot","collapseButton","aria-expanded","prevIsCollapsed","collapsed","footer","placesReference","_ref$defaultPosition","defaultPosition","placesOptions","placesAutocomplete","initialLatLngViaIP","isInitialLatLngViaIPSet","eventOptions","_eventOptions$suggest","suggestion","_eventOptions$suggest2","latlng","places","_ref5$query","_ref5$position","aroundLatLngViaIP","setVal","PoweredBy","theme","rel","height","logo","viewBox","width","fill","QueryRuleCustomData","RelatedProducts","_userProps$emptyCompo","_userProps$headerComp","headerComponent","HeaderComponent","_userProps$itemCompon","_userProps$view","view","View","userTranslations","getOwnPropertyDescriptors","defineProperties","sliderLabel","stripLeadingZeroFromInput","Pit","positionValue","shouldDisplayValue","pitValue","marginLeft","RangeInput","_this$props$values$ma","_this$props$values$mi","_this$state","_nextProps$values$max","_nextProps$values$min","_this$state2","noRefinement","inputMin","inputMax","separatorText","submitText","KEYS","PERCENT_FULL","getValue","getClassName","orientation","getHandleFor","ev","killEvent","Rheostat","handlePos","handleDimensions","mousePos","sliderBox","slidingIndex","minMaxChanged","valuesChanged","orientationChanged","willBeDisabled","updateNewValues","endSlide","rheostat","rect","getBoundingClientRect","clientHeight","top","clientWidth","diffValue","prevValue","handleNode","snapPoints","snapTo","snap","abs","positionPercent","getClosestSnapPoint","keyCode","shouldSnap","proposedValue","proposedPercentage","originalPercentage","stepValue","stepMultiplier","_stepMultiplier","proposedPosition","actualPosition","validatePosition","nextHandlePos","closestIdx","_node","getSliderBoundingBox","getHandleDimensions","setStartSlide","clientX","clientY","handleMouseSlide","touch","changedTouches","handleTouchSlide","onSliderDragStart","handleSlide","_this$state3","slideTo","canMove","onSliderDragMove","onSliderDragEnd","getSnapPosition","fireChangeEvent","handleId","getClosestHandle","validPositionPercent","getNextPositionForKey","onKeyPress","_this$state4","proposedValues","realValue","_this$state5","getPublicState","onAfterSet","getNextState","onValuesUpdated","nextValues","validateValues","Handle","handle","PitComponent","pitComponent","pitPoints","ProgressBar","progressBar","_this$state6","handleStyle","aria-valuemax","getMaxValue","aria-valuemin","getMinValue","aria-valuenow","aria-disabled","data-handle-key","onKeyDown","handleKeydown","onMouseDown","startMouseSlide","onTouchStart","startTouchSlide","tabIndex","getProgressStyle","pitStyle","Slider","tooltips","roundedValue","stepsLength","steps","pips","computeSnapPoints","computeDefaultPitPoints","disabledRoot","createHandleComponent","handleChange","ItemWrapper","isFull","starIcon","fullStarIcon","emptyStarIcon","xlinkHref","fill-rule","transform","stroke-width","stroke-opacity","cy","dur","repeatCount","resetIcon","submitIcon","loadingIcon","stroke","checkbox","searchableNoResults","searchBoxSuit","RelevantSort","Stats","hasManySortedResults","hasNoSortedResults","hasOneSortedResults","hasManyResults","hasOneResult","suffix","ToggleRefinement","TrendingItems","ButtonInnerElement","VoiceSearch","x1","y1","x2","y2","buttonText","stroke-linecap","stroke-linejoin","FrequentlyBoughtTogether","LookingSimilar","EXPERIMENTAL_answers","EXPERIMENTAL_dynamicWidgets","serializeRefinements","serializeNumericRefinements","lastSentData","sendAnalytics","pushTimeout","isInitialSearch","onUnload","pushFunction","_ref$delay","delay","_ref$triggerOnUIInter","triggerOnUIInteraction","_ref$pushInitialSearc","pushInitialSearch","_ref$pushPagination","pushPagination","equals","analyticsState","serializedParams","stringifiedParams","dataToSend","serializedRefinements","serializedNumericRefinements","builtInMarker","customHTMLMarker","_ref$initialZoom","_ref$initialPosition","_ref$templates","userTemplates","_ref$builtInMarker","userBuiltInMarker","userCustomHTMLMarker","_ref$enableRefine","_ref$enableClearMapRe","_ref$enableRefineCont","createOptions","OverlayView","_ref$anchor","anchor","latLng","LatLng","getPanes","overlayMouseTarget","bbBox","offset","getProjection","fromLatLngToDivPixel","zIndex","_excluded3","Marker","connectGeoSearch","_ref3$showMore","_ref5$templates","_ref5$cssClasses","TemplateComponent","_ref3$sortBy","_ref3$limit","scrollToNode","_ref4$templates","_ref4$cssClasses","_ref4$showFirst","_ref4$showLast","_ref4$showPrevious","_ref4$showNext","_ref4$scrollTo","scrollTo","userScrollTo","scrollIntoView","panelWidgetParams","_ref3$hidden","bodyContainerNode","collapsedFn","collapseIcon","widgetFactory","renderPanel","collapseButtonText","_widget$init","_widget$render","_widget$dispose","_len3","_key3","_ref3$theme","_widgetParams$theme","_ref4$transformItems","CustomData","connectRelatedProducts","_ref3$precision","rangeMin","rangeMax","_ref3$pips","_ref3$tooltips","maxFinite","minRange","maxRange","minStart","maxStart","minFinite","_ref5$max","searchBoxTemplates","searchablePlaceholder","searchableIsAlwaysActive","_ref3$searchable","_ref3$searchablePlace","_ref3$searchableEscap","searchableEscapeFacetValues","_ref3$searchableIsAlw","searchableRoot","searchableForm","searchableInput","searchableSubmit","searchableSubmitIcon","searchableReset","searchableResetIcon","searchableLoadingIndicator","searchableLoadingIcon","searchBoxDefaultTemplates","_widgetParams$templat","_widgetParams$cssClas","_ref3$placeholder","_ref3$autofocus","_ref3$searchAsYouType","_ref3$ignoreCompositi","_ref3$showReset","_ref3$showSubmit","_ref3$showLoadingIndi","_ref3$on","connectTrendingItems","_ref3$searchAsYouSpea","VoiceSearchComponent","connectFrequentlyBoughtTogether","connectLookingSimilar","defaultCreateURL","INSTANTSEARCH_FUTURE_DEFAULTS","InstantSearch","_this$mainHelper","shouldResetStatus","_searchStalledTimer","nextUiState","_options$indexName","_options$initialUiSta","_options$routing","routing","_options$insights","searchFunction","_options$stalledSearc","stalledSearchDelay","_options$searchClient","_options$insightsClie","_options$onStateChang","_options$future","_JSON$parse","_stalledSearchDelay","_insights","_searchFunction","routerOptions","use","insightsOptions","newMiddlewareList","newMiddleware","middlewareToUnuse","fakeClient","originalScheduleSearch","initialResults","recommendCache","_mainHelperSearch","mainIndexHelper","searchFunctionHelper","initialResult","_automaticInsights","_this$mainHelper2","callOnStateChange","instantsearch","connectors","middlewares","routers","stateMappings","createInfiniteHitsSessionStorageCache","sessionStorage","getItem","SyntaxError","removeItem","setItem"],"mappings":"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"}