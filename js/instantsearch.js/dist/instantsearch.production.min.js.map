{"version":3,"file":"instantsearch.production.min.js","sources":["../node_modules/algoliasearch-helper/src/functions/merge.js","../node_modules/algoliasearch-helper/src/functions/defaultsPure.js","../node_modules/algoliasearch-helper/src/functions/intersection.js","../node_modules/algoliasearch-helper/src/functions/find.js","../node_modules/algoliasearch-helper/src/functions/valToNumber.js","../node_modules/algoliasearch-helper/src/functions/omit.js","../node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","../node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","../node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","../node_modules/algoliasearch-helper/src/SearchParameters/index.js","../node_modules/algoliasearch-helper/src/functions/orderBy.js","../node_modules/algoliasearch-helper/src/functions/compact.js","../node_modules/algoliasearch-helper/src/functions/findIndex.js","../node_modules/algoliasearch-helper/src/functions/formatSort.js","../node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","../node_modules/algoliasearch-helper/src/SearchResults/index.js","../node_modules/events/events.js","../node_modules/algoliasearch-helper/src/functions/inherits.js","../node_modules/algoliasearch-helper/src/DerivedHelper/index.js","../node_modules/algoliasearch-helper/src/requestBuilder.js","../node_modules/algoliasearch-helper/src/version.js","../node_modules/algoliasearch-helper/src/algoliasearch.helper.js","../node_modules/algoliasearch-helper/index.js","../src/lib/utils/defer.ts","../src/lib/utils/getContainerNode.ts","../src/lib/utils/isDomElement.ts","../src/lib/utils/isSpecialClick.ts","../src/lib/utils/uniq.ts","../src/lib/utils/prepareTemplateProps.ts","../node_modules/hogan.js/lib/compiler.js","../node_modules/hogan.js/lib/template.js","../node_modules/hogan.js/lib/hogan.js","../src/lib/utils/renderTemplate.ts","../src/lib/utils/find.ts","../src/lib/utils/unescapeRefinement.ts","../src/lib/utils/getRefinements.ts","../src/lib/utils/clearRefinements.ts","../src/lib/utils/escapeRefinement.ts","../src/lib/utils/checkRendering.ts","../src/lib/utils/getObjectType.ts","../src/lib/utils/noop.ts","../src/lib/utils/getPropertyByPath.ts","../src/lib/utils/isFiniteNumber.ts","../src/lib/utils/isPlainObject.ts","../src/lib/utils/range.ts","../src/lib/utils/isEqual.ts","../src/lib/utils/escape.ts","../src/lib/utils/unescape.ts","../src/lib/utils/escape-highlight.ts","../src/lib/utils/concatHighlightedParts.ts","../src/lib/utils/getHighlightedParts.ts","../src/lib/utils/getHighlightFromSiblings.ts","../src/lib/utils/reverseHighlightedParts.ts","../src/lib/utils/mergeSearchParameters.ts","../src/lib/utils/findIndex.ts","../src/lib/utils/toArray.ts","../src/lib/utils/documentation.ts","../src/lib/utils/geo-search.ts","../src/lib/utils/hits-absolute-position.ts","../src/lib/utils/hits-query-id.ts","../src/lib/utils/createSendEventForFacet.ts","../src/lib/utils/isFacetRefined.ts","../src/lib/utils/serializer.ts","../src/lib/utils/createSendEventForHits.ts","../src/lib/utils/convertNumericRefinementsToFilters.ts","../src/lib/utils/debounce.ts","../src/lib/utils/getWidgetAttribute.ts","../src/widgets/index/index.ts","../src/lib/utils/resolveSearchParameters.ts","../src/lib/suit.ts","../src/helpers/highlight.ts","../src/helpers/reverseHighlight.ts","../src/helpers/snippet.ts","../src/helpers/reverseSnippet.ts","../src/helpers/insights.ts","../src/helpers/get-insights-anonymous-user-token.ts","../src/lib/stateMappings/simple.ts","../node_modules/qs/lib/utils.js","../node_modules/qs/lib/stringify.js","../node_modules/qs/lib/parse.js","../src/lib/routers/history.ts","../node_modules/qs/lib/formats.js","../node_modules/qs/lib/index.js","../src/middlewares/createRouterMiddleware.ts","../src/middlewares/createMetadataMiddleware.ts","../src/lib/InstantSearch.ts","../src/connectors/clear-refinements/connectClearRefinements.ts","../src/lib/version.ts","../src/lib/createHelpers.ts","../src/connectors/current-refinements/connectCurrentRefinements.ts","../src/connectors/hierarchical-menu/connectHierarchicalMenu.ts","../src/connectors/hits/connectHits.ts","../src/lib/insights/client.ts","../node_modules/preact/dist/preact.module.js","../src/lib/insights/listener.tsx","../src/connectors/hits-per-page/connectHitsPerPage.ts","../src/connectors/hits/connectHitsWithInsights.ts","../src/connectors/infinite-hits/connectInfiniteHits.ts","../src/connectors/menu/connectMenu.ts","../src/connectors/numeric-menu/connectNumericMenu.ts","../src/connectors/infinite-hits/connectInfiniteHitsWithInsights.ts","../src/connectors/pagination/connectPagination.ts","../src/connectors/pagination/Paginator.ts","../src/connectors/range/connectRange.ts","../src/connectors/refinement-list/connectRefinementList.ts","../src/connectors/search-box/connectSearchBox.ts","../src/connectors/sort-by/connectSortBy.ts","../src/connectors/rating-menu/connectRatingMenu.ts","../src/connectors/stats/connectStats.ts","../src/connectors/toggle-refinement/connectToggleRefinement.ts","../src/connectors/breadcrumb/connectBreadcrumb.ts","../src/connectors/geo-search/connectGeoSearch.ts","../src/connectors/powered-by/connectPoweredBy.ts","../src/connectors/configure/connectConfigure.ts","../src/connectors/configure-related-items/connectConfigureRelatedItems.ts","../src/connectors/autocomplete/connectAutocomplete.ts","../src/connectors/query-rules/connectQueryRules.ts","../src/lib/voiceSearchHelper/index.ts","../src/connectors/voice-search/connectVoiceSearch.ts","../src/connectors/answers/connectAnswers.ts","../src/lib/utils/createConcurrentSafePromise.ts","../src/connectors/relevant-sort/connectRelevantSort.ts","../src/connectors/dynamic-widgets/connectDynamicWidgets.ts","../src/widgets/analytics/analytics.ts","../node_modules/classnames/index.js","../src/components/Template/Template.tsx","../src/components/Breadcrumb/Breadcrumb.tsx","../src/components/ClearRefinements/ClearRefinements.tsx","../src/components/CurrentRefinements/CurrentRefinements.tsx","../src/lib/utils/capitalize.ts","../src/widgets/current-refinements/current-refinements.tsx","../src/components/Answers/Answers.tsx","../src/components/GeoSearchControls/GeoSearchButton.js","../src/widgets/breadcrumb/defaultTemplates.ts","../src/widgets/breadcrumb/breadcrumb.tsx","../src/widgets/clear-refinements/defaultTemplates.ts","../src/widgets/clear-refinements/clear-refinements.tsx","../src/widgets/answers/defaultTemplates.ts","../src/widgets/answers/answers.tsx","../src/widgets/dynamic-widgets/dynamic-widgets.ts","../src/components/GeoSearchControls/GeoSearchToggle.js","../src/components/GeoSearchControls/GeoSearchControls.js","../src/widgets/geo-search/GeoSearchRenderer.js","../src/widgets/geo-search/defaultTemplates.ts","../src/widgets/geo-search/geo-search.ts","../src/components/RefinementList/RefinementListItem.tsx","../src/components/SearchBox/SearchBox.tsx","../src/components/RefinementList/RefinementList.tsx","../src/components/Hits/Hits.tsx","../src/widgets/hierarchical-menu/defaultTemplates.ts","../src/widgets/hierarchical-menu/hierarchical-menu.tsx","../src/widgets/hits/defaultTemplates.ts","../src/widgets/hits/hits.tsx","../src/components/Selector/Selector.tsx","../src/widgets/hits-per-page/hits-per-page.tsx","../src/widgets/infinite-hits/defaultTemplates.ts","../src/widgets/infinite-hits/infinite-hits.tsx","../src/components/InfiniteHits/InfiniteHits.tsx","../src/widgets/menu/defaultTemplates.ts","../src/widgets/menu/menu.tsx","../src/components/MenuSelect/MenuSelect.tsx","../src/components/Pagination/PaginationLink.tsx","../src/widgets/menu-select/defaultTemplates.ts","../src/widgets/menu-select/menu-select.tsx","../src/widgets/numeric-menu/defaultTemplates.ts","../src/widgets/numeric-menu/numeric-menu.tsx","../src/components/Pagination/Pagination.tsx","../src/widgets/pagination/pagination.tsx","../node_modules/preact/hooks/dist/hooks.module.js","../src/components/Panel/Panel.tsx","../src/components/PoweredBy/PoweredBy.tsx","../src/components/QueryRuleCustomData/QueryRuleCustomData.tsx","../src/widgets/panel/panel.tsx","../src/widgets/powered-by/powered-by.tsx","../src/widgets/query-rule-context/query-rule-context.tsx","../src/widgets/query-rule-custom-data/query-rule-custom-data.tsx","../src/components/RangeInput/RangeInput.tsx","../src/widgets/range-input/range-input.tsx","../src/components/Slider/Rheostat.tsx","../src/components/Slider/Pit.tsx","../src/components/RelevantSort/RelevantSort.tsx","../src/components/Stats/Stats.tsx","../src/components/ToggleRefinement/ToggleRefinement.tsx","../src/components/VoiceSearch/VoiceSearch.tsx","../src/widgets/voice-search/voice-search.tsx","../src/components/Slider/Slider.tsx","../src/widgets/range-slider/range-slider.tsx","../src/widgets/rating-menu/defaultTemplates.ts","../src/widgets/rating-menu/rating-menu.tsx","../src/widgets/search-box/defaultTemplates.ts","../src/widgets/refinement-list/refinement-list.tsx","../src/widgets/relevant-sort/defaultTemplates.ts","../src/widgets/relevant-sort/relevant-sort.tsx","../src/widgets/search-box/search-box.tsx","../src/widgets/sort-by/sort-by.tsx","../src/widgets/stats/stats.tsx","../src/widgets/toggle-refinement/defaultTemplates.ts","../src/widgets/toggle-refinement/toggle-refinement.tsx","../src/widgets/voice-search/defaultTemplates.ts","../src/widgets/configure/configure.ts","../src/widgets/configure-related-items/configure-related-items.ts","../src/widgets/geo-search/createHTMLMarker.ts","../src/widgets/places/places.ts","../src/middlewares/createInsightsMiddleware.ts","../src/lib/utils/getAppIdAndApiKey.ts","../src/lib/stateMappings/singleIndex.ts","../src/lib/infiniteHitsCache/sessionStorage.ts","../src/lib/main.ts"],"sourcesContent":["'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function(acc, source) {\n    Object.keys(Object(source)).forEach(function(key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function(value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute] ?\n      [valueAsString] :\n      refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function(v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function(v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function(memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function(value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n        memo[key] = facetList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\n\nmodule.exports = lib;\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar intersection = require('../functions/intersection');\nvar find = require('../functions/find');\nvar valToNumber = require('../functions/valToNumber');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function(el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function(currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    console.warn('[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}');\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n\n  var self = this;\n  Object.keys(params).forEach(function(paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function(partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity'\n  ];\n\n  numberKeys.forEach(function(k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function(value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function(attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function(v) {\n          if (Array.isArray(v)) {\n            return v.map(function(vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function(facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function(currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n      'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n      'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n      ' is probably an error, if this is really what you want, you have to first' +\n      ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      )\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function(attribute, operator, v) {\n    var value = valToNumber(v);\n\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function(value, key) {\n        return key === attribute;\n      })\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function(memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n\n        operators = operators || {};\n        Object.keys(operators).forEach(function(operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function(value) {\n            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n          operatorList[operator] = outValues;\n        });\n\n        memo[key] = operatorList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function(f) {\n        return f.name !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function(t) {\n        return t !== tag;\n      })\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet +\n      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 && (\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0] === value ||\n      // remove a parent refinement of the current refinement:\n      //  - refinement was 'beer > IPA > Flying dog'\n      //  - call is toggleRefine('beer > IPA')\n      //  - refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0\n    );\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function(facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function(facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets());\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function(facet) { return facet.name; }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function(facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    );\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function(f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n    'facets', 'disjunctiveFacets', 'facetsRefinements',\n    'facetsExcludes', 'disjunctiveFacetsRefinements',\n    'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'\n  ],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    var self = this;\n    Object.keys(this).forEach(function(paramName) {\n      var paramValue = self[paramName];\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function(acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(\n      function(previous, key) {\n        var isPreviousValueDefined = previous[key] !== undefined;\n        var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n        if (isPreviousValueDefined && !isNextValueDefined) {\n          return omit(previous, [key]);\n        }\n\n        if (isNextValueDefined) {\n          previous[key] = nextWithNumbers[key];\n        }\n\n        return previous;\n      },\n      previousPlainObject\n    );\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function(hierarchicalFacetName) {\n    return find(\n      this.hierarchicalFacets,\n      function(f) {\n        return f.name === hierarchicalFacetName;\n      }\n    );\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function(part) {\n      return part.trim();\n    });\n  },\n\n  toString: function() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function(value, index) {\n    return {\n      criteria: iteratees.map(function(iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function(res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(\n      hierarchicalFacet\n    );\n    var hierarchicalRootPath = state._getHierarchicalRootPath(\n      hierarchicalFacet\n    );\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(\n      hierarchicalFacet\n    );\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function(facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function(subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function(facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function(tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function(tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            currentRefinement,\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar orderBy = require('../functions/orderBy');\nvar compact = require('../functions/compact');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function(val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(\n    hierarchicalFacet\n  ) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n\n/*eslint-disable */\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n/*eslint-enable */\nfunction SearchResults(state, results) {\n  var mainSubResponse = results[0];\n\n  this._rawResults = results;\n\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function(key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n  this.processingTimeMS = results.reduce(function(sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function(facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function(disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function(refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(refinementValue) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some root level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets\n      ? result.facets\n      : {};\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n        return f.attribute === dfacet;\n      });\n\n      // previous refinements and no results so not able to find it\n      if (attributeIndex === -1) {\n        return;\n      }\n\n      // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n        defaultData,\n        facetResults,\n        self.hierarchicalFacets[position][attributeIndex].data\n      );\n    });\n\n    nextDisjunctiveResult++;\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function(facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function(facetValue) {\n      self.facets[position] = self.facets[position] || {name: facetName};\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function(name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate);\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function(name) {\n      return {\n        name: name,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, name),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function(name) {\n      return {\n        name: name,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n\n/**\n * Sort nodes of a hierarchical facet results\n * @private\n * @param {HierarchicalFacet} node node to upon which we want to apply the sort\n */\nfunction recSort(sortFn, node) {\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function(childNode) {\n    return recSort(sortFn, childNode);\n  });\n  var sortedChildren = sortFn(children);\n  var newNode = merge({}, node, {data: sortedChildren});\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function(attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {sortBy: SearchResults.DEFAULT_SORT});\n\n  if (Array.isArray(options.sortBy)) {\n    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n    if (Array.isArray(facetValues)) {\n      return orderBy(facetValues, order[0], order[1]);\n    }\n    // If facetValues is not an array, it's an object thus a hierarchical facet object\n    return recSort(function(hierarchicalFacetValues) {\n      return orderBy(hierarchicalFacetValues, order[0], order[1]);\n    }, facetValues);\n  } else if (typeof options.sortBy === 'function') {\n    if (Array.isArray(facetValues)) {\n      return facetValues.sort(options.sortBy);\n    }\n    // If facetValues is not an array, it's an object thus a hierarchical facet object\n    return recSort(function(data) {\n      return vanillaSortFn(options.sortBy, data);\n    }, facetValues);\n  }\n  throw new Error(\n    'options.sortBy is optional but if defined it must be ' +\n    'either an array of string (predicates) or a sorting function'\n  );\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function(attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function(facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function() {\n  var state = this._state;\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function(attributeName) {\n    state.facetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function(attributeName) {\n    state.facetsExcludes[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function(attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function(attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n\n\n  Object.keys(state.numericRefinements).forEach(function(attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function(operator) {\n      operators[operator].forEach(function(value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function(name) {\n    res.push({type: 'tag', attributeName: '_tags', name: name});\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function(f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function(facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function(intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet && find(intermediateFacet.data, function(f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nvar events = require('events');\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, events.EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function() {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function(parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function(refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    });\n\n    // maybe more to get the root level of hierarchical facets when activated\n    state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function(state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n        state,\n        hierarchicalFacet,\n        hierarchicalRootLevel\n      );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function(attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function(value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function(v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function(facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function(facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function(facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n      var orFilters = [];\n\n      facetValues.forEach(function(facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n\n      facetFilters.push(orFilters);\n    });\n\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function(facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeToRefine;\n      var attributesIndex;\n\n      // we ask for parent facet values only when the `facet` is the current hierarchical facet\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||\n          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function(state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      }, out);\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?\n      state.clearRefinements(facetName) :\n      state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return merge(\n      {},\n      requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n      searchForFacetSearchParameters\n    );\n  }\n};\n\nmodule.exports = requestBuilder;\n","'use strict';\n\nmodule.exports = '3.4.5';\n","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar DerivedHelper = require('./DerivedHelper');\nvar requestBuilder = require('./requestBuilder');\n\nvar events = require('events');\nvar inherits = require('./functions/inherits');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar merge = require('./functions/merge');\n\nvar version = require('./version');\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, events.EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function() {\n  this._search({onlyWithDerivedHelpers: false});\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function() {\n  this._search({onlyWithDerivedHelpers: true});\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function() {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function(content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function(err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n /**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n */\nAlgoliaSearchHelper.prototype.findAnswers = function(options) {\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText' // FIXME remove this line once the engine is fixed.\n      ])\n    }\n  );\n\n  var errorMessage = 'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  if (\n    !clientHasSFFV &&\n    typeof this.client.initIndex !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n\n  this._currentNbQueries++;\n  var self = this;\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n\n  var searchForFacetValuesPromise = clientHasSFFV\n    ? this.client.searchForFacetValues([{indexName: state.index, params: algoliaQuery}])\n    : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n    content = Array.isArray(content) ? content[0] : content;\n\n    content.facetHits.forEach(function(f) {\n      f.isRefined = isDisjunctive\n        ? state.isDisjunctiveFacetRefined(facet, f.value)\n        : state.isFacetRefined(facet, f.value);\n    });\n\n    return content;\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function(q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function(name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function() {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function() {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function() {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function() {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function() {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function() {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function() {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function(name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function(newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype.hasTag = function(tag) {\n  return this.state.isTagRefined(tag);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function() {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function() {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function() {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function(facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n\n    disjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function(operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function(options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function(derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function(s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {\n  return query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0;\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {\n  return this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function(event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.clearCache = function() {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.setClient = function(newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\nAlgoliaSearchHelper.prototype.getClient = function() {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\nAlgoliaSearchHelper.prototype.derive = function(fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function() {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version.js');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\nmodule.exports = algoliasearchHelper;\n","const nextMicroTask = Promise.resolve();\n\ntype Callback = (...args: any[]) => void;\ntype Defer = Callback & {\n  wait(): Promise<void>;\n  cancel(): void;\n};\n\nconst defer = (callback: Callback): Defer => {\n  let progress: Promise<void> | null = null;\n  let cancelled = false;\n\n  const fn: Defer = (...args) => {\n    if (progress !== null) {\n      return;\n    }\n\n    progress = nextMicroTask.then(() => {\n      progress = null;\n\n      if (cancelled) {\n        cancelled = false;\n        return;\n      }\n\n      callback(...args);\n    });\n  };\n\n  fn.wait = () => {\n    if (progress === null) {\n      throw new Error(\n        'The deferred function should be called before calling `wait()`'\n      );\n    }\n\n    return progress;\n  };\n\n  fn.cancel = () => {\n    if (progress === null) {\n      return;\n    }\n\n    cancelled = true;\n  };\n\n  return fn;\n};\n\nexport default defer;\n","import isDomElement from './isDomElement';\n\n/**\n * Return the container. If it's a string, it is considered a\n * css selector and retrieves the first matching element. Otherwise\n * test if it validates that it's a correct DOMElement.\n *\n * @param {string|HTMLElement} selectorOrHTMLElement CSS Selector or container node.\n * @return {HTMLElement} Container node\n * @throws Error when the type is not correct\n */\nfunction getContainerNode(\n  selectorOrHTMLElement: string | HTMLElement\n): HTMLElement {\n  const isSelectorString = typeof selectorOrHTMLElement === 'string';\n  const domElement = isSelectorString\n    ? document.querySelector(selectorOrHTMLElement as string)\n    : selectorOrHTMLElement;\n\n  if (!isDomElement(domElement)) {\n    let errorMessage = 'Container must be `string` or `HTMLElement`.';\n\n    if (isSelectorString) {\n      errorMessage += ` Unable to find ${selectorOrHTMLElement}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n\n  return domElement;\n}\n\nexport default getContainerNode;\n","function isDomElement(object: any): object is HTMLElement {\n  return (\n    object instanceof HTMLElement || (Boolean(object) && object.nodeType > 0)\n  );\n}\n\nexport default isDomElement;\n","function isSpecialClick(event: MouseEvent): boolean {\n  const isMiddleClick = event.button === 1;\n\n  return (\n    isMiddleClick ||\n    event.altKey ||\n    event.ctrlKey ||\n    event.metaKey ||\n    event.shiftKey\n  );\n}\n\nexport default isSpecialClick;\n","function uniq<TItem>(array: TItem[]): TItem[] {\n  return array.filter((value, index, self) => self.indexOf(value) === index);\n}\n\nexport default uniq;\n","import uniq from './uniq';\nimport { HoganHelpers, Templates } from '../../types';\nimport { HoganOptions } from 'hogan.js';\n\ntype TemplatesConfig = {\n  helpers?: HoganHelpers;\n  compileOptions?: HoganOptions;\n};\n\nexport type PreparedTemplateProps<TTemplates extends Templates> = {\n  templatesConfig: TemplatesConfig;\n  templates: TTemplates;\n  useCustomCompileOptions: {\n    [TKey in keyof Partial<TTemplates>]: boolean;\n  };\n};\n\nfunction prepareTemplates<TTemplates extends Templates>(\n  // can not use = {} here, since the template could have different constraints\n  defaultTemplates?: TTemplates,\n  templates: Partial<TTemplates> = {}\n) {\n  const allKeys = uniq([\n    ...Object.keys(defaultTemplates || {}),\n    ...Object.keys(templates),\n  ]);\n\n  return allKeys.reduce(\n    (config, key: keyof TTemplates) => {\n      const defaultTemplate = defaultTemplates\n        ? defaultTemplates[key]\n        : undefined;\n      const customTemplate = templates[key];\n      const isCustomTemplate =\n        customTemplate !== undefined && customTemplate !== defaultTemplate;\n\n      config.templates[key] = isCustomTemplate\n        ? customTemplate! // typescript doesn't recognize that this condition asserts customTemplate is defined\n        : defaultTemplate!;\n\n      config.useCustomCompileOptions[key] = isCustomTemplate;\n\n      return config;\n    },\n    {\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      templates: {} as TTemplates,\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      useCustomCompileOptions: {} as {\n        [TKey in keyof TTemplates]: boolean;\n      },\n    }\n  );\n}\n\n/**\n * Prepares an object to be passed to the Template widget\n */\nfunction prepareTemplateProps<TTemplates extends Templates>({\n  defaultTemplates,\n  templates,\n  templatesConfig,\n}: {\n  defaultTemplates: TTemplates;\n  templates?: Partial<TTemplates>;\n  templatesConfig: TemplatesConfig;\n}): PreparedTemplateProps<TTemplates> {\n  const preparedTemplates = prepareTemplates(defaultTemplates, templates);\n\n  return {\n    templatesConfig,\n    ...preparedTemplates,\n  };\n}\n\nexport default prepareTemplateProps;\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// This file is for use with Node.js. See dist/ for browser files.\n\nvar Hogan = require('./compiler');\nHogan.Template = require('./template').Template;\nHogan.template = Hogan.Template;\nmodule.exports = Hogan;\n","import hogan, { HoganOptions, Template } from 'hogan.js';\nimport { Templates, HoganHelpers } from '../../types';\nimport { BindEventForHits } from './createSendEventForHits';\n\ntype TransformedHoganHelpers = {\n  [helper: string]: () => (text: string) => string;\n};\n\n// We add all our template helper methods to the template as lambdas. Note\n// that lambdas in Mustache are supposed to accept a second argument of\n// `render` to get the rendered value, not the literal `{{value}}`. But\n// this is currently broken (see https://github.com/twitter/hogan.js/issues/222).\nfunction transformHelpersToHogan(\n  helpers: HoganHelpers = {},\n  compileOptions?: HoganOptions,\n  data?: Record<string, any>\n) {\n  return Object.keys(helpers).reduce<TransformedHoganHelpers>(\n    (acc, helperKey) => ({\n      ...acc,\n      [helperKey]() {\n        return text => {\n          const render = value =>\n            (hogan.compile(value, compileOptions) as Template).render(this);\n\n          return helpers[helperKey].call(data, text, render);\n        };\n      },\n    }),\n    {}\n  );\n}\n\nfunction renderTemplate({\n  templates,\n  templateKey,\n  compileOptions,\n  helpers,\n  data,\n  bindEvent,\n}: {\n  templates: Templates;\n  templateKey: string;\n  compileOptions?: HoganOptions;\n  helpers?: HoganHelpers;\n  data?: Record<string, any>;\n  bindEvent?: BindEventForHits;\n}) {\n  const template = templates[templateKey];\n\n  if (typeof template !== 'string' && typeof template !== 'function') {\n    throw new Error(\n      `Template must be 'string' or 'function', was '${typeof template}' (key: ${templateKey})`\n    );\n  }\n\n  if (typeof template === 'function') {\n    return template(data, bindEvent!);\n  }\n\n  const transformedHelpers = transformHelpersToHogan(\n    helpers,\n    compileOptions,\n    data\n  );\n\n  return (hogan.compile(template, compileOptions) as Template)\n    .render({\n      ...data,\n      helpers: transformedHelpers,\n    })\n    .replace(/[ \\n\\r\\t\\f\\xA0]+/g, spaces =>\n      spaces.replace(/(^|\\xA0+)[^\\xA0]+/g, '$1 ')\n    )\n    .trim();\n}\n\nexport default renderTemplate;\n","// We aren't using the native `Array.prototype.find` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `find` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.find` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nfunction find<TItem>(\n  items: TItem[],\n  predicate: (value: TItem, index: number, obj: TItem[]) => boolean\n): TItem | undefined {\n  let value: TItem;\n  for (let i = 0; i < items.length; i++) {\n    value = items[i];\n    // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n    if (predicate(value, i, items)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n\nexport default find;\n","function unescapeRefinement(value: string | number): string {\n  return String(value).replace(/^\\\\-/, '-');\n}\n\nexport default unescapeRefinement;\n","import { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport find from './find';\nimport unescapeRefinement from './unescapeRefinement';\n\nexport type FacetRefinement = {\n  type:\n    | 'facet'\n    | 'exclude'\n    | 'disjunctive'\n    | 'hierarchical'\n    | 'numeric'\n    | 'tag'\n    | 'query';\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type QueryRefinement = {\n  type: 'query';\n  query: string;\n} & Pick<FacetRefinement, 'type' | 'attribute' | 'name'>;\n\nexport type NumericRefinement = {\n  type: 'numeric';\n  numericValue: number;\n  operator: '<' | '<=' | '=' | '!=' | '>=' | '>';\n} & FacetRefinement;\n\nexport type FacetExcludeRefinement = {\n  type: 'exclude';\n  exclude: boolean;\n} & FacetRefinement;\n\nexport type Refinement =\n  | FacetRefinement\n  | QueryRefinement\n  | NumericRefinement\n  | FacetExcludeRefinement;\n\nfunction getRefinement(\n  state: SearchParameters,\n  type: Refinement['type'],\n  attribute: Refinement['attribute'],\n  name: Refinement['name'],\n  resultsFacets: SearchResults['facets' | 'hierarchicalFacets'] = []\n): Refinement {\n  const res: Refinement = { type, attribute, name };\n  let facet: any = find(\n    resultsFacets as Array<{ name: string }>,\n    resultsFacet => resultsFacet.name === attribute\n  );\n  let count: number;\n\n  if (type === 'hierarchical') {\n    const facetDeclaration = state.getHierarchicalFacetByName(attribute);\n    const nameParts = name.split(facetDeclaration.separator);\n\n    const getFacetRefinement = (\n      facetData: any\n    ): ((refinementKey: string) => any) => (refinementKey: string): any =>\n      facetData[refinementKey];\n\n    for (let i = 0; facet !== undefined && i < nameParts.length; ++i) {\n      facet =\n        facet &&\n        facet.data &&\n        find(\n          Object.keys(facet.data).map(getFacetRefinement(facet.data)),\n          refinement => refinement.name === nameParts[i]\n        );\n    }\n\n    count = facet && facet.count;\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n\n  const exhaustive = facet && facet.exhaustive;\n\n  if (count !== undefined) {\n    res.count = count;\n  }\n\n  if (exhaustive !== undefined) {\n    res.exhaustive = exhaustive;\n  }\n\n  return res;\n}\n\nfunction getRefinements(\n  results: SearchResults | Record<string, never>,\n  state: SearchParameters,\n  includesQuery: boolean = false\n): Refinement[] {\n  const refinements: Refinement[] = [];\n  const {\n    facetsRefinements = {},\n    facetsExcludes = {},\n    disjunctiveFacetsRefinements = {},\n    hierarchicalFacetsRefinements = {},\n    numericRefinements = {},\n    tagRefinements = [],\n  } = state;\n\n  Object.keys(facetsRefinements).forEach(attribute => {\n    const refinementNames = facetsRefinements[attribute];\n\n    refinementNames.forEach(refinementName => {\n      refinements.push(\n        getRefinement(state, 'facet', attribute, refinementName, results.facets)\n      );\n    });\n  });\n\n  Object.keys(facetsExcludes).forEach(attribute => {\n    const refinementNames = facetsExcludes[attribute];\n\n    refinementNames.forEach(refinementName => {\n      refinements.push({\n        type: 'exclude',\n        attribute,\n        name: refinementName,\n        exclude: true,\n      });\n    });\n  });\n\n  Object.keys(disjunctiveFacetsRefinements).forEach(attribute => {\n    const refinementNames = disjunctiveFacetsRefinements[attribute];\n\n    refinementNames.forEach(refinementName => {\n      refinements.push(\n        getRefinement(\n          state,\n          'disjunctive',\n          attribute,\n          // We unescape any disjunctive refined values with `unescapeRefinement` because\n          // they can be escaped on negative numeric values with `escapeRefinement`.\n          unescapeRefinement(refinementName),\n          results.disjunctiveFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(hierarchicalFacetsRefinements).forEach(attribute => {\n    const refinementNames = hierarchicalFacetsRefinements[attribute];\n\n    refinementNames.forEach(refinement => {\n      refinements.push(\n        getRefinement(\n          state,\n          'hierarchical',\n          attribute,\n          refinement,\n          results.hierarchicalFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(numericRefinements).forEach(attribute => {\n    const operators = numericRefinements[attribute];\n\n    Object.keys(operators).forEach(operatorOriginal => {\n      const operator = operatorOriginal as SearchParameters.Operator;\n      const valueOrValues = operators[operator];\n      const refinementNames = Array.isArray(valueOrValues)\n        ? valueOrValues\n        : [valueOrValues];\n\n      refinementNames.forEach(refinementName => {\n        refinements.push({\n          type: 'numeric',\n          attribute,\n          name: `${refinementName}`,\n          numericValue: refinementName,\n          operator: operator as NumericRefinement['operator'],\n        });\n      });\n    });\n  });\n\n  tagRefinements.forEach(refinementName => {\n    refinements.push({ type: 'tag', attribute: '_tags', name: refinementName });\n  });\n\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query,\n    });\n  }\n\n  return refinements;\n}\n\nexport default getRefinements;\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\n/**\n * Clears the refinements of a SearchParameters object based on rules provided.\n * The included attributes list is applied before the excluded attributes list. If the list\n * is not provided, this list of all the currently refined attributes is used as included attributes.\n * @param {object} $0 parameters\n * @param {Helper} $0.helper instance of the Helper\n * @param {string[]} [$0.attributesToClear = []] list of parameters to clear\n * @returns {SearchParameters} search parameters with refinements cleared\n */\nfunction clearRefinements({\n  helper,\n  attributesToClear = [],\n}: {\n  helper: AlgoliaSearchHelper;\n  attributesToClear?: string[];\n}) {\n  let finalState = helper.state.setPage(0);\n\n  finalState = attributesToClear.reduce((state, attribute) => {\n    if (finalState.isNumericRefined(attribute)) {\n      return state.removeNumericRefinement(attribute);\n    }\n    if (finalState.isHierarchicalFacet(attribute)) {\n      return state.removeHierarchicalFacetRefinement(attribute);\n    }\n    if (finalState.isDisjunctiveFacet(attribute)) {\n      return state.removeDisjunctiveFacetRefinement(attribute);\n    }\n    if (finalState.isConjunctiveFacet(attribute)) {\n      return state.removeFacetRefinement(attribute);\n    }\n\n    return state;\n  }, finalState);\n\n  if (attributesToClear.indexOf('query') !== -1) {\n    finalState = finalState.setQuery('');\n  }\n\n  return finalState;\n}\n\nexport default clearRefinements;\n","function escapeRefinement(value: number): string | number;\nfunction escapeRefinement(value: string): string;\nfunction escapeRefinement(value: string | number): string | number {\n  if (typeof value === 'number' && value < 0) {\n    value = String(value).replace(/^-/, '\\\\-');\n  }\n\n  return value;\n}\n\nexport default escapeRefinement;\n","import { Renderer } from '../../types/connector';\nimport getObjectType from './getObjectType';\n\nfunction checkRendering<TRenderOptions, TWidgetParams>(\n  rendering: Renderer<TRenderOptions, TWidgetParams>,\n  usage: string\n): void {\n  if (rendering === undefined || typeof rendering !== 'function') {\n    throw new Error(`The render function is not valid (received type ${getObjectType(\n      rendering\n    )}).\n\n${usage}`);\n  }\n}\n\nexport default checkRendering;\n","function getObjectType(object: unknown): string {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}\n\nexport default getObjectType;\n","function noop(..._args: any[]): void {}\n\nexport default noop;\n","function getPropertyByPath(\n  object: Record<string, any> | undefined,\n  path: string | string[]\n): any {\n  const parts = Array.isArray(path) ? path : path.split('.');\n\n  return parts.reduce((current, key) => current && current[key], object);\n}\n\nexport default getPropertyByPath;\n","// This is the `Number.isFinite()` polyfill recommended by MDN.\n// We do not provide any tests for this function.\n// See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nfunction isFiniteNumber(value: any): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\nexport default isFiniteNumber;\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/master/isPlainObject.js\n */\n\nfunction getTag(value: any): string {\n  if (value === null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nfunction isObjectLike(value: any): boolean {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Checks if `value` is a plain object.\n *\n * A plain object is an object created by the `Object`\n * constructor or with a `[[Prototype]]` of `null`.\n */\nfunction isPlainObject(value: any): boolean {\n  if (!isObjectLike(value) || getTag(value) !== '[object Object]') {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n\n  let proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n\nexport default isPlainObject;\n","type RangeOptions = {\n  start?: number;\n  end: number;\n  step?: number;\n};\n\nfunction range({ start = 0, end, step = 1 }: RangeOptions): number[] {\n  // We can't divide by 0 so we re-assign the step to 1 if it happens.\n  const limitStep = step === 0 ? 1 : step;\n\n  // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n  const arrayLength = Math.round((end - start) / limitStep);\n\n  return [...Array(arrayLength)].map(\n    (_, current) => start + current * limitStep\n  );\n}\n\nexport default range;\n","function isPrimitive(obj: any): boolean {\n  return obj !== Object(obj);\n}\n\nfunction isEqual(first: any, second: any): boolean {\n  if (first === second) {\n    return true;\n  }\n\n  if (\n    isPrimitive(first) ||\n    isPrimitive(second) ||\n    typeof first === 'function' ||\n    typeof second === 'function'\n  ) {\n    return first === second;\n  }\n\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n\n  for (const key of Object.keys(first)) {\n    if (!(key in second)) {\n      return false;\n    }\n\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default isEqual;\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/escape.js\n */\n\n// Used to map characters to HTML entities.\nconst htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexUnescapedHtml = /[&<>\"']/g;\nconst regexHasUnescapedHtml = RegExp(regexUnescapedHtml.source);\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n */\nfunction escape(value: string): string {\n  return value && regexHasUnescapedHtml.test(value)\n    ? value.replace(regexUnescapedHtml, character => htmlEscapes[character])\n    : value;\n}\n\nexport default escape;\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n\n// Used to map HTML entities to characters.\nconst htmlEscapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\",\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexEscapedHtml = /&(amp|quot|lt|gt|#39);/g;\nconst regexHasEscapedHtml = RegExp(regexEscapedHtml.source);\n\n/**\n * Converts the HTML entities \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * characters.\n */\nexport default function unescape(value: string): string {\n  return value && regexHasEscapedHtml.test(value)\n    ? value.replace(regexEscapedHtml, character => htmlEscapes[character])\n    : value;\n}\n","import escape from './escape';\nimport isPlainObject from './isPlainObject';\nimport { Hit, FacetHit, EscapedHits } from '../../types';\n\nexport const TAG_PLACEHOLDER = {\n  highlightPreTag: '__ais-highlight__',\n  highlightPostTag: '__/ais-highlight__',\n};\n\nexport const TAG_REPLACEMENT = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nfunction replaceTagsAndEscape(value: string): string {\n  return escape(value)\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPreTag, 'g'),\n      TAG_REPLACEMENT.highlightPreTag\n    )\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPostTag, 'g'),\n      TAG_REPLACEMENT.highlightPostTag\n    );\n}\n\nfunction recursiveEscape(input: any): any {\n  if (isPlainObject(input) && typeof input.value !== 'string') {\n    return Object.keys(input).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: recursiveEscape(input[key]),\n      }),\n      {}\n    );\n  }\n\n  if (Array.isArray(input)) {\n    return input.map(recursiveEscape);\n  }\n\n  return {\n    ...input,\n    value: replaceTagsAndEscape(input.value),\n  };\n}\n\nexport function escapeHits<THit extends Hit>(\n  hits: THit[] | EscapedHits<THit>\n): EscapedHits<THit> {\n  if ((hits as any).__escaped === undefined) {\n    // We don't override the value on hit because it will mutate the raw results\n    // instead we make a shallow copy and we assign the escaped values on it.\n    hits = hits.map(({ ...hit }) => {\n      if (hit._highlightResult) {\n        hit._highlightResult = recursiveEscape(hit._highlightResult);\n      }\n\n      if (hit._snippetResult) {\n        hit._snippetResult = recursiveEscape(hit._snippetResult);\n      }\n\n      return hit;\n    });\n\n    (hits as any).__escaped = true;\n  }\n\n  return (hits as unknown) as EscapedHits<THit>;\n}\n\nexport function escapeFacets(facetHits: FacetHit[]): FacetHit[] {\n  return facetHits.map(h => ({\n    ...h,\n    highlighted: replaceTagsAndEscape(h.highlighted),\n  }));\n}\n","import { HighlightedParts } from '../../types';\nimport { TAG_REPLACEMENT } from './escape-highlight';\n\nexport default function concatHighlightedParts(parts: HighlightedParts[]) {\n  const { highlightPreTag, highlightPostTag } = TAG_REPLACEMENT;\n\n  return parts\n    .map(part =>\n      part.isHighlighted\n        ? highlightPreTag + part.value + highlightPostTag\n        : part.value\n    )\n    .join('');\n}\n","import { TAG_REPLACEMENT } from './escape-highlight';\n\nexport default function getHighlightedParts(highlightedValue: string) {\n  const { highlightPostTag, highlightPreTag } = TAG_REPLACEMENT;\n\n  const splitByPreTag = highlightedValue.split(highlightPreTag);\n  const firstValue = splitByPreTag.shift();\n  const elements = !firstValue\n    ? []\n    : [{ value: firstValue, isHighlighted: false }];\n\n  splitByPreTag.forEach(split => {\n    const splitByPostTag = split.split(highlightPostTag);\n\n    elements.push({\n      value: splitByPostTag[0],\n      isHighlighted: true,\n    });\n\n    if (splitByPostTag[1] !== '') {\n      elements.push({\n        value: splitByPostTag[1],\n        isHighlighted: false,\n      });\n    }\n  });\n\n  return elements;\n}\n","import unescape from './unescape';\nimport { HighlightedParts } from '../../types';\n\nconst hasAlphanumeric = new RegExp(/\\w/i);\n\nexport default function getHighlightFromSiblings(\n  parts: HighlightedParts[],\n  i: number\n) {\n  const current = parts[i];\n  const isNextHighlighted = parts[i + 1]?.isHighlighted || true;\n  const isPreviousHighlighted = parts[i - 1]?.isHighlighted || true;\n\n  if (\n    !hasAlphanumeric.test(unescape(current.value)) &&\n    isPreviousHighlighted === isNextHighlighted\n  ) {\n    return isPreviousHighlighted;\n  }\n\n  return current.isHighlighted;\n}\n","import { HighlightedParts } from '../../types';\nimport getHighlightFromSiblings from './getHighlightFromSiblings';\n\nexport default function reverseHighlightedParts(parts: HighlightedParts[]) {\n  if (!parts.some(part => part.isHighlighted)) {\n    return parts.map(part => ({ ...part, isHighlighted: false }));\n  }\n\n  return parts.map((part, i) => ({\n    ...part,\n    isHighlighted: !getHighlightFromSiblings(parts, i),\n  }));\n}\n","import { SearchParameters } from 'algoliasearch-helper';\nimport findIndex from './findIndex';\nimport uniq from './uniq';\n\ntype Merger = (\n  left: SearchParameters,\n  right: SearchParameters\n) => SearchParameters;\n\nconst mergeWithRest: Merger = (left, right) => {\n  const {\n    facets,\n    disjunctiveFacets,\n    facetsRefinements,\n    facetsExcludes,\n    disjunctiveFacetsRefinements,\n    numericRefinements,\n    tagRefinements,\n    hierarchicalFacets,\n    hierarchicalFacetsRefinements,\n    ruleContexts,\n    ...rest\n  } = right;\n\n  return left.setQueryParameters(rest);\n};\n\n// Merge facets\nconst mergeFacets: Merger = (left, right) =>\n  right.facets!.reduce((_, name) => _.addFacet(name), left);\n\nconst mergeDisjunctiveFacets: Merger = (left, right) =>\n  right.disjunctiveFacets!.reduce(\n    (_, name) => _.addDisjunctiveFacet(name),\n    left\n  );\n\nconst mergeHierarchicalFacets: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacets: right.hierarchicalFacets.reduce((facets, facet) => {\n      const index = findIndex(facets, _ => _.name === facet.name);\n\n      if (index === -1) {\n        return facets.concat(facet);\n      }\n\n      const nextFacets = facets.slice();\n      nextFacets.splice(index, 1, facet);\n\n      return nextFacets;\n    }, left.hierarchicalFacets),\n  });\n\n// Merge facet refinements\nconst mergeTagRefinements: Merger = (left, right) =>\n  right.tagRefinements!.reduce((_, value) => _.addTagRefinement(value), left);\n\nconst mergeFacetRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsRefinements: {\n      ...left.facetsRefinements,\n      ...right.facetsRefinements,\n    },\n  });\n\nconst mergeFacetsExcludes: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsExcludes: {\n      ...left.facetsExcludes,\n      ...right.facetsExcludes,\n    },\n  });\n\nconst mergeDisjunctiveFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    disjunctiveFacetsRefinements: {\n      ...left.disjunctiveFacetsRefinements,\n      ...right.disjunctiveFacetsRefinements,\n    },\n  });\n\nconst mergeNumericRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    numericRefinements: {\n      ...left.numericRefinements,\n      ...right.numericRefinements,\n    },\n  });\n\nconst mergeHierarchicalFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacetsRefinements: {\n      ...left.hierarchicalFacetsRefinements,\n      ...right.hierarchicalFacetsRefinements,\n    },\n  });\n\nconst mergeRuleContexts: Merger = (left, right) => {\n  const ruleContexts: string[] = uniq(\n    ([] as any)\n      .concat(left.ruleContexts)\n      .concat(right.ruleContexts)\n      .filter(Boolean)\n  );\n\n  if (ruleContexts.length > 0) {\n    return left.setQueryParameters({\n      ruleContexts,\n    });\n  }\n\n  return left;\n};\n\nconst merge = (...parameters: SearchParameters[]): SearchParameters =>\n  parameters.reduce((left, right) => {\n    const hierarchicalFacetsRefinementsMerged = mergeHierarchicalFacetsRefinements(\n      left,\n      right\n    );\n    const hierarchicalFacetsMerged = mergeHierarchicalFacets(\n      hierarchicalFacetsRefinementsMerged,\n      right\n    );\n    const tagRefinementsMerged = mergeTagRefinements(\n      hierarchicalFacetsMerged,\n      right\n    );\n    const numericRefinementsMerged = mergeNumericRefinements(\n      tagRefinementsMerged,\n      right\n    );\n    const disjunctiveFacetsRefinementsMerged = mergeDisjunctiveFacetsRefinements(\n      numericRefinementsMerged,\n      right\n    );\n    const facetsExcludesMerged = mergeFacetsExcludes(\n      disjunctiveFacetsRefinementsMerged,\n      right\n    );\n    const facetRefinementsMerged = mergeFacetRefinements(\n      facetsExcludesMerged,\n      right\n    );\n    const disjunctiveFacetsMerged = mergeDisjunctiveFacets(\n      facetRefinementsMerged,\n      right\n    );\n    const ruleContextsMerged = mergeRuleContexts(\n      disjunctiveFacetsMerged,\n      right\n    );\n    const facetsMerged = mergeFacets(ruleContextsMerged, right);\n\n    return mergeWithRest(facetsMerged, right);\n  });\n\nexport default merge;\n","// We aren't using the native `Array.prototype.findIndex` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `findIndex` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.findIndex` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\nfunction findIndex<TItem>(\n  array: TItem[],\n  comparator: (value: TItem) => boolean\n): number {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (let i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport default findIndex;\n","function toArray(value: any) {\n  return Array.isArray(value) ? value : [value];\n}\n\nexport default toArray;\n","type WidgetParam = {\n  name: string;\n  connector?: boolean;\n};\n\nexport const createDocumentationLink = ({\n  name,\n  connector = false,\n}: WidgetParam): string => {\n  return [\n    'https://www.algolia.com/doc/api-reference/widgets/',\n    name,\n    '/js/',\n    connector ? '#connector' : '',\n  ].join('');\n};\n\ntype DocumentationMessageGenerator = (message?: string) => string;\n\nexport const createDocumentationMessageGenerator = (\n  ...widgets: WidgetParam[]\n): DocumentationMessageGenerator => {\n  const links = widgets\n    .map(widget => createDocumentationLink(widget))\n    .join(', ');\n\n  return (message?: string) =>\n    [message, `See documentation: ${links}`].filter(Boolean).join('\\n\\n');\n};\n","const latLngRegExp = /^(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)$/;\n\nexport function aroundLatLngToPosition(value: string) {\n  const pattern = value.match(latLngRegExp);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!pattern) {\n    throw new Error(`Invalid value for \"aroundLatLng\" parameter: \"${value}\"`);\n  }\n\n  return {\n    lat: parseFloat(pattern[1]),\n    lng: parseFloat(pattern[2]),\n  };\n}\n\nexport type LatLng = Array<[number, number, number, number]>;\n\nfunction insideBoundingBoxArrayToBoundingBox(value: LatLng) {\n  const [\n    [neLat, neLng, swLat, swLng] = [undefined, undefined, undefined, undefined],\n  ] = value;\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: [${value}]`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nfunction insideBoundingBoxStringToBoundingBox(value: string) {\n  const [neLat, neLng, swLat, swLng] = value.split(',').map(parseFloat);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: \"${value}\"`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nexport function insideBoundingBoxToBoundingBox(value: string | LatLng) {\n  if (Array.isArray(value)) {\n    return insideBoundingBoxArrayToBoundingBox(value);\n  }\n\n  return insideBoundingBoxStringToBoundingBox(value);\n}\n","import { AlgoliaHit } from '../../types';\n\nexport function addAbsolutePosition<THit extends AlgoliaHit>(\n  hits: THit[],\n  page: number,\n  hitsPerPage: number\n): Array<THit & { __position: number }> {\n  return hits.map((hit, idx) => ({\n    ...hit,\n    __position: hitsPerPage * page + idx + 1,\n  }));\n}\n","import { AlgoliaHit } from '../../types';\n\nexport function addQueryID<THit extends AlgoliaHit>(\n  hits: THit[],\n  queryID?: string\n): Array<THit & { __queryID?: string }> {\n  if (!queryID) {\n    return hits;\n  }\n  return hits.map(hit => ({\n    ...hit,\n    __queryID: queryID,\n  }));\n}\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\nimport { InstantSearch } from '../../types';\nimport isFacetRefined from './isFacetRefined';\n\ntype BuiltInSendEventForFacet = (\n  eventType: string,\n  facetValue: string,\n  eventName?: string\n) => void;\ntype CustomSendEventForFacet = (customPayload: any) => void;\n\nexport type SendEventForFacet = BuiltInSendEventForFacet &\n  CustomSendEventForFacet;\n\nexport function createSendEventForFacet({\n  instantSearchInstance,\n  helper,\n  attribute,\n  widgetType,\n}: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string;\n  widgetType: string;\n}): SendEventForFacet {\n  const sendEventForFacet: SendEventForFacet = (...args) => {\n    const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n    if (args.length === 1 && typeof args[0] === 'object') {\n      instantSearchInstance.sendEventToInsights(args[0]);\n    } else if (\n      eventType === 'click' &&\n      (args.length === 2 || args.length === 3)\n    ) {\n      if (!isFacetRefined(helper, attribute, facetValue)) {\n        // send event only when the facet is being checked \"ON\"\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType,\n          eventType,\n          payload: {\n            eventName,\n            index: helper.getIndex(),\n            filters: [`${attribute}:${facetValue}`],\n          },\n          attribute,\n        });\n      }\n    } else if (__DEV__) {\n      throw new Error(\n        `You need to pass two arguments like:\n  sendEvent('click', facetValue);\n\nIf you want to send a custom payload, you can pass one object: sendEvent(customPayload);\n`\n      );\n    }\n  };\n  return sendEventForFacet;\n}\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nexport default function isFacetRefined(\n  helper: AlgoliaSearchHelper,\n  facet: string,\n  value: string\n) {\n  if (helper.state.isHierarchicalFacet(facet)) {\n    return helper.state.isHierarchicalFacetRefined(facet, value);\n  } else if (helper.state.isConjunctiveFacet(facet)) {\n    return helper.state.isFacetRefined(facet, value);\n  } else {\n    return helper.state.isDisjunctiveFacetRefined(facet, value);\n  }\n}\n","export function serializePayload(payload: Record<string, unknown>): string {\n  return btoa(encodeURIComponent(JSON.stringify(payload)));\n}\n\nexport function deserializePayload(payload: string): Record<string, unknown> {\n  return JSON.parse(decodeURIComponent(atob(payload)));\n}\n","import { InstantSearch, Hit, Hits, EscapedHits } from '../../types';\nimport { serializePayload } from '../../lib/utils/serializer';\nimport { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\n\ntype BuiltInSendEventForHits = (\n  eventType: string,\n  hits: Hit | Hits,\n  eventName?: string\n) => void;\ntype CustomSendEventForHits = (customPayload: any) => void;\nexport type SendEventForHits = BuiltInSendEventForHits & CustomSendEventForHits;\n\ntype BuiltInBindEventForHits = (\n  eventType: string,\n  hits: Hit | Hits,\n  eventName?: string\n) => string;\ntype CustomBindEventForHits = (customPayload: any) => string;\nexport type BindEventForHits = BuiltInBindEventForHits & CustomBindEventForHits;\n\ntype BuildPayload = (options: {\n  widgetType: string;\n  index: string;\n  methodName: 'sendEvent' | 'bindEvent';\n  args: any[];\n}) => InsightsEvent | null;\n\nconst buildPayload: BuildPayload = ({\n  index,\n  widgetType,\n  methodName,\n  args,\n}) => {\n  if (args.length === 1 && typeof args[0] === 'object') {\n    return args[0];\n  }\n  const eventType: string = args[0];\n  const hits: Hit | Hits | EscapedHits = args[1];\n  const eventName: string | undefined = args[2];\n  if (!hits) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass hit or hits as the second argument like:\n  ${methodName}(eventType, hit);\n  `\n      );\n    } else {\n      return null;\n    }\n  }\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass eventName as the third argument for 'click' or 'conversion' events like:\n  ${methodName}('click', hit, 'Product Purchased');\n\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\n  `\n      );\n    } else {\n      return null;\n    }\n  }\n  const hitsArray: Hits = Array.isArray(hits)\n    ? removeEscapedFromHits(hits)\n    : [hits];\n\n  if (hitsArray.length === 0) {\n    return null;\n  }\n  const queryID = hitsArray[0].__queryID;\n  const objectIDs = hitsArray.map(hit => hit.objectID);\n  const positions = hitsArray.map(hit => hit.__position);\n\n  if (eventType === 'view') {\n    return {\n      insightsMethod: 'viewedObjectIDs',\n      widgetType,\n      eventType,\n      payload: {\n        eventName: eventName || 'Hits Viewed',\n        index,\n        objectIDs,\n      },\n      hits: hitsArray,\n    };\n  } else if (eventType === 'click') {\n    return {\n      insightsMethod: 'clickedObjectIDsAfterSearch',\n      widgetType,\n      eventType,\n      payload: {\n        eventName,\n        index,\n        queryID,\n        objectIDs,\n        positions,\n      },\n      hits: hitsArray,\n    };\n  } else if (eventType === 'conversion') {\n    return {\n      insightsMethod: 'convertedObjectIDsAfterSearch',\n      widgetType,\n      eventType,\n      payload: {\n        eventName,\n        index,\n        queryID,\n        objectIDs,\n      },\n      hits: hitsArray,\n    };\n  } else if (__DEV__) {\n    throw new Error(`eventType(\"${eventType}\") is not supported.\n    If you want to send a custom payload, you can pass one object: ${methodName}(customPayload);\n    `);\n  } else {\n    return null;\n  }\n};\n\nfunction removeEscapedFromHits(hits: Hits | EscapedHits): Hits {\n  // this returns without `hits.__escaped`\n  // and this way it doesn't mutate the original `hits`\n  return hits.map(hit => hit);\n}\n\nexport function createSendEventForHits({\n  instantSearchInstance,\n  index,\n  widgetType,\n}: {\n  instantSearchInstance: InstantSearch;\n  index: string;\n  widgetType: string;\n}): SendEventForHits {\n  const sendEventForHits: SendEventForHits = (...args) => {\n    const payload = buildPayload({\n      widgetType,\n      index,\n      methodName: 'sendEvent',\n      args,\n    });\n    if (payload) {\n      instantSearchInstance.sendEventToInsights(payload);\n    }\n  };\n  return sendEventForHits;\n}\n\nexport function createBindEventForHits({\n  index,\n  widgetType,\n}: {\n  index: string;\n  widgetType: string;\n}): BindEventForHits {\n  const bindEventForHits: BindEventForHits = (...args) => {\n    const payload = buildPayload({\n      widgetType,\n      index,\n      methodName: 'bindEvent',\n      args,\n    });\n    return payload ? `data-insights-event=${serializePayload(payload)}` : '';\n  };\n  return bindEventForHits;\n}\n","import { SearchParameters } from 'algoliasearch-helper';\n\nexport function convertNumericRefinementsToFilters(\n  state: SearchParameters | null,\n  attribute: string\n) {\n  if (!state) {\n    return null;\n  }\n  const filtersObj = state.numericRefinements[attribute];\n  /*\n    filtersObj === {\n      \"<=\": [10],\n      \"=\": [],\n      \">=\": [5]\n    }\n  */\n  const filters: string[] = [];\n  Object.keys(filtersObj)\n    .filter(\n      operator =>\n        Array.isArray(filtersObj[operator]) && filtersObj[operator].length > 0\n    )\n    .forEach(operator => {\n      filtersObj[operator].forEach(value => {\n        filters.push(`${attribute}${operator}${value}`);\n      });\n    });\n  return filters;\n}\n","type Func = (...args: any[]) => any;\n\ntype DebouncedFunction<TFunction extends Func> = (\n  this: ThisParameterType<TFunction>,\n  ...args: Parameters<TFunction>\n) => Promise<ReturnType<TFunction>>;\n\n// Debounce a function call to the trailing edge.\n// The debounced function returns a promise.\nexport function debounce<TFunction extends Func>(\n  func: TFunction,\n  wait: number\n): DebouncedFunction<TFunction> {\n  let lastTimeout: ReturnType<typeof setTimeout> | null = null;\n  return function(...args) {\n    return new Promise((resolve, reject) => {\n      if (lastTimeout) {\n        clearTimeout(lastTimeout);\n      }\n      lastTimeout = setTimeout(() => {\n        lastTimeout = null;\n        Promise.resolve(func(...args))\n          .then(resolve)\n          .catch(reject);\n      }, wait);\n    });\n  };\n}\n","import { InitOptions, Widget } from '../../types';\nimport { IndexWidget } from '../../widgets/index/index';\n\nexport function getWidgetAttribute(\n  widget: Widget | IndexWidget,\n  initOptions: InitOptions\n): string {\n  try {\n    // assume the type to be the correct one, but throw a nice error if it isn't the case\n    type WidgetWithAttribute = Widget<{\n      $$type: string;\n      renderState: Record<string, unknown>;\n      indexRenderState: Record<string, unknown>;\n      widgetParams: { attribute: string } | { attributes: string[] };\n    }>;\n\n    const {\n      widgetParams,\n    } = (widget as WidgetWithAttribute).getWidgetRenderState(initOptions);\n\n    const attribute =\n      'attribute' in widgetParams\n        ? widgetParams.attribute\n        : widgetParams.attributes[0];\n\n    if (typeof attribute !== 'string') throw new Error();\n\n    return attribute;\n  } catch (e) {\n    throw new Error(\n      `Could not find the attribute of the widget:\n\n${JSON.stringify(widget)}\n\nPlease check whether the widget's getWidgetRenderState returns widgetParams.attribute correctly.`\n    );\n  }\n}\n","import algoliasearchHelper, {\n  AlgoliaSearchHelper as Helper,\n  DerivedHelper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\nimport {\n  InstantSearch,\n  UiState,\n  IndexUiState,\n  Widget,\n  InitOptions,\n  RenderOptions,\n  ScopedResult,\n  SearchClient,\n} from '../../types';\nimport {\n  checkIndexUiState,\n  createDocumentationMessageGenerator,\n  resolveSearchParameters,\n  mergeSearchParameters,\n  warning,\n} from '../../lib/utils';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'index-widget',\n});\n\nexport type IndexWidgetParams = {\n  indexName: string;\n  indexId?: string;\n};\n\ntype IndexInitOptions = Pick<\n  InitOptions,\n  'instantSearchInstance' | 'parent' | 'uiState'\n>;\n\ntype IndexRenderOptions = Pick<RenderOptions, 'instantSearchInstance'>;\n\ntype WidgetSearchParametersOptions = Parameters<\n  NonNullable<Widget['getWidgetSearchParameters']>\n>[1];\ntype LocalWidgetSearchParametersOptions = WidgetSearchParametersOptions & {\n  initialSearchParameters: SearchParameters;\n};\n\nexport type IndexWidgetDescription = {\n  $$type: 'ais.index';\n  $$widgetType: 'ais.index';\n};\n\nexport type IndexWidget = Omit<\n  Widget<IndexWidgetDescription & { widgetParams: IndexWidgetParams }>,\n  'getWidgetUiState' | 'getWidgetState'\n> & {\n  getIndexName(): string;\n  getIndexId(): string;\n  getHelper(): Helper | null;\n  getResults(): SearchResults | null;\n  getScopedResults(): ScopedResult[];\n  getParent(): IndexWidget | null;\n  getWidgets(): Array<Widget | IndexWidget>;\n  createURL(state: SearchParameters): string;\n\n  addWidgets(widgets: Array<Widget | IndexWidget>): IndexWidget;\n  removeWidgets(widgets: Array<Widget | IndexWidget>): IndexWidget;\n\n  init(options: IndexInitOptions): void;\n  render(options: IndexRenderOptions): void;\n  dispose(): void;\n  /**\n   * @deprecated\n   */\n  getWidgetState(uiState: UiState): UiState;\n  getWidgetUiState(uiState: UiState): UiState;\n  getWidgetSearchParameters(\n    searchParameters: SearchParameters,\n    searchParametersOptions: { uiState: IndexUiState }\n  ): SearchParameters;\n  refreshUiState(): void;\n};\n\nexport function isIndexWidget(\n  widget: Widget | IndexWidget\n): widget is IndexWidget {\n  return widget.$$type === 'ais.index';\n}\n\n/**\n * This is the same content as helper._change / setState, but allowing for extra\n * UiState to be synchronized.\n * see: https://github.com/algolia/algoliasearch-helper-js/blob/6b835ffd07742f2d6b314022cce6848f5cfecd4a/src/algoliasearch.helper.js#L1311-L1324\n */\nfunction privateHelperSetState(\n  helper: AlgoliaSearchHelper,\n  {\n    state,\n    isPageReset,\n    _uiState,\n  }: {\n    state: SearchParameters;\n    isPageReset?: boolean;\n    _uiState?: IndexUiState;\n  }\n) {\n  if (state !== helper.state) {\n    helper.state = state;\n\n    helper.emit('change', {\n      state: helper.state,\n      results: helper.lastResults,\n      isPageReset,\n      _uiState,\n    });\n  }\n}\n\ntype WidgetUiStateOptions = Parameters<\n  NonNullable<Widget['getWidgetUiState']>\n>[1];\n\nfunction getLocalWidgetsUiState(\n  widgets: Array<Widget | IndexWidget>,\n  widgetStateOptions: WidgetUiStateOptions,\n  initialUiState: IndexUiState = {}\n) {\n  return widgets.reduce((uiState, widget) => {\n    if (isIndexWidget(widget)) {\n      return uiState;\n    }\n\n    if (!widget.getWidgetUiState && !widget.getWidgetState) {\n      return uiState;\n    }\n\n    if (widget.getWidgetUiState) {\n      return widget.getWidgetUiState(uiState, widgetStateOptions);\n    }\n\n    return widget.getWidgetState!(uiState, widgetStateOptions);\n  }, initialUiState);\n}\n\nfunction getLocalWidgetsSearchParameters(\n  widgets: Array<Widget | IndexWidget>,\n  widgetSearchParametersOptions: LocalWidgetSearchParametersOptions\n): SearchParameters {\n  const { initialSearchParameters, ...rest } = widgetSearchParametersOptions;\n\n  return widgets\n    .filter(widget => !isIndexWidget(widget))\n    .reduce<SearchParameters>((state, widget) => {\n      if (!widget.getWidgetSearchParameters) {\n        return state;\n      }\n\n      return widget.getWidgetSearchParameters(state, rest);\n    }, initialSearchParameters);\n}\n\nfunction resetPageFromWidgets(widgets: Array<Widget | IndexWidget>): void {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  if (indexWidgets.length === 0) {\n    return;\n  }\n\n  indexWidgets.forEach(widget => {\n    const widgetHelper = widget.getHelper()!;\n\n    privateHelperSetState(widgetHelper, {\n      state: widgetHelper.state.resetPage(),\n      isPageReset: true,\n    });\n\n    resetPageFromWidgets(widget.getWidgets());\n  });\n}\n\nfunction resolveScopedResultsFromWidgets(\n  widgets: Array<Widget | IndexWidget>\n): ScopedResult[] {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  return indexWidgets.reduce<ScopedResult[]>((scopedResults, current) => {\n    return scopedResults.concat(\n      {\n        indexId: current.getIndexId(),\n        results: current.getResults()!,\n        helper: current.getHelper()!,\n      },\n      ...resolveScopedResultsFromWidgets(current.getWidgets())\n    );\n  }, []);\n}\n\nconst index = (widgetParams: IndexWidgetParams): IndexWidget => {\n  if (widgetParams === undefined || widgetParams.indexName === undefined) {\n    throw new Error(withUsage('The `indexName` option is required.'));\n  }\n\n  const { indexName, indexId = indexName } = widgetParams;\n\n  let localWidgets: Array<Widget | IndexWidget> = [];\n  let localUiState: IndexUiState = {};\n  let localInstantSearchInstance: InstantSearch | null = null;\n  let localParent: IndexWidget | null = null;\n  let helper: Helper | null = null;\n  let derivedHelper: DerivedHelper | null = null;\n\n  return {\n    $$type: 'ais.index',\n    $$widgetType: 'ais.index',\n\n    getIndexName() {\n      return indexName;\n    },\n\n    getIndexId() {\n      return indexId;\n    },\n\n    getHelper() {\n      return helper;\n    },\n\n    getResults() {\n      return derivedHelper && derivedHelper.lastResults;\n    },\n\n    getScopedResults() {\n      const widgetParent = this.getParent();\n\n      // If the widget is the root, we consider itself as the only sibling.\n      const widgetSiblings = widgetParent ? widgetParent.getWidgets() : [this];\n\n      return resolveScopedResultsFromWidgets(widgetSiblings);\n    },\n\n    getParent() {\n      return localParent;\n    },\n\n    createURL(nextState: SearchParameters) {\n      return localInstantSearchInstance!._createURL!({\n        [indexId]: getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        }),\n      });\n    },\n\n    getWidgets() {\n      return localWidgets;\n    },\n\n    addWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `addWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (\n        widgets.some(\n          widget =>\n            typeof widget.init !== 'function' &&\n            typeof widget.render !== 'function'\n        )\n      ) {\n        throw new Error(\n          withUsage(\n            'The widget definition expects a `render` and/or an `init` method.'\n          )\n        );\n      }\n\n      localWidgets = localWidgets.concat(widgets);\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        privateHelperSetState(helper!, {\n          state: getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: helper!.state,\n          }),\n          _uiState: localUiState,\n        });\n\n        // We compute the render state before calling `init` in a separate loop\n        // to construct the whole render state object that is then passed to\n        // `init`.\n        widgets.forEach(widget => {\n          if (widget.getRenderState) {\n            const renderState = widget.getRenderState(\n              localInstantSearchInstance!.renderState[this.getIndexId()] || {},\n              {\n                uiState: localInstantSearchInstance!._initialUiState,\n                helper: this.getHelper()!,\n                parent: this,\n                instantSearchInstance: localInstantSearchInstance!,\n                state: helper!.state,\n                renderState: localInstantSearchInstance!.renderState,\n                templatesConfig: localInstantSearchInstance!.templatesConfig,\n                createURL: this.createURL,\n                scopedResults: [],\n                searchMetadata: {\n                  isSearchStalled: localInstantSearchInstance!._isSearchStalled,\n                },\n              }\n            );\n\n            storeRenderState({\n              renderState,\n              instantSearchInstance: localInstantSearchInstance!,\n              parent: this,\n            });\n          }\n        });\n\n        widgets.forEach(widget => {\n          if (widget.init) {\n            widget.init({\n              helper: helper!,\n              parent: this,\n              uiState: localInstantSearchInstance!._initialUiState,\n              instantSearchInstance: localInstantSearchInstance!,\n              state: helper!.state,\n              renderState: localInstantSearchInstance!.renderState,\n              templatesConfig: localInstantSearchInstance!.templatesConfig,\n              createURL: this.createURL,\n              scopedResults: [],\n              searchMetadata: {\n                isSearchStalled: localInstantSearchInstance!._isSearchStalled,\n              },\n            });\n          }\n        });\n\n        localInstantSearchInstance.scheduleSearch();\n      }\n\n      return this;\n    },\n\n    removeWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `removeWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (widgets.some(widget => typeof widget.dispose !== 'function')) {\n        throw new Error(\n          withUsage('The widget definition expects a `dispose` method.')\n        );\n      }\n\n      localWidgets = localWidgets.filter(\n        widget => widgets.indexOf(widget) === -1\n      );\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        const nextState = widgets.reduce((state, widget) => {\n          // the `dispose` method exists at this point we already assert it\n          const next = widget.dispose!({\n            helper: helper!,\n            state,\n            parent: this,\n          });\n\n          return next || state;\n        }, helper!.state);\n\n        localUiState = getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        });\n\n        helper!.setState(\n          getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: nextState,\n          })\n        );\n\n        if (localWidgets.length) {\n          localInstantSearchInstance.scheduleSearch();\n        }\n      }\n\n      return this;\n    },\n\n    init({ instantSearchInstance, parent, uiState }: IndexInitOptions) {\n      if (helper !== null) {\n        // helper is already initialized, therefore we do not need to set up\n        // any listeners\n        return;\n      }\n\n      localInstantSearchInstance = instantSearchInstance;\n      localParent = parent;\n      localUiState = uiState[indexId] || {};\n\n      // The `mainHelper` is already defined at this point. The instance is created\n      // inside InstantSearch at the `start` method, which occurs before the `init`\n      // step.\n      const mainHelper = instantSearchInstance.mainHelper!;\n      const parameters = getLocalWidgetsSearchParameters(localWidgets, {\n        uiState: localUiState,\n        initialSearchParameters: new algoliasearchHelper.SearchParameters({\n          index: indexName,\n        }),\n      });\n\n      // This Helper is only used for state management we do not care about the\n      // `searchClient`. Only the \"main\" Helper created at the `InstantSearch`\n      // level is aware of the client.\n      helper = algoliasearchHelper(\n        {} as SearchClient,\n        parameters.index,\n        parameters\n      );\n\n      // We forward the call to `search` to the \"main\" instance of the Helper\n      // which is responsible for managing the queries (it's the only one that is\n      // aware of the `searchClient`).\n      helper.search = () => {\n        if (instantSearchInstance.onStateChange) {\n          instantSearchInstance.onStateChange!({\n            uiState: instantSearchInstance.mainIndex.getWidgetUiState({}),\n            setUiState: instantSearchInstance.setUiState.bind(\n              instantSearchInstance\n            ),\n          });\n\n          // We don't trigger a search when controlled because it becomes the\n          // responsibility of `setUiState`.\n          return mainHelper;\n        }\n\n        return mainHelper.search();\n      };\n\n      helper.searchWithoutTriggeringOnStateChange = () => {\n        return mainHelper.search();\n      };\n\n      // We use the same pattern for the `searchForFacetValues`.\n      helper.searchForFacetValues = (\n        facetName,\n        facetValue,\n        maxFacetHits,\n        userState: PlainSearchParameters\n      ) => {\n        const state = helper!.state.setQueryParameters(userState);\n\n        return mainHelper.searchForFacetValues(\n          facetName,\n          facetValue,\n          maxFacetHits,\n          state\n        );\n      };\n\n      derivedHelper = mainHelper.derive(() =>\n        mergeSearchParameters(...resolveSearchParameters(this))\n      );\n\n      // Subscribe to the Helper state changes for the page before widgets\n      // are initialized. This behavior mimics the original one of the Helper.\n      // It makes sense to replicate it at the `init` step. We have another\n      // listener on `change` below, once `init` is done.\n      helper.on('change', ({ isPageReset }) => {\n        if (isPageReset) {\n          resetPageFromWidgets(localWidgets);\n        }\n      });\n\n      derivedHelper.on('search', () => {\n        // The index does not manage the \"staleness\" of the search. This is the\n        // responsibility of the main instance. It does not make sense to manage\n        // it at the index level because it's either: all of them or none of them\n        // that are stalled. The queries are performed into a single network request.\n        instantSearchInstance.scheduleStalledRender();\n\n        if (__DEV__) {\n          checkIndexUiState({ index: this, indexUiState: localUiState });\n        }\n      });\n\n      derivedHelper.on('result', ({ results }) => {\n        // The index does not render the results it schedules a new render\n        // to let all the other indices emit their own results. It allows us to\n        // run the render process in one pass.\n        instantSearchInstance.scheduleRender();\n\n        // the derived helper is the one which actually searches, but the helper\n        // which is exposed e.g. via instance.helper, doesn't search, and thus\n        // does not have access to lastResults, which it used to in pre-federated\n        // search behavior.\n        helper!.lastResults = results;\n      });\n\n      // We compute the render state before calling `init` in a separate loop\n      // to construct the whole render state object that is then passed to\n      // `init`.\n      localWidgets.forEach(widget => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            {\n              uiState,\n              helper: helper!,\n              parent: this,\n              instantSearchInstance,\n              state: helper!.state,\n              renderState: instantSearchInstance.renderState,\n              templatesConfig: instantSearchInstance.templatesConfig,\n              createURL: this.createURL,\n              scopedResults: [],\n              searchMetadata: {\n                isSearchStalled: instantSearchInstance._isSearchStalled,\n              },\n            }\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach(widget => {\n        warning(\n          // if it has NO getWidgetState or if it has getWidgetUiState, we don't warn\n          // aka we warn if there's _only_ getWidgetState\n          !widget.getWidgetState || Boolean(widget.getWidgetUiState),\n          'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n        );\n\n        if (widget.init) {\n          widget.init({\n            uiState,\n            helper: helper!,\n            parent: this,\n            instantSearchInstance,\n            state: helper!.state,\n            renderState: instantSearchInstance.renderState,\n            templatesConfig: instantSearchInstance.templatesConfig,\n            createURL: this.createURL,\n            scopedResults: [],\n            searchMetadata: {\n              isSearchStalled: instantSearchInstance._isSearchStalled,\n            },\n          });\n        }\n      });\n\n      // Subscribe to the Helper state changes for the `uiState` once widgets\n      // are initialized. Until the first render, state changes are part of the\n      // configuration step. This is mainly for backward compatibility with custom\n      // widgets. When the subscription happens before the `init` step, the (static)\n      // configuration of the widget is pushed in the URL. That's what we want to avoid.\n      // https://github.com/algolia/instantsearch.js/pull/994/commits/4a672ae3fd78809e213de0368549ef12e9dc9454\n      helper.on('change', event => {\n        const { state } = event;\n\n        const _uiState = (event as any)._uiState;\n\n        localUiState = getLocalWidgetsUiState(\n          localWidgets,\n          {\n            searchParameters: state,\n            helper: helper!,\n          },\n          _uiState || {}\n        );\n\n        // We don't trigger an internal change when controlled because it\n        // becomes the responsibility of `setUiState`.\n        if (!instantSearchInstance.onStateChange) {\n          instantSearchInstance.onInternalStateChange();\n        }\n      });\n    },\n\n    render({ instantSearchInstance }: IndexRenderOptions) {\n      if (!this.getResults()) {\n        return;\n      }\n\n      localWidgets.forEach(widget => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            {\n              helper: this.getHelper()!,\n              parent: this,\n              instantSearchInstance,\n              results: this.getResults()!,\n              scopedResults: this.getScopedResults(),\n              state: this.getResults()!._state,\n              renderState: instantSearchInstance.renderState,\n              templatesConfig: instantSearchInstance.templatesConfig,\n              createURL: this.createURL,\n              searchMetadata: {\n                isSearchStalled: instantSearchInstance._isSearchStalled,\n              },\n            }\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach(widget => {\n        // At this point, all the variables used below are set. Both `helper`\n        // and `derivedHelper` have been created at the `init` step. The attribute\n        // `lastResults` might be `null` though. It's possible that a stalled render\n        // happens before the result e.g with a dynamically added index the request might\n        // be delayed. The render is triggered for the complete tree but some parts do\n        // not have results yet.\n\n        if (widget.render) {\n          widget.render({\n            helper: helper!,\n            parent: this,\n            instantSearchInstance,\n            results: this.getResults()!,\n            scopedResults: this.getScopedResults(),\n            state: this.getResults()!._state,\n            renderState: instantSearchInstance.renderState,\n            templatesConfig: instantSearchInstance.templatesConfig,\n            createURL: this.createURL,\n            searchMetadata: {\n              isSearchStalled: instantSearchInstance._isSearchStalled,\n            },\n          });\n        }\n      });\n    },\n\n    dispose() {\n      localWidgets.forEach(widget => {\n        if (widget.dispose) {\n          // The dispose function is always called once the instance is started\n          // (it's an effect of `removeWidgets`). The index is initialized and\n          // the Helper is available. We don't care about the return value of\n          // `dispose` because the index is removed. We can't call `removeWidgets`\n          // because we want to keep the widgets on the instance, to allow idempotent\n          // operations on `add` & `remove`.\n          widget.dispose({\n            helper: helper!,\n            state: helper!.state,\n            parent: this,\n          });\n        }\n      });\n\n      localInstantSearchInstance = null;\n      localParent = null;\n      helper!.removeAllListeners();\n      helper = null;\n\n      derivedHelper!.detach();\n      derivedHelper = null;\n    },\n\n    getWidgetUiState(uiState: UiState) {\n      return localWidgets\n        .filter(isIndexWidget)\n        .reduce<UiState>(\n          (previousUiState, innerIndex) =>\n            innerIndex.getWidgetUiState(previousUiState),\n          {\n            ...uiState,\n            [this.getIndexId()]: localUiState,\n          }\n        );\n    },\n\n    getWidgetState(uiState: UiState) {\n      warning(\n        false,\n        'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n      );\n\n      return this.getWidgetUiState(uiState);\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      return getLocalWidgetsSearchParameters(localWidgets, {\n        uiState,\n        initialSearchParameters: searchParameters,\n      });\n    },\n\n    refreshUiState() {\n      localUiState = getLocalWidgetsUiState(localWidgets, {\n        searchParameters: this.getHelper()!.state,\n        helper: this.getHelper()!,\n      });\n    },\n  };\n};\n\nexport default index;\n\nfunction storeRenderState({ renderState, instantSearchInstance, parent }) {\n  const parentIndexName = parent\n    ? parent.getIndexId()\n    : instantSearchInstance.mainIndex.getIndexId();\n\n  instantSearchInstance.renderState = {\n    ...instantSearchInstance.renderState,\n    [parentIndexName]: {\n      ...instantSearchInstance.renderState[parentIndexName],\n      ...renderState,\n    },\n  };\n}\n","import { SearchParameters } from 'algoliasearch-helper';\nimport { IndexWidget } from '../../widgets/index/index';\n\nconst resolveSearchParameters = (current: IndexWidget): SearchParameters[] => {\n  let parent = current.getParent();\n  let states = [current.getHelper()!.state];\n\n  while (parent !== null) {\n    states = [parent.getHelper()!.state].concat(states);\n    parent = parent.getParent();\n  }\n\n  return states;\n};\n\nexport default resolveSearchParameters;\n","const NAMESPACE = 'ais';\n\ntype SuitOptions = {\n  descendantName?: string;\n  modifierName?: string;\n};\n\ntype SuitSelector = (names?: SuitOptions) => string;\n\nexport const component = (componentName: string): SuitSelector => ({\n  descendantName,\n  modifierName,\n}: SuitOptions = {}) => {\n  const descendent = descendantName ? `-${descendantName}` : '';\n  const modifier = modifierName ? `--${modifierName}` : '';\n\n  return `${NAMESPACE}-${componentName}${descendent}${modifier}`;\n};\n","import { Hit } from '../types';\nimport { component } from '../lib/suit';\nimport { getPropertyByPath, TAG_REPLACEMENT } from '../lib/utils';\n\nexport type HighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('Highlight');\n\nexport default function highlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: HighlightOptions): string {\n  const { value: attributeValue = '' } =\n    getPropertyByPath(hit._highlightResult, attribute) || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { Hit } from '../types';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n} from '../lib/utils';\nimport { component } from '../lib/suit';\n\nexport type ReverseHighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseHighlight');\n\nexport default function reverseHighlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseHighlightOptions): string {\n  const { value: attributeValue = '' } =\n    getPropertyByPath(hit._highlightResult, attribute) || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { Hit } from '../types';\nimport { component } from '../lib/suit';\nimport { TAG_REPLACEMENT, getPropertyByPath } from '../lib/utils';\n\nexport type SnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: {\n    highlighted?: string;\n  };\n};\n\nconst suit = component('Snippet');\n\nexport default function snippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: SnippetOptions): string {\n  const { value: attributeValue = '' } =\n    getPropertyByPath(hit._snippetResult, attribute) || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { Hit } from '../types';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n} from '../lib/utils';\nimport { component } from '../lib/suit';\n\nexport type ReverseSnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseSnippet');\n\nexport default function reverseSnippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseSnippetOptions): string {\n  const { value: attributeValue = '' } =\n    getPropertyByPath(hit._snippetResult, attribute) || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { InsightsClientMethod, InsightsClientPayload } from '../types';\nimport { warning, serializePayload, deserializePayload } from '../lib/utils';\n\nexport function readDataAttributes(\n  domElement: HTMLElement\n): {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n} {\n  const method = domElement.getAttribute(\n    'data-insights-method'\n  ) as InsightsClientMethod;\n\n  const serializedPayload = domElement.getAttribute('data-insights-payload');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    const payload: Partial<InsightsClientPayload> = deserializePayload(\n      serializedPayload\n    );\n    return { method, payload };\n  } catch (error) {\n    throw new Error(\n      'The insights helper was unable to parse `data-insights-payload`.'\n    );\n  }\n}\n\nexport function hasDataAttributes(domElement: HTMLElement): boolean {\n  return domElement.hasAttribute('data-insights-method');\n}\n\nexport function writeDataAttributes({\n  method,\n  payload,\n}: {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n}): string {\n  if (typeof payload !== 'object') {\n    throw new Error(`The insights helper expects the payload to be an object.`);\n  }\n\n  let serializedPayload: string;\n\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(`Could not JSON serialize the payload object.`);\n  }\n\n  return `data-insights-method=\"${method}\" data-insights-payload=\"${serializedPayload}\"`;\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function insights(\n  method: InsightsClientMethod,\n  payload: Partial<InsightsClientPayload>\n): string {\n  warning(\n    false,\n    `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return writeDataAttributes({ method, payload });\n}\n","import { warning } from '../lib/utils';\n\nexport const ANONYMOUS_TOKEN_COOKIE_KEY = '_ALGOLIA';\n\nfunction getCookie(name: string): string | undefined {\n  const prefix = `${name}=`;\n  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    let cookie = cookies[i];\n    while (cookie.charAt(0) === ' ') {\n      cookie = cookie.substring(1);\n    }\n    if (cookie.indexOf(prefix) === 0) {\n      return cookie.substring(prefix.length, cookie.length);\n    }\n  }\n  return undefined;\n}\n\nexport function getInsightsAnonymousUserTokenInternal(): string | undefined {\n  return getCookie(ANONYMOUS_TOKEN_COOKIE_KEY);\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function getInsightsAnonymousUserToken(): string | undefined {\n  warning(\n    false,\n    `\\`getInsightsAnonymousUserToken\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return getInsightsAnonymousUserTokenInternal();\n}\n","import { UiState, IndexUiState, StateMapping, RouteState } from '../../types';\n\nfunction getIndexStateWithoutConfigure(uiState: IndexUiState): IndexUiState {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState;\n}\n\n// technically a URL could contain any key, since users provide it,\n// which is why the input to this function is UiState, not something\n// which excludes \"configure\" as this function does.\nexport default function simpleStateMapping(): StateMapping {\n  return {\n    stateToRoute(uiState) {\n      return Object.keys(uiState).reduce<RouteState>(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(uiState[indexId]),\n        }),\n        {}\n      );\n    },\n\n    routeToState(routeState = {}) {\n      return Object.keys(routeState).reduce<UiState>(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(routeState[indexId]),\n        }),\n        {}\n      );\n    },\n  };\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) { // eslint-disable-line func-name-matching\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint'; // eslint-disable-line valid-typeof\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","import qs from 'qs';\nimport { Router, RouteState } from '../../types';\n\ntype CreateURL = ({\n  qsModule,\n  routeState,\n  location,\n}: {\n  qsModule: typeof qs;\n  routeState: RouteState;\n  location: Location;\n}) => string;\n\ntype ParseURL = ({\n  qsModule,\n  location,\n}: {\n  qsModule: typeof qs;\n  location: Location;\n}) => RouteState;\n\ntype BrowserHistoryArgs = {\n  windowTitle?: (routeState: RouteState) => string;\n  writeDelay?: number;\n  createURL?: CreateURL;\n  parseURL?: ParseURL;\n};\n\nconst defaultCreateURL: CreateURL = ({ qsModule, routeState, location }) => {\n  const { protocol, hostname, port = '', pathname, hash } = location;\n  const queryString = qsModule.stringify(routeState);\n  const portWithPrefix = port === '' ? '' : `:${port}`;\n\n  // IE <= 11 has no proper `location.origin` so we cannot rely on it.\n  if (!queryString) {\n    return `${protocol}//${hostname}${portWithPrefix}${pathname}${hash}`;\n  }\n\n  return `${protocol}//${hostname}${portWithPrefix}${pathname}?${queryString}${hash}`;\n};\n\nconst defaultParseURL: ParseURL = ({ qsModule, location }) => {\n  // `qs` by default converts arrays with more than 20 items to an object.\n  // We want to avoid this because the data structure manipulated can therefore vary.\n  // Setting the limit to `100` seems a good number because the engine's default is 100\n  // (it can go up to 1000 but it is very unlikely to select more than 100 items in the UI).\n  //\n  // Using an `arrayLimit` of `n` allows `n + 1` items.\n  //\n  // See:\n  //   - https://github.com/ljharb/qs#parsing-arrays\n  //   - https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/\n  return qsModule.parse(location.search.slice(1), { arrayLimit: 99 });\n};\n\nconst setWindowTitle = (title?: string): void => {\n  if (title) {\n    window.document.title = title;\n  }\n};\n\nclass BrowserHistory implements Router {\n  /**\n   * Transforms a UI state into a title for the page.\n   */\n  private readonly windowTitle?: BrowserHistoryArgs['windowTitle'];\n  /**\n   * Time in milliseconds before performing a write in the history.\n   * It prevents from adding too many entries in the history and\n   * makes the back button more usable.\n   *\n   * @default 400\n   */\n  private readonly writeDelay: Required<BrowserHistoryArgs>['writeDelay'];\n  /**\n   * Creates a full URL based on the route state.\n   * The storage adaptor maps all syncable keys to the query string of the URL.\n   */\n  private readonly _createURL: Required<BrowserHistoryArgs>['createURL'];\n  /**\n   * Parses the URL into a route state.\n   * It should be symetrical to `createURL`.\n   */\n  private readonly parseURL: Required<BrowserHistoryArgs>['parseURL'];\n\n  private writeTimer?: number;\n  private _onPopState?(event: PopStateEvent): void;\n\n  /**\n   * Initializes a new storage provider that syncs the search state to the URL\n   * using web APIs (`window.location.pushState` and `onpopstate` event).\n   */\n  public constructor(\n    {\n      windowTitle,\n      writeDelay = 400,\n      createURL = defaultCreateURL,\n      parseURL = defaultParseURL,\n    }: BrowserHistoryArgs = {} as BrowserHistoryArgs\n  ) {\n    this.windowTitle = windowTitle;\n    this.writeTimer = undefined;\n    this.writeDelay = writeDelay;\n    this._createURL = createURL;\n    this.parseURL = parseURL;\n\n    const title = this.windowTitle && this.windowTitle(this.read());\n\n    setWindowTitle(title);\n  }\n\n  /**\n   * Reads the URL and returns a syncable UI search state.\n   */\n  public read(): RouteState {\n    return this.parseURL({ qsModule: qs, location: window.location });\n  }\n\n  /**\n   * Pushes a search state into the URL.\n   */\n  public write(routeState: RouteState): void {\n    const url = this.createURL(routeState);\n    const title = this.windowTitle && this.windowTitle(routeState);\n\n    if (this.writeTimer) {\n      window.clearTimeout(this.writeTimer);\n    }\n\n    this.writeTimer = window.setTimeout(() => {\n      setWindowTitle(title);\n      window.history.pushState(routeState, title || '', url);\n      this.writeTimer = undefined;\n    }, this.writeDelay);\n  }\n\n  /**\n   * Sets a callback on the `onpopstate` event of the history API of the current page.\n   * It enables the URL sync to keep track of the changes.\n   */\n  public onUpdate(callback: (routeState: RouteState) => void): void {\n    this._onPopState = event => {\n      if (this.writeTimer) {\n        window.clearTimeout(this.writeTimer);\n        this.writeTimer = undefined;\n      }\n\n      const routeState = event.state;\n\n      // At initial load, the state is read from the URL without update.\n      // Therefore the state object is not available.\n      // In this case, we fallback and read the URL.\n      if (!routeState) {\n        callback(this.read());\n      } else {\n        callback(routeState);\n      }\n    };\n\n    window.addEventListener('popstate', this._onPopState);\n  }\n\n  /**\n   * Creates a complete URL from a given syncable UI state.\n   *\n   * It always generates the full URL, not a relative one.\n   * This allows to handle cases like using a <base href>.\n   * See: https://github.com/algolia/instantsearch.js/issues/790\n   */\n  public createURL(routeState: RouteState): string {\n    return this._createURL({\n      qsModule: qs,\n      routeState,\n      location: window.location,\n    });\n  }\n\n  /**\n   * Removes the event listener and cleans up the URL.\n   */\n  public dispose(): void {\n    if (this._onPopState) {\n      window.removeEventListener('popstate', this._onPopState);\n    }\n\n    if (this.writeTimer) {\n      window.clearTimeout(this.writeTimer);\n    }\n\n    this.write({});\n  }\n}\n\nexport default function(props?: BrowserHistoryArgs): BrowserHistory {\n  return new BrowserHistory(props);\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","import simpleStateMapping from '../lib/stateMappings/simple';\nimport historyRouter from '../lib/routers/history';\nimport {\n  Router,\n  StateMapping,\n  UiState,\n  InternalMiddleware,\n  RouteState,\n} from '../types';\nimport { isEqual } from '../lib/utils';\n\nexport type RouterProps = {\n  router?: Router;\n  stateMapping?: StateMapping;\n};\n\nexport type RoutingManager = (props?: RouterProps) => InternalMiddleware;\n\nexport const createRouterMiddleware: RoutingManager = (props = {}) => {\n  const {\n    router = historyRouter(),\n    stateMapping = simpleStateMapping(),\n  } = props;\n\n  return ({ instantSearchInstance }) => {\n    function topLevelCreateURL(nextState: UiState) {\n      const uiState: UiState = Object.keys(nextState).reduce(\n        (acc, indexId) => ({\n          ...acc,\n          [indexId]: nextState[indexId],\n        }),\n        instantSearchInstance.mainIndex.getWidgetUiState({})\n      );\n\n      const route = stateMapping.stateToRoute(uiState);\n\n      return router.createURL(route);\n    }\n\n    instantSearchInstance._createURL = topLevelCreateURL;\n    instantSearchInstance._initialUiState = {\n      ...instantSearchInstance._initialUiState,\n      ...stateMapping.routeToState(router.read()),\n    };\n\n    let lastRouteState: RouteState | undefined = undefined;\n\n    return {\n      onStateChange({ uiState }) {\n        const routeState = stateMapping.stateToRoute(uiState);\n\n        if (\n          lastRouteState === undefined ||\n          !isEqual(lastRouteState, routeState)\n        ) {\n          router.write(routeState);\n          lastRouteState = routeState;\n        }\n      },\n\n      subscribe() {\n        router.onUpdate(route => {\n          instantSearchInstance.setUiState(stateMapping.routeToState(route));\n        });\n      },\n\n      unsubscribe() {\n        router.dispose();\n      },\n    };\n  };\n};\n","import { InstantSearch, InternalMiddleware, Widget } from '../types';\nimport { IndexWidget } from '../widgets/index/index';\n\ntype WidgetMetaData = {\n  type: string | undefined;\n  widgetType: string | undefined;\n  params: string[];\n};\n\ntype Payload = {\n  widgets: WidgetMetaData[];\n  ua?: string;\n};\n\nfunction extractPayload(\n  widgets: Array<Widget | IndexWidget>,\n  instantSearchInstance: InstantSearch,\n  payload: Payload\n) {\n  const parent = instantSearchInstance.mainIndex;\n\n  const initOptions = {\n    instantSearchInstance,\n    parent,\n    scopedResults: [],\n    state: parent.getHelper()!.state,\n    helper: parent.getHelper()!,\n    createURL: parent.createURL,\n    uiState: instantSearchInstance._initialUiState,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance._isSearchStalled,\n    },\n  };\n\n  widgets.forEach(widget => {\n    let widgetParams = {};\n\n    if (widget.getWidgetRenderState) {\n      const renderState = widget.getWidgetRenderState(initOptions);\n\n      if (renderState && typeof renderState.widgetParams === 'object') {\n        widgetParams = renderState.widgetParams!;\n      }\n    }\n\n    // since we destructure in all widgets, the parameters with defaults are set to \"undefined\"\n    const params = Object.keys(widgetParams).filter(\n      key => widgetParams[key] !== undefined\n    );\n\n    payload.widgets.push({\n      type: widget.$$type,\n      widgetType: widget.$$widgetType,\n      params,\n    });\n\n    if (widget.$$type === 'ais.index') {\n      extractPayload(\n        (widget as IndexWidget).getWidgets(),\n        instantSearchInstance,\n        payload\n      );\n    }\n  });\n}\n\nexport function isMetadataEnabled() {\n  return (\n    typeof window !== 'undefined' &&\n    window.navigator.userAgent.indexOf('Algolia Crawler') > -1\n  );\n}\n\n/**\n * Exposes the metadata of mounted widgets in a custom\n * `<meta name=\"instantsearch:widgets\" />` tag. The metadata per widget is:\n * - applied parameters\n * - widget name\n * - connector name\n */\nexport function createMetadataMiddleware(): InternalMiddleware {\n  return ({ instantSearchInstance }) => {\n    const payload: Payload = {\n      widgets: [],\n    };\n    const payloadContainer = document.createElement('meta');\n    const refNode = document.querySelector('head')!;\n    payloadContainer.name = 'instantsearch:widgets';\n\n    return {\n      onStateChange() {},\n      subscribe() {\n        // using setTimeout here to delay extraction until widgets have been added in a tick (e.g. Vue)\n        setTimeout(() => {\n          const client = instantSearchInstance.client as any;\n          payload.ua =\n            client.transporter && client.transporter.userAgent\n              ? client.transporter.userAgent.value\n              : client._ua;\n\n          extractPayload(\n            instantSearchInstance.mainIndex.getWidgets(),\n            instantSearchInstance,\n            payload\n          );\n\n          payloadContainer.content = JSON.stringify(payload);\n          refNode.appendChild(payloadContainer);\n        }, 0);\n      },\n\n      unsubscribe() {\n        payloadContainer.remove();\n      },\n    };\n  };\n}\n","import algoliasearchHelper, { AlgoliaSearchHelper } from 'algoliasearch-helper';\nimport EventEmitter from 'events';\nimport index, { IndexWidget, isIndexWidget } from '../widgets/index/index';\nimport version from './version';\nimport createHelpers from './createHelpers';\nimport {\n  createDocumentationMessageGenerator,\n  createDocumentationLink,\n  defer,\n  noop,\n  warning,\n  checkIndexUiState,\n} from './utils';\nimport {\n  InsightsClient as AlgoliaInsightsClient,\n  SearchClient,\n  Widget,\n  UiState,\n  CreateURL,\n  Middleware,\n  MiddlewareDefinition,\n  RenderState,\n} from '../types';\nimport {\n  createRouterMiddleware,\n  RouterProps,\n} from '../middlewares/createRouterMiddleware';\nimport { InsightsEvent } from '../middlewares/createInsightsMiddleware';\nimport {\n  createMetadataMiddleware,\n  isMetadataEnabled,\n} from '../middlewares/createMetadataMiddleware';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'instantsearch',\n});\n\nfunction defaultCreateURL() {\n  return '#';\n}\n\n/**\n * Global options for an InstantSearch instance.\n */\nexport type InstantSearchOptions = {\n  /**\n   * The name of the main index\n   */\n  indexName: string;\n\n  /**\n   * The search client to plug to InstantSearch.js\n   *\n   * Usage:\n   * ```javascript\n   * // Using the default Algolia search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: algoliasearch('appId', 'apiKey')\n   * });\n   *\n   * // Using a custom search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: {\n   *     search(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     },\n   *     searchForFacetValues(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     }\n   *   }\n   * });\n   * ```\n   */\n  searchClient: SearchClient;\n\n  /**\n   * The locale used to display numbers. This will be passed\n   * to `Number.prototype.toLocaleString()`\n   */\n  numberLocale?: string;\n\n  /**\n   * A hook that will be called each time a search needs to be done, with the\n   * helper as a parameter. It's your responsibility to call `helper.search()`.\n   * This option allows you to avoid doing searches at page load for example.\n   */\n  searchFunction?: (helper: AlgoliaSearchHelper) => void;\n\n  /**\n   * Function called when the state changes.\n   *\n   * Using this function makes the instance controlled. This means that you\n   * become in charge of updating the UI state with the `setUiState` function.\n   */\n  onStateChange?: (params: {\n    uiState: UiState;\n    setUiState(\n      uiState: UiState | ((previousUiState: UiState) => UiState)\n    ): void;\n  }) => void;\n\n  /**\n   * Injects a `uiState` to the `instantsearch` instance. You can use this option\n   * to provide an initial state to a widget. Note that the state is only used\n   * for the first search. To unconditionally pass additional parameters to the\n   * Algolia API, take a look at the `configure` widget.\n   */\n  initialUiState?: UiState;\n\n  /**\n   * Time before a search is considered stalled. The default is 200ms\n   */\n  stalledSearchDelay?: number;\n\n  /**\n   * Router configuration used to save the UI State into the URL or any other\n   * client side persistence. Passing `true` will use the default URL options.\n   */\n  routing?: RouterProps | boolean;\n\n  /**\n   * the instance of search-insights to use for sending insights events inside\n   * widgets like `hits`.\n   *\n   * @deprecated This property will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n   */\n  insightsClient?: AlgoliaInsightsClient;\n};\n\n/**\n * The actual implementation of the InstantSearch. This is\n * created using the `instantsearch` factory function.\n * It emits the 'render' event every time a search is done\n */\nclass InstantSearch extends EventEmitter {\n  public client: InstantSearchOptions['searchClient'];\n  public indexName: string;\n  public insightsClient: AlgoliaInsightsClient | null;\n  public onStateChange: InstantSearchOptions['onStateChange'] | null = null;\n  public helper: AlgoliaSearchHelper | null;\n  public mainHelper: AlgoliaSearchHelper | null;\n  public mainIndex: IndexWidget;\n  public started: boolean;\n  public templatesConfig: Record<string, unknown>;\n  public renderState: RenderState = {};\n  public _stalledSearchDelay: number;\n  public _searchStalledTimer: any;\n  public _isSearchStalled: boolean;\n  public _initialUiState: UiState;\n  public _createURL: CreateURL<UiState>;\n  public _searchFunction?: InstantSearchOptions['searchFunction'];\n  public _mainHelperSearch?: AlgoliaSearchHelper['search'];\n  public middleware: Array<{\n    creator: Middleware;\n    instance: MiddlewareDefinition;\n  }> = [];\n  public sendEventToInsights: (event: InsightsEvent) => void;\n\n  public constructor(options: InstantSearchOptions) {\n    super();\n\n    const {\n      indexName = null,\n      numberLocale,\n      initialUiState = {},\n      routing = null,\n      searchFunction,\n      stalledSearchDelay = 200,\n      searchClient = null,\n      insightsClient = null,\n      onStateChange = null,\n    } = options;\n\n    if (indexName === null) {\n      throw new Error(withUsage('The `indexName` option is required.'));\n    }\n\n    if (searchClient === null) {\n      throw new Error(withUsage('The `searchClient` option is required.'));\n    }\n\n    if (typeof (searchClient as any).search !== 'function') {\n      throw new Error(\n        `The \\`searchClient\\` must implement a \\`search\\` method.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/going-further/backend-search/in-depth/backend-instantsearch/js/`\n      );\n    }\n\n    if (typeof searchClient.addAlgoliaAgent === 'function') {\n      searchClient.addAlgoliaAgent(`instantsearch.js (${version})`);\n    }\n\n    warning(\n      insightsClient === null,\n      `\\`insightsClient\\` property has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n\n    if (insightsClient && typeof insightsClient !== 'function') {\n      throw new Error(\n        withUsage('The `insightsClient` option should be a function.')\n      );\n    }\n\n    warning(\n      !(options as any).searchParameters,\n      `The \\`searchParameters\\` option is deprecated and will not be supported in InstantSearch.js 4.x.\n\nYou can replace it with the \\`configure\\` widget:\n\n\\`\\`\\`\nsearch.addWidgets([\n  configure(${JSON.stringify((options as any).searchParameters, null, 2)})\n]);\n\\`\\`\\`\n\nSee ${createDocumentationLink({\n        name: 'configure',\n      })}`\n    );\n\n    this.client = searchClient;\n    this.insightsClient = insightsClient;\n    this.indexName = indexName;\n    this.helper = null;\n    this.mainHelper = null;\n    this.mainIndex = index({\n      indexName,\n    });\n    this.onStateChange = onStateChange;\n\n    this.started = false;\n    this.templatesConfig = {\n      helpers: createHelpers({ numberLocale }),\n      compileOptions: {},\n    };\n\n    this._stalledSearchDelay = stalledSearchDelay;\n    this._searchStalledTimer = null;\n    this._isSearchStalled = false;\n\n    this._createURL = defaultCreateURL;\n    this._initialUiState = initialUiState;\n\n    if (searchFunction) {\n      this._searchFunction = searchFunction;\n    }\n\n    this.sendEventToInsights = noop;\n\n    if (routing) {\n      const routerOptions = typeof routing === 'boolean' ? undefined : routing;\n      this.use(createRouterMiddleware(routerOptions));\n    }\n\n    if (isMetadataEnabled()) {\n      this.use(createMetadataMiddleware());\n    }\n  }\n\n  /**\n   * Hooks a middleware into the InstantSearch lifecycle.\n   */\n  public use(...middleware: Middleware[]): this {\n    const newMiddlewareList = middleware.map(fn => {\n      const newMiddleware = {\n        subscribe: noop,\n        unsubscribe: noop,\n        onStateChange: noop,\n        ...fn({ instantSearchInstance: this }),\n      };\n      this.middleware.push({\n        creator: fn,\n        instance: newMiddleware,\n      });\n      return newMiddleware;\n    });\n\n    // If the instance has already started, we directly subscribe the\n    // middleware so they're notified of changes.\n    if (this.started) {\n      newMiddlewareList.forEach(m => {\n        m.subscribe();\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes a middleware from the InstantSearch lifecycle.\n   */\n  public unuse(...middlewareToUnuse: Middleware[]): this {\n    this.middleware\n      .filter(m => middlewareToUnuse.includes(m.creator))\n      .forEach(m => m.instance.unsubscribe());\n\n    this.middleware = this.middleware.filter(\n      m => !middlewareToUnuse.includes(m.creator)\n    );\n\n    return this;\n  }\n\n  // @major we shipped with EXPERIMENTAL_use, but have changed that to just `use` now\n  public EXPERIMENTAL_use(...middleware: Middleware[]): this {\n    warning(\n      false,\n      'The middleware API is now considered stable, so we recommend replacing `EXPERIMENTAL_use` with `use` before upgrading to the next major version.'\n    );\n\n    return this.use(...middleware);\n  }\n\n  /**\n   * Adds a widget to the search instance.\n   * A widget can be added either before or after InstantSearch has started.\n   * @param widget The widget to add to InstantSearch.\n   *\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`.\n   */\n  public addWidget(widget: Widget) {\n    warning(\n      false,\n      'addWidget will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`'\n    );\n\n    return this.addWidgets([widget]);\n  }\n\n  /**\n   * Adds multiple widgets to the search instance.\n   * Widgets can be added either before or after InstantSearch has started.\n   * @param widgets The array of widgets to add to InstantSearch.\n   */\n  public addWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `addWidgets` method expects an array of widgets. Please use `addWidget`.'\n        )\n      );\n    }\n\n    if (\n      widgets.some(\n        widget =>\n          typeof widget.init !== 'function' &&\n          typeof widget.render !== 'function'\n      )\n    ) {\n      throw new Error(\n        withUsage(\n          'The widget definition expects a `render` and/or an `init` method.'\n        )\n      );\n    }\n\n    this.mainIndex.addWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Removes a widget from the search instance.\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`\n   * @param widget The widget instance to remove from InstantSearch.\n   *\n   * The widget must implement a `dispose()` method to clear its state.\n   */\n  public removeWidget(widget: Widget | IndexWidget) {\n    warning(\n      false,\n      'removeWidget will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`'\n    );\n\n    return this.removeWidgets([widget]);\n  }\n\n  /**\n   * Removes multiple widgets from the search instance.\n   * @param widgets Array of widgets instances to remove from InstantSearch.\n   *\n   * The widgets must implement a `dispose()` method to clear their states.\n   */\n  public removeWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `removeWidgets` method expects an array of widgets. Please use `removeWidget`.'\n        )\n      );\n    }\n\n    if (widgets.some(widget => typeof widget.dispose !== 'function')) {\n      throw new Error(\n        withUsage('The widget definition expects a `dispose` method.')\n      );\n    }\n\n    this.mainIndex.removeWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Ends the initialization of InstantSearch.js and triggers the\n   * first search. This method should be called after all widgets have been added\n   * to the instance of InstantSearch.js. InstantSearch.js also supports adding and removing\n   * widgets after the start as an **EXPERIMENTAL** feature.\n   */\n  public start() {\n    if (this.started) {\n      throw new Error(\n        withUsage('The `start` method has already been called once.')\n      );\n    }\n\n    // This Helper is used for the queries, we don't care about its state. The\n    // states are managed at the `index` level. We use this Helper to create\n    // DerivedHelper scoped into the `index` widgets.\n    // In Vue InstantSearch' hydrate, a main helper gets set before start, so\n    // we need to respect this helper as a way to keep all listeners correct.\n    const mainHelper =\n      this.mainHelper || algoliasearchHelper(this.client, this.indexName);\n\n    mainHelper.search = () => {\n      // This solution allows us to keep the exact same API for the users but\n      // under the hood, we have a different implementation. It should be\n      // completely transparent for the rest of the codebase. Only this module\n      // is impacted.\n      return mainHelper.searchOnlyWithDerivedHelpers();\n    };\n\n    if (this._searchFunction) {\n      // this client isn't used to actually search, but required for the helper\n      // to not throw errors\n      const fakeClient = ({\n        search: () => new Promise(noop),\n      } as any) as SearchClient;\n\n      this._mainHelperSearch = mainHelper.search.bind(mainHelper);\n      mainHelper.search = () => {\n        const mainIndexHelper = this.mainIndex.getHelper();\n        const searchFunctionHelper = algoliasearchHelper(\n          fakeClient,\n          mainIndexHelper!.state.index,\n          mainIndexHelper!.state\n        );\n        searchFunctionHelper.once('search', ({ state }) => {\n          mainIndexHelper!.overrideStateWithoutTriggeringChangeEvent(state);\n          this._mainHelperSearch!();\n        });\n        // Forward state changes from `searchFunctionHelper` to `mainIndexHelper`\n        searchFunctionHelper.on('change', ({ state }) => {\n          mainIndexHelper!.setState(state);\n        });\n        this._searchFunction!(searchFunctionHelper);\n        return mainHelper;\n      };\n    }\n\n    // Only the \"main\" Helper emits the `error` event vs the one for `search`\n    // and `results` that are also emitted on the derived one.\n    mainHelper.on('error', ({ error }) => {\n      this.emit('error', {\n        error,\n      });\n    });\n\n    this.mainHelper = mainHelper;\n\n    this.mainIndex.init({\n      instantSearchInstance: this,\n      parent: null,\n      uiState: this._initialUiState,\n    });\n\n    this.middleware.forEach(({ instance }) => {\n      instance.subscribe();\n    });\n\n    mainHelper.search();\n\n    // Keep the previous reference for legacy purpose, some pattern use\n    // the direct Helper access `search.helper` (e.g multi-index).\n    this.helper = this.mainIndex.getHelper();\n\n    // track we started the search if we add more widgets,\n    // to init them directly after add\n    this.started = true;\n  }\n\n  /**\n   * Removes all widgets without triggering a search afterwards. This is an **EXPERIMENTAL** feature,\n   * if you find an issue with it, please\n   * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20dispose).\n   * @return {undefined} This method does not return anything\n   */\n  public dispose(): void {\n    this.scheduleSearch.cancel();\n    this.scheduleRender.cancel();\n    clearTimeout(this._searchStalledTimer);\n\n    this.removeWidgets(this.mainIndex.getWidgets());\n    this.mainIndex.dispose();\n\n    // You can not start an instance two times, therefore a disposed instance\n    // needs to set started as false otherwise this can not be restarted at a\n    // later point.\n    this.started = false;\n\n    // The helper needs to be reset to perform the next search from a fresh state.\n    // If not reset, it would use the state stored before calling `dispose()`.\n    this.removeAllListeners();\n    this.mainHelper!.removeAllListeners();\n    this.mainHelper = null;\n    this.helper = null;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.unsubscribe();\n    });\n  }\n\n  public scheduleSearch = defer(() => {\n    if (this.started) {\n      this.mainHelper!.search();\n    }\n  });\n\n  public scheduleRender = defer(() => {\n    if (!this.mainHelper!.hasPendingRequests()) {\n      clearTimeout(this._searchStalledTimer);\n      this._searchStalledTimer = null;\n      this._isSearchStalled = false;\n    }\n\n    this.mainIndex.render({\n      instantSearchInstance: this,\n    });\n\n    this.emit('render');\n  });\n\n  public scheduleStalledRender() {\n    if (!this._searchStalledTimer) {\n      this._searchStalledTimer = setTimeout(() => {\n        this._isSearchStalled = true;\n        this.scheduleRender();\n      }, this._stalledSearchDelay);\n    }\n  }\n\n  public setUiState(\n    uiState: UiState | ((previousUiState: UiState) => UiState)\n  ): void {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `setUiState`.')\n      );\n    }\n\n    // We refresh the index UI state to update the local UI state that the\n    // main index passes to the function form of `setUiState`.\n    this.mainIndex.refreshUiState();\n    const nextUiState =\n      typeof uiState === 'function'\n        ? uiState(this.mainIndex.getWidgetUiState({}))\n        : uiState;\n\n    const setIndexHelperState = (indexWidget: IndexWidget) => {\n      if (__DEV__) {\n        checkIndexUiState({\n          index: indexWidget,\n          indexUiState: nextUiState[indexWidget.getIndexId()],\n        });\n      }\n\n      indexWidget.getHelper()!.setState(\n        indexWidget.getWidgetSearchParameters(indexWidget.getHelper()!.state, {\n          uiState: nextUiState[indexWidget.getIndexId()],\n        })\n      );\n\n      indexWidget\n        .getWidgets()\n        .filter(isIndexWidget)\n        .forEach(setIndexHelperState);\n    };\n\n    setIndexHelperState(this.mainIndex);\n\n    this.scheduleSearch();\n    this.onInternalStateChange();\n  }\n\n  public getUiState(): UiState {\n    if (this.started) {\n      // We refresh the index UI state to make sure changes from `refine` are taken in account\n      this.mainIndex.refreshUiState();\n    }\n\n    return this.mainIndex.getWidgetUiState({});\n  }\n\n  public onInternalStateChange = defer(() => {\n    const nextUiState = this.mainIndex.getWidgetUiState({});\n\n    this.middleware.forEach(({ instance }) => {\n      instance.onStateChange({\n        uiState: nextUiState,\n      });\n    });\n  });\n\n  public createURL(nextState: UiState = {}): string {\n    if (!this.started) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `createURL`.')\n      );\n    }\n\n    return this._createURL(nextState);\n  }\n\n  public refresh() {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `refresh`.')\n      );\n    }\n\n    this.mainHelper.clearCache().search();\n  }\n}\n\nexport default InstantSearch;\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  clearRefinements,\n  getRefinements,\n  createDocumentationMessageGenerator,\n  noop,\n  uniq,\n  mergeSearchParameters,\n} from '../../lib/utils';\nimport {\n  TransformItems,\n  CreateURL,\n  Connector,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n  connector: true,\n});\n\nexport type ClearRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the refinements to clear (all by default). Cannot be used with `excludedAttributes`.\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the refinements to clear. Cannot be used with `includedAttributes`.\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<string>;\n};\n\nexport type ClearRefinementsRenderState = {\n  /**\n   * Triggers the clear of all the currently refined values.\n   */\n  refine: () => void;\n\n  /**\n   * Indicates if search state is refined.\n   * @deprecated prefer reading canRefine\n   */\n  hasRefinements: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Creates a url for the next state when refinements are cleared.\n   */\n  createURL: CreateURL<void>;\n};\n\nexport type ClearRefinementsWidgetDescription = {\n  $$type: 'ais.clearRefinements';\n  renderState: ClearRefinementsRenderState;\n  indexRenderState: {\n    clearRefinements: WidgetRenderState<\n      ClearRefinementsRenderState,\n      ClearRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type ClearRefinementsConnector = Connector<\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsConnectorParams\n>;\n\ntype AttributesToClear = {\n  helper: AlgoliaSearchHelper;\n  items: string[];\n};\n\nconst connectClearRefinements: ClearRefinementsConnector = function connectClearRefinements(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      includedAttributes = [],\n      excludedAttributes = ['query'],\n      transformItems = (items => items) as TransformItems<string>,\n    } = widgetParams || {};\n\n    if (\n      widgetParams &&\n      widgetParams.includedAttributes &&\n      widgetParams.excludedAttributes\n    ) {\n      throw new Error(\n        withUsage(\n          'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n        )\n      );\n    }\n\n    type ConnectorState = {\n      refine(): void;\n      createURL(): string;\n      attributesToClear: AttributesToClear[];\n    };\n\n    const connectorState: ConnectorState = {\n      refine: noop,\n      createURL: () => '',\n      attributesToClear: [],\n    };\n\n    const cachedRefine = () => connectorState.refine();\n    const cachedCreateURL = () => connectorState.createURL();\n\n    return {\n      $$type: 'ais.clearRefinements',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose() {\n        unmountFn();\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          clearRefinements: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ createURL, scopedResults }) {\n        connectorState.attributesToClear = scopedResults.reduce<\n          Array<ReturnType<typeof getAttributesToClear>>\n        >((results, scopedResult) => {\n          return results.concat(\n            getAttributesToClear({\n              scopedResult,\n              includedAttributes,\n              excludedAttributes,\n              transformItems,\n            })\n          );\n        }, []);\n\n        connectorState.refine = () => {\n          connectorState.attributesToClear.forEach(\n            ({ helper: indexHelper, items }) => {\n              indexHelper\n                .setState(\n                  clearRefinements({\n                    helper: indexHelper,\n                    attributesToClear: items,\n                  })\n                )\n                .search();\n            }\n          );\n        };\n\n        connectorState.createURL = () =>\n          createURL(\n            mergeSearchParameters(\n              ...connectorState.attributesToClear.map(\n                ({ helper: indexHelper, items }) => {\n                  return clearRefinements({\n                    helper: indexHelper,\n                    attributesToClear: items,\n                  });\n                }\n              )\n            )\n          );\n\n        const canRefine = connectorState.attributesToClear.some(\n          attributeToClear => attributeToClear.items.length > 0\n        );\n\n        return {\n          canRefine,\n          hasRefinements: canRefine,\n          refine: cachedRefine,\n          createURL: cachedCreateURL,\n          widgetParams,\n        };\n      },\n    };\n  };\n};\n\nfunction getAttributesToClear({\n  scopedResult,\n  includedAttributes,\n  excludedAttributes,\n  transformItems,\n}): AttributesToClear {\n  const includesQuery =\n    includedAttributes.indexOf('query') !== -1 ||\n    excludedAttributes.indexOf('query') === -1;\n\n  return {\n    helper: scopedResult.helper,\n    items: transformItems(\n      uniq(\n        getRefinements(\n          scopedResult.results,\n          scopedResult.helper.state,\n          includesQuery\n        )\n          .map(refinement => refinement.attribute)\n          .filter(\n            attribute =>\n              // If the array is empty (default case), we keep all the attributes\n              includedAttributes.length === 0 ||\n              // Otherwise, only add the specified attributes\n              includedAttributes.indexOf(attribute) !== -1\n          )\n          .filter(\n            attribute =>\n              // If the query is included, we ignore the default `excludedAttributes = ['query']`\n              (attribute === 'query' && includesQuery) ||\n              // Otherwise, ignore the excluded attributes\n              excludedAttributes.indexOf(attribute) === -1\n          )\n      )\n    ),\n  };\n}\n\nexport default connectClearRefinements;\n","export default '4.24.2';\n","import {\n  highlight,\n  reverseHighlight,\n  snippet,\n  reverseSnippet,\n  HighlightOptions,\n  ReverseHighlightOptions,\n  SnippetOptions,\n  ReverseSnippetOptions,\n  insights,\n} from '../helpers';\nimport {\n  Hit,\n  HoganHelpers,\n  InsightsClientMethod,\n  InsightsClientPayload,\n} from '../types';\n\ntype DefaultHoganHelpers = HoganHelpers<\n  | 'formatNumber'\n  | 'highlight'\n  | 'reverseHighlight'\n  | 'snippet'\n  | 'reverseSnippet'\n  | 'insights'\n>;\n\nexport default function hoganHelpers({\n  numberLocale,\n}: {\n  numberLocale?: string;\n}): DefaultHoganHelpers {\n  return {\n    formatNumber(value, render) {\n      return Number(render(value)).toLocaleString(numberLocale);\n    },\n    highlight(options, render) {\n      try {\n        const highlightOptions: Omit<HighlightOptions, 'hit'> = JSON.parse(\n          options\n        );\n\n        return render(\n          highlight({\n            ...highlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe highlight helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseHighlight(options, render) {\n      try {\n        const reverseHighlightOptions: Omit<\n          ReverseHighlightOptions,\n          'hit'\n        > = JSON.parse(options);\n\n        return render(\n          reverseHighlight({\n            ...reverseHighlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseHighlight helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    snippet(options, render) {\n      try {\n        const snippetOptions: Omit<SnippetOptions, 'hit'> = JSON.parse(options);\n\n        return render(\n          snippet({\n            ...snippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe snippet helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseSnippet(options, render) {\n      try {\n        const reverseSnippetOptions: Omit<\n          ReverseSnippetOptions,\n          'hit'\n        > = JSON.parse(options);\n\n        return render(\n          reverseSnippet({\n            ...reverseSnippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseSnippet helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    insights(this: Hit, options, render) {\n      try {\n        type InsightsHelperOptions = {\n          method: InsightsClientMethod;\n          payload: Partial<InsightsClientPayload>;\n        };\n        const { method, payload }: InsightsHelperOptions = JSON.parse(options);\n\n        return render(\n          insights(method, { objectIDs: [this.objectID], ...payload })\n        );\n      } catch (error) {\n        throw new Error(`\nThe insights helper expects a JSON object of the format:\n{ \"method\": \"method-name\", \"payload\": { \"eventName\": \"name of the event\" } }`);\n      }\n    },\n  };\n}\n","import {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  getRefinements,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport {\n  Refinement,\n  FacetRefinement,\n  NumericRefinement,\n} from '../../lib/utils/getRefinements';\nimport {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nexport type CurrentRefinementsConnectorParamsRefinement = {\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The type of the refinement.\n   *\n   * It can be one of those: 'facet'|'exclude'|'disjunctive'|'hierarchical'|'numeric'|'query'|'tag'.\n   */\n  type: string;\n\n  /**\n   * The raw value of the refinement.\n   */\n  value: string | number;\n\n  /**\n   * The label of the refinement to display.\n   */\n  label: string;\n\n  /**\n   * The value of the operator (only if applicable).\n   */\n  operator?: string;\n\n  /**\n   * The number of found items (only if applicable).\n   */\n  count?: number;\n\n  /**\n   * Whether the count is exhaustive (only if applicable).\n   */\n  exhaustive?: boolean;\n};\n\nexport type CurrentRefinementsConnectorParamsItem = {\n  /**\n   * The index name.\n   */\n  indexName: string;\n\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The textual representation of this attribute.\n   */\n  label: string;\n\n  /**\n   * Currently applied refinements.\n   */\n  refinements: CurrentRefinementsConnectorParamsRefinement[];\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine(refinement: CurrentRefinementsConnectorParamsRefinement): void;\n};\n\nexport type CurrentRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the widget (all by default).\n   * Cannot be used with `excludedAttributes`.\n   *\n   * @default `[]`\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the widget.\n   * Cannot be used with `includedAttributes`.\n   *\n   * @default `['query']`\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<CurrentRefinementsConnectorParamsItem>;\n};\n\nexport type CurrentRefinementsRenderState = {\n  /**\n   * All the currently refined items, grouped by attribute.\n   */\n  items: CurrentRefinementsConnectorParamsItem[];\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine(refinement: CurrentRefinementsConnectorParamsRefinement): void;\n\n  /**\n   * Generates a URL for the next state.\n   */\n  createURL: CreateURL<CurrentRefinementsConnectorParamsRefinement>;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n  connector: true,\n});\n\nexport type CurrentRefinementsWidgetDescription = {\n  $$type: 'ais.currentRefinements';\n  renderState: CurrentRefinementsRenderState;\n  indexRenderState: {\n    currentRefinements: WidgetRenderState<\n      CurrentRefinementsRenderState,\n      CurrentRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type CurrentRefinementsConnector = Connector<\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsConnectorParams\n>;\n\nconst connectCurrentRefinements: CurrentRefinementsConnector = function connectCurrentRefinements(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    if (\n      (widgetParams || {}).includedAttributes &&\n      (widgetParams || {}).excludedAttributes\n    ) {\n      throw new Error(\n        withUsage(\n          'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n        )\n      );\n    }\n\n    const {\n      includedAttributes,\n      excludedAttributes = ['query'],\n      transformItems = (items: CurrentRefinementsConnectorParamsItem[]) =>\n        items,\n    } = widgetParams || {};\n\n    return {\n      $$type: 'ais.currentRefinements',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose() {\n        unmountFn();\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          currentRefinements: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, scopedResults, createURL, helper }) {\n        function getItems() {\n          if (!results) {\n            return transformItems(\n              getRefinementsItems({\n                results: {},\n                helper,\n                includedAttributes,\n                excludedAttributes,\n              })\n            );\n          }\n\n          return scopedResults.reduce<CurrentRefinementsConnectorParamsItem[]>(\n            (accResults, scopedResult) => {\n              return accResults.concat(\n                transformItems(\n                  getRefinementsItems({\n                    results: scopedResult.results,\n                    helper: scopedResult.helper,\n                    includedAttributes,\n                    excludedAttributes,\n                  })\n                )\n              );\n            },\n            []\n          );\n        }\n\n        const items = getItems();\n\n        return {\n          items,\n          canRefine: items.length > 0,\n          refine: refinement => clearRefinement(helper, refinement),\n          createURL: refinement =>\n            createURL(clearRefinementFromState(helper.state, refinement)),\n          widgetParams,\n        };\n      },\n    };\n  };\n};\n\nfunction getRefinementsItems({\n  results,\n  helper,\n  includedAttributes,\n  excludedAttributes,\n}: {\n  results: SearchResults | Record<string, never>;\n  helper: AlgoliaSearchHelper;\n  includedAttributes: CurrentRefinementsConnectorParams['includedAttributes'];\n  excludedAttributes: CurrentRefinementsConnectorParams['excludedAttributes'];\n}): CurrentRefinementsConnectorParamsItem[] {\n  const includesQuery =\n    (includedAttributes || []).indexOf('query') !== -1 ||\n    (excludedAttributes || []).indexOf('query') === -1;\n\n  const filterFunction = includedAttributes\n    ? (item: CurrentRefinementsConnectorParamsRefinement) =>\n        includedAttributes.indexOf(item.attribute) !== -1\n    : (item: CurrentRefinementsConnectorParamsRefinement) =>\n        excludedAttributes!.indexOf(item.attribute) === -1;\n\n  const items = getRefinements(results, helper.state, includesQuery)\n    .map(normalizeRefinement)\n    .filter(filterFunction);\n\n  return items.reduce<CurrentRefinementsConnectorParamsItem[]>(\n    (allItems, currentItem) => [\n      ...allItems.filter(item => item.attribute !== currentItem.attribute),\n      {\n        indexName: helper.state.index,\n        attribute: currentItem.attribute,\n        label: currentItem.attribute,\n        refinements: items\n          .filter(result => result.attribute === currentItem.attribute)\n          // We want to keep the order of refinements except the numeric ones.\n          .sort((a, b) =>\n            a.type === 'numeric' ? (a.value as number) - (b.value as number) : 0\n          ),\n        refine: refinement => clearRefinement(helper, refinement),\n      },\n    ],\n    []\n  );\n}\n\nfunction clearRefinementFromState(\n  state: SearchParameters,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): SearchParameters {\n  switch (refinement.type) {\n    case 'facet':\n      return state.removeFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'disjunctive':\n      return state.removeDisjunctiveFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'hierarchical':\n      return state.removeHierarchicalFacetRefinement(refinement.attribute);\n    case 'exclude':\n      return state.removeExcludeRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'numeric':\n      return state.removeNumericRefinement(\n        refinement.attribute,\n        refinement.operator,\n        String(refinement.value)\n      );\n    case 'tag':\n      return state.removeTagRefinement(String(refinement.value));\n    case 'query':\n      return state.setQueryParameter('query', '');\n    default:\n      warning(\n        false,\n        `The refinement type \"${refinement.type}\" does not exist and cannot be cleared from the current refinements.`\n      );\n      return state;\n  }\n}\n\nfunction clearRefinement(\n  helper: AlgoliaSearchHelper,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): void {\n  helper.setState(clearRefinementFromState(helper.state, refinement)).search();\n}\n\nfunction getOperatorSymbol(operator: SearchParameters.Operator): string {\n  switch (operator) {\n    case '>=':\n      return '≥';\n    case '<=':\n      return '≤';\n    default:\n      return operator;\n  }\n}\n\nfunction normalizeRefinement(\n  refinement: Refinement\n): CurrentRefinementsConnectorParamsRefinement {\n  const value =\n    refinement.type === 'numeric' ? Number(refinement.name) : refinement.name;\n  const label = (refinement as NumericRefinement).operator\n    ? `${getOperatorSymbol(\n        (refinement as NumericRefinement).operator as SearchParameters.Operator\n      )} ${refinement.name}`\n    : refinement.name;\n\n  const normalizedRefinement: CurrentRefinementsConnectorParamsRefinement = {\n    attribute: refinement.attribute,\n    type: refinement.type,\n    value,\n    label,\n  };\n\n  if ((refinement as NumericRefinement).operator !== undefined) {\n    normalizedRefinement.operator = (refinement as NumericRefinement).operator;\n  }\n  if ((refinement as FacetRefinement).count !== undefined) {\n    normalizedRefinement.count = (refinement as FacetRefinement).count;\n  }\n  if ((refinement as FacetRefinement).exhaustive !== undefined) {\n    normalizedRefinement.exhaustive = (refinement as FacetRefinement).exhaustive;\n  }\n\n  return normalizedRefinement;\n}\n\nexport default connectCurrentRefinements;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  isEqual,\n  noop,\n  SendEventForFacet,\n} from '../../lib/utils';\nimport { SearchResults } from 'algoliasearch-helper';\nimport {\n  Connector,\n  CreateURL,\n  TransformItems,\n  RenderOptions,\n  Widget,\n  SortBy,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n  connector: true,\n});\n\nexport type HierarchicalMenuItem = {\n  /**\n   * Value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n  /**\n   * n+1 level of items, same structure HierarchicalMenuItem\n   */\n  data: HierarchicalMenuItem[] | null;\n};\n\nexport type HierarchicalMenuConnectorParams = {\n  /**\n   *  Attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string | null;\n  /**\n   * Show the siblings of the selected parent levels of the current refined value. This\n   * does not impact the root level.\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   */\n  sortBy?: SortBy<HierarchicalMenuItem>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n};\n\nexport type HierarchicalMenuRenderState = {\n  /**\n   * Creates an url for the next state for a clicked item.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Values to be rendered.\n   */\n  items: HierarchicalMenuItem[];\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore: () => void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type HierarchicalMenuWidgetDescription = {\n  $$type: 'ais.hierarchicalMenu';\n  renderState: HierarchicalMenuRenderState;\n  indexRenderState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: WidgetRenderState<\n        HierarchicalMenuRenderState,\n        HierarchicalMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: string[];\n    };\n  };\n};\n\nexport type HierarchicalMenuConnector = Connector<\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuConnectorParams\n>;\n\n/**\n * **HierarchicalMenu** connector provides the logic to build a custom widget\n * that will give the user the ability to explore facets in a tree-like structure.\n *\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two\n * levels deep.\n *\n * @type {Connector}\n * @param {function(HierarchicalMenuRenderingOptions, boolean)} renderFn Rendering function for the custom **HierarchicalMenu** widget.\n * @param {function} unmountFn Unmount function called when the widget is disposed.\n * @return {function(CustomHierarchicalMenuWidgetParams)} Re-usable widget factory for a custom **HierarchicalMenu** widget.\n */\nconst connectHierarchicalMenu: HierarchicalMenuConnector = function connectHierarchicalMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      attributes,\n      separator = ' > ',\n      rootPath = null,\n      showParentLevel = true,\n      limit = 10,\n      showMore = false,\n      showMoreLimit = 20,\n      sortBy = ['name:asc'],\n      transformItems = (items => items) as TransformItems<HierarchicalMenuItem>,\n    } = widgetParams || {};\n\n    if (!attributes || !Array.isArray(attributes) || attributes.length === 0) {\n      throw new Error(\n        withUsage('The `attributes` option expects an array of strings.')\n      );\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(\n        withUsage('The `showMoreLimit` option must be greater than `limit`.')\n      );\n    }\n\n    type ThisWidget = Widget<\n      HierarchicalMenuWidgetDescription & { widgetParams: typeof widgetParams }\n    >;\n\n    // we need to provide a hierarchicalFacet name for the search state\n    // so that we can always map $hierarchicalFacetName => real attributes\n    // we use the first attribute name\n    const [hierarchicalFacetName] = attributes;\n    let sendEvent: HierarchicalMenuRenderState['sendEvent'];\n\n    // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n    let toggleShowMore = () => {};\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    let _refine: HierarchicalMenuRenderState['refine'] | undefined;\n\n    let isShowingMore = false;\n\n    function createToggleShowMore(\n      renderOptions: RenderOptions,\n      widget: ThisWidget\n    ) {\n      return () => {\n        isShowingMore = !isShowingMore;\n        widget.render!(renderOptions);\n      };\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    function _prepareFacetValues(\n      facetValues: SearchResults.HierarchicalFacet[]\n    ): HierarchicalMenuItem[] {\n      return facetValues\n        .slice(0, getLimit())\n        .map(({ name: label, path: value, data, ...subValue }) => {\n          const item: HierarchicalMenuItem = {\n            ...subValue,\n            label,\n            value,\n            data: null,\n          };\n          if (Array.isArray(data)) {\n            item.data = _prepareFacetValues(data);\n          }\n          return item;\n        });\n    }\n\n    return {\n      $$type: 'ais.hierarchicalMenu',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        toggleShowMore = createToggleShowMore(renderOptions, this);\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      /**\n       * @param {Object} param0 cleanup arguments\n       * @param {any} param0.state current search parameters\n       * @returns {any} next search parameters\n       */\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeHierarchicalFacet(hierarchicalFacetName)\n          .setQueryParameter('maxValuesPerFacet', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hierarchicalMenu: {\n            ...renderState.hierarchicalMenu,\n            [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        results,\n        state,\n        createURL,\n        instantSearchInstance,\n        helper,\n      }) {\n        let items: HierarchicalMenuRenderState['items'] = [];\n        let canToggleShowMore = false;\n\n        // Bind createURL to this specific attribute\n        function _createURL(facetValue: string) {\n          return createURL(\n            state\n              .resetPage()\n              .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n          );\n        }\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance,\n            helper,\n            attribute: hierarchicalFacetName,\n            widgetType: this.$$type!,\n          });\n        }\n\n        if (!_refine) {\n          _refine = function(facetValue) {\n            sendEvent('click', facetValue);\n            helper\n              .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n              .search();\n          };\n        }\n\n        if (results) {\n          const facetValues = results.getFacetValues(hierarchicalFacetName, {\n            sortBy,\n          });\n          const facetItems =\n            facetValues && !Array.isArray(facetValues) && facetValues.data\n              ? facetValues.data\n              : [];\n\n          // If the limit is the max number of facet retrieved it is impossible to know\n          // if the facets are exhaustive. The only moment we are sure it is exhaustive\n          // is when it is strictly under the number requested unless we know that another\n          // widget has requested more values (maxValuesPerFacet > getLimit()).\n          // Because this is used for making the search of facets unable or not, it is important\n          // to be conservative here.\n          const hasExhaustiveItems =\n            (state.maxValuesPerFacet || 0) > getLimit()\n              ? facetItems.length <= getLimit()\n              : facetItems.length < getLimit();\n\n          canToggleShowMore =\n            showMore && (isShowingMore || !hasExhaustiveItems);\n\n          items = transformItems(_prepareFacetValues(facetItems));\n        }\n\n        return {\n          items,\n          refine: _refine,\n          canRefine: items.length > 0,\n          createURL: _createURL,\n          sendEvent,\n          widgetParams,\n          isShowingMore,\n          toggleShowMore: cachedToggleShowMore,\n          canToggleShowMore,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const path = searchParameters.getHierarchicalFacetBreadcrumb(\n          hierarchicalFacetName\n        );\n\n        if (!path.length) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          hierarchicalMenu: {\n            ...uiState.hierarchicalMenu,\n            [hierarchicalFacetName]: path,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const values =\n          uiState.hierarchicalMenu &&\n          uiState.hierarchicalMenu[hierarchicalFacetName];\n\n        if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n          const facet = searchParameters.getHierarchicalFacetByName(\n            hierarchicalFacetName\n          );\n\n          warning(\n            isEqual(facet.attributes, attributes) &&\n              facet.separator === separator &&\n              facet.rootPath === rootPath,\n            'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n          );\n        }\n\n        const withFacetConfiguration = searchParameters\n          .removeHierarchicalFacet(hierarchicalFacetName)\n          .addHierarchicalFacet({\n            name: hierarchicalFacetName,\n            attributes,\n            separator,\n            rootPath,\n            // @ts-ignore `showParentLevel` is missing in the SearchParameters.HierarchicalFacet declaration\n            showParentLevel,\n          });\n\n        const currentMaxValuesPerFacet =\n          withFacetConfiguration.maxValuesPerFacet || 0;\n\n        const nextMaxValuesPerFacet = Math.max(\n          currentMaxValuesPerFacet,\n          showMore ? showMoreLimit : limit\n        );\n\n        const withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter(\n          'maxValuesPerFacet',\n          nextMaxValuesPerFacet\n        );\n\n        if (!values) {\n          return withMaxValuesPerFacet.setQueryParameters({\n            hierarchicalFacetsRefinements: {\n              ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n              [hierarchicalFacetName]: [],\n            },\n          });\n        }\n\n        return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n          hierarchicalFacetName,\n          values.join(separator)\n        );\n      },\n    };\n  };\n};\n\nexport default connectHierarchicalMenu;\n","import {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  addAbsolutePosition,\n  addQueryID,\n  createSendEventForHits,\n  SendEventForHits,\n  createBindEventForHits,\n  BindEventForHits,\n  noop,\n} from '../../lib/utils';\nimport {\n  TransformItems,\n  Connector,\n  Hits,\n  Hit,\n  AlgoliaHit,\n  WidgetRenderState,\n} from '../../types';\nimport { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits',\n  connector: true,\n});\n\nexport type HitsRenderState = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Hits;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<AlgoliaHit>;\n\n  /**\n   * Sends an event to the Insights middleware.\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string for the `data-insights-event` attribute for the Insights middleware\n   */\n  bindEvent: BindEventForHits;\n};\n\nexport type HitsConnectorParams = {\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit>;\n};\n\nexport type HitsWidgetDescription = {\n  $$type: 'ais.hits';\n  renderState: HitsRenderState;\n  indexRenderState: {\n    hits: WidgetRenderState<HitsRenderState, HitsConnectorParams>;\n  };\n};\n\nexport type HitsConnector = Connector<\n  HitsWidgetDescription,\n  HitsConnectorParams\n>;\n\nconst connectHits: HitsConnector = function connectHits(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      escapeHTML = true,\n      transformItems = (items => items) as TransformItems<Hit>,\n    } = widgetParams || {};\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n\n    return {\n      $$type: 'ais.hits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n        renderState.sendEvent('view', renderState.hits);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: this.$$type!,\n          });\n        }\n\n        if (!bindEvent) {\n          bindEvent = createBindEventForHits({\n            index: helper.getIndex(),\n            widgetType: this.$$type!,\n          });\n        }\n\n        if (!results) {\n          return {\n            hits: [],\n            results: undefined,\n            sendEvent,\n            bindEvent,\n            widgetParams,\n          };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        const initialEscaped = (results.hits as ReturnType<typeof escapeHits>)\n          .__escaped;\n\n        results.hits = addAbsolutePosition(\n          results.hits,\n          results.page,\n          results.hitsPerPage\n        );\n\n        results.hits = addQueryID(results.hits, results.queryID);\n\n        results.hits = transformItems(results.hits);\n\n        // Make sure the escaped tag stays, even after mapping over the hits.\n        // This prevents the hits from being double-escaped if there are multiple\n        // hits widgets mounted on the page.\n        (results.hits as ReturnType<\n          typeof escapeHits\n        >).__escaped = initialEscaped;\n\n        return {\n          hits: results.hits,\n          results,\n          sendEvent,\n          bindEvent,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetSearchParameters(state) {\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(TAG_PLACEHOLDER);\n      },\n    };\n  };\n};\n\nexport default connectHits;\n","import { SearchResults } from 'algoliasearch-helper';\nimport {\n  uniq,\n  find,\n  createDocumentationMessageGenerator,\n  warning,\n} from '../utils';\nimport {\n  Hits,\n  InsightsClient,\n  InsightsClientMethod,\n  InsightsClientPayload,\n  InsightsClientWrapper,\n  Connector,\n} from '../../types';\n\nconst getSelectedHits = (hits: Hits, selectedObjectIDs: string[]): Hits => {\n  return selectedObjectIDs.map(objectID => {\n    const hit = find(hits, h => h.objectID === objectID);\n    if (typeof hit === 'undefined') {\n      throw new Error(\n        `Could not find objectID \"${objectID}\" passed to \\`clickedObjectIDsAfterSearch\\` in the returned hits. This is necessary to infer the absolute position and the query ID.`\n      );\n    }\n    return hit;\n  });\n};\n\nconst getQueryID = (selectedHits: Hits): string => {\n  const queryIDs = uniq(selectedHits.map(hit => hit.__queryID));\n  if (queryIDs.length > 1) {\n    throw new Error(\n      'Insights currently allows a single `queryID`. The `objectIDs` provided map to multiple `queryID`s.'\n    );\n  }\n  const queryID = queryIDs[0];\n  if (typeof queryID !== 'string') {\n    throw new Error(\n      `Could not infer \\`queryID\\`. Ensure InstantSearch \\`clickAnalytics: true\\` was added with the Configure widget.\n\nSee: https://alg.li/lNiZZ7`\n    );\n  }\n  return queryID;\n};\n\nconst getPositions = (selectedHits: Hits): number[] =>\n  selectedHits.map(hit => hit.__position);\n\nexport const inferPayload = ({\n  method,\n  results,\n  hits,\n  objectIDs,\n}: {\n  method: InsightsClientMethod;\n  results: SearchResults;\n  hits: Hits;\n  objectIDs: string[];\n}): Omit<InsightsClientPayload, 'eventName'> => {\n  const { index } = results;\n  const selectedHits = getSelectedHits(hits, objectIDs);\n  const queryID = getQueryID(selectedHits);\n\n  switch (method) {\n    case 'clickedObjectIDsAfterSearch': {\n      const positions = getPositions(selectedHits);\n      return { index, queryID, objectIDs, positions };\n    }\n\n    case 'convertedObjectIDsAfterSearch':\n      return { index, queryID, objectIDs };\n\n    default:\n      throw new Error(`Unsupported method passed to insights: \"${method}\".`);\n  }\n};\n\nconst wrapInsightsClient = (\n  aa: InsightsClient | null,\n  results: SearchResults,\n  hits: Hits\n): InsightsClientWrapper => (\n  method: InsightsClientMethod,\n  payload: Partial<InsightsClientPayload>\n) => {\n  warning(\n    false,\n    `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  if (!aa) {\n    const withInstantSearchUsage = createDocumentationMessageGenerator({\n      name: 'instantsearch',\n    });\n    throw new Error(\n      withInstantSearchUsage(\n        'The `insightsClient` option has not been provided to `instantsearch`.'\n      )\n    );\n  }\n  if (!Array.isArray(payload.objectIDs)) {\n    throw new TypeError('Expected `objectIDs` to be an array.');\n  }\n  const inferredPayload = inferPayload({\n    method,\n    results,\n    hits,\n    objectIDs: payload.objectIDs,\n  });\n  aa(method, { ...inferredPayload, ...payload } as any);\n};\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n * It passes `insights` to `HitsWithInsightsListener` and `InfiniteHitsWithInsightsListener`.\n */\nexport default function withInsights<TConnector extends Connector<any, any>>(\n  connector: TConnector\n): TConnector {\n  return ((renderFn, unmountFn) =>\n    connector((renderOptions, isFirstRender) => {\n      const { results, hits, instantSearchInstance } = renderOptions;\n      if (results && hits && instantSearchInstance) {\n        const insights = wrapInsightsClient(\n          instantSearchInstance.insightsClient,\n          results,\n          hits\n        );\n        return renderFn({ ...renderOptions, insights }, isFirstRender);\n      }\n      return renderFn(renderOptions, isFirstRender);\n    }, unmountFn)) as TConnector;\n}\n","var n,l,u,t,i,r,o,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(n,l,u){var t,i,r,o,f=arguments;if(l=s({},l),arguments.length>3)for(u=[u],t=3;t<arguments.length;t++)u.push(f[t]);if(null!=u&&(l.children=u),null!=n&&null!=n.defaultProps)for(i in n.defaultProps)void 0===l[i]&&(l[i]=n.defaultProps[i]);return o=l.key,null!=(r=l.ref)&&delete l.ref,null!=o&&delete l.key,v(n,l,o,r)}function v(l,u,t,i){var r={type:l,props:u,key:t,ref:i,__k:null,__p:null,__b:0,__e:null,l:null,__c:null,constructor:void 0};return n.vnode&&n.vnode(r),r}function p(){return{}}function d(n){return n.children}function y(n){if(null==n||\"boolean\"==typeof n)return null;if(\"string\"==typeof n||\"number\"==typeof n)return v(null,n,null,null);if(null!=n.__e||null!=n.__c){var l=v(n.type,n.props,n.key,null);return l.__e=n.__e,l}return n}function m(n,l){this.props=n,this.context=l}function w(n,l){if(null==l)return n.__p?w(n.__p,n.__p.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?w(n):null}function g(n){var l,u;if(null!=(n=n.__p)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return g(n)}}function k(l){(!l.__d&&(l.__d=!0)&&1===u.push(l)||i!==n.debounceRendering)&&(i=n.debounceRendering,(n.debounceRendering||t)(_))}function _(){var n,l,t,i,r,o,f,e;for(u.sort(function(n,l){return l.__v.__b-n.__v.__b});n=u.pop();)n.__d&&(t=void 0,i=void 0,o=(r=(l=n).__v).__e,f=l.__P,e=l.u,l.u=!1,f&&(t=[],i=$(f,r,s({},r),l.__n,void 0!==f.ownerSVGElement,null,t,e,null==o?w(r):o),j(t,r),i!=o&&g(r)))}function b(n,l,u,t,i,r,o,c,s){var h,v,p,d,y,m,g,k=u&&u.__k||e,_=k.length;if(c==f&&(c=null!=r?r[0]:_?w(u,0):null),h=0,l.__k=x(l.__k,function(u){if(null!=u){if(u.__p=l,u.__b=l.__b+1,null===(p=k[h])||p&&u.key==p.key&&u.type===p.type)k[h]=void 0;else for(v=0;v<_;v++){if((p=k[v])&&u.key==p.key&&u.type===p.type){k[v]=void 0;break}p=null}if(d=$(n,u,p=p||f,t,i,r,o,null,c,s),(v=u.ref)&&p.ref!=v&&(g||(g=[])).push(v,u.__c||d,u),null!=d){if(null==m&&(m=d),null!=u.l)d=u.l,u.l=null;else if(r==p||d!=c||null==d.parentNode){n:if(null==c||c.parentNode!==n)n.appendChild(d);else{for(y=c,v=0;(y=y.nextSibling)&&v<_;v+=2)if(y==d)break n;n.insertBefore(d,c)}\"option\"==l.type&&(n.value=\"\")}c=d.nextSibling,\"function\"==typeof l.type&&(l.l=d)}}return h++,u}),l.__e=m,null!=r&&\"function\"!=typeof l.type)for(h=r.length;h--;)null!=r[h]&&a(r[h]);for(h=_;h--;)null!=k[h]&&D(k[h],k[h]);if(g)for(h=0;h<g.length;h++)A(g[h],g[++h],g[++h])}function x(n,l,u){if(null==u&&(u=[]),null==n||\"boolean\"==typeof n)l&&u.push(l(null));else if(Array.isArray(n))for(var t=0;t<n.length;t++)x(n[t],l,u);else u.push(l?l(y(n)):n);return u}function C(n,l,u,t,i){var r;for(r in u)r in l||N(n,r,null,u[r],t);for(r in l)i&&\"function\"!=typeof l[r]||\"value\"===r||\"checked\"===r||u[r]===l[r]||N(n,r,l[r],u[r],t)}function P(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=\"number\"==typeof u&&!1===c.test(l)?u+\"px\":null==u?\"\":u}function N(n,l,u,t,i){var r,o,f,e,c;if(\"key\"===(l=i?\"className\"===l?\"class\":l:\"class\"===l?\"className\":l)||\"children\"===l);else if(\"style\"===l)if(r=n.style,\"string\"==typeof u)r.cssText=u;else{if(\"string\"==typeof t&&(r.cssText=\"\",t=null),t)for(o in t)u&&o in u||P(r,o,\"\");if(u)for(f in u)t&&u[f]===t[f]||P(r,f,u[f])}else\"o\"===l[0]&&\"n\"===l[1]?(e=l!==(l=l.replace(/Capture$/,\"\")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(t||n.addEventListener(l,T,e),(n.t||(n.t={}))[l]=u):n.removeEventListener(l,T,e)):\"list\"!==l&&\"tagName\"!==l&&\"form\"!==l&&!i&&l in n?n[l]=null==u?\"\":u:\"function\"!=typeof u&&\"dangerouslySetInnerHTML\"!==l&&(l!==(l=l.replace(/^xlink:?/,\"\"))?null==u||!1===u?n.removeAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase()):n.setAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase(),u):null==u||!1===u?n.removeAttribute(l):n.setAttribute(l,u))}function T(l){return this.t[l.type](n.event?n.event(l):l)}function $(l,u,t,i,r,o,f,e,c,a){var h,v,p,y,w,g,k,_,C,P,N=u.type;if(void 0!==u.constructor)return null;(h=n.__b)&&h(u);try{n:if(\"function\"==typeof N){if(_=u.props,C=(h=N.contextType)&&i[h.__c],P=h?C?C.props.value:h.__p:i,t.__c?k=(v=u.__c=t.__c).__p=v.__E:(\"prototype\"in N&&N.prototype.render?u.__c=v=new N(_,P):(u.__c=v=new m(_,P),v.constructor=N,v.render=H),C&&C.sub(v),v.props=_,v.state||(v.state={}),v.context=P,v.__n=i,p=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=N.getDerivedStateFromProps&&s(v.__s==v.state?v.__s=s({},v.__s):v.__s,N.getDerivedStateFromProps(_,v.__s)),p)null==N.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&f.push(v);else{if(null==N.getDerivedStateFromProps&&null==e&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(_,P),!e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(_,v.__s,P)){for(v.props=_,v.state=v.__s,v.__d=!1,v.__v=u,u.__e=null!=c?c!==t.__e?c:t.__e:null,u.__k=t.__k,h=0;h<u.__k.length;h++)u.__k[h]&&(u.__k[h].__p=u);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(_,v.__s,P)}for(y=v.props,w=v.state,v.context=P,v.props=_,v.state=v.__s,(h=n.__r)&&h(u),v.__d=!1,v.__v=u,v.__P=l,h=v.render(v.props,v.state,v.context),u.__k=x(null!=h&&h.type==d&&null==h.key?h.props.children:h),null!=v.getChildContext&&(i=s(s({},i),v.getChildContext())),p||null==v.getSnapshotBeforeUpdate||(g=v.getSnapshotBeforeUpdate(y,w)),b(l,u,t,i,r,o,f,c,a),v.base=u.__e;h=v.__h.pop();)v.__s&&(v.state=v.__s),h.call(v);p||null==y||null==v.componentDidUpdate||v.componentDidUpdate(y,w,g),k&&(v.__E=v.__p=null)}else u.__e=z(t.__e,u,t,i,r,o,f,a);(h=n.diffed)&&h(u)}catch(l){n.__e(l,u,t)}return u.__e}function j(l,u){for(var t;t=l.pop();)try{t.componentDidMount()}catch(l){n.__e(l,t.__v)}n.__c&&n.__c(u)}function z(n,l,u,t,i,r,o,c){var s,a,h,v,p=u.props,d=l.props;if(i=\"svg\"===l.type||i,null==n&&null!=r)for(s=0;s<r.length;s++)if(null!=(a=r[s])&&(null===l.type?3===a.nodeType:a.localName===l.type)){n=a,r[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(d);n=i?document.createElementNS(\"http://www.w3.org/2000/svg\",l.type):document.createElement(l.type),r=null}return null===l.type?p!==d&&(null!=r&&(r[r.indexOf(n)]=null),n.data=d):l!==u&&(null!=r&&(r=e.slice.call(n.childNodes)),h=(p=u.props||f).dangerouslySetInnerHTML,v=d.dangerouslySetInnerHTML,c||(v||h)&&(v&&h&&v.__html==h.__html||(n.innerHTML=v&&v.__html||\"\")),C(n,d,p,i,c),l.__k=l.props.children,v||b(n,l,u,t,\"foreignObject\"!==l.type&&i,r,o,f,c),c||(\"value\"in d&&void 0!==d.value&&d.value!==n.value&&(n.value=null==d.value?\"\":d.value),\"checked\"in d&&void 0!==d.checked&&d.checked!==n.checked&&(n.checked=d.checked))),n}function A(l,u,t){try{\"function\"==typeof l?l(u):l.current=u}catch(l){n.__e(l,t)}}function D(l,u,t){var i,r,o;if(n.unmount&&n.unmount(l),(i=l.ref)&&A(i,null,u),t||\"function\"==typeof l.type||(t=null!=(r=l.__e)),l.__e=l.l=null,null!=(i=l.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(l){n.__e(l,u)}i.base=i.__P=null}if(i=l.__k)for(o=0;o<i.length;o++)i[o]&&D(i[o],u,t);null!=r&&a(r)}function H(n,l,u){return this.constructor(n,u)}function I(l,u,t){var i,o,c;n.__p&&n.__p(l,u),o=(i=t===r)?null:t&&t.__k||u.__k,l=h(d,null,[l]),c=[],$(u,i?u.__k=l:(t||u).__k=l,o||f,f,void 0!==u.ownerSVGElement,t&&!i?[t]:o?null:e.slice.call(u.childNodes),c,!1,t||f,i),j(c,l)}function L(n,l){I(n,l,r)}function M(n,l){return l=s(s({},n.props),l),arguments.length>2&&(l.children=e.slice.call(arguments,2)),v(n.type,l,l.key||n.key,l.ref||n.ref)}function O(n){var l={},u={__c:\"__cC\"+o++,__p:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var t,i=this;return this.getChildContext||(t=[],this.getChildContext=function(){return l[u.__c]=i,l},this.shouldComponentUpdate=function(i){n.value!==i.value&&(l[u.__c].props.value=i.value,t.some(function(n){n.__P&&(n.context=i.value,k(n))}))},this.sub=function(n){t.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){t.splice(t.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Consumer.contextType=u,u}n={},l=function(n){return null!=n&&void 0===n.constructor},m.prototype.setState=function(n,l){var u=this.__s!==this.state&&this.__s||(this.__s=s({},this.state));(\"function\"!=typeof n||(n=n(u,this.props)))&&s(u,n),null!=n&&this.__v&&(this.u=!1,l&&this.__h.push(l),k(this))},m.prototype.forceUpdate=function(n){this.__v&&(n&&this.__h.push(n),this.u=!0,k(this))},m.prototype.render=d,u=[],t=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,i=n.debounceRendering,n.__e=function(n,l,u){for(var t;l=l.__p;)if((t=l.__c)&&!t.__p)try{if(t.constructor&&null!=t.constructor.getDerivedStateFromError)t.setState(t.constructor.getDerivedStateFromError(n));else{if(null==t.componentDidCatch)continue;t.componentDidCatch(n)}return k(t.__E=t)}catch(l){n=l}throw n},r=f,o=0;export{I as render,L as hydrate,h as createElement,h,d as Fragment,p as createRef,l as isValidElement,m as Component,M as cloneElement,O as createContext,x as toChildArray,D as _unmount,n as options};\n//# sourceMappingURL=preact.module.js.map\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { deserializePayload } from '../utils';\nimport { readDataAttributes, hasDataAttributes } from '../../helpers/insights';\nimport { InsightsClientWrapper } from '../../types';\nimport { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\n\ntype WithInsightsListenerProps = {\n  [key: string]: unknown;\n  insights: InsightsClientWrapper;\n  sendEvent?: (event: InsightsEvent) => void;\n};\n\nconst findInsightsTarget = (\n  startElement: HTMLElement | null,\n  endElement: HTMLElement | null,\n  validator: (element: HTMLElement) => boolean\n): HTMLElement | null => {\n  let element: HTMLElement | null = startElement;\n  while (element && !validator(element)) {\n    if (element === endElement) {\n      return null;\n    }\n    element = element.parentElement;\n  }\n  return element;\n};\n\ntype ParseInsightsEvent = (element: HTMLElement) => InsightsEvent;\n\nconst parseInsightsEvent: ParseInsightsEvent = element => {\n  const serializedPayload = element.getAttribute('data-insights-event');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights middleware expects `data-insights-event` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    return deserializePayload(serializedPayload) as InsightsEvent;\n  } catch (error) {\n    throw new Error(\n      'The insights middleware was unable to parse `data-insights-event`.'\n    );\n  }\n};\n\nconst insightsListener = (BaseComponent: any) => {\n  function WithInsightsListener(props: WithInsightsListenerProps) {\n    const handleClick = (event: MouseEvent): void => {\n      if (props.sendEvent) {\n        // new way with insights middleware\n        const targetWithEvent = findInsightsTarget(\n          event.target as HTMLElement | null,\n          event.currentTarget as HTMLElement | null,\n          element => element.hasAttribute('data-insights-event')\n        );\n        if (targetWithEvent) {\n          const payload = parseInsightsEvent(targetWithEvent);\n          props.sendEvent(payload);\n        }\n      }\n\n      // old way, e.g. instantsearch.insights(\"clickedObjectIDsAfterSearch\", { .. })\n      const insightsTarget = findInsightsTarget(\n        event.target as HTMLElement | null,\n        event.currentTarget as HTMLElement | null,\n        element => hasDataAttributes(element)\n      );\n      if (insightsTarget) {\n        const { method, payload } = readDataAttributes(insightsTarget);\n        props.insights(method, payload);\n      }\n    };\n\n    return (\n      <div onClick={handleClick}>\n        <BaseComponent {...props} />\n      </div>\n    );\n  }\n\n  return WithInsightsListener;\n};\n\nexport default insightsListener;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport { AlgoliaSearchHelper, SearchParameters } from 'algoliasearch-helper';\nimport {\n  Connector,\n  TransformItems,\n  CreateURL,\n  InitOptions,\n  RenderOptions,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n  connector: true,\n});\n\nexport type HitsPerPageRenderStateItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * Indicates if it's the current refined value.\n   */\n  isRefined: boolean;\n};\n\nexport type HitsPerPageConnectorParamsItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * The default hits per page on first search.\n   *\n   * @default false\n   */\n  default?: boolean;\n};\n\nexport type HitsPerPageConnectorParams = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HitsPerPageRenderStateItem>;\n};\n\nexport type HitsPerPageRenderState = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageRenderStateItem[];\n\n  /**\n   * Creates the URL for a single item name in the list.\n   *\n   * @internal\n   */\n  createURL: CreateURL<HitsPerPageConnectorParamsItem['value']>;\n\n  /**\n   * Sets the number of hits per page and triggers a search.\n   */\n  refine: (value: number) => void;\n\n  /**\n   * Indicates whether or not the search has results.\n   */\n  hasNoResults: boolean;\n};\n\nexport type HitsPerPageWidgetDescription = {\n  $$type: 'ais.hitsPerPage';\n  renderState: HitsPerPageRenderState;\n  indexRenderState: {\n    hitsPerPage: WidgetRenderState<\n      HitsPerPageRenderState,\n      HitsPerPageConnectorParams\n    >;\n  };\n  indexUiState: {\n    hitsPerPage: number;\n  };\n};\n\nexport type HitsPerPageConnector = Connector<\n  HitsPerPageWidgetDescription,\n  HitsPerPageConnectorParams\n>;\n\nconst connectHitsPerPage: HitsPerPageConnector = function connectHitsPerPage(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      items: userItems,\n      transformItems = (items => items) as TransformItems<\n        HitsPerPageRenderStateItem\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(userItems)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    let items = userItems;\n\n    const defaultItems = items.filter(item => item.default === true);\n\n    if (defaultItems.length === 0) {\n      throw new Error(\n        withUsage(`A default value must be specified in \\`items\\`.`)\n      );\n    }\n\n    if (defaultItems.length > 1) {\n      throw new Error(\n        withUsage('More than one default value is specified in `items`.')\n      );\n    }\n\n    const defaultItem = defaultItems[0];\n\n    const normalizeItems = ({ hitsPerPage }: SearchParameters) => {\n      return items.map(item => ({\n        ...item,\n        isRefined: Number(item.value) === Number(hitsPerPage),\n      }));\n    };\n\n    type ConnectorState = {\n      getRefine: (\n        helper: AlgoliaSearchHelper\n      ) => (value: HitsPerPageConnectorParamsItem['value']) => any;\n      createURLFactory: (props: {\n        state: SearchParameters;\n        createURL: (InitOptions | RenderOptions)['createURL'];\n      }) => HitsPerPageRenderState['createURL'];\n    };\n\n    const connectorState: ConnectorState = {\n      getRefine: helper => value => {\n        return !value && value !== 0\n          ? helper.setQueryParameter('hitsPerPage', undefined).search()\n          : helper.setQueryParameter('hitsPerPage', value).search();\n      },\n      createURLFactory: ({ state, createURL }) => value =>\n        createURL(\n          state\n            .resetPage()\n            .setQueryParameter(\n              'hitsPerPage',\n              !value && value !== 0 ? undefined : value\n            )\n        ),\n    };\n\n    return {\n      $$type: 'ais.hitsPerPage',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n\n        const isCurrentInOptions = items.some(\n          item => Number(state.hitsPerPage) === Number(item.value)\n        );\n\n        if (!isCurrentInOptions) {\n          warning(\n            state.hitsPerPage !== undefined,\n            `\n\\`hitsPerPage\\` is not defined.\nThe option \\`hitsPerPage\\` needs to be set using the \\`configure\\` widget.\n\nLearn more: https://www.algolia.com/doc/api-reference/widgets/hits-per-page/js/\n            `\n          );\n\n          warning(\n            false,\n            `\nThe \\`items\\` option of \\`hitsPerPage\\` does not contain the \"hits per page\" value coming from the state: ${state.hitsPerPage}.\n\nYou may want to add another entry to the \\`items\\` option with this value.`\n          );\n\n          items = [\n            // The helper will convert the empty string to `undefined`.\n            { value: ('' as unknown) as number, label: '' },\n            ...items,\n          ];\n        }\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('hitsPerPage', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hitsPerPage: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ state, results, createURL, helper }) {\n        return {\n          items: transformItems(normalizeItems(state)),\n          refine: connectorState.getRefine(helper),\n          createURL: connectorState.createURLFactory({ state, createURL }),\n          hasNoResults: results ? results.nbHits === 0 : true,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const hitsPerPage = searchParameters.hitsPerPage;\n\n        if (hitsPerPage === undefined || hitsPerPage === defaultItem.value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          hitsPerPage,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameters({\n          hitsPerPage: uiState.hitsPerPage || defaultItem.value,\n        });\n      },\n    };\n  };\n};\n\nexport default connectHitsPerPage;\n","import { withInsights } from '../../lib/insights';\nimport connectHits, {\n  HitsConnectorParams,\n  HitsWidgetDescription,\n} from './connectHits';\nimport { Connector } from '../../types';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  HitsWidgetDescription,\n  HitsConnectorParams\n>;\n\nconst connectHitsWithInsights = withInsights(connectHits);\n\nexport default connectHitsWithInsights;\n","import {\n  AlgoliaSearchHelper as Helper,\n  PlainSearchParameters,\n  SearchParameters,\n} from 'algoliasearch-helper';\nimport {\n  Hits,\n  Connector,\n  TransformItems,\n  Hit,\n  WidgetRenderState,\n} from '../../types';\nimport {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isEqual,\n  addAbsolutePosition,\n  addQueryID,\n  noop,\n  createSendEventForHits,\n  SendEventForHits,\n  createBindEventForHits,\n  BindEventForHits,\n} from '../../lib/utils';\n\nexport type InfiniteHitsCachedHits = {\n  [page: number]: Hits;\n};\n\ntype Read = ({\n  state,\n}: {\n  state: Partial<SearchParameters>;\n}) => InfiniteHitsCachedHits | null;\n\ntype Write = ({\n  state,\n  hits,\n}: {\n  state: Partial<SearchParameters>;\n  hits: InfiniteHitsCachedHits;\n}) => void;\n\nexport type InfiniteHitsCache = {\n  read: Read;\n  write: Write;\n};\n\nexport type InfiniteHitsConnectorParams = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Enable the button to load previous results.\n   *\n   * @default `false`\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Receives the items, and is called before displaying them.\n   * Useful for mapping over the items to transform, and remove or reorder them.\n   */\n  transformItems?: TransformItems<Hit>;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache;\n};\n\nexport type InfiniteHitsRenderState = {\n  /**\n   * Loads the previous results.\n   */\n  showPrevious: () => void;\n\n  /**\n   * Loads the next page of hits.\n   */\n  showMore: () => void;\n\n  /**\n   * Indicates whether the first page of hits has been reached.\n   */\n  isFirstPage: boolean;\n\n  /**\n   * Indicates whether the last page of hits has been reached.\n   */\n  isLastPage: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string of data-insights-event attribute for insights middleware\n   */\n  bindEvent: BindEventForHits;\n\n  /**\n   * Hits for the current page\n   */\n  currentPageHits: Hits;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n  connector: true,\n});\n\nexport type InfiniteHitsWidgetDescription = {\n  $$type: 'ais.infiniteHits';\n  renderState: InfiniteHitsRenderState;\n  indexRenderState: {\n    infiniteHits: WidgetRenderState<\n      InfiniteHitsRenderState,\n      InfiniteHitsConnectorParams\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type InfiniteHitsConnector = Connector<\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams\n>;\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nfunction getInMemoryCache(): InfiniteHitsCache {\n  let cachedHits: InfiniteHitsCachedHits | null = null;\n  let cachedState: PlainSearchParameters | null = null;\n  return {\n    read({ state }) {\n      return isEqual(cachedState, getStateWithoutPage(state))\n        ? cachedHits\n        : null;\n    },\n    write({ state, hits }) {\n      cachedState = getStateWithoutPage(state);\n      cachedHits = hits;\n    },\n  };\n}\n\nfunction extractHitsFromCachedHits(cachedHits: InfiniteHitsCachedHits) {\n  return Object.keys(cachedHits)\n    .map(Number)\n    .sort((a, b) => a - b)\n    .reduce((acc: Hits, page) => {\n      return acc.concat(cachedHits[page]);\n    }, []);\n}\n\nconst connectInfiniteHits: InfiniteHitsConnector = function connectInfiniteHits(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      escapeHTML = true,\n      transformItems = (items => items) as TransformItems<Hit>,\n      cache = getInMemoryCache(),\n    } = widgetParams || {};\n    let showPrevious: () => void;\n    let showMore: () => void;\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n    const getFirstReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.min(page, ...pages);\n      }\n    };\n    const getLastReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.max(page, ...pages);\n      }\n    };\n\n    const getShowPrevious = (helper: Helper): (() => void) => () => {\n      // Using the helper's `overrideStateWithoutTriggeringChangeEvent` method\n      // avoid updating the browser URL when the user displays the previous page.\n      helper\n        .overrideStateWithoutTriggeringChangeEvent({\n          ...helper.state,\n          page:\n            getFirstReceivedPage(\n              helper.state,\n              cache.read({ state: helper.state }) || {}\n            ) - 1,\n        })\n        .searchWithoutTriggeringOnStateChange();\n    };\n\n    const getShowMore = (helper: Helper): (() => void) => () => {\n      helper\n        .setPage(\n          getLastReceivedPage(\n            helper.state,\n            cache.read({ state: helper.state }) || {}\n          ) + 1\n        )\n        .search();\n    };\n\n    return {\n      $$type: 'ais.infiniteHits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n\n        sendEvent('view', widgetRenderState.currentPageHits);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          infiniteHits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, state, instantSearchInstance }) {\n        let isFirstPage: boolean;\n        let currentPageHits: Hits = [];\n        const cachedHits = cache.read({ state }) || {};\n\n        if (!results) {\n          showPrevious = getShowPrevious(helper);\n          showMore = getShowMore(helper);\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: this.$$type!,\n          });\n          bindEvent = createBindEventForHits({\n            index: helper.getIndex(),\n            widgetType: this.$$type!,\n          });\n          isFirstPage =\n            helper.state.page === undefined ||\n            getFirstReceivedPage(helper.state, cachedHits) === 0;\n        } else {\n          const { page = 0 } = state;\n\n          if (escapeHTML && results.hits.length > 0) {\n            results.hits = escapeHits(results.hits);\n          }\n          const initialEscaped = (results.hits as any).__escaped;\n\n          results.hits = addAbsolutePosition(\n            results.hits,\n            results.page,\n            results.hitsPerPage\n          );\n\n          results.hits = addQueryID(results.hits, results.queryID);\n\n          results.hits = transformItems(results.hits);\n\n          // Make sure the escaped tag stays after mapping over the hits.\n          // This prevents the hits from being double-escaped if there are multiple\n          // hits widgets mounted on the page.\n          (results.hits as any).__escaped = initialEscaped;\n\n          if (cachedHits[page] === undefined) {\n            cachedHits[page] = results.hits;\n            cache.write({ state, hits: cachedHits });\n          }\n          currentPageHits = results.hits;\n\n          isFirstPage = getFirstReceivedPage(state, cachedHits) === 0;\n        }\n\n        const hits = extractHitsFromCachedHits(cachedHits);\n        const isLastPage = results\n          ? results.nbPages <= getLastReceivedPage(state, cachedHits) + 1\n          : true;\n\n        return {\n          hits,\n          currentPageHits,\n          sendEvent,\n          bindEvent,\n          results,\n          showPrevious,\n          showMore,\n          isFirstPage,\n          isLastPage,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutPage = state.setQueryParameter('page', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutPage;\n        }\n\n        return stateWithoutPage.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          // return without adding `page` to uiState\n          // because we don't want `page=1` in the URL\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          // The page in the UI state is incremented by one\n          // to expose the user value (not `0`).\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters;\n\n        if (escapeHTML) {\n          widgetSearchParameters = searchParameters.setQueryParameters(\n            TAG_PLACEHOLDER\n          );\n        }\n\n        // The page in the search parameters is decremented by one\n        // to get to the actual parameter value from the UI state.\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return widgetSearchParameters.setQueryParameter('page', page);\n      },\n    };\n  };\n};\n\nexport default connectInfiniteHits;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n  SendEventForFacet,\n} from '../../lib/utils';\nimport {\n  Connector,\n  RenderOptions,\n  SortBy,\n  TransformItems,\n  Widget,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'menu',\n  connector: true,\n});\n\nexport type MenuItem = {\n  /**\n   * The value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type MenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * How many facets values to retrieve.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * How many facets values to retrieve when `toggleShowMore` is called, this value is meant to be greater than `limit` option.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   */\n  sortBy?: SortBy<MenuItem>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<MenuItem>;\n};\n\nexport type MenuRenderState = {\n  /**\n   * The elements that can be refined for the current search results.\n   */\n  items: MenuItem[];\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL(value: string): string;\n  /**\n   * Filter the search to item value.\n   */\n  refine(value: string): void;\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMore.limit`.\n   */\n  toggleShowMore(): void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type MenuWidgetDescription = {\n  $$type: 'ais.menu';\n  renderState: MenuRenderState;\n  indexRenderState: {\n    menu: {\n      [attribute: string]: WidgetRenderState<\n        MenuRenderState,\n        MenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    menu: {\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type MenuConnector = Connector<\n  MenuWidgetDescription,\n  MenuConnectorParams\n>;\n\n/**\n * **Menu** connector provides the logic to build a widget that will give the user the ability to choose a single value for a specific facet. The typical usage of menu is for navigation in categories.\n *\n * This connector provides a `toggleShowMore()` function to display more or less items and a `refine()`\n * function to select an item. While selecting a new element, the `refine` will also unselect the\n * one that is currently selected.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in \"attributes for faceting\" on the Algolia dashboard or configured as attributesForFaceting via a set settings call to the Algolia API.\n */\nconst connectMenu: MenuConnector = function connectMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      attribute,\n      limit = 10,\n      showMore = false,\n      showMoreLimit = 20,\n      sortBy = ['isRefined', 'name:asc'],\n      transformItems = (items => items) as TransformItems<MenuItem>,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(\n        withUsage('The `showMoreLimit` option must be greater than `limit`.')\n      );\n    }\n\n    type ThisWidget = Widget<\n      MenuWidgetDescription & { widgetParams: typeof widgetParams }\n    >;\n\n    let sendEvent: MenuRenderState['sendEvent'] | undefined;\n    let _createURL: MenuRenderState['createURL'] | undefined;\n    let _refine: MenuRenderState['refine'] | undefined;\n\n    // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n    let isShowingMore = false;\n    let toggleShowMore = () => {};\n    function createToggleShowMore(\n      renderOptions: RenderOptions,\n      widget: ThisWidget\n    ) {\n      return () => {\n        isShowingMore = !isShowingMore;\n        widget.render!(renderOptions);\n      };\n    }\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    return {\n      $$type: 'ais.menu' as const,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeHierarchicalFacet(attribute)\n          .setQueryParameter('maxValuesPerFacet', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          menu: {\n            ...renderState.menu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const {\n          results,\n          createURL,\n          instantSearchInstance,\n          helper,\n        } = renderOptions;\n\n        let items: MenuRenderState['items'] = [];\n        let canToggleShowMore = false;\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance,\n            helper,\n            attribute,\n            widgetType: this.$$type!,\n          });\n        }\n\n        if (!_createURL) {\n          _createURL = (facetValue: string) =>\n            createURL(\n              helper.state\n                .resetPage()\n                .toggleFacetRefinement(attribute, facetValue)\n            );\n        }\n\n        if (!_refine) {\n          _refine = function(facetValue: string) {\n            const [refinedItem] = helper.getHierarchicalFacetBreadcrumb(\n              attribute\n            );\n            sendEvent!('click', facetValue ? facetValue : refinedItem);\n            helper\n              .toggleFacetRefinement(\n                attribute,\n                facetValue ? facetValue : refinedItem\n              )\n              .search();\n          };\n        }\n\n        if (renderOptions.results) {\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n        }\n\n        if (results) {\n          const facetValues = results.getFacetValues(attribute, {\n            sortBy,\n          });\n          const facetItems =\n            facetValues && !Array.isArray(facetValues) && facetValues.data\n              ? facetValues.data\n              : [];\n\n          canToggleShowMore =\n            showMore && (isShowingMore || facetItems.length > getLimit());\n\n          items = transformItems(\n            facetItems\n              .slice(0, getLimit())\n              .map(({ name: label, path: value, ...item }) => ({\n                ...item,\n                label,\n                value,\n              }))\n          );\n        }\n\n        return {\n          items,\n          createURL: _createURL,\n          refine: _refine,\n          sendEvent,\n          canRefine: items.length > 0,\n          widgetParams,\n          isShowingMore,\n          toggleShowMore: cachedToggleShowMore,\n          canToggleShowMore,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const [value] = searchParameters.getHierarchicalFacetBreadcrumb(\n          attribute\n        );\n\n        if (!value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          menu: {\n            ...uiState.menu,\n            [attribute]: value,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.menu && uiState.menu[attribute];\n\n        const withFacetConfiguration = searchParameters\n          .removeHierarchicalFacet(attribute)\n          .addHierarchicalFacet({\n            name: attribute,\n            attributes: [attribute],\n          });\n\n        const currentMaxValuesPerFacet =\n          withFacetConfiguration.maxValuesPerFacet || 0;\n\n        const nextMaxValuesPerFacet = Math.max(\n          currentMaxValuesPerFacet,\n          showMore ? showMoreLimit : limit\n        );\n\n        const withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter(\n          'maxValuesPerFacet',\n          nextMaxValuesPerFacet\n        );\n\n        if (!value) {\n          return withMaxValuesPerFacet.setQueryParameters({\n            hierarchicalFacetsRefinements: {\n              ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        }\n\n        return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n          attribute,\n          value\n        );\n      },\n    };\n  };\n};\n\nexport default connectMenu;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  SendEventForFacet,\n  convertNumericRefinementsToFilters,\n  noop,\n} from '../../lib/utils';\nimport {\n  Connector,\n  CreateURL,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\nimport { SearchParameters } from 'algoliasearch-helper';\nimport { InsightsEvent } from '../../middlewares';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'numeric-menu',\n  connector: true,\n});\n\nexport type NumericMenuConnectorParamsItem = {\n  /**\n   * Name of the option\n   */\n  label: string;\n\n  /**\n   * Higher bound of the option (<=)\n   */\n  start?: number;\n\n  /**\n   * Lower bound of the option (>=)\n   */\n  end?: number;\n};\n\nexport type NumericMenuRenderStateItem = {\n  /**\n   *  Name of the option.\n   */\n  label: string;\n\n  /**\n   * URL encoded of the bounds object with the form `{start, end}`.\n   * This value can be used verbatim in the webpage and can be read by `refine`\n   * directly. If you want to inspect the value, you can do:\n   * `JSON.parse(decodeURI(value))` to get the object.\n   */\n  value: string;\n\n  /**\n   * True if the value is selected\n   */\n  isRefined: boolean;\n};\n\nexport type NumericMenuConnectorParams = {\n  /**\n   * Name of the attribute for filtering\n   */\n  attribute: string;\n\n  /**\n   * List of all the items\n   */\n  items: NumericMenuConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates\n   */\n  transformItems?: TransformItems<NumericMenuRenderStateItem>;\n};\n\nexport type NumericMenuRenderState = {\n  /**\n   * The list of available choices\n   */\n  items: NumericMenuRenderStateItem[];\n\n  /**\n   * Creates URLs for the next state, the string is the name of the selected option\n   */\n  createURL: CreateURL<NumericMenuRenderStateItem['value']>;\n\n  /**\n   * `true` if the last search contains no result\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Sets the selected value and trigger a new search\n   */\n  refine: (facetValue: string) => void;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type NumericMenuWidgetDescription = {\n  $$type: 'ais.numericMenu';\n  renderState: NumericMenuRenderState;\n  indexRenderState: {\n    numericMenu: {\n      [attribute: string]: WidgetRenderState<\n        NumericMenuRenderState,\n        NumericMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    numericMenu: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type NumericMenuConnector = Connector<\n  NumericMenuWidgetDescription,\n  NumericMenuConnectorParams\n>;\n\nconst $$type = 'ais.numericMenu';\n\nconst createSendEvent = ({ instantSearchInstance, helper, attribute }) => (\n  ...args: [InsightsEvent] | [string, string, string?]\n) => {\n  if (args.length === 1) {\n    instantSearchInstance.sendEventToInsights(args[0]);\n    return;\n  }\n\n  const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n  if (eventType !== 'click') {\n    return;\n  }\n  // facetValue === \"%7B%22start%22:5,%22end%22:10%7D\"\n  const filters = convertNumericRefinementsToFilters(\n    getRefinedState(helper.state, attribute, facetValue),\n    attribute\n  );\n  if (filters && filters.length > 0) {\n    /*\n        filters === [\"price<=10\", \"price>=5\"]\n      */\n    instantSearchInstance.sendEventToInsights({\n      insightsMethod: 'clickedFilters',\n      widgetType: $$type,\n      eventType,\n      payload: {\n        eventName,\n        index: helper.getIndex(),\n        filters,\n      },\n      attribute,\n    });\n  }\n};\n\nconst connectNumericMenu: NumericMenuConnector = function connectNumericMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      attribute = '',\n      items = [],\n      transformItems = (x => x) as TransformItems<NumericMenuRenderStateItem>,\n    } = widgetParams || {};\n\n    if (attribute === '') {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (!items || items.length === 0) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?(facetValue: string): void;\n      createURL?(state: SearchParameters): (facetValue: string) => string;\n      sendEvent?: SendEventForFacet;\n    };\n\n    const prepareItems = (state: SearchParameters) =>\n      items.map(({ start, end, label }) => ({\n        label,\n        value: encodeURI(JSON.stringify({ start, end })),\n        isRefined: isRefined(state, attribute, { start, end, label }),\n      }));\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state.clearRefinements(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const values = searchParameters.getNumericRefinements(attribute);\n\n        const equal = values['='] && values['='][0];\n\n        if (equal || equal === 0) {\n          return {\n            ...uiState,\n            numericMenu: {\n              ...uiState.numericMenu,\n              [attribute]: `${values['=']}`,\n            },\n          };\n        }\n\n        const min = (values['>='] && values['>='][0]) || '';\n        const max = (values['<='] && values['<='][0]) || '';\n\n        if (min === '' && max === '') {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          numericMenu: {\n            ...uiState.numericMenu,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.numericMenu && uiState.numericMenu[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n\n        if (!value) {\n          return withoutRefinements.setQueryParameters({\n            numericRefinements: {\n              ...withoutRefinements.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        const isExact = value.indexOf(':') === -1;\n\n        if (isExact) {\n          return withoutRefinements.addNumericRefinement(\n            attribute,\n            '=',\n            Number(value)\n          );\n        }\n\n        const [min, max] = value.split(':').map(parseFloat);\n\n        const withMinRefinement = isFiniteNumber(min)\n          ? withoutRefinements.addNumericRefinement(attribute, '>=', min)\n          : withoutRefinements;\n\n        const withMaxRefinement = isFiniteNumber(max)\n          ? withMinRefinement.addNumericRefinement(attribute, '<=', max)\n          : withMinRefinement;\n\n        return withMaxRefinement;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          numericMenu: {\n            ...renderState.numericMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        results,\n        state,\n        instantSearchInstance,\n        helper,\n        createURL,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = facetValue => {\n            const refinedState = getRefinedState(\n              helper.state,\n              attribute,\n              facetValue\n            );\n            connectorState.sendEvent!('click', facetValue);\n            helper.setState(refinedState).search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = newState => facetValue =>\n            createURL(getRefinedState(newState, attribute, facetValue));\n        }\n\n        if (!connectorState.sendEvent) {\n          connectorState.sendEvent = createSendEvent({\n            instantSearchInstance,\n            helper,\n            attribute,\n          });\n        }\n\n        return {\n          createURL: connectorState.createURL!(state),\n          items: transformItems(prepareItems(state)),\n          hasNoResults: results ? results.nbHits === 0 : true,\n          refine: connectorState.refine!,\n          sendEvent: connectorState.sendEvent!,\n          widgetParams,\n        };\n      },\n    };\n  };\n};\n\nfunction isRefined(\n  state: SearchParameters,\n  attribute: string,\n  option: NumericMenuConnectorParamsItem\n) {\n  // @TODO: same as another spot, why is this mixing arrays & elements?\n  const currentRefinements = state.getNumericRefinements(\n    attribute\n  ) as SearchParameters.OperatorList;\n\n  if (option.start !== undefined && option.end !== undefined) {\n    if (option.start === option.end) {\n      return hasNumericRefinement(currentRefinements, '=', option.start);\n    }\n  }\n\n  if (option.start !== undefined) {\n    return hasNumericRefinement(currentRefinements, '>=', option.start);\n  }\n\n  if (option.end !== undefined) {\n    return hasNumericRefinement(currentRefinements, '<=', option.end);\n  }\n\n  if (option.start === undefined && option.end === undefined) {\n    return Object.keys(currentRefinements).every(\n      operator => (currentRefinements[operator] || []).length === 0\n    );\n  }\n\n  return false;\n}\n\nfunction getRefinedState(\n  state: SearchParameters,\n  attribute: string,\n  facetValue: string\n) {\n  let resolvedState = state;\n\n  const refinedOption = JSON.parse(decodeURI(facetValue));\n\n  // @TODO: why is array / element mixed here & hasRefinements; seems wrong?\n  const currentRefinements = resolvedState.getNumericRefinements(\n    attribute\n  ) as SearchParameters.OperatorList;\n\n  if (refinedOption.start === undefined && refinedOption.end === undefined) {\n    return resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (!isRefined(resolvedState, attribute, refinedOption)) {\n    resolvedState = resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (refinedOption.start !== undefined && refinedOption.end !== undefined) {\n    if (refinedOption.start > refinedOption.end) {\n      throw new Error('option.start should be > to option.end');\n    }\n\n    if (refinedOption.start === refinedOption.end) {\n      if (hasNumericRefinement(currentRefinements, '=', refinedOption.start)) {\n        resolvedState = resolvedState.removeNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      } else {\n        resolvedState = resolvedState.addNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      }\n      return resolvedState;\n    }\n  }\n\n  if (refinedOption.start !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '>=', refinedOption.start)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '>=',\n        refinedOption.start\n      );\n    } else {\n      resolvedState = resolvedState.addNumericRefinement(\n        attribute,\n        '>=',\n        refinedOption.start\n      );\n    }\n  }\n\n  if (refinedOption.end !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '<=', refinedOption.end)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '<=',\n        refinedOption.end\n      );\n    } else {\n      resolvedState = resolvedState.addNumericRefinement(\n        attribute,\n        '<=',\n        refinedOption.end\n      );\n    }\n  }\n\n  if (typeof resolvedState.page === 'number') {\n    resolvedState.page = 0;\n  }\n\n  return resolvedState;\n}\n\nfunction hasNumericRefinement(\n  currentRefinements: SearchParameters.OperatorList,\n  operator: SearchParameters.Operator,\n  value: number\n) {\n  return (\n    currentRefinements[operator] !== undefined &&\n    currentRefinements[operator]!.includes(value)\n  );\n}\n\nexport default connectNumericMenu;\n","import { withInsights } from '../../lib/insights';\nimport connectInfiniteHits, {\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams,\n} from './connectInfiniteHits';\nimport { Connector } from '../../types';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams\n>;\n\nconst connectInfiniteHitsWithInsights = withInsights(connectInfiniteHits);\n\nexport default connectInfiniteHitsWithInsights;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport Paginator from './Paginator';\nimport { Connector, WidgetRenderState } from '../../types';\nimport { SearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'pagination',\n  connector: true,\n});\n\nexport type PaginationConnectorParams = {\n  /**\n   * The total number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The padding of pages to show around the current page\n   * @default 3\n   */\n  padding?: number;\n};\n\nexport type PaginationRenderState = {\n  /** Creates URLs for the next state, the number is the page to generate the URL for. */\n  createURL(page: number): string;\n\n  /** Sets the current page and triggers a search. */\n  refine(page: number): void;\n\n  /** true if this search returned more than one page */\n  canRefine: boolean;\n\n  /** The number of the page currently displayed. */\n  currentRefinement: number;\n\n  /** The number of hits computed for the last query (can be approximated). */\n  nbHits: number;\n\n  /** The number of pages for the result set. */\n  nbPages: number;\n\n  /** The actual pages relevant to the current situation and padding. */\n  pages: number[];\n\n  /** true if the current page is also the first page. */\n  isFirstPage: boolean;\n\n  /** true if the current page is also the last page. */\n  isLastPage: boolean;\n};\n\nexport type PaginationWidgetDescription = {\n  $$type: 'ais.pagination';\n  renderState: PaginationRenderState;\n  indexRenderState: {\n    pagination: WidgetRenderState<\n      PaginationRenderState,\n      PaginationConnectorParams\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\ntype PaginationConnector = Connector<\n  PaginationWidgetDescription,\n  PaginationConnectorParams\n>;\n\n/**\n * **Pagination** connector provides the logic to build a widget that will let the user\n * choose the current page of the results.\n *\n * When using the pagination with Algolia, you should be aware that the engine won't provide you pages\n * beyond the 1000th hits by default. You can find more information on the [Algolia documentation](https://www.algolia.com/doc/guides/searching/pagination/#pagination-limitations).\n */\nconst connectPagination: PaginationConnector = function connectPagination(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const { totalPages, padding = 3 } = widgetParams || {};\n\n    const pager = new Paginator({\n      currentPage: 0,\n      total: 0,\n      padding,\n    });\n\n    type ConnectorState = {\n      refine?(page: number): void;\n      createURL?(state: SearchParameters): (page: number) => string;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function getMaxPage({ nbPages }) {\n      return totalPages !== undefined ? Math.min(totalPages, nbPages) : nbPages;\n    }\n\n    return {\n      $$type: 'ais.pagination',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('page', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return searchParameters.setQueryParameter('page', page);\n      },\n\n      getWidgetRenderState({ results, helper, createURL }) {\n        if (!connectorState.refine) {\n          connectorState.refine = page => {\n            helper.setPage(page);\n            helper.search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = state => page =>\n            createURL(state.setPage(page));\n        }\n\n        const state = helper.state;\n        const page = state.page || 0;\n        const nbPages = getMaxPage(results || { nbPages: 0 });\n        pager.currentPage = page;\n        pager.total = nbPages;\n\n        return {\n          createURL: connectorState.createURL(state),\n          refine: connectorState.refine,\n          canRefine: nbPages > 1,\n          currentRefinement: page,\n          nbHits: results?.nbHits || 0,\n          nbPages,\n          pages: results ? pager.pages() : [],\n          isFirstPage: pager.isFirstPage(),\n          isLastPage: pager.isLastPage(),\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          pagination: this.getWidgetRenderState(renderOptions),\n        };\n      },\n    };\n  };\n};\n\nexport default connectPagination;\n","import { range } from '../../lib/utils';\n\nclass Paginator {\n  public currentPage: number;\n  public total: number;\n  public padding: number;\n\n  public constructor(params: {\n    currentPage: number;\n    total: number;\n    padding: number;\n  }) {\n    this.currentPage = params.currentPage;\n    this.total = params.total;\n    this.padding = params.padding;\n  }\n\n  public pages() {\n    const { total, currentPage, padding } = this;\n\n    if (total === 0) return [0];\n\n    const totalDisplayedPages = this.nbPagesDisplayed(padding, total);\n    if (totalDisplayedPages === total) {\n      return range({ end: total });\n    }\n\n    const paddingLeft = this.calculatePaddingLeft(\n      currentPage,\n      padding,\n      total,\n      totalDisplayedPages\n    );\n    const paddingRight = totalDisplayedPages - paddingLeft;\n\n    const first = currentPage - paddingLeft;\n    const last = currentPage + paddingRight;\n\n    return range({ start: first, end: last });\n  }\n\n  public nbPagesDisplayed(padding: number, total: number) {\n    return Math.min(2 * padding + 1, total);\n  }\n\n  public calculatePaddingLeft(\n    current: number,\n    padding: number,\n    total: number,\n    totalDisplayedPages: number\n  ) {\n    if (current <= padding) {\n      return current;\n    }\n\n    if (current >= total - padding) {\n      return totalDisplayedPages - (total - current);\n    }\n\n    return padding;\n  }\n\n  public isLastPage() {\n    return this.currentPage === this.total - 1 || this.total === 0;\n  }\n\n  public isFirstPage() {\n    return this.currentPage === 0;\n  }\n}\n\nexport default Paginator;\n","import {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  convertNumericRefinementsToFilters,\n  isFiniteNumber,\n  find,\n  noop,\n  SendEventForFacet,\n} from '../../lib/utils';\nimport { InsightsEvent } from '../../middlewares';\nimport { Connector, InstantSearch, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator(\n  { name: 'range-input', connector: true },\n  { name: 'range-slider', connector: true }\n);\n\nconst $$type = 'ais.range';\n\nexport type RangeMin = number | undefined;\nexport type RangeMax = number | undefined;\n\n// @MAJOR: potentially we should consolidate these types\nexport type RangeBoundaries = [RangeMin, RangeMax];\nexport type Range = {\n  min: RangeMin;\n  max: RangeMax;\n};\n\nexport type RangeRenderState = {\n  /**\n   * Sets a range to filter the results on. Both values\n   * are optional, and will default to the higher and lower bounds. You can use `undefined` to remove a\n   * previously set bound or to set an infinite bound.\n   * @param rangeValue tuple of [min, max] bounds\n   */\n  refine(rangeValue: RangeBoundaries): void;\n\n  /**\n   * Indicates whether this widget can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Send an event to the insights middleware\n   */\n  sendEvent: SendEventForFacet;\n\n  /**\n   * Maximum range possible for this search\n   */\n  range: Range;\n\n  /**\n   * Current refinement of the search\n   */\n  start: RangeBoundaries;\n\n  /**\n   * Transform for the rendering `from` and/or `to` values.\n   * Both functions take a `number` as input and should output a `string`.\n   */\n  format: {\n    from(fromValue: number): string;\n    to(toValue: number): string;\n  };\n};\n\nexport type RangeConnectorParams = {\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n\n  /**\n   * Minimal range value, default to automatically computed from the result set.\n   */\n  min?: number;\n\n  /**\n   * Maximal range value, default to automatically computed from the result set.\n   */\n  max?: number;\n\n  /**\n   * Number of digits after decimal point to use.\n   */\n  precision?: number;\n};\n\nexport type RangeWidgetDescription = {\n  $$type: 'ais.range';\n  renderState: RangeRenderState;\n  indexRenderState: {\n    range: {\n      [attribute: string]: WidgetRenderState<\n        RangeRenderState,\n        RangeConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    range: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type RangeConnector = Connector<\n  RangeWidgetDescription,\n  RangeConnectorParams\n>;\n\nfunction toPrecision({ min, max, precision }) {\n  const pow = Math.pow(10, precision);\n\n  return {\n    min: min ? Math.floor(min * pow) / pow : min,\n    max: max ? Math.ceil(max * pow) / pow : max,\n  };\n}\n\n/**\n * **Range** connector provides the logic to create custom widget that will let\n * the user refine results using a numeric range.\n *\n * This connectors provides a `refine()` function that accepts bounds. It will also provide\n * information about the min and max bounds for the current result set.\n */\nconst connectRange: RangeConnector = function connectRange(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const { attribute = '', min: minBound, max: maxBound, precision = 0 } =\n      widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (\n      isFiniteNumber(minBound) &&\n      isFiniteNumber(maxBound) &&\n      minBound > maxBound\n    ) {\n      throw new Error(withUsage(\"The `max` option can't be lower than `min`.\"));\n    }\n\n    const formatToNumber = (v: string | number) =>\n      Number(Number(v).toFixed(precision));\n\n    const rangeFormatter = {\n      from: (v: number) => v.toLocaleString(),\n      to: (v: number) => formatToNumber(v).toLocaleString(),\n    };\n\n    // eslint-disable-next-line complexity\n    const getRefinedState = (\n      helper: AlgoliaSearchHelper,\n      currentRange: Range,\n      nextMin: RangeMin | string,\n      nextMax: RangeMax | string\n    ) => {\n      let resolvedState = helper.state;\n      const { min: currentRangeMin, max: currentRangeMax } = currentRange;\n\n      const [min] = resolvedState.getNumericRefinement(attribute, '>=') || [];\n      const [max] = resolvedState.getNumericRefinement(attribute, '<=') || [];\n\n      const isResetMin = nextMin === undefined || nextMin === '';\n      const isResetMax = nextMax === undefined || nextMax === '';\n\n      const { min: nextMinAsNumber, max: nextMaxAsNumber } = toPrecision({\n        min: !isResetMin ? parseFloat(nextMin as string) : undefined,\n        max: !isResetMax ? parseFloat(nextMax as string) : undefined,\n        precision,\n      });\n\n      let newNextMin: RangeMin;\n      if (!isFiniteNumber(minBound) && currentRangeMin === nextMinAsNumber) {\n        newNextMin = undefined;\n      } else if (isFiniteNumber(minBound) && isResetMin) {\n        newNextMin = minBound;\n      } else {\n        newNextMin = nextMinAsNumber;\n      }\n\n      let newNextMax: RangeMax;\n      if (!isFiniteNumber(maxBound) && currentRangeMax === nextMaxAsNumber) {\n        newNextMax = undefined;\n      } else if (isFiniteNumber(maxBound) && isResetMax) {\n        newNextMax = maxBound;\n      } else {\n        newNextMax = nextMaxAsNumber;\n      }\n\n      const isResetNewNextMin = newNextMin === undefined;\n\n      const isGreaterThanCurrentRange =\n        isFiniteNumber(currentRangeMin) && currentRangeMin <= newNextMin!;\n      const isMinValid =\n        isResetNewNextMin ||\n        (isFiniteNumber(newNextMin) &&\n          (!isFiniteNumber(currentRangeMin) || isGreaterThanCurrentRange));\n\n      const isResetNewNextMax = newNextMax === undefined;\n      const isLowerThanRange =\n        isFiniteNumber(newNextMax) && currentRangeMax! >= newNextMax;\n      const isMaxValid =\n        isResetNewNextMax ||\n        (isFiniteNumber(newNextMax) &&\n          (!isFiniteNumber(currentRangeMax) || isLowerThanRange));\n\n      const hasMinChange = min !== newNextMin;\n      const hasMaxChange = max !== newNextMax;\n\n      if ((hasMinChange || hasMaxChange) && isMinValid && isMaxValid) {\n        resolvedState = resolvedState.removeNumericRefinement(attribute);\n\n        if (isFiniteNumber(newNextMin)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '>=',\n            newNextMin\n          );\n        }\n\n        if (isFiniteNumber(newNextMax)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '<=',\n            newNextMax\n          );\n        }\n\n        return resolvedState.resetPage();\n      }\n\n      return null;\n    };\n\n    const sendEventWithRefinedState = (\n      refinedState: SearchParameters | null,\n      instantSearchInstance: InstantSearch,\n      helper: AlgoliaSearchHelper,\n      eventName = 'Filter Applied'\n    ) => {\n      const filters = convertNumericRefinementsToFilters(\n        refinedState,\n        attribute\n      );\n      if (filters && filters.length > 0) {\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType: $$type,\n          eventType: 'click',\n          payload: {\n            eventName,\n            index: helper.getIndex(),\n            filters,\n          },\n          attribute,\n        });\n      }\n    };\n\n    const createSendEvent = (\n      instantSearchInstance: InstantSearch,\n      helper: AlgoliaSearchHelper,\n      currentRange: Range\n    ) => (...args: [InsightsEvent] | [string, string, string?]) => {\n      if (args.length === 1) {\n        instantSearchInstance.sendEventToInsights(args[0]);\n        return;\n      }\n\n      const [eventType, facetValue, eventName] = args;\n      if (eventType !== 'click') {\n        return;\n      }\n      const [nextMin, nextMax] = facetValue;\n      const refinedState = getRefinedState(\n        helper,\n        currentRange,\n        nextMin,\n        nextMax\n      );\n      sendEventWithRefinedState(\n        refinedState,\n        instantSearchInstance,\n        helper,\n        eventName\n      );\n    };\n\n    function _getCurrentRange(\n      stats: Partial<NonNullable<SearchResults.Facet['stats']>>\n    ) {\n      let min: number;\n      if (isFiniteNumber(minBound)) {\n        min = minBound;\n      } else if (isFiniteNumber(stats.min)) {\n        min = stats.min;\n      } else {\n        min = 0;\n      }\n\n      let max: number;\n      if (isFiniteNumber(maxBound)) {\n        max = maxBound;\n      } else if (isFiniteNumber(stats.max)) {\n        max = stats.max;\n      } else {\n        max = 0;\n      }\n\n      return toPrecision({ min, max, precision });\n    }\n\n    function _getCurrentRefinement(\n      helper: AlgoliaSearchHelper\n    ): RangeBoundaries {\n      const [minValue] = helper.getNumericRefinement(attribute, '>=') || [];\n\n      const [maxValue] = helper.getNumericRefinement(attribute, '<=') || [];\n\n      const min = isFiniteNumber(minValue) ? minValue : -Infinity;\n      const max = isFiniteNumber(maxValue) ? maxValue : Infinity;\n\n      return [min, max];\n    }\n\n    function _refine(\n      instantSearchInstance: InstantSearch,\n      helper: AlgoliaSearchHelper,\n      currentRange: Range\n    ) {\n      return ([nextMin, nextMax]: RangeBoundaries = [undefined, undefined]) => {\n        const refinedState = getRefinedState(\n          helper,\n          currentRange,\n          nextMin,\n          nextMax\n        );\n        if (refinedState) {\n          sendEventWithRefinedState(\n            refinedState,\n            instantSearchInstance,\n            helper\n          );\n          helper.setState(refinedState).search();\n        }\n      };\n    }\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          range: {\n            ...renderState.range,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        const facetsFromResults = (results && results.disjunctiveFacets) || [];\n        const facet = find(\n          facetsFromResults,\n          facetResult => facetResult.name === attribute\n        );\n        const stats = (facet && facet.stats) || {\n          min: undefined,\n          max: undefined,\n        };\n\n        const currentRange = _getCurrentRange(stats);\n        const start = _getCurrentRefinement(helper);\n\n        let refine: ReturnType<typeof _refine>;\n\n        if (!results) {\n          // On first render pass an empty range\n          // to be able to bypass the validation\n          // related to it\n          refine = _refine(instantSearchInstance, helper, {\n            min: undefined,\n            max: undefined,\n          });\n        } else {\n          refine = _refine(instantSearchInstance, helper, currentRange);\n        }\n\n        return {\n          refine,\n          canRefine: currentRange.min !== currentRange.max,\n          format: rangeFormatter,\n          range: currentRange,\n          sendEvent: createSendEvent(\n            instantSearchInstance,\n            helper,\n            currentRange\n          ),\n          widgetParams: {\n            ...widgetParams,\n            precision,\n          },\n          start,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeDisjunctiveFacet(attribute)\n          .removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const {\n          '>=': min = [],\n          '<=': max = [],\n        } = searchParameters.getNumericRefinements(attribute);\n\n        if (min.length === 0 && max.length === 0) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          range: {\n            ...uiState.range,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters\n          .addDisjunctiveFacet(attribute)\n          .setQueryParameters({\n            numericRefinements: {\n              ...searchParameters.numericRefinements,\n              [attribute]: {},\n            },\n          });\n\n        if (isFiniteNumber(minBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            minBound\n          );\n        }\n\n        if (isFiniteNumber(maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            maxBound\n          );\n        }\n\n        const value = uiState.range && uiState.range[attribute];\n\n        if (!value || value.indexOf(':') === -1) {\n          return widgetSearchParameters;\n        }\n\n        const [lowerBound, upperBound] = value.split(':').map(parseFloat);\n\n        if (\n          isFiniteNumber(lowerBound) &&\n          (!isFiniteNumber(minBound) || minBound < lowerBound)\n        ) {\n          widgetSearchParameters = widgetSearchParameters.removeNumericRefinement(\n            attribute,\n            '>='\n          );\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            lowerBound\n          );\n        }\n\n        if (\n          isFiniteNumber(upperBound) &&\n          (!isFiniteNumber(maxBound) || upperBound < maxBound)\n        ) {\n          widgetSearchParameters = widgetSearchParameters.removeNumericRefinement(\n            attribute,\n            '<='\n          );\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            upperBound\n          );\n        }\n\n        return widgetSearchParameters;\n      },\n    };\n  };\n};\n\nexport default connectRange;\n","import { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\nimport {\n  escapeFacets,\n  TAG_PLACEHOLDER,\n  TAG_REPLACEMENT,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n  SendEventForFacet,\n} from '../../lib/utils';\nimport {\n  Connector,\n  TransformItems,\n  SortBy,\n  RenderOptions,\n  Widget,\n  InitOptions,\n  FacetHit,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n  connector: true,\n});\n\nexport type RefinementListItem = {\n  /**\n   * The value of the refinement list item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the refinement list item.\n   */\n  label: string;\n  /**\n   * Human-readable value of the searched refinement list item.\n   */\n  highlighted?: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the list item is refined.\n   */\n  isRefined: boolean;\n};\n\nexport type RefinementListConnectorParams = {\n  /**\n   * The name of the attribute in the records.\n   */\n  attribute: string;\n  /**\n   * How the filters are combined together.\n   */\n  operator?: 'and' | 'or';\n  /**\n   * The max number of items to display when\n   * `showMoreLimit` is not set or if the widget is showing less value.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * The max number of items to display if the widget\n   * is showing more items.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   */\n  sortBy?: SortBy<RefinementListItem>;\n  /**\n   * Escapes the content of the facet values.\n   */\n  escapeFacetValues?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<RefinementListItem>;\n};\n\nexport type RefinementListRenderState = {\n  /**\n   * The list of filtering values returned from Algolia API.\n   */\n  items: RefinementListItem[];\n  /**\n   * indicates whether the results are exhaustive (complete)\n   */\n  hasExhaustiveItems: boolean;\n  /**\n   * Creates the next state url for a selected refinement.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Action to apply selected refinements.\n   */\n  refine(value: string): void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n  /**\n   * Searches for values inside the list.\n   */\n  searchForItems(query: string): void;\n  /**\n   * `true` if the values are from an index search.\n   */\n  isFromSearch: boolean;\n  /**\n   * `true` if a refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore(): void;\n};\n\nexport type RefinementListWidgetDescription = {\n  $$type: 'ais.refinementList';\n  renderState: RefinementListRenderState;\n  indexRenderState: {\n    refinementList: {\n      [attribute: string]: WidgetRenderState<\n        RefinementListRenderState,\n        RefinementListConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    refinementList: {\n      [attribute: string]: string[];\n    };\n  };\n};\n\nexport type RefinementListConnector = Connector<\n  RefinementListWidgetDescription,\n  RefinementListConnectorParams\n>;\n\n/**\n * **RefinementList** connector provides the logic to build a custom widget that\n * will let the user filter the results based on the values of a specific facet.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in\n * attributesForFaceting of the searched index.\n *\n * This connector provides:\n * - a `refine()` function to select an item.\n * - a `toggleShowMore()` function to display more or less items\n * - a `searchForItems()` function to search within the items.\n */\nconst connectRefinementList: RefinementListConnector = function connectRefinementList(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      attribute,\n      operator = 'or',\n      limit = 10,\n      showMore = false,\n      showMoreLimit = 20,\n      sortBy = ['isRefined', 'count:desc', 'name:asc'],\n      escapeFacetValues = true,\n      transformItems = (items => items) as TransformItems<RefinementListItem>,\n    } = widgetParams || {};\n\n    type ThisWidget = Widget<\n      RefinementListWidgetDescription & { widgetParams: typeof widgetParams }\n    >;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (!/^(and|or)$/.test(operator)) {\n      throw new Error(\n        withUsage(\n          `The \\`operator\\` must one of: \\`\"and\"\\`, \\`\"or\"\\` (got \"${operator}\").`\n        )\n      );\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(\n        withUsage('`showMoreLimit` should be greater than `limit`.')\n      );\n    }\n\n    const formatItems = ({\n      name: label,\n      ...item\n    }: SearchResults.FacetValue): RefinementListItem => ({\n      ...item,\n      label,\n      value: label,\n      highlighted: label,\n    });\n\n    let lastResultsFromMainSearch: SearchResults;\n    let lastItemsFromMainSearch: RefinementListItem[] = [];\n    let hasExhaustiveItems = true;\n    let triggerRefine: RefinementListRenderState['refine'] | undefined;\n    let sendEvent: RefinementListRenderState['sendEvent'] | undefined;\n\n    let isShowingMore = false;\n    // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n    let toggleShowMore = () => {};\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    function createToggleShowMore(\n      renderOptions: RenderOptions,\n      widget: ThisWidget\n    ) {\n      return () => {\n        isShowingMore = !isShowingMore;\n        widget.render!(renderOptions);\n      };\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    let searchForFacetValues: (\n      renderOptions: RenderOptions | InitOptions\n    ) => RefinementListRenderState['searchForItems'] = () => () => {};\n\n    const createSearchForFacetValues = function(\n      helper: AlgoliaSearchHelper,\n      widget: ThisWidget\n    ) {\n      return (renderOptions: RenderOptions | InitOptions) => (\n        query: string\n      ) => {\n        const { instantSearchInstance } = renderOptions;\n        if (query === '' && lastItemsFromMainSearch) {\n          // render with previous data from the helper.\n          renderFn(\n            {\n              ...widget.getWidgetRenderState({\n                ...renderOptions,\n                results: lastResultsFromMainSearch,\n              }),\n              instantSearchInstance,\n            },\n            false\n          );\n        } else {\n          const tags = {\n            highlightPreTag: escapeFacetValues\n              ? TAG_PLACEHOLDER.highlightPreTag\n              : TAG_REPLACEMENT.highlightPreTag,\n            highlightPostTag: escapeFacetValues\n              ? TAG_PLACEHOLDER.highlightPostTag\n              : TAG_REPLACEMENT.highlightPostTag,\n          };\n\n          helper\n            .searchForFacetValues(\n              attribute,\n              query,\n              // We cap the `maxFacetHits` value to 100 because the Algolia API\n              // doesn't support a greater number.\n              // See https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits/\n              Math.min(getLimit(), 100),\n              tags\n            )\n            .then(results => {\n              const facetValues = escapeFacetValues\n                ? escapeFacets(results.facetHits)\n                : results.facetHits;\n\n              const normalizedFacetValues = transformItems(\n                facetValues.map(({ value, ...item }) => ({\n                  ...item,\n                  value,\n                  label: value,\n                }))\n              );\n\n              renderFn(\n                {\n                  ...widget.getWidgetRenderState({\n                    ...renderOptions,\n                    results: lastResultsFromMainSearch,\n                  }),\n                  items: normalizedFacetValues,\n                  canToggleShowMore: false,\n                  canRefine: true,\n                  isFromSearch: true,\n                  instantSearchInstance,\n                },\n                false\n              );\n            });\n        }\n      };\n    };\n\n    return {\n      $$type: 'ais.refinementList' as const,\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          refinementList: {\n            ...renderState.refinementList,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const {\n          results,\n          state,\n          createURL,\n          instantSearchInstance,\n          helper,\n        } = renderOptions;\n        let items: RefinementListItem[] = [];\n        let facetValues: SearchResults.FacetValue[] | FacetHit[] = [];\n\n        if (!sendEvent || !triggerRefine || !searchForFacetValues) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance,\n            helper,\n            attribute,\n            widgetType: this.$$type!,\n          });\n\n          triggerRefine = facetValue => {\n            sendEvent!('click', facetValue);\n            helper.toggleFacetRefinement(attribute, facetValue).search();\n          };\n\n          searchForFacetValues = createSearchForFacetValues(helper, this);\n        }\n\n        if (results) {\n          const values = results.getFacetValues(attribute, {\n            sortBy,\n          });\n          facetValues = values && Array.isArray(values) ? values : [];\n          items = transformItems(\n            facetValues.slice(0, getLimit()).map(formatItems)\n          );\n\n          const maxValuesPerFacetConfig = state.maxValuesPerFacet;\n          const currentLimit = getLimit();\n          // If the limit is the max number of facet retrieved it is impossible to know\n          // if the facets are exhaustive. The only moment we are sure it is exhaustive\n          // is when it is strictly under the number requested unless we know that another\n          // widget has requested more values (maxValuesPerFacet > getLimit()).\n          // Because this is used for making the search of facets unable or not, it is important\n          // to be conservative here.\n          hasExhaustiveItems =\n            maxValuesPerFacetConfig! > currentLimit\n              ? facetValues.length <= currentLimit\n              : facetValues.length < currentLimit;\n\n          lastResultsFromMainSearch = results;\n          lastItemsFromMainSearch = items;\n\n          if (renderOptions.results) {\n            toggleShowMore = createToggleShowMore(renderOptions, this);\n          }\n        }\n\n        // Do not mistake searchForFacetValues and searchFacetValues which is the actual search\n        // function\n        const searchFacetValues =\n          searchForFacetValues && searchForFacetValues(renderOptions);\n\n        const canShowLess =\n          isShowingMore && lastItemsFromMainSearch.length > limit;\n        const canShowMore = showMore && !hasExhaustiveItems;\n\n        const canToggleShowMore = canShowLess || canShowMore;\n\n        return {\n          createURL: facetValue =>\n            createURL(\n              state.resetPage().toggleFacetRefinement(attribute, facetValue)\n            ),\n          items,\n          refine: triggerRefine,\n          searchForItems: searchFacetValues,\n          isFromSearch: false,\n          canRefine: items.length > 0,\n          widgetParams,\n          isShowingMore,\n          canToggleShowMore,\n          toggleShowMore: cachedToggleShowMore,\n          sendEvent,\n          hasExhaustiveItems,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const withoutMaxValuesPerFacet = state.setQueryParameter(\n          'maxValuesPerFacet',\n          undefined\n        );\n        if (operator === 'and') {\n          return withoutMaxValuesPerFacet.removeFacet(attribute);\n        }\n        return withoutMaxValuesPerFacet.removeDisjunctiveFacet(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const values =\n          operator === 'or'\n            ? searchParameters.getDisjunctiveRefinements(attribute)\n            : searchParameters.getConjunctiveRefinements(attribute);\n\n        if (!values.length) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          refinementList: {\n            ...uiState.refinementList,\n            [attribute]: values,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const isDisjunctive = operator === 'or';\n        const values =\n          uiState.refinementList && uiState.refinementList[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n        const withFacetConfiguration = isDisjunctive\n          ? withoutRefinements.addDisjunctiveFacet(attribute)\n          : withoutRefinements.addFacet(attribute);\n\n        const currentMaxValuesPerFacet =\n          withFacetConfiguration.maxValuesPerFacet || 0;\n\n        const nextMaxValuesPerFacet = Math.max(\n          currentMaxValuesPerFacet,\n          showMore ? showMoreLimit : limit\n        );\n\n        const withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter(\n          'maxValuesPerFacet',\n          nextMaxValuesPerFacet\n        );\n\n        if (!values) {\n          const key = isDisjunctive\n            ? 'disjunctiveFacetsRefinements'\n            : 'facetsRefinements';\n\n          return withMaxValuesPerFacet.setQueryParameters({\n            [key]: {\n              ...withMaxValuesPerFacet[key],\n              [attribute]: [],\n            },\n          });\n        }\n\n        return values.reduce(\n          (parameters, value) =>\n            isDisjunctive\n              ? parameters.addDisjunctiveFacetRefinement(attribute, value)\n              : parameters.addFacetRefinement(attribute, value),\n          withMaxValuesPerFacet\n        );\n      },\n    };\n  };\n};\n\nexport default connectRefinementList;\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'search-box',\n  connector: true,\n});\n\nexport type SearchBoxConnectorParams = {\n  /**\n   * A function that will be called every time\n   * a new value for the query is set. The first parameter is the query and the second is a\n   * function to actually trigger the search. The function takes the query as the parameter.\n   *\n   * This queryHook can be used to debounce the number of searches done from the searchBox.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\n/**\n * @typedef {Object} CustomSearchBoxWidgetParams\n * @property {function(string, function(string))} [queryHook = undefined] A function that will be called every time\n * a new value for the query is set. The first parameter is the query and the second is a\n * function to actually trigger the search. The function takes the query as the parameter.\n *\n * This queryHook can be used to debounce the number of searches done from the searchBox.\n */\n\nexport type SearchBoxRenderState = {\n  /**\n   * The query from the last search.\n   */\n  query: string;\n  /**\n   * Sets a new query and searches.\n   */\n  refine: (value: string) => void;\n  /**\n   * Remove the query and perform search.\n   */\n  clear: () => void;\n  /**\n   * `true` if the search results takes more than a certain time to come back\n   * from Algolia servers. This can be configured on the InstantSearch constructor with the attribute\n   * `stalledSearchDelay` which is 200ms, by default.\n   */\n  isSearchStalled: boolean;\n};\n\nexport type SearchBoxWidgetDescription = {\n  $$type: 'ais.searchBox';\n  renderState: SearchBoxRenderState;\n  indexRenderState: {\n    searchBox: WidgetRenderState<\n      SearchBoxRenderState,\n      SearchBoxConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type SearchBoxConnector = Connector<\n  SearchBoxWidgetDescription,\n  SearchBoxConnectorParams\n>;\n\n/**\n * **SearchBox** connector provides the logic to build a widget that will let the user search for a query.\n *\n * The connector provides to the rendering: `refine()` to set the query. The behaviour of this function\n * may be impacted by the `queryHook` widget parameter.\n */\nconst connectSearchBox: SearchBoxConnector = function connectSearchBox(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const { queryHook } = widgetParams || {};\n\n    function clear(helper: AlgoliaSearchHelper) {\n      return function() {\n        helper.setQuery('').search();\n      };\n    }\n\n    let _refine: SearchBoxRenderState['refine'];\n    let _clear = () => {};\n    function _cachedClear() {\n      _clear();\n    }\n\n    return {\n      $$type: 'ais.searchBox',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('query', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          searchBox: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ helper, searchMetadata }) {\n        if (!_refine) {\n          const setQueryAndSearch = (query: string) => {\n            if (query !== helper.state.query) {\n              helper.setQuery(query).search();\n            }\n          };\n\n          _refine = query => {\n            if (queryHook) {\n              queryHook(query, setQueryAndSearch);\n              return;\n            }\n\n            setQueryAndSearch(query);\n          };\n        }\n\n        _clear = clear(helper);\n\n        return {\n          query: helper.state.query || '',\n          refine: _refine,\n          clear: _cachedClear,\n          widgetParams,\n          isSearchStalled: searchMetadata.isSearchStalled,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectSearchBox;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  find,\n  warning,\n  noop,\n} from '../../lib/utils';\nimport { Connector, TransformItems, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'sort-by',\n  connector: true,\n});\n\n/**\n * The **SortBy** connector provides the logic to build a custom widget that will display a\n * list of indices. With Algolia, this is most commonly used for changing ranking strategy. This allows\n * a user to change how the hits are being sorted.\n */\n\nexport type SortByItem = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByConnectorParams = {\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByItem[];\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByRenderState = {\n  /**\n   * The initially selected index.\n   */\n  initialIndex?: string;\n  /**\n   * The currently selected index.\n   */\n  currentRefinement: string;\n  /**\n   * All the available indices\n   */\n  options: SortByItem[];\n  /**\n   * Switches indices and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   * `true` if the last search contains no result.\n   */\n  hasNoResults: boolean;\n};\n\nexport type SortByWidgetDescription = {\n  $$type: 'ais.sortBy';\n  renderState: SortByRenderState;\n  indexRenderState: {\n    sortBy: WidgetRenderState<SortByRenderState, SortByConnectorParams>;\n  };\n  indexUiState: {\n    sortBy: string;\n  };\n};\n\nexport type SortByConnector = Connector<\n  SortByWidgetDescription,\n  SortByConnectorParams\n>;\n\nconst connectSortBy: SortByConnector = function connectSortBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const connectorState: ConnectorState = {};\n\n  type ConnectorState = {\n    setIndex?(indexName: string): void;\n    initialIndex?: string;\n  };\n\n  return widgetParams => {\n    const { items, transformItems = (x => x) as TransformItems<SortByItem> } =\n      widgetParams || {};\n\n    if (!Array.isArray(items)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    return {\n      $$type: 'ais.sortBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(initOptions);\n        const currentIndex = widgetRenderState.currentRefinement;\n        const isCurrentIndexInItems = find(\n          items,\n          item => item.value === currentIndex\n        );\n\n        warning(\n          isCurrentIndexInItems !== undefined,\n          `The index named \"${currentIndex}\" is not listed in the \\`items\\` of \\`sortBy\\`.`\n        );\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return connectorState.initialIndex\n          ? state.setIndex(connectorState.initialIndex)\n          : state;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          sortBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, parent }) {\n        if (!connectorState.initialIndex && parent) {\n          connectorState.initialIndex = parent.getIndexName();\n        }\n        if (!connectorState.setIndex) {\n          connectorState.setIndex = indexName => {\n            helper.setIndex(indexName).search();\n          };\n        }\n\n        return {\n          currentRefinement: helper.state.index,\n          options: transformItems(items),\n          refine: connectorState.setIndex,\n          hasNoResults: results ? results.nbHits === 0 : true,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const currentIndex = searchParameters.index;\n\n        return {\n          ...uiState,\n          sortBy:\n            currentIndex !== connectorState.initialIndex\n              ? currentIndex\n              : undefined,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter(\n          'index',\n          uiState.sortBy ||\n            connectorState.initialIndex ||\n            searchParameters.index\n        );\n      },\n    };\n  };\n};\n\nexport default connectSortBy;\n","import {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationLink,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport {\n  Connector,\n  InstantSearch,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\nimport { InsightsEvent } from '../../middlewares';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'rating-menu',\n  connector: true,\n});\n\nconst $$type = 'ais.ratingMenu';\n\nconst MAX_VALUES_PER_FACET_API_LIMIT = 1000;\nconst STEP = 1;\n\ntype SendEvent = (...args: [InsightsEvent] | [string, string, string?]) => void;\n\ntype CreateSendEvent = (createSendEventArgs: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  getRefinedStar: () => number | number[] | undefined;\n  attribute: string;\n}) => SendEvent;\n\nconst createSendEvent: CreateSendEvent = ({\n  instantSearchInstance,\n  helper,\n  getRefinedStar,\n  attribute,\n}) => (...args) => {\n  if (args.length === 1) {\n    instantSearchInstance.sendEventToInsights(args[0]);\n    return;\n  }\n  const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n  if (eventType !== 'click') {\n    return;\n  }\n  const isRefined = getRefinedStar() === Number(facetValue);\n  if (!isRefined) {\n    instantSearchInstance.sendEventToInsights({\n      insightsMethod: 'clickedFilters',\n      widgetType: $$type,\n      eventType,\n      payload: {\n        eventName,\n        index: helper.getIndex(),\n        filters: [`${attribute}>=${facetValue}`],\n      },\n      attribute,\n    });\n  }\n};\n\ntype StarRatingItems = {\n  /**\n   * Name corresponding to the number of stars.\n   */\n  name: string;\n  /**\n   * Human-readable name corresponding to the number of stars.\n   */\n  label: string;\n  /**\n   * Number of stars as string.\n   */\n  value: string;\n  /**\n   * Count of matched results corresponding to the number of stars.\n   */\n  count: number;\n  /**\n   *  Array of length of maximum rating value with stars to display or not.\n   */\n  stars: boolean[];\n  /**\n   * Indicates if star rating refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type RatingMenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n};\n\nexport type RatingMenuRenderState = {\n  /**\n   * Possible star ratings the user can apply.\n   */\n  items: StarRatingItems[];\n\n  /**\n   * Creates an URL for the next state (takes the item value as parameter). Takes the value of an item as parameter.\n   */\n  createURL: CreateURL<string>;\n\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Selects a rating to filter the results (takes the filter value as parameter). Takes the value of an item as parameter.\n   */\n  refine: (value: string) => void;\n\n  /**\n   * `true` if the last search contains no result.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEvent;\n};\n\nexport type RatingMenuWidgetDescription = {\n  $$type: 'ais.ratingMenu';\n  renderState: RatingMenuRenderState;\n  indexRenderState: {\n    ratingMenu: {\n      [attribute: string]: WidgetRenderState<\n        RatingMenuRenderState,\n        RatingMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    ratingMenu: {\n      [attribute: string]: number;\n    };\n  };\n};\n\nexport type RatingMenuConnector = Connector<\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams\n>;\n\n/**\n * **StarRating** connector provides the logic to build a custom widget that will let\n * the user refine search results based on ratings.\n *\n * The connector provides to the rendering: `refine()` to select a value and\n * `items` that are the values that can be selected. `refine` should be used\n * with `items.value`.\n */\nconst connectRatingMenu: RatingMenuConnector = function connectRatingMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const { attribute, max = 5 } = widgetParams || {};\n    let sendEvent: SendEvent;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    const getRefinedStar = (state: SearchParameters) => {\n      const values = state.getNumericRefinements(attribute);\n\n      if (!values['>=']?.length) {\n        return undefined;\n      }\n\n      return values['>='][0];\n    };\n\n    const getFacetsMaxDecimalPlaces = (\n      facetResults: SearchResults.FacetValue[]\n    ) => {\n      let maxDecimalPlaces = 0;\n      facetResults.forEach(facetResult => {\n        const [, decimal = ''] = facetResult.name.split('.');\n        maxDecimalPlaces = Math.max(maxDecimalPlaces, decimal.length);\n      });\n      return maxDecimalPlaces;\n    };\n\n    const getFacetValuesWarningMessage = ({\n      maxDecimalPlaces,\n      maxFacets,\n      maxValuesPerFacet,\n    }: {\n      maxDecimalPlaces: number;\n      maxFacets: number;\n      maxValuesPerFacet: number;\n    }) => {\n      const maxDecimalPlacesInRange = Math.max(\n        0,\n        Math.floor(Math.log10(MAX_VALUES_PER_FACET_API_LIMIT / max))\n      );\n      const maxFacetsInRange = Math.min(\n        MAX_VALUES_PER_FACET_API_LIMIT,\n        Math.pow(10, maxDecimalPlacesInRange) * max\n      );\n\n      const solutions: string[] = [];\n\n      if (maxFacets > MAX_VALUES_PER_FACET_API_LIMIT) {\n        solutions.push(\n          `- Update your records to lower the precision of the values in the \"${attribute}\" attribute (for example: ${(5.123456789).toPrecision(\n            maxDecimalPlaces + 1\n          )} to ${(5.123456789).toPrecision(maxDecimalPlacesInRange + 1)})`\n        );\n      }\n      if (maxValuesPerFacet < maxFacetsInRange) {\n        solutions.push(\n          `- Increase the maximum number of facet values to ${maxFacetsInRange} using the \"configure\" widget ${createDocumentationLink(\n            { name: 'configure' }\n          )} and the \"maxValuesPerFacet\" parameter https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/`\n        );\n      }\n\n      return `The ${attribute} attribute can have ${maxFacets} different values (0 to ${max} with a maximum of ${maxDecimalPlaces} decimals = ${maxFacets}) but you retrieved only ${maxValuesPerFacet} facet values. Therefore the number of results that match the refinements can be incorrect.\n    ${\n      solutions.length\n        ? `To resolve this problem you can:\\n${solutions.join('\\n')}`\n        : ``\n    }`;\n    };\n\n    function getRefinedState(state: SearchParameters, facetValue: string) {\n      const isRefined = getRefinedStar(state) === Number(facetValue);\n\n      const emptyState = state.resetPage().removeNumericRefinement(attribute!);\n\n      if (!isRefined) {\n        return emptyState\n          .addNumericRefinement(attribute!, '<=', max)\n          .addNumericRefinement(attribute!, '>=', Number(facetValue));\n      }\n      return emptyState;\n    }\n\n    const toggleRefinement = (\n      helper: AlgoliaSearchHelper,\n      facetValue: string\n    ) => {\n      sendEvent('click', facetValue);\n      helper.setState(getRefinedState(helper.state, facetValue)).search();\n    };\n\n    type ConnectorState = {\n      toggleRefinementFactory: (\n        helper: AlgoliaSearchHelper\n      ) => (facetValue: string) => void;\n      createURLFactory: ({\n        state,\n        createURL,\n      }: {\n        state: SearchParameters;\n        createURL: (createURLState: SearchParameters) => string;\n      }) => (value: string) => string;\n    };\n\n    const connectorState: ConnectorState = {\n      toggleRefinementFactory: helper => toggleRefinement.bind(null, helper),\n      createURLFactory: ({ state, createURL }) => value =>\n        createURL(getRefinedState(state, value)),\n    };\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          ratingMenu: {\n            ...renderState.ratingMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        results,\n        state,\n        instantSearchInstance,\n        createURL,\n      }) {\n        let facetValues: StarRatingItems[] = [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEvent({\n            instantSearchInstance,\n            helper,\n            getRefinedStar: () => getRefinedStar(helper.state),\n            attribute,\n          });\n        }\n\n        if (results) {\n          const facetResults = results.getFacetValues(\n            attribute,\n            {}\n          ) as SearchResults.FacetValue[];\n          const maxValuesPerFacet = facetResults.length;\n\n          const maxDecimalPlaces = getFacetsMaxDecimalPlaces(facetResults);\n          const maxFacets = Math.pow(10, maxDecimalPlaces) * max;\n\n          warning(\n            maxFacets <= maxValuesPerFacet,\n            getFacetValuesWarningMessage({\n              maxDecimalPlaces,\n              maxFacets,\n              maxValuesPerFacet,\n            })\n          );\n\n          const refinedStar = getRefinedStar(state);\n\n          for (let star = STEP; star < max; star += STEP) {\n            const isRefined = refinedStar === star;\n\n            const count = facetResults\n              .filter(f => Number(f.name) >= star && Number(f.name) <= max)\n              .map(f => f.count)\n              .reduce((sum, current) => sum + current, 0);\n\n            if (refinedStar && !isRefined && count === 0) {\n              // skip count==0 when at least 1 refinement is enabled\n              // eslint-disable-next-line no-continue\n              continue;\n            }\n\n            const stars = [...new Array(Math.floor(max / STEP))].map(\n              (_v, i) => i * STEP < star\n            );\n\n            facetValues.push({\n              stars,\n              name: String(star),\n              label: String(star),\n              value: String(star),\n              count,\n              isRefined,\n            });\n          }\n        }\n        facetValues = facetValues.reverse();\n\n        return {\n          items: facetValues,\n          hasNoResults: results ? results.nbHits === 0 : true,\n          canRefine: facetValues.length > 0,\n          refine: connectorState.toggleRefinementFactory(helper),\n          sendEvent,\n          createURL: connectorState.createURLFactory({ state, createURL }),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const value = getRefinedStar(searchParameters);\n\n        if (typeof value !== 'number') {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          ratingMenu: {\n            ...uiState.ratingMenu,\n            [attribute]: value,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.ratingMenu && uiState.ratingMenu[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n        const withDisjunctiveFacet = withoutRefinements.addDisjunctiveFacet(\n          attribute\n        );\n\n        if (!value) {\n          return withDisjunctiveFacet.setQueryParameters({\n            numericRefinements: {\n              ...withDisjunctiveFacet.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        return withDisjunctiveFacet\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', value);\n      },\n    };\n  };\n};\n\nexport default connectRatingMenu;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'stats',\n  connector: true,\n});\n\n/**\n * **Stats** connector provides the logic to build a custom widget that will displays\n * search statistics (hits number and processing time).\n */\n\nexport type StatsRenderState = {\n  /**\n   * The maximum number of hits per page returned by Algolia.\n   */\n  hitsPerPage?: number;\n  /**\n   * The number of hits in the result set.\n   */\n  nbHits: number;\n  /**\n   * The number of sorted hits in the result set (when using Relevant sort).\n   */\n  nbSortedHits?: number;\n  /**\n   * Indicates whether the index is currently using Relevant sort and is displaying only sorted hits.\n   */\n  areHitsSorted: boolean;\n  /**\n   * The number of pages computed for the result set.\n   */\n  nbPages: number;\n  /**\n   * The current page.\n   */\n  page: number;\n  /**\n   * The time taken to compute the results inside the Algolia engine.\n   */\n  processingTimeMS: number;\n  /**\n   * The query used for the current search.\n   */\n  query: string;\n};\n\nexport type StatsConnectorParams = Record<string, unknown>;\n\nexport type StatsWidgetDescription = {\n  $$type: 'ais.stats';\n  renderState: StatsRenderState;\n  indexRenderState: {\n    stats: WidgetRenderState<StatsRenderState, StatsConnectorParams>;\n  };\n};\n\nexport type StatsConnector = Connector<\n  StatsWidgetDescription,\n  StatsConnectorParams\n>;\n\nconst connectStats: StatsConnector = function connectStats(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => ({\n    $$type: 'ais.stats',\n\n    init(initOptions) {\n      const { instantSearchInstance } = initOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(initOptions),\n          instantSearchInstance,\n        },\n        true\n      );\n    },\n\n    render(renderOptions) {\n      const { instantSearchInstance } = renderOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(renderOptions),\n          instantSearchInstance,\n        },\n        false\n      );\n    },\n\n    dispose() {\n      unmountFn();\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        stats: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState({ results, helper }) {\n      if (!results) {\n        return {\n          hitsPerPage: helper.state.hitsPerPage,\n          nbHits: 0,\n          nbSortedHits: undefined,\n          areHitsSorted: false,\n          nbPages: 0,\n          page: helper.state.page || 0,\n          processingTimeMS: -1,\n          query: helper.state.query || '',\n          widgetParams,\n        };\n      }\n\n      return {\n        hitsPerPage: results.hitsPerPage,\n        nbHits: results.nbHits,\n        nbSortedHits: results.nbSortedHits,\n        areHitsSorted:\n          typeof results.appliedRelevancyStrictness !== 'undefined' &&\n          results.appliedRelevancyStrictness > 0 &&\n          results.nbSortedHits !== results.nbHits,\n        nbPages: results.nbPages,\n        page: results.page,\n        processingTimeMS: results.processingTimeMS,\n        query: results.query,\n        widgetParams,\n      };\n    },\n  });\n};\n\nexport default connectStats;\n","import {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  escapeRefinement,\n  unescapeRefinement,\n  createDocumentationMessageGenerator,\n  find,\n  noop,\n  toArray,\n} from '../../lib/utils';\nimport {\n  Connector,\n  CreateURL,\n  InstantSearch,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n  connector: true,\n});\n\nconst $$type = 'ais.toggleRefinement';\n\ntype BuiltInSendEventForToggle = (\n  eventType: string,\n  isRefined: boolean,\n  eventName?: string\n) => void;\ntype CustomSendEventForToggle = (customPayload: any) => void;\n\nexport type SendEventForToggle = BuiltInSendEventForToggle &\n  CustomSendEventForToggle;\n\nconst createSendEvent = ({\n  instantSearchInstance,\n  helper,\n  attribute,\n  on,\n}: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string;\n  on: string[] | undefined;\n}) => {\n  const sendEventForToggle: SendEventForToggle = (...args) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [eventType, isRefined, eventName = 'Filter Applied'] = args;\n    if (eventType !== 'click' || on === undefined) {\n      return;\n    }\n\n    // only send an event when the refinement gets applied,\n    // not when it gets removed\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: on.map(value => `${attribute}:${value}`),\n        },\n        attribute,\n      });\n    }\n  };\n  return sendEventForToggle;\n};\n\nexport type ToggleRefinementValue = {\n  /** whether this option is enabled */\n  isRefined: boolean;\n  /** number of result if this option is enabled */\n  count: number | null;\n};\n\nexport type ToggleRefinementConnectorParams = {\n  /** Name of the attribute for faceting (eg. \"free_shipping\"). */\n  attribute: string;\n  /**\n   * Value to filter on when toggled.\n   * @default \"true\"\n   */\n  on?: string | string[] | boolean | boolean[];\n  /**\n   * Value to filter on when not toggled.\n   */\n  off?: string | string[] | boolean | boolean[];\n};\n\nexport type ToggleRefinementRenderState = {\n  /** The current toggle value */\n  value: {\n    name: string;\n    isRefined: boolean;\n    count: number | null;\n    onFacetValue: ToggleRefinementValue;\n    offFacetValue: ToggleRefinementValue;\n  };\n  /** Creates an URL for the next state. */\n  createURL: CreateURL<string>;\n  /** send a \"facet clicked\" insights event */\n  sendEvent: SendEventForToggle;\n  /** Indicates if search state can be refined. */\n  canRefine: boolean;\n  /** Updates to the next state by applying the toggle refinement. */\n  refine: (value: { isRefined: boolean }) => void;\n};\n\nexport type ToggleRefinementWidgetDescription = {\n  $$type: 'ais.toggleRefinement';\n  renderState: ToggleRefinementRenderState;\n  indexRenderState: {\n    toggleRefinement: {\n      [attribute: string]: WidgetRenderState<\n        ToggleRefinementRenderState,\n        ToggleRefinementConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    toggle: {\n      [attribute: string]: boolean;\n    };\n  };\n};\n\nexport type ToggleRefinementConnector = Connector<\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementConnectorParams\n>;\n\n/**\n * **Toggle** connector provides the logic to build a custom widget that will provide\n * an on/off filtering feature based on an attribute value or values.\n *\n * Two modes are implemented in the custom widget:\n *  - with or without the value filtered\n *  - switch between two values.\n */\nconst connectToggleRefinement: ToggleRefinementConnector = function connectToggleRefinement(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const { attribute, on: userOn = true, off: userOff } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    const hasAnOffValue = userOff !== undefined;\n    const on = toArray(userOn).map(escapeRefinement);\n    const off = hasAnOffValue\n      ? toArray(userOff).map(escapeRefinement)\n      : undefined;\n\n    let sendEvent: SendEventForToggle;\n\n    const toggleRefinementFactory = (helper: AlgoliaSearchHelper) => (\n      {\n        isRefined,\n      }: {\n        isRefined: boolean;\n      } = { isRefined: false }\n    ) => {\n      if (!isRefined) {\n        sendEvent('click', isRefined);\n        if (hasAnOffValue) {\n          off!.forEach(v =>\n            helper.removeDisjunctiveFacetRefinement(attribute, v)\n          );\n        }\n\n        on.forEach(v => helper.addDisjunctiveFacetRefinement(attribute, v));\n      } else {\n        on.forEach(v => helper.removeDisjunctiveFacetRefinement(attribute, v));\n\n        if (hasAnOffValue) {\n          off!.forEach(v => helper.addDisjunctiveFacetRefinement(attribute, v));\n        }\n      }\n\n      helper.search();\n    };\n\n    const connectorState = {\n      createURLFactory: (\n        isRefined: boolean,\n        {\n          state,\n          createURL,\n        }: {\n          state: SearchParameters;\n          createURL(parameters: SearchParameters): string;\n        }\n      ) => () => {\n        state = state.resetPage();\n\n        const valuesToRemove = isRefined ? on : off;\n        if (valuesToRemove) {\n          valuesToRemove.forEach(v => {\n            state = state.removeDisjunctiveFacetRefinement(attribute, v);\n          });\n        }\n\n        const valuesToAdd = isRefined ? off : on;\n        if (valuesToAdd) {\n          valuesToAdd.forEach(v => {\n            state = state.addDisjunctiveFacetRefinement(attribute, v);\n          });\n        }\n\n        return createURL(state);\n      },\n    };\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.removeDisjunctiveFacet(attribute);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          toggleRefinement: {\n            ...renderState.toggleRefinement,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        state,\n        helper,\n        results,\n        createURL,\n        instantSearchInstance,\n      }) {\n        const isRefined = results\n          ? on.every(v => helper.state.isDisjunctiveFacetRefined(attribute, v))\n          : on.every(v => state.isDisjunctiveFacetRefined(attribute, v));\n\n        let onFacetValue: ToggleRefinementValue = {\n          isRefined,\n          count: 0,\n        };\n\n        let offFacetValue: ToggleRefinementValue = {\n          isRefined: hasAnOffValue && !isRefined,\n          count: 0,\n        };\n\n        if (results) {\n          const offValue = toArray(off || false);\n          const allFacetValues = (results.getFacetValues(attribute, {}) ||\n            []) as SearchResults.FacetValue[];\n\n          const onData = on\n            .map(v =>\n              find(allFacetValues, ({ name }) => name === unescapeRefinement(v))\n            )\n            .filter((v): v is SearchResults.FacetValue => v !== undefined);\n\n          const offData = hasAnOffValue\n            ? offValue\n                .map(v =>\n                  find(\n                    allFacetValues,\n                    ({ name }) => name === unescapeRefinement(v)\n                  )\n                )\n                .filter((v): v is SearchResults.FacetValue => v !== undefined)\n            : [];\n\n          onFacetValue = {\n            isRefined: onData.length ? onData.every(v => v.isRefined) : false,\n            count: onData.reduce((acc, v) => acc + v.count, 0) || null,\n          };\n\n          offFacetValue = {\n            isRefined: offData.length ? offData.every(v => v.isRefined) : false,\n            count:\n              offData.reduce((acc, v) => acc + v.count, 0) ||\n              allFacetValues.reduce((total, { count }) => total + count, 0),\n          };\n        } else if (hasAnOffValue && !isRefined) {\n          if (off) {\n            off.forEach(v =>\n              helper.addDisjunctiveFacetRefinement(attribute, v)\n            );\n          }\n\n          helper.setPage(helper.state.page!);\n        }\n\n        if (!sendEvent) {\n          sendEvent = createSendEvent({\n            instantSearchInstance,\n            attribute,\n            on,\n            helper,\n          });\n        }\n        const nextRefinement = isRefined ? offFacetValue : onFacetValue;\n\n        return {\n          value: {\n            name: attribute,\n            isRefined,\n            count: results ? nextRefinement.count : null,\n            onFacetValue,\n            offFacetValue,\n          },\n          createURL: connectorState.createURLFactory(isRefined, {\n            state,\n            createURL,\n          }),\n          sendEvent,\n          canRefine: Boolean(results ? nextRefinement.count : null),\n          refine: toggleRefinementFactory(helper),\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const isRefined =\n          on &&\n          on.every(v =>\n            searchParameters.isDisjunctiveFacetRefined(attribute, v)\n          );\n\n        if (!isRefined) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          toggle: {\n            ...uiState.toggle,\n            [attribute]: isRefined,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let withFacetConfiguration = searchParameters\n          .clearRefinements(attribute)\n          .addDisjunctiveFacet(attribute);\n\n        const isRefined = Boolean(uiState.toggle && uiState.toggle[attribute]);\n\n        if (isRefined) {\n          if (on) {\n            on.forEach(v => {\n              withFacetConfiguration = withFacetConfiguration.addDisjunctiveFacetRefinement(\n                attribute,\n                v\n              );\n            });\n          }\n\n          return withFacetConfiguration;\n        }\n\n        // It's not refined with an `off` value\n        if (hasAnOffValue) {\n          if (off) {\n            off.forEach(v => {\n              withFacetConfiguration = withFacetConfiguration.addDisjunctiveFacetRefinement(\n                attribute,\n                v\n              );\n            });\n          }\n          return withFacetConfiguration;\n        }\n\n        // It's not refined without an `off` value\n        return withFacetConfiguration.setQueryParameters({\n          disjunctiveFacetsRefinements: {\n            ...searchParameters.disjunctiveFacetsRefinements,\n            [attribute]: [],\n          },\n        });\n      },\n    };\n  };\n};\n\nexport default connectToggleRefinement;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  isEqual,\n  noop,\n} from '../../lib/utils';\nimport { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'breadcrumb',\n  connector: true,\n});\n\nexport type BreadcrumbConnectorParamsItem = {\n  /**\n   * Label of the category or subcategory.\n   */\n  label: string;\n\n  /**\n   * Value of breadcrumb item.\n   */\n  value: string;\n};\n\nexport type BreadcrumbConnectorParams = {\n  /**\n   * Attributes to use to generate the hierarchy of the breadcrumb.\n   */\n  attributes: string[];\n\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<BreadcrumbConnectorParamsItem>;\n\n  /**\n   * The level separator used in the records.\n   *\n   * @default '>'\n   */\n  separator?: string;\n};\n\nexport type BreadcrumbRenderState = {\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<BreadcrumbConnectorParamsItem['value']>;\n\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: BreadcrumbConnectorParamsItem[];\n\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: BreadcrumbConnectorParamsItem['value']) => void;\n\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n};\n\nexport type BreadcrumbWidgetDescription = {\n  $$type: 'ais.breadcrumb';\n  renderState: BreadcrumbRenderState;\n  indexRenderState: {\n    breadcrumb: {\n      [rootAttribute: string]: WidgetRenderState<\n        BreadcrumbRenderState,\n        BreadcrumbConnectorParams\n      >;\n    };\n  };\n};\n\nexport type BreadcrumbConnector = Connector<\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams\n>;\n\nconst connectBreadcrumb: BreadcrumbConnector = function connectBreadcrumb(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  type ConnectorState = {\n    refine?: BreadcrumbRenderState['refine'];\n    createURL?: BreadcrumbRenderState['createURL'];\n  };\n\n  const connectorState: ConnectorState = {};\n\n  return widgetParams => {\n    const {\n      attributes,\n      separator = ' > ',\n      rootPath = null,\n      transformItems = (items => items) as TransformItems<\n        BreadcrumbConnectorParamsItem\n      >,\n    } = widgetParams || {};\n\n    if (!attributes || !Array.isArray(attributes) || attributes.length === 0) {\n      throw new Error(\n        withUsage('The `attributes` option expects an array of strings.')\n      );\n    }\n\n    const [hierarchicalFacetName] = attributes;\n\n    function getRefinedState(state: SearchParameters, facetValue: string) {\n      if (!facetValue) {\n        const breadcrumb = state.getHierarchicalFacetBreadcrumb(\n          hierarchicalFacetName\n        );\n        if (breadcrumb.length > 0) {\n          return state\n            .resetPage()\n            .toggleFacetRefinement(hierarchicalFacetName, breadcrumb[0]);\n        }\n      }\n      return state\n        .resetPage()\n        .toggleFacetRefinement(hierarchicalFacetName, facetValue);\n    }\n\n    return {\n      $$type: 'ais.breadcrumb',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose() {\n        unmountFn();\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          breadcrumb: {\n            ...renderState.breadcrumb,\n            [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper, createURL, results, state }) {\n        function getItems() {\n          if (!results) {\n            return [];\n          }\n\n          const [{ name: facetName }] = state.hierarchicalFacets;\n\n          const facetValues = results.getFacetValues(\n            facetName,\n            {}\n          ) as SearchResults.HierarchicalFacet;\n          const data = Array.isArray(facetValues.data) ? facetValues.data : [];\n          const items = transformItems(shiftItemsValues(prepareItems(data)));\n\n          return items;\n        }\n\n        const items = getItems();\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = facetValue => {\n            return createURL(getRefinedState(helper.state, facetValue));\n          };\n        }\n\n        if (!connectorState.refine) {\n          connectorState.refine = facetValue => {\n            helper.setState(getRefinedState(helper.state, facetValue)).search();\n          };\n        }\n\n        return {\n          canRefine: items.length > 0,\n          createURL: connectorState.createURL,\n          items,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters) {\n        if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n          const facet = searchParameters.getHierarchicalFacetByName(\n            hierarchicalFacetName\n          );\n\n          warning(\n            isEqual(facet.attributes, attributes) &&\n              facet.separator === separator &&\n              facet.rootPath === rootPath,\n            'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n          );\n\n          return searchParameters;\n        }\n\n        return searchParameters.addHierarchicalFacet({\n          name: hierarchicalFacetName,\n          attributes,\n          separator,\n          rootPath,\n        });\n      },\n    };\n  };\n};\n\nfunction prepareItems(data) {\n  return data.reduce((result, currentItem) => {\n    if (currentItem.isRefined) {\n      result.push({\n        label: currentItem.name,\n        value: currentItem.path,\n      });\n      if (Array.isArray(currentItem.data)) {\n        result = result.concat(prepareItems(currentItem.data));\n      }\n    }\n    return result;\n  }, []);\n}\n\nfunction shiftItemsValues(array) {\n  return array.map((x, idx) => ({\n    label: x.label,\n    value: idx + 1 === array.length ? null : array[idx + 1].value,\n  }));\n}\n\nexport default connectBreadcrumb;\n","import { AlgoliaSearchHelper, SearchParameters } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  aroundLatLngToPosition,\n  insideBoundingBoxToBoundingBox,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  SendEventForHits,\n  noop,\n} from '../../lib/utils';\nimport {\n  Connector,\n  GeoLoc,\n  Hit,\n  InitOptions,\n  RenderOptions,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'geo-search',\n  connector: true,\n});\n\n// in this connector, we assume insideBoundingBox is only a string,\n// even though in the helper it's defined as number[][] alone.\n// This can be done, since the connector assumes \"control\" of the parameter\nfunction getBoundingBoxAsString(state: SearchParameters) {\n  return ((state.insideBoundingBox as unknown) as string) || '';\n}\nfunction setBoundingBoxAsString(state: SearchParameters, value: string) {\n  return state.setQueryParameter(\n    'insideBoundingBox',\n    (value as unknown) as number[][]\n  );\n}\n\nexport type GeoHit = Hit & Required<Pick<Hit, '_geoLoc'>>;\n\ntype Bounds = {\n  /**\n   * The top right corner of the map view.\n   */\n  northEast: GeoLoc;\n  /**\n   * The bottom left corner of the map view.\n   */\n  southWest: GeoLoc;\n};\n\nexport type GeoSearchRenderState = {\n  /**\n   * Reset the current bounding box refinement.\n   */\n  clearMapRefinement(): void;\n  /**\n   * The current bounding box of the search.\n   */\n  currentRefinement?: Bounds;\n  /**\n   * Return true if the map has move since the last refinement.\n   */\n  hasMapMoveSinceLastRefine(): boolean;\n  /**\n   * Return true if the current refinement is set with the map bounds.\n   */\n  isRefinedWithMap(): boolean;\n  /**\n   * Return true if the user is able to refine on map move.\n   */\n  isRefineOnMapMove(): boolean;\n  /**\n   * The matched hits from Algolia API.\n   */\n  items: GeoHit[];\n  /**\n   * The current position of the search.\n   */\n  position?: GeoLoc;\n  /**\n   * Sets a bounding box to filter the results from the given map bounds.\n   */\n  refine(bounds: Bounds): void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n  /**\n   * Set the fact that the map has moved since the last refinement, should be\n   * called on each map move. The call to the function triggers a new rendering\n   * only when the value change.\n   */\n  setMapMoveSinceLastRefine(): void;\n  /**\n   * Toggle the fact that the user is able to refine on map move.\n   */\n  toggleRefineOnMapMove(): void;\n};\n\nexport type GeoSearchConnectorParams = {\n  /**\n   * If true, refine will be triggered as you move the map.\n   * @default true\n   */\n  enableRefineOnMapMove?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   * @default items => items\n   */\n  transformItems?: TransformItems<GeoHit>;\n};\n\nconst $$type = 'ais.geoSearch';\n\nexport type GeoSearchWidgetDescription = {\n  $$type: 'ais.geoSearch';\n  renderState: GeoSearchRenderState;\n  indexRenderState: {\n    geoSearch: WidgetRenderState<\n      GeoSearchRenderState,\n      GeoSearchConnectorParams\n    >;\n  };\n  indexUiState: {\n    geoSearch: {\n      /**\n       * The rectangular area in geo coordinates.\n       * The rectangle is defined by two diagonally opposite points,\n       * hence by 4 floats separated by commas.\n       *\n       * @example '47.3165,4.9665,47.3424,5.0201'\n       */\n      boundingBox: string;\n    };\n  };\n};\n\nexport type GeoSearchConnector = Connector<\n  GeoSearchWidgetDescription,\n  GeoSearchConnectorParams\n>;\n\n/**\n * The **GeoSearch** connector provides the logic to build a widget that will display the results on a map. It also provides a way to search for results based on their position. The connector provides functions to manage the search experience (search on map interaction or control the interaction for example).\n *\n * @requirements\n *\n * Note that the GeoSearch connector uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be passed to the rendering function.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n */\nconst connectGeoSearch: GeoSearchConnector = (renderFn, unmountFn = noop) => {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      enableRefineOnMapMove = true,\n      transformItems = (items => items) as TransformItems<GeoHit>,\n    } = widgetParams || {};\n\n    const widgetState = {\n      isRefineOnMapMove: enableRefineOnMapMove,\n      // @MAJOR hasMapMoveSinceLastRefine -> hasMapMovedSinceLastRefine\n      hasMapMoveSinceLastRefine: false,\n      lastRefinePosition: '',\n      lastRefineBoundingBox: '',\n      internalToggleRefineOnMapMove: noop,\n      internalSetMapMoveSinceLastRefine: noop,\n    };\n\n    const getPositionFromState = (state: SearchParameters) =>\n      state.aroundLatLng\n        ? aroundLatLngToPosition(state.aroundLatLng)\n        : undefined;\n\n    const getCurrentRefinementFromState = (state: SearchParameters) =>\n      state.insideBoundingBox &&\n      insideBoundingBoxToBoundingBox(state.insideBoundingBox);\n\n    const refine = (helper: AlgoliaSearchHelper) => ({\n      northEast: ne,\n      southWest: sw,\n    }: Bounds) => {\n      const boundingBox = [ne.lat, ne.lng, sw.lat, sw.lng].join();\n\n      helper\n        .setState(setBoundingBoxAsString(helper.state, boundingBox).resetPage())\n        .search();\n\n      widgetState.hasMapMoveSinceLastRefine = false;\n      widgetState.lastRefineBoundingBox = boundingBox;\n    };\n\n    const clearMapRefinement = (helper: AlgoliaSearchHelper) => () => {\n      helper.setQueryParameter('insideBoundingBox', undefined).search();\n    };\n\n    const isRefinedWithMap = (state: SearchParameters) => () =>\n      Boolean(state.insideBoundingBox);\n\n    const toggleRefineOnMapMove = () =>\n      widgetState.internalToggleRefineOnMapMove();\n    const createInternalToggleRefinementOnMapMove = <\n      TRenderOptions extends RenderOptions | InitOptions\n    >(\n      renderOptions: TRenderOptions,\n      // false positive eslint because of generics\n      // eslint-disable-next-line no-shadow\n      render: (renderOptions: TRenderOptions) => void\n    ) => () => {\n      widgetState.isRefineOnMapMove = !widgetState.isRefineOnMapMove;\n\n      render(renderOptions);\n    };\n\n    const isRefineOnMapMove = () => widgetState.isRefineOnMapMove;\n\n    const setMapMoveSinceLastRefine = () =>\n      widgetState.internalSetMapMoveSinceLastRefine();\n    const createInternalSetMapMoveSinceLastRefine = <\n      TRenderOptions extends RenderOptions | InitOptions\n    >(\n      renderOptions: TRenderOptions,\n      // false positive eslint because of generics\n      // eslint-disable-next-line no-shadow\n      render: (renderOptions: TRenderOptions) => void\n    ) => () => {\n      const shouldTriggerRender =\n        widgetState.hasMapMoveSinceLastRefine !== true;\n\n      widgetState.hasMapMoveSinceLastRefine = true;\n\n      if (shouldTriggerRender) {\n        render(renderOptions);\n      }\n    };\n\n    const hasMapMoveSinceLastRefine = () =>\n      widgetState.hasMapMoveSinceLastRefine;\n\n    let sendEvent: SendEventForHits;\n\n    return {\n      $$type,\n\n      init(initArgs) {\n        const { instantSearchInstance } = initArgs;\n        const isFirstRendering = true;\n\n        widgetState.internalToggleRefineOnMapMove = createInternalToggleRefinementOnMapMove(\n          initArgs,\n          noop\n        );\n\n        widgetState.internalSetMapMoveSinceLastRefine = createInternalSetMapMoveSinceLastRefine(\n          initArgs,\n          noop\n        );\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initArgs),\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      render(renderArgs) {\n        const { helper, instantSearchInstance } = renderArgs;\n        const isFirstRendering = false;\n        // We don't use the state provided by the render function because we need\n        // to be sure that the state is the latest one for the following condition\n        const state = helper.state;\n\n        const positionChangedSinceLastRefine =\n          Boolean(state.aroundLatLng) &&\n          Boolean(widgetState.lastRefinePosition) &&\n          state.aroundLatLng !== widgetState.lastRefinePosition;\n\n        const boundingBoxChangedSinceLastRefine =\n          !state.insideBoundingBox &&\n          Boolean(widgetState.lastRefineBoundingBox) &&\n          state.insideBoundingBox !== widgetState.lastRefineBoundingBox;\n\n        if (\n          positionChangedSinceLastRefine ||\n          boundingBoxChangedSinceLastRefine\n        ) {\n          widgetState.hasMapMoveSinceLastRefine = false;\n        }\n\n        widgetState.lastRefinePosition = state.aroundLatLng || '';\n\n        widgetState.lastRefineBoundingBox = getBoundingBoxAsString(state);\n\n        widgetState.internalToggleRefineOnMapMove = createInternalToggleRefinementOnMapMove(\n          renderArgs,\n          this.render!.bind(this)\n        );\n\n        widgetState.internalSetMapMoveSinceLastRefine = createInternalSetMapMoveSinceLastRefine(\n          renderArgs,\n          this.render!.bind(this)\n        );\n\n        const widgetRenderState = this.getWidgetRenderState(renderArgs);\n\n        sendEvent('view', widgetRenderState.items);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, results, instantSearchInstance } = renderOptions;\n        const state = helper.state;\n\n        const items = results\n          ? transformItems(results.hits.filter(hit => hit._geoloc))\n          : [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: $$type,\n          });\n        }\n\n        return {\n          items,\n          position: getPositionFromState(state),\n          currentRefinement: getCurrentRefinementFromState(state),\n          refine: refine(helper),\n          sendEvent,\n          clearMapRefinement: clearMapRefinement(helper),\n          isRefinedWithMap: isRefinedWithMap(state),\n          toggleRefineOnMapMove,\n          isRefineOnMapMove,\n          setMapMoveSinceLastRefine,\n          hasMapMoveSinceLastRefine,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          geoSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('insideBoundingBox', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const boundingBox = getBoundingBoxAsString(searchParameters);\n\n        if (\n          !boundingBox ||\n          (uiState &&\n            uiState.geoSearch &&\n            uiState.geoSearch.boundingBox === boundingBox)\n        ) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          geoSearch: {\n            boundingBox,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        if (!uiState || !uiState.geoSearch) {\n          return searchParameters.setQueryParameter(\n            'insideBoundingBox',\n            undefined\n          );\n        }\n\n        return setBoundingBoxAsString(\n          searchParameters,\n          uiState.geoSearch.boundingBox\n        );\n      },\n    };\n  };\n};\n\nexport default connectGeoSearch;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'powered-by',\n  connector: true,\n});\n\nexport type PoweredByRenderState = {\n  /** the url to redirect to on click */\n  url: string;\n};\n\nexport type PoweredByConnectorParams = {\n  /** the url to redirect to on click */\n  url?: string;\n};\n\nexport type PoweredByWidgetDescription = {\n  $$type: 'ais.poweredBy';\n  renderState: PoweredByRenderState;\n  indexRenderState: {\n    poweredBy: WidgetRenderState<\n      PoweredByRenderState,\n      PoweredByConnectorParams\n    >;\n  };\n};\n\nexport type PoweredByConnector = Connector<\n  PoweredByWidgetDescription,\n  PoweredByConnectorParams\n>;\n\n/**\n * **PoweredBy** connector provides the logic to build a custom widget that will displays\n * the logo to redirect to Algolia.\n */\nconst connectPoweredBy: PoweredByConnector = function connectPoweredBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const defaultUrl =\n    'https://www.algolia.com/?' +\n    'utm_source=instantsearch.js&' +\n    'utm_medium=website&' +\n    `utm_content=${\n      typeof window !== 'undefined' && window.location\n        ? window.location.hostname\n        : ''\n    }&` +\n    'utm_campaign=poweredby';\n\n  return widgetParams => {\n    const { url = defaultUrl } = widgetParams || {};\n\n    return {\n      $$type: 'ais.poweredBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          poweredBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          url,\n          widgetParams,\n        };\n      },\n\n      dispose() {\n        unmountFn();\n      },\n    };\n  };\n};\n\nexport default connectPoweredBy;\n","import algoliasearchHelper, {\n  SearchParameters,\n  PlainSearchParameters,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\nimport { Connector, WidgetRenderState } from '../../types';\nimport {\n  createDocumentationMessageGenerator,\n  isPlainObject,\n  mergeSearchParameters,\n  noop,\n} from '../../lib/utils';\n\n/**\n * Refine the given search parameters.\n */\ntype Refine = (searchParameters: PlainSearchParameters) => void;\n\nexport type ConfigureConnectorParams = {\n  /**\n   * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n   * to enable when the widget mounts.\n   */\n  searchParameters: PlainSearchParameters;\n};\n\nexport type ConfigureRenderState = {\n  /**\n   * Refine the given search parameters.\n   */\n  refine: Refine;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure',\n  connector: true,\n});\n\nfunction getInitialSearchParameters(\n  state: SearchParameters,\n  widgetParams: ConfigureConnectorParams\n): SearchParameters {\n  // We leverage the helper internals to remove the `widgetParams` from\n  // the state. The function `setQueryParameters` omits the values that\n  // are `undefined` on the next state.\n  return state.setQueryParameters(\n    Object.keys(widgetParams.searchParameters).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: undefined,\n      }),\n      {}\n    )\n  );\n}\n\nexport type ConfigureWidgetDescription = {\n  $$type: 'ais.configure';\n  renderState: ConfigureRenderState;\n  indexRenderState: {\n    configure: WidgetRenderState<\n      ConfigureRenderState,\n      ConfigureConnectorParams\n    >;\n  };\n  indexUiState: {\n    configure: PlainSearchParameters;\n  };\n};\n\nexport type ConfigureConnector = Connector<\n  ConfigureWidgetDescription,\n  ConfigureConnectorParams\n>;\n\nconst connectConfigure: ConfigureConnector = function connectConfigure(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return widgetParams => {\n    if (!widgetParams || !isPlainObject(widgetParams.searchParameters)) {\n      throw new Error(\n        withUsage('The `searchParameters` option expects an object.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function refine(helper: AlgoliaSearchHelper): Refine {\n      return (searchParameters: PlainSearchParameters) => {\n        // Merge new `searchParameters` with the ones set from other widgets\n        const actualState = getInitialSearchParameters(\n          helper.state,\n          widgetParams\n        );\n        const nextSearchParameters = mergeSearchParameters(\n          actualState,\n          new algoliasearchHelper.SearchParameters(searchParameters)\n        );\n\n        // Update original `widgetParams.searchParameters` to the new refined one\n        widgetParams.searchParameters = searchParameters;\n\n        // Trigger a search with the resolved search parameters\n        helper.setState(nextSearchParameters).search();\n      };\n    }\n\n    return {\n      $$type: 'ais.configure',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return getInitialSearchParameters(state, widgetParams);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n        return {\n          ...renderState,\n          configure: {\n            ...widgetRenderState,\n            widgetParams: {\n              ...widgetRenderState.widgetParams,\n              searchParameters: mergeSearchParameters(\n                new algoliasearchHelper.SearchParameters(\n                  renderState.configure?.widgetParams.searchParameters\n                ),\n                new algoliasearchHelper.SearchParameters(\n                  widgetRenderState.widgetParams.searchParameters\n                )\n              ).getQueryParams(),\n            },\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = refine(helper);\n        }\n\n        return {\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return mergeSearchParameters(\n          state,\n          new algoliasearchHelper.SearchParameters({\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          })\n        );\n      },\n\n      getWidgetUiState(uiState) {\n        return {\n          ...uiState,\n          configure: {\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          },\n        };\n      },\n    };\n  };\n};\n\nexport default connectConfigure;\n","import algoliasearchHelper, {\n  SearchParameters,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\nimport { AlgoliaHit, Connector } from '../../types';\nimport {\n  createDocumentationMessageGenerator,\n  getObjectType,\n  warning,\n  getPropertyByPath,\n} from '../../lib/utils';\nimport connectConfigure, {\n  ConfigureWidgetDescription,\n} from '../configure/connectConfigure';\n\nexport type MatchingPatterns = {\n  [attribute: string]: {\n    /**\n     * The score of the optional filter.\n     *\n     * @see https://www.algolia.com/doc/guides/managing-results/rules/merchandising-and-promoting/in-depth/optional-filters/\n     */\n    score: number;\n  };\n};\n\nexport type TransformSearchParameters = (\n  searchParameters: SearchParameters\n) => PlainSearchParameters;\n\nexport type ConfigureRelatedItemsConnectorParams = {\n  /**\n   * The reference hit to extract the filters from.\n   */\n  hit: AlgoliaHit;\n  /**\n   * The schema to create the optional filters.\n   * Each key represents an attribute from the hit.\n   */\n  matchingPatterns: MatchingPatterns;\n  /**\n   * Function to transform the generated search parameters.\n   */\n  transformSearchParameters?: TransformSearchParameters;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure-related-items',\n  connector: true,\n});\n\nfunction createOptionalFilter({\n  attributeName,\n  attributeValue,\n  attributeScore,\n}) {\n  return `${attributeName}:${attributeValue}<score=${attributeScore || 1}>`;\n}\n\nexport type ConfigureRelatedItemsWidgetDescription = {\n  $$type: 'ais.configureRelatedItems';\n} & Omit<ConfigureWidgetDescription, '$$type'>;\n\nexport type ConfigureRelatedItemsConnector = Connector<\n  ConfigureRelatedItemsWidgetDescription,\n  ConfigureRelatedItemsConnectorParams\n>;\n\nconst connectConfigureRelatedItems: ConfigureRelatedItemsConnector = function connectConfigureRelatedItems(\n  renderFn,\n  unmountFn\n) {\n  return widgetParams => {\n    const {\n      hit,\n      matchingPatterns,\n      transformSearchParameters = (x => x) as TransformSearchParameters,\n    } = widgetParams || {};\n\n    if (!hit) {\n      throw new Error(withUsage('The `hit` option is required.'));\n    }\n\n    if (!matchingPatterns) {\n      throw new Error(withUsage('The `matchingPatterns` option is required.'));\n    }\n\n    const optionalFilters = Object.keys(matchingPatterns).reduce<\n      Array<string | string[]>\n    >((acc, attributeName) => {\n      const attribute = matchingPatterns[attributeName];\n      const attributeValue = getPropertyByPath(hit, attributeName);\n      const attributeScore = attribute.score;\n\n      if (Array.isArray(attributeValue)) {\n        return [\n          ...acc,\n          attributeValue.map(attributeSubValue => {\n            return createOptionalFilter({\n              attributeName,\n              attributeValue: attributeSubValue,\n              attributeScore,\n            });\n          }),\n        ];\n      }\n\n      if (typeof attributeValue === 'string') {\n        return [\n          ...acc,\n          createOptionalFilter({\n            attributeName,\n            attributeValue,\n            attributeScore,\n          }),\n        ];\n      }\n\n      warning(\n        false,\n        `\nThe \\`matchingPatterns\\` option returned a value of type ${getObjectType(\n          attributeValue\n        )} for the \"${attributeName}\" key. This value was not sent to Algolia because \\`optionalFilters\\` only supports strings and array of strings.\n\nYou can remove the \"${attributeName}\" key from the \\`matchingPatterns\\` option.\n\nSee https://www.algolia.com/doc/api-reference/api-parameters/optionalFilters/\n            `\n      );\n\n      return acc;\n    }, []);\n\n    const searchParameters: PlainSearchParameters = {\n      ...transformSearchParameters(\n        new algoliasearchHelper.SearchParameters({\n          sumOrFiltersScores: true,\n          facetFilters: [`objectID:-${hit.objectID}`],\n          optionalFilters,\n        })\n      ),\n    };\n\n    const makeWidget = connectConfigure(renderFn, unmountFn);\n\n    return {\n      // required, since widget parameters differ between these connectors\n      // and we don't want to have the parameters of configure here\n      ...makeWidget({ searchParameters } as any),\n      $$type: 'ais.configureRelatedItems',\n    };\n  };\n};\n\nexport default connectConfigureRelatedItems;\n","import { SearchResults } from 'algoliasearch-helper';\nimport {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  SendEventForHits,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport { Hits, Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'autocomplete',\n  connector: true,\n});\n\nexport type AutocompleteConnectorParams = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n};\n\nexport type AutocompleteRenderState = {\n  /**\n   * The current value of the query.\n   */\n  currentRefinement: string;\n\n  /**\n   * The indices this widget has access to.\n   */\n  indices: Array<{\n    /**\n     * The name of the index\n     */\n    indexName: string;\n\n    /**\n     * The resolved hits from the index matching the query.\n     */\n    hits: Hits;\n\n    /**\n     * The full results object from the Algolia API.\n     */\n    results: SearchResults;\n\n    /**\n     * Send event to insights middleware\n     */\n    sendEvent: SendEventForHits;\n  }>;\n\n  /**\n   * Searches into the indices with the provided query.\n   */\n  refine: (query: string) => void;\n};\n\nexport type AutocompleteWidgetDescription = {\n  $$type: 'ais.autocomplete';\n  renderState: AutocompleteRenderState;\n  indexRenderState: {\n    autocomplete: WidgetRenderState<\n      AutocompleteRenderState,\n      AutocompleteConnectorParams\n    >;\n  };\n  indexUiState: { query: string };\n};\n\nexport type AutocompleteConnector = Connector<\n  AutocompleteWidgetDescription,\n  AutocompleteConnectorParams\n>;\n\nconst connectAutocomplete: AutocompleteConnector = function connectAutocomplete(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const { escapeHTML = true } = widgetParams || {};\n\n    warning(\n      !(widgetParams as any).indices,\n      `\nThe option \\`indices\\` has been removed from the Autocomplete connector.\n\nThe indices to target are now inferred from the widgets tree.\n${\n  Array.isArray((widgetParams as any).indices)\n    ? `\nAn alternative would be:\n\nconst autocomplete = connectAutocomplete(renderer);\n\nsearch.addWidgets([\n  ${(widgetParams as any).indices\n    .map(({ value }: { value: string }) => `index({ indexName: '${value}' }),`)\n    .join('\\n  ')}\n  autocomplete()\n]);\n`\n    : ''\n}\n      `\n    );\n\n    type ConnectorState = {\n      refine?(query: string): void;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.autocomplete',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderState.indices.forEach(({ sendEvent, hits }) => {\n          sendEvent('view', hits);\n        });\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          autocomplete: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ helper, scopedResults, instantSearchInstance }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (query: string) => {\n            helper.setQuery(query).search();\n          };\n        }\n\n        const indices = scopedResults.map(scopedResult => {\n          // We need to escape the hits because highlighting\n          // exposes HTML tags to the end-user.\n          scopedResult.results.hits = escapeHTML\n            ? escapeHits(scopedResult.results.hits)\n            : scopedResult.results.hits;\n\n          const sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: scopedResult.results.index,\n            widgetType: this.$$type!,\n          });\n\n          return {\n            indexId: scopedResult.indexId,\n            indexName: scopedResult.results.index,\n            hits: scopedResult.results.hits,\n            results: scopedResult.results,\n            sendEvent,\n          };\n        });\n\n        return {\n          currentRefinement: helper.state.query || '',\n          indices,\n          refine: connectorState.refine!,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const parameters = {\n          query: uiState.query || '',\n        };\n\n        if (!escapeHTML) {\n          return searchParameters.setQueryParameters(parameters);\n        }\n\n        return searchParameters.setQueryParameters({\n          ...parameters,\n          ...TAG_PLACEHOLDER,\n        });\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutQuery = state.setQueryParameter('query', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutQuery;\n        }\n\n        return stateWithoutQuery.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n    };\n  };\n};\n\nexport default connectAutocomplete;\n","import {\n  AlgoliaSearchHelper as Helper,\n  SearchParameters,\n} from 'algoliasearch-helper';\nimport { Connector, TransformItems, WidgetRenderState } from '../../types';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  warning,\n  getRefinements,\n  isEqual,\n  noop,\n} from '../../lib/utils';\nimport {\n  Refinement as InternalRefinement,\n  NumericRefinement as InternalNumericRefinement,\n} from '../../lib/utils/getRefinements';\n\ntype TrackedFilterRefinement = string | number | boolean;\n\nexport type ParamTrackedFilters = {\n  [facetName: string]: (\n    facetValues: TrackedFilterRefinement[]\n  ) => TrackedFilterRefinement[];\n};\nexport type ParamTransformRuleContexts = (ruleContexts: string[]) => string[];\ntype ParamTransformItems = TransformItems<any>;\n\nexport type QueryRulesConnectorParams = {\n  trackedFilters?: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n  transformItems?: ParamTransformItems;\n};\n\nexport type QueryRulesRenderState = {\n  items: any[];\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rules',\n  connector: true,\n});\n\nfunction hasStateRefinements(state: SearchParameters): boolean {\n  return [\n    state.disjunctiveFacetsRefinements,\n    state.facetsRefinements,\n    state.hierarchicalFacetsRefinements,\n    state.numericRefinements,\n  ].some(refinement =>\n    Boolean(refinement && Object.keys(refinement).length > 0)\n  );\n}\n\n// A context rule must consist only of alphanumeric characters, hyphens, and underscores.\n// See https://www.algolia.com/doc/guides/managing-results/refine-results/merchandising-and-promoting/in-depth/implementing-query-rules/#context\nfunction escapeRuleContext(ruleName: string): string {\n  return ruleName.replace(/[^a-z0-9-_]+/gi, '_');\n}\n\nfunction getRuleContextsFromTrackedFilters({\n  helper,\n  sharedHelperState,\n  trackedFilters,\n}: {\n  helper: Helper;\n  sharedHelperState: SearchParameters;\n  trackedFilters: ParamTrackedFilters;\n}): string[] {\n  const ruleContexts = Object.keys(trackedFilters).reduce<string[]>(\n    (facets, facetName) => {\n      const facetRefinements: TrackedFilterRefinement[] = getRefinements(\n        helper.lastResults || {},\n        sharedHelperState,\n        true\n      )\n        .filter(\n          (refinement: InternalRefinement) => refinement.attribute === facetName\n        )\n        .map(\n          (refinement: InternalRefinement) =>\n            (refinement as InternalNumericRefinement).numericValue ||\n            refinement.name\n        );\n\n      const getTrackedFacetValues = trackedFilters[facetName];\n      const trackedFacetValues = getTrackedFacetValues(facetRefinements);\n\n      return [\n        ...facets,\n        ...facetRefinements\n          .filter(facetRefinement =>\n            trackedFacetValues.includes(facetRefinement)\n          )\n          .map(facetValue =>\n            escapeRuleContext(`ais-${facetName}-${facetValue}`)\n          ),\n      ];\n    },\n    []\n  );\n\n  return ruleContexts;\n}\n\nfunction applyRuleContexts(\n  this: {\n    helper: Helper;\n    initialRuleContexts: string[];\n    trackedFilters: ParamTrackedFilters;\n    transformRuleContexts: ParamTransformRuleContexts;\n  },\n  event: { state: SearchParameters }\n): void {\n  const {\n    helper,\n    initialRuleContexts,\n    trackedFilters,\n    transformRuleContexts,\n  } = this;\n\n  const sharedHelperState = event.state;\n  const previousRuleContexts: string[] = sharedHelperState.ruleContexts || [];\n  const newRuleContexts = getRuleContextsFromTrackedFilters({\n    helper,\n    sharedHelperState,\n    trackedFilters,\n  });\n  const nextRuleContexts = [...initialRuleContexts, ...newRuleContexts];\n\n  warning(\n    nextRuleContexts.length <= 10,\n    `\nThe maximum number of \\`ruleContexts\\` is 10. They have been sliced to that limit.\nConsider using \\`transformRuleContexts\\` to minimize the number of rules sent to Algolia.\n`\n  );\n\n  const ruleContexts = transformRuleContexts(nextRuleContexts).slice(0, 10);\n\n  if (!isEqual(previousRuleContexts, ruleContexts)) {\n    helper.overrideStateWithoutTriggeringChangeEvent({\n      ...sharedHelperState,\n      ruleContexts,\n    });\n  }\n}\n\nexport type QueryRulesWidgetDescription = {\n  $$type: 'ais.queryRules';\n  renderState: QueryRulesRenderState;\n  indexRenderState: {\n    queryRules: WidgetRenderState<\n      QueryRulesRenderState,\n      QueryRulesConnectorParams\n    >;\n  };\n};\n\nexport type QueryRulesConnector = Connector<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n>;\n\nconst connectQueryRules: QueryRulesConnector = function connectQueryRules(\n  render,\n  unmount = noop\n) {\n  checkRendering(render, withUsage());\n\n  return widgetParams => {\n    const {\n      trackedFilters = {} as ParamTrackedFilters,\n      transformRuleContexts = (rules => rules) as ParamTransformRuleContexts,\n      transformItems = (items => items) as ParamTransformItems,\n    } = widgetParams || {};\n\n    Object.keys(trackedFilters).forEach(facetName => {\n      if (typeof trackedFilters[facetName] !== 'function') {\n        throw new Error(\n          withUsage(\n            `'The \"${facetName}\" filter value in the \\`trackedFilters\\` option expects a function.`\n          )\n        );\n      }\n    });\n\n    const hasTrackedFilters = Object.keys(trackedFilters).length > 0;\n\n    // We store the initial rule contexts applied before creating the widget\n    // so that we do not override them with the rules created from `trackedFilters`.\n    let initialRuleContexts: string[] = [];\n    let onHelperChange: (event: { state: SearchParameters }) => void;\n\n    return {\n      $$type: 'ais.queryRules',\n\n      init(initOptions) {\n        const { helper, state, instantSearchInstance } = initOptions;\n\n        initialRuleContexts = state.ruleContexts || [];\n        onHelperChange = applyRuleContexts.bind({\n          helper,\n          initialRuleContexts,\n          trackedFilters,\n          transformRuleContexts,\n        });\n\n        if (hasTrackedFilters) {\n          // We need to apply the `ruleContexts` based on the `trackedFilters`\n          // before the helper changes state in some cases:\n          //   - Some filters are applied on the first load (e.g. using `configure`)\n          //   - The `transformRuleContexts` option sets initial `ruleContexts`.\n          if (\n            hasStateRefinements(state) ||\n            Boolean(widgetParams.transformRuleContexts)\n          ) {\n            onHelperChange({ state });\n          }\n\n          // We track every change in the helper to override its state and add\n          // any `ruleContexts` needed based on the `trackedFilters`.\n          helper.on('change', onHelperChange);\n        }\n\n        render(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        render(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getWidgetRenderState({ results }) {\n        const { userData = [] } = results || {};\n        const items = transformItems(userData);\n\n        return {\n          items,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          queryRules: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ helper, state }) {\n        unmount();\n\n        if (hasTrackedFilters) {\n          helper.removeListener('change', onHelperChange);\n\n          return state.setQueryParameter('ruleContexts', initialRuleContexts);\n        }\n\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectQueryRules;\n","/* global SpeechRecognition SpeechRecognitionEvent */\nimport { CreateVoiceSearchHelper, Status, VoiceListeningState } from './types';\n\nconst createVoiceSearchHelper: CreateVoiceSearchHelper = function createVoiceSearchHelper({\n  searchAsYouSpeak,\n  language,\n  onQueryChange,\n  onStateChange,\n}) {\n  const SpeechRecognitionAPI: new () => SpeechRecognition =\n    (window as any).webkitSpeechRecognition ||\n    (window as any).SpeechRecognition;\n  const getDefaultState = (status: Status): VoiceListeningState => ({\n    status,\n    transcript: '',\n    isSpeechFinal: false,\n    errorCode: undefined,\n  });\n  let state: VoiceListeningState = getDefaultState('initial');\n  let recognition: SpeechRecognition | undefined;\n\n  const isBrowserSupported = (): boolean => Boolean(SpeechRecognitionAPI);\n\n  const isListening = (): boolean =>\n    state.status === 'askingPermission' ||\n    state.status === 'waiting' ||\n    state.status === 'recognizing';\n\n  const setState = (newState: Partial<VoiceListeningState> = {}): void => {\n    state = { ...state, ...newState };\n    onStateChange();\n  };\n\n  const getState = (): VoiceListeningState => state;\n\n  const resetState = (status: Status = 'initial'): void => {\n    setState(getDefaultState(status));\n  };\n\n  const onStart = (): void => {\n    setState({\n      status: 'waiting',\n    });\n  };\n\n  const onError = (event: Event): void => {\n    setState({ status: 'error', errorCode: (event as any).error });\n  };\n\n  const onResult = (event: SpeechRecognitionEvent): void => {\n    setState({\n      status: 'recognizing',\n      transcript:\n        (event.results[0] &&\n          event.results[0][0] &&\n          event.results[0][0].transcript) ||\n        '',\n      isSpeechFinal: event.results[0] && event.results[0].isFinal,\n    });\n    if (searchAsYouSpeak && state.transcript) {\n      onQueryChange(state.transcript);\n    }\n  };\n\n  const onEnd = (): void => {\n    if (!state.errorCode && state.transcript && !searchAsYouSpeak) {\n      onQueryChange(state.transcript);\n    }\n    if (state.status !== 'error') {\n      setState({ status: 'finished' });\n    }\n  };\n\n  const startListening = (): void => {\n    recognition = new SpeechRecognitionAPI();\n    if (!recognition) {\n      return;\n    }\n    resetState('askingPermission');\n    recognition.interimResults = true;\n\n    if (language) {\n      recognition.lang = language;\n    }\n\n    recognition.addEventListener('start', onStart);\n    recognition.addEventListener('error', onError);\n    recognition.addEventListener('result', onResult);\n    recognition.addEventListener('end', onEnd);\n    recognition.start();\n  };\n\n  const dispose = (): void => {\n    if (!recognition) {\n      return;\n    }\n    recognition.stop();\n    recognition.removeEventListener('start', onStart);\n    recognition.removeEventListener('error', onError);\n    recognition.removeEventListener('result', onResult);\n    recognition.removeEventListener('end', onEnd);\n    recognition = undefined;\n  };\n\n  const stopListening = (): void => {\n    dispose();\n    // Because `dispose` removes event listeners, `end` listener is not called.\n    // So we're setting the `status` as `finished` here.\n    // If we don't do it, it will be still `waiting` or `recognizing`.\n    resetState('finished');\n  };\n\n  return {\n    getState,\n    isBrowserSupported,\n    isListening,\n    startListening,\n    stopListening,\n    dispose,\n  };\n};\n\nexport default createVoiceSearchHelper;\n","import { PlainSearchParameters } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport { Connector, WidgetRenderState } from '../../types';\nimport builtInCreateVoiceSearchHelper from '../../lib/voiceSearchHelper';\nimport {\n  CreateVoiceSearchHelper,\n  VoiceListeningState,\n} from '../../lib/voiceSearchHelper/types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'voice-search',\n  connector: true,\n});\n\nexport type VoiceSearchConnectorParams = {\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchRenderState = {\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n};\n\nexport type VoiceSearchWidgetDescription = {\n  $$type: 'ais.voiceSearch';\n  renderState: VoiceSearchRenderState;\n  indexRenderState: {\n    voiceSearch: WidgetRenderState<\n      VoiceSearchRenderState,\n      VoiceSearchConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type VoiceSearchConnector = Connector<\n  VoiceSearchWidgetDescription,\n  VoiceSearchConnectorParams\n>;\n\nconst connectVoiceSearch: VoiceSearchConnector = function connectVoiceSearch(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      searchAsYouSpeak = false,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper = builtInCreateVoiceSearchHelper,\n    } = widgetParams;\n\n    return {\n      $$type: 'ais.voiceSearch',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          voiceSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, instantSearchInstance } = renderOptions;\n        if (!(this as any)._refine) {\n          (this as any)._refine = (query: string): void => {\n            if (query !== helper.state.query) {\n              const queryLanguages = language\n                ? [language.split('-')[0]]\n                : undefined;\n              helper.setQueryParameter('queryLanguages', queryLanguages);\n\n              if (typeof additionalQueryParameters === 'function') {\n                helper.setState(\n                  helper.state.setQueryParameters({\n                    ignorePlurals: true,\n                    removeStopWords: true,\n                    // @ts-ignore (optionalWords only allows array, while string is also valid)\n                    optionalWords: query,\n                    ...additionalQueryParameters({ query }),\n                  })\n                );\n              }\n\n              helper.setQuery(query).search();\n            }\n          };\n        }\n\n        if (!(this as any)._voiceSearchHelper) {\n          (this as any)._voiceSearchHelper = createVoiceSearchHelper({\n            searchAsYouSpeak,\n            language,\n            onQueryChange: query => (this as any)._refine(query),\n            onStateChange: () => {\n              renderFn(\n                {\n                  ...this.getWidgetRenderState(renderOptions),\n                  instantSearchInstance,\n                },\n                false\n              );\n            },\n          });\n        }\n\n        const {\n          isBrowserSupported,\n          isListening,\n          startListening,\n          stopListening,\n          getState,\n        } = (this as any)._voiceSearchHelper;\n\n        return {\n          isBrowserSupported: isBrowserSupported(),\n          isListening: isListening(),\n          toggleListening() {\n            if (!isBrowserSupported()) {\n              return;\n            }\n            if (isListening()) {\n              stopListening();\n            } else {\n              startListening();\n            }\n          },\n          voiceListeningState: getState(),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        (this as any)._voiceSearchHelper.dispose();\n\n        unmountFn();\n\n        let newState = state;\n        if (typeof additionalQueryParameters === 'function') {\n          const additional = additionalQueryParameters({ query: '' });\n          const toReset = additional\n            ? Object.keys(additional).reduce((acc, current) => {\n                acc[current] = undefined;\n                return acc;\n              }, {})\n            : {};\n          newState = state.setQueryParameters({\n            // @ts-ignore (queryLanguages is not yet added to algoliasearch)\n            queryLanguages: undefined,\n            ignorePlurals: undefined,\n            removeStopWords: undefined,\n            optionalWords: undefined,\n            ...toReset,\n          });\n        }\n\n        return newState.setQueryParameter('query', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (!query) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectVoiceSearch;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createConcurrentSafePromise,\n  addQueryID,\n  debounce,\n  addAbsolutePosition,\n  noop,\n  escapeHits,\n} from '../../lib/utils';\nimport {\n  Connector,\n  Hits,\n  Hit,\n  FindAnswersOptions,\n  FindAnswersResponse,\n  WidgetRenderState,\n} from '../../types';\n\ntype IndexWithAnswers = {\n  readonly findAnswers: any;\n};\n\nfunction hasFindAnswersMethod(\n  answersIndex: IndexWithAnswers | any\n): answersIndex is IndexWithAnswers {\n  return typeof (answersIndex as IndexWithAnswers).findAnswers === 'function';\n}\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'answers',\n  connector: true,\n});\n\nexport type AnswersRenderState = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Hits;\n\n  /**\n   * Whether it's still loading the results from the Answers API.\n   */\n  isLoading: boolean;\n};\n\nexport type AnswersConnectorParams = {\n  /**\n   * Attributes to use for predictions.\n   * If empty, we use all `searchableAttributes` to find answers.\n   * All your `attributesForPrediction` must be part of your `searchableAttributes`.\n   */\n  attributesForPrediction?: string[];\n\n  /**\n   * The languages in the query. Currently only supports `en`.\n   */\n  queryLanguages: ['en'];\n\n  /**\n   * Maximum number of answers to retrieve from the Answers Engine.\n   * Cannot be greater than 1000.\n   * @default 1\n   */\n  nbHits?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce render\n   * @default 100\n   */\n  renderDebounceTime?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce search\n   * @default 100\n   */\n  searchDebounceTime?: number;\n\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Extra parameters to pass to findAnswers method.\n   * @default {}\n   */\n  extraParameters?: FindAnswersOptions;\n};\n\nexport type AnswersWidgetDescription = {\n  $$type: 'ais.answers';\n  renderState: AnswersRenderState;\n  indexRenderState: {\n    answers: WidgetRenderState<AnswersRenderState, AnswersConnectorParams>;\n  };\n};\n\nexport type AnswersConnector = Connector<\n  AnswersWidgetDescription,\n  AnswersConnectorParams\n>;\n\nconst connectAnswers: AnswersConnector = function connectAnswers(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const {\n      queryLanguages,\n      attributesForPrediction,\n      nbHits = 1,\n      renderDebounceTime = 100,\n      searchDebounceTime = 100,\n      escapeHTML = true,\n      extraParameters = {},\n    } = widgetParams || {};\n\n    // @ts-ignore checking for the wrong value\n    if (!queryLanguages || queryLanguages.length === 0) {\n      throw new Error(\n        withUsage('The `queryLanguages` expects an array of strings.')\n      );\n    }\n\n    const runConcurrentSafePromise = createConcurrentSafePromise<\n      FindAnswersResponse<Hit>\n    >();\n\n    let lastResult: Partial<FindAnswersResponse<Hit>>;\n    let isLoading = false;\n    const debouncedRender = debounce(renderFn, renderDebounceTime);\n    let debouncedRefine;\n\n    return {\n      $$type: 'ais.answers',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n        const answersIndex = instantSearchInstance.client!.initIndex!(\n          state.index\n        );\n        if (!hasFindAnswersMethod(answersIndex)) {\n          throw new Error(withUsage('`algoliasearch` >= 4.8.0 required.'));\n        }\n        debouncedRefine = debounce(\n          answersIndex.findAnswers,\n          searchDebounceTime\n        );\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const query = renderOptions.state.query;\n        if (!query) {\n          // renders nothing with empty query\n          lastResult = {};\n          isLoading = false;\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n          return;\n        }\n\n        // render the loader\n        lastResult = {};\n        isLoading = true;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        // call /answers API\n        runConcurrentSafePromise(\n          debouncedRefine(query, queryLanguages, {\n            ...extraParameters,\n            nbHits,\n            attributesForPrediction,\n          })\n        ).then(results => {\n          if (!results) {\n            // It's undefined when it's debounced.\n            return;\n          }\n\n          if (escapeHTML && results.hits.length > 0) {\n            results.hits = escapeHits(results.hits);\n          }\n          const initialEscaped = (results.hits as ReturnType<typeof escapeHits>)\n            .__escaped;\n\n          results.hits = addAbsolutePosition(results.hits, 0, nbHits);\n\n          results.hits = addQueryID(results.hits, results.queryID);\n\n          // Make sure the escaped tag stays, even after mapping over the hits.\n          // This prevents the hits from being double-escaped if there are multiple\n          // hits widgets mounted on the page.\n          (results.hits as ReturnType<\n            typeof escapeHits\n          >).__escaped = initialEscaped;\n\n          lastResult = results;\n          isLoading = false;\n          debouncedRender(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        });\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          answers: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          hits: lastResult?.hits || [],\n          isLoading,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state;\n      },\n\n      getWidgetSearchParameters(state) {\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectAnswers;\n","export type MaybePromise<TResolution> =\n  | Readonly<Promise<TResolution>>\n  | Promise<TResolution>\n  | TResolution;\n\n// copied from\n// https://github.com/algolia/autocomplete.js/blob/307a7acc4283e10a19cb7d067f04f1bea79dc56f/packages/autocomplete-core/src/utils/createConcurrentSafePromise.ts#L1:L1\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise<TValue>() {\n  let basePromiseId = -1;\n  let latestResolvedId = -1;\n  let latestResolvedValue: TValue | undefined = undefined;\n\n  return function runConcurrentSafePromise(promise: MaybePromise<TValue>) {\n    const currentPromiseId = ++basePromiseId;\n\n    return Promise.resolve(promise).then(x => {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n\n      return x;\n    });\n  };\n}\n","import { Connector, WidgetRenderState } from '../../types';\nimport { noop } from '../../lib/utils';\n\nexport type RelevantSortConnectorParams = Record<string, unknown>;\n\ntype Refine = (relevancyStrictness: number) => void;\n\nexport type RelevantSortRenderState = {\n  /**\n   * Indicates if it has appliedRelevancyStrictness greater than zero\n   */\n  isRelevantSorted: boolean;\n\n  /**\n   * Indicates if the results come from a virtual replica\n   */\n  isVirtualReplica: boolean;\n\n  /**\n   * Indicates if search state can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the value as relevancyStrictness and trigger a new search\n   */\n  refine: Refine;\n};\n\nexport type RelevantSortWidgetDescription = {\n  $$type: 'ais.relevantSort';\n  renderState: RelevantSortRenderState;\n  indexRenderState: {\n    relevantSort: WidgetRenderState<\n      RelevantSortRenderState,\n      RelevantSortConnectorParams\n    >;\n  };\n  indexUiState: {\n    relevantSort: number;\n  };\n};\n\nexport type RelevantSortConnector = Connector<\n  RelevantSortWidgetDescription,\n  RelevantSortConnectorParams\n>;\n\nconst connectRelevantSort: RelevantSortConnector = function connectRelevantSort(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return widgetParams => {\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.relevantSort',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('relevancyStrictness', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          relevantSort: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (relevancyStrictness: number | undefined) => {\n            helper\n              .setQueryParameter('relevancyStrictness', relevancyStrictness)\n              .search();\n          };\n        }\n\n        const { appliedRelevancyStrictness } = results || {};\n\n        const isVirtualReplica = appliedRelevancyStrictness !== undefined;\n\n        return {\n          isRelevantSorted:\n            typeof appliedRelevancyStrictness !== 'undefined' &&\n            appliedRelevancyStrictness > 0,\n          isVirtualReplica,\n          canRefine: isVirtualReplica,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return state.setQueryParameter(\n          'relevancyStrictness',\n          uiState.relevantSort ?? state.relevancyStrictness\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        return {\n          ...uiState,\n          relevantSort:\n            searchParameters.relevancyStrictness || uiState.relevantSort,\n        };\n      },\n    };\n  };\n};\n\nexport default connectRelevantSort;\n","import { SearchResults } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  getWidgetAttribute,\n  noop,\n} from '../../lib/utils';\nimport { Connector, Widget } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n  connector: true,\n});\n\nexport type DynamicWidgetsRenderState = {\n  attributesToRender: string[];\n};\n\nexport type DynamicWidgetsConnectorParams = {\n  widgets: Widget[];\n  transformItems?(\n    items: string[],\n    metadata: { results: SearchResults }\n  ): string[];\n};\n\nexport type DynamicWidgetsWidgetDescription = {\n  $$type: 'ais.dynamicWidgets';\n  renderState: DynamicWidgetsRenderState;\n  indexRenderState: {\n    dynamicWidgets: DynamicWidgetsRenderState;\n  };\n};\n\nexport type DynamicWidgetsConnector = Connector<\n  DynamicWidgetsWidgetDescription,\n  DynamicWidgetsConnectorParams\n>;\n\nconst connectDynamicWidgets: DynamicWidgetsConnector = function connectDynamicWidgets(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return widgetParams => {\n    const { widgets, transformItems = items => items } = widgetParams;\n\n    if (\n      !widgets ||\n      !Array.isArray(widgets) ||\n      widgets.some(widget => typeof widget !== 'object')\n    ) {\n      throw new Error(\n        withUsage('The `widgets` option expects an array of widgets.')\n      );\n    }\n\n    if (\n      !widgets ||\n      !Array.isArray(widgets) ||\n      widgets.some(widget => typeof widget !== 'object')\n    ) {\n      throw new Error(\n        withUsage('The `widgets` option expects an array of widgets.')\n      );\n    }\n\n    const localWidgets: Map<\n      string,\n      { widget: Widget; isMounted: boolean }\n    > = new Map();\n\n    return {\n      $$type: 'ais.dynamicWidgets',\n      init(initOptions) {\n        widgets.forEach(widget => {\n          const attribute = getWidgetAttribute(widget, initOptions);\n          localWidgets.set(attribute, { widget, isMounted: true });\n        });\n        initOptions.parent!.addWidgets(widgets);\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n      render(renderOptions) {\n        const { parent } = renderOptions;\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        const widgetsToUnmount: Widget[] = [];\n        const widgetsToMount: Widget[] = [];\n\n        localWidgets.forEach(({ widget, isMounted }, attribute) => {\n          const shouldMount =\n            renderState.attributesToRender.indexOf(attribute) > -1;\n\n          if (!isMounted && shouldMount) {\n            widgetsToMount.push(widget);\n            localWidgets.set(attribute, {\n              widget,\n              isMounted: true,\n            });\n          } else if (isMounted && !shouldMount) {\n            widgetsToUnmount.push(widget);\n            localWidgets.set(attribute, {\n              widget,\n              isMounted: false,\n            });\n          }\n        });\n\n        parent!.addWidgets(widgetsToMount);\n        // make sure this only happens after the regular render, otherwise it\n        // happens too quick, since render is \"deferred\" for the next microtask,\n        // so this needs to be a whole task later\n        setTimeout(() => parent!.removeWidgets(widgetsToUnmount), 0);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n      dispose({ parent }) {\n        const toRemove: Widget[] = [];\n        localWidgets.forEach(({ widget, isMounted }) => {\n          if (isMounted) {\n            toRemove.push(widget);\n          }\n        });\n        parent!.removeWidgets(toRemove);\n\n        unmountFn();\n      },\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          dynamicWidgets: this.getWidgetRenderState(renderOptions),\n        };\n      },\n      getWidgetRenderState({ results }) {\n        if (!results) {\n          return { attributesToRender: [], widgetParams };\n        }\n\n        const attributesToRender =\n          results.renderingContent?.facetOrdering?.facet?.order ?? [];\n\n        return {\n          attributesToRender: transformItems(attributesToRender, { results }),\n          widgetParams,\n        };\n      },\n    };\n  };\n};\n\nexport default connectDynamicWidgets;\n","import { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport { createDocumentationMessageGenerator, warning } from '../../lib/utils';\nimport { WidgetFactory, WidgetRenderState } from '../../types';\n\nexport type AnalyticsWidgetParamsPushFunction = (\n  /**\n   * Contains the search parameters, serialized as a query string.\n   */\n  formattedParameters: string,\n\n  /**\n   * Contains the whole search state.\n   */\n  state: SearchParameters,\n\n  /**\n   * The last received results.\n   */\n  results: SearchResults\n) => void;\n\nexport type AnalyticsWidgetParams = {\n  /**\n   * A function that is called every time the query or refinements changes. You\n   * need to add the logic to push the data to your analytics platform.\n   */\n  pushFunction: AnalyticsWidgetParamsPushFunction;\n\n  /**\n   * The number of milliseconds between the last search keystroke and calling `pushFunction`.\n   *\n   * @default 3000\n   */\n  delay?: number;\n\n  /**\n   * Triggers `pushFunction` after click on page or redirecting the page. This is useful if\n   * you want the pushFunction to be called for the last actions before the user leaves the\n   * current page, even if the delay wasn’t reached.\n   *\n   * @default false\n   */\n  triggerOnUIInteraction?: boolean;\n\n  /**\n   * Triggers `pushFunction` when InstantSearch is initialized. This means\n   * the `pushFunction` might be called even though the user didn’t perfom\n   * any search-related action.\n   *\n   * @default true\n   */\n  pushInitialSearch?: boolean;\n\n  /**\n   * Triggers `pushFunction` when the page changes, either through the UI or programmatically.\n   *\n   * @default false\n   */\n  pushPagination?: boolean;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'analytics' });\n\nexport type AnalyticsWidgetDescription = {\n  $$type: 'ais.analytics';\n  $$widgetType: 'ais.analytics';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    analytics: WidgetRenderState<\n      Record<string, unknown>,\n      AnalyticsWidgetParams\n    >;\n  };\n};\n\nexport type AnalyticsWidget = WidgetFactory<\n  AnalyticsWidgetDescription,\n  AnalyticsWidgetParams,\n  AnalyticsWidgetParams\n>;\n\n// @major this widget will be removed from the next major version.\nconst analytics: AnalyticsWidget = function analytics(widgetParams) {\n  const {\n    pushFunction,\n    delay = 3000,\n    triggerOnUIInteraction = false,\n    pushInitialSearch = true,\n    pushPagination = false,\n  } = widgetParams || {};\n\n  if (!pushFunction) {\n    throw new Error(withUsage('The `pushFunction` option is required.'));\n  }\n\n  warning(\n    false,\n    `\\`analytics\\` widget has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor the migration, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#analytics-widget`\n  );\n\n  type AnalyticsState = {\n    results: SearchResults;\n    state: SearchParameters;\n  } | null;\n\n  let cachedState: AnalyticsState = null;\n\n  type RefinementParameters = {\n    [key: string]: string[];\n  };\n\n  const serializeRefinements = function(\n    parameters: RefinementParameters\n  ): string {\n    const refinements: string[] = [];\n\n    for (const parameter in parameters) {\n      if (parameters.hasOwnProperty(parameter)) {\n        const values = parameters[parameter].join('+');\n\n        refinements.push(\n          `${encodeURIComponent(parameter)}=${encodeURIComponent(\n            parameter\n          )}_${encodeURIComponent(values)}`\n        );\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  const serializeNumericRefinements = function(\n    numericRefinements: SearchParameters['numericRefinements']\n  ): string {\n    const refinements: string[] = [];\n\n    for (const attribute in numericRefinements) {\n      if (numericRefinements.hasOwnProperty(attribute)) {\n        const filter = numericRefinements[attribute];\n\n        if (filter.hasOwnProperty('>=') && filter.hasOwnProperty('<=')) {\n          if (\n            filter['>='] &&\n            filter['>='][0] === filter['<='] &&\n            filter['<='][0]\n          ) {\n            refinements.push(`${attribute}=${attribute}_${filter['>=']}`);\n          } else {\n            refinements.push(\n              `${attribute}=${attribute}_${filter['>=']}to${filter['<=']}`\n            );\n          }\n        } else if (filter.hasOwnProperty('>=')) {\n          refinements.push(`${attribute}=${attribute}_from${filter['>=']}`);\n        } else if (filter.hasOwnProperty('<=')) {\n          refinements.push(`${attribute}=${attribute}_to${filter['<=']}`);\n        } else if (filter.hasOwnProperty('=')) {\n          const equals: string[] = [];\n\n          for (const equal in filter['=']) {\n            // eslint-disable-next-line max-depth\n            if (filter['='].hasOwnProperty(equal)) {\n              equals.push(filter['='][equal]);\n            }\n          }\n\n          refinements.push(`${attribute}=${attribute}_${equals.join('-')}`);\n        }\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  let lastSentData = '';\n\n  const sendAnalytics = function(analyticsState: AnalyticsState | null): void {\n    if (analyticsState === null) {\n      return;\n    }\n\n    const serializedParams: string[] = [];\n\n    const serializedRefinements = serializeRefinements({\n      ...analyticsState.state.disjunctiveFacetsRefinements,\n      ...analyticsState.state.facetsRefinements,\n      ...analyticsState.state.hierarchicalFacetsRefinements,\n    });\n\n    const serializedNumericRefinements = serializeNumericRefinements(\n      analyticsState.state.numericRefinements\n    );\n\n    if (serializedRefinements !== '') {\n      serializedParams.push(serializedRefinements);\n    }\n\n    if (serializedNumericRefinements !== '') {\n      serializedParams.push(serializedNumericRefinements);\n    }\n\n    const stringifiedParams = serializedParams.join('&');\n\n    let dataToSend = `Query: ${analyticsState.state.query ||\n      ''}, ${stringifiedParams}`;\n    if (pushPagination === true) {\n      dataToSend += `, Page: ${analyticsState.state.page || 0}`;\n    }\n\n    if (lastSentData !== dataToSend) {\n      pushFunction(\n        stringifiedParams,\n        analyticsState.state,\n        analyticsState.results\n      );\n\n      lastSentData = dataToSend;\n    }\n  };\n\n  let pushTimeout: number;\n  let isInitialSearch = true;\n\n  if (pushInitialSearch === true) {\n    isInitialSearch = false;\n  }\n\n  const onClick = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  const onUnload = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  return {\n    $$type: 'ais.analytics',\n    $$widgetType: 'ais.analytics',\n\n    init() {\n      if (triggerOnUIInteraction === true) {\n        document.addEventListener('click', onClick);\n        window.addEventListener('beforeunload', onUnload);\n      }\n    },\n\n    render({ results, state }) {\n      if (isInitialSearch === true) {\n        isInitialSearch = false;\n\n        return;\n      }\n\n      cachedState = { results, state };\n\n      if (pushTimeout) {\n        clearTimeout(pushTimeout);\n      }\n\n      pushTimeout = window.setTimeout(() => sendAnalytics(cachedState), delay);\n    },\n\n    dispose() {\n      if (triggerOnUIInteraction === true) {\n        document.removeEventListener('click', onClick);\n        window.removeEventListener('beforeunload', onUnload);\n      }\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        analytics: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default analytics;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/** @jsx h */\n\nimport { h, Component } from 'preact';\nimport { renderTemplate, isEqual } from '../../lib/utils';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\nimport { Templates } from '../../types';\n\nconst defaultProps = {\n  data: {},\n  rootTagName: 'div',\n  useCustomCompileOptions: {},\n  templates: {},\n  templatesConfig: {},\n};\n\ntype TemplateProps = {\n  data?: Record<string, any>;\n  rootProps?: Record<string, any>;\n  rootTagName?: keyof h.JSX.IntrinsicElements;\n  templateKey: string;\n  bindEvent?: (...args: any[]) => string;\n} & PreparedTemplateProps<Templates> &\n  Readonly<typeof defaultProps>;\n\n// @TODO: Template should be a generic and receive TData to pass to Templates (to avoid TTemplateData to be set as `any`)\nclass Template extends Component<TemplateProps> {\n  public static readonly defaultProps = defaultProps;\n\n  public shouldComponentUpdate(nextProps: TemplateProps) {\n    return (\n      !isEqual(this.props.data, nextProps.data) ||\n      this.props.templateKey !== nextProps.templateKey ||\n      !isEqual(this.props.rootProps, nextProps.rootProps)\n    );\n  }\n\n  public render() {\n    const RootTagName = this.props.rootTagName;\n\n    const useCustomCompileOptions = this.props.useCustomCompileOptions[\n      this.props.templateKey\n    ];\n    const compileOptions = useCustomCompileOptions\n      ? this.props.templatesConfig.compileOptions\n      : {};\n\n    const content = renderTemplate({\n      templates: this.props.templates,\n      templateKey: this.props.templateKey,\n      compileOptions,\n      helpers: this.props.templatesConfig.helpers,\n      data: this.props.data,\n      bindEvent: this.props.bindEvent,\n    });\n\n    if (content === null) {\n      // Adds a noscript to the DOM but virtual DOM is null\n      // See http://facebook.github.io/react/docs/component-specs.html#render\n      return null;\n    }\n\n    return (\n      <RootTagName\n        {...this.props.rootProps}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    );\n  }\n}\n\nexport default Template;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\nimport Template from '../Template/Template';\nimport { BreadcrumbCSSClasses } from '../../widgets/breadcrumb/breadcrumb';\nimport { ComponentCSSClasses } from '../../types';\n\ntype BreadcrumbItem = {\n  value: string;\n  label: string;\n};\n\nexport type BreadcrumbComponentCSSClasses = ComponentCSSClasses<\n  BreadcrumbCSSClasses\n>;\n\ntype BreadcrumbTemplates = {\n  home: string;\n  separator: string;\n};\n\nexport type BreadcrumbProps = {\n  items: BreadcrumbItem[];\n  cssClasses: BreadcrumbComponentCSSClasses;\n  templateProps: {\n    templates: BreadcrumbTemplates;\n  };\n  createURL(value: string | undefined): string;\n  refine(value: string | undefined): void;\n  canRefine?: boolean;\n};\n\nconst Breadcrumb = ({\n  items,\n  cssClasses,\n  templateProps,\n  createURL,\n  refine,\n}: BreadcrumbProps) => (\n  <div\n    className={cx(cssClasses.root, {\n      [cssClasses.noRefinementRoot]: items.length === 0,\n    })}\n  >\n    <ul className={cssClasses.list}>\n      <li\n        className={cx(cssClasses.item, {\n          [cssClasses.selectedItem]: items.length === 0,\n        })}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"home\"\n          rootTagName=\"a\"\n          rootProps={{\n            className: cssClasses.link,\n            href: createURL(undefined),\n            onClick: (event: MouseEvent) => {\n              event.preventDefault();\n              refine(undefined);\n            },\n          }}\n        />\n      </li>\n\n      {items.map((item, idx) => {\n        const isLast = idx === items.length - 1;\n\n        return (\n          <li\n            key={item.label + idx}\n            className={cx(cssClasses.item, {\n              [cssClasses.selectedItem]: isLast,\n            })}\n          >\n            <Template\n              {...templateProps}\n              templateKey=\"separator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.separator,\n                'aria-hidden': true,\n              }}\n            />\n            {isLast ? (\n              item.label\n            ) : (\n              <a\n                className={cssClasses.link}\n                href={createURL(item.value)}\n                onClick={event => {\n                  event.preventDefault();\n                  refine(item.value);\n                }}\n              >\n                {item.label}\n              </a>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </div>\n);\n\nexport default Breadcrumb;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\nimport Template from '../Template/Template';\nimport { ClearRefinementsRenderState } from '../../connectors/clear-refinements/connectClearRefinements';\nimport {\n  ClearRefinementsCSSClasses,\n  ClearRefinementsTemplates,\n} from '../../widgets/clear-refinements/clear-refinements';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type ClearRefinementsComponentCSSClasses = ComponentCSSClasses<\n  ClearRefinementsCSSClasses\n>;\n\nexport type ClearRefinementsProps = {\n  refine: ClearRefinementsRenderState['refine'];\n  cssClasses: ClearRefinementsComponentCSSClasses;\n  hasRefinements: ClearRefinementsRenderState['hasRefinements'];\n  templateProps: {\n    [key: string]: any;\n    templates: ClearRefinementsTemplates;\n  };\n};\n\nconst ClearRefinements = ({\n  hasRefinements,\n  refine,\n  cssClasses,\n  templateProps,\n}: ClearRefinementsProps) => (\n  <div className={cssClasses.root}>\n    <Template\n      {...templateProps}\n      templateKey=\"resetLabel\"\n      rootTagName=\"button\"\n      rootProps={{\n        className: cx(cssClasses.button, {\n          [cssClasses.disabledButton]: !hasRefinements,\n        }),\n        onClick: refine,\n        disabled: !hasRefinements,\n      }}\n      data={{ hasRefinements }}\n    />\n  </div>\n);\n\nexport default ClearRefinements;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { isSpecialClick, capitalize } from '../../lib/utils';\nimport {\n  CurrentRefinementsConnectorParamsItem,\n  CurrentRefinementsConnectorParamsRefinement,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport { CurrentRefinementsCSSClasses } from '../../widgets/current-refinements/current-refinements';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type CurrentRefinementsComponentCSSClasses = ComponentCSSClasses<\n  CurrentRefinementsCSSClasses\n>;\n\nexport type CurrentRefinementsProps = {\n  items: CurrentRefinementsConnectorParamsItem[];\n  cssClasses: CurrentRefinementsComponentCSSClasses;\n};\n\nconst createItemKey = ({\n  attribute,\n  value,\n  type,\n  operator,\n}: CurrentRefinementsConnectorParamsRefinement): string =>\n  [attribute, type, value, operator]\n    .map(key => key)\n    .filter(Boolean)\n    .join(':');\n\nconst handleClick = (callback: () => void) => (event: any) => {\n  if (isSpecialClick(event)) {\n    return;\n  }\n\n  event.preventDefault();\n  callback();\n};\n\nconst CurrentRefinements = ({ items, cssClasses }: CurrentRefinementsProps) => (\n  <div className={cssClasses.root}>\n    <ul className={cssClasses.list}>\n      {items.map((item, index) => (\n        <li\n          key={`${item.indexName}-${item.attribute}-${index}`}\n          className={cssClasses.item}\n        >\n          <span className={cssClasses.label}>{capitalize(item.label)}:</span>\n\n          {item.refinements.map(refinement => (\n            <span\n              key={createItemKey(refinement)}\n              className={cssClasses.category}\n            >\n              <span className={cssClasses.categoryLabel}>\n                {refinement.attribute === 'query' ? (\n                  <q>{refinement.label}</q>\n                ) : (\n                  refinement.label\n                )}\n              </span>\n\n              <button\n                className={cssClasses.delete}\n                onClick={handleClick(item.refine.bind(null, refinement))}\n              >\n                ✕\n              </button>\n            </span>\n          ))}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default CurrentRefinements;\n","function capitalize(text: string): string {\n  return (\n    text\n      .toString()\n      .charAt(0)\n      .toUpperCase() + text.toString().slice(1)\n  );\n}\n\nexport default capitalize;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport CurrentRefinements from '../../components/CurrentRefinements/CurrentRefinements';\nimport connectCurrentRefinements, {\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsWidgetDescription,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { WidgetFactory } from '../../types';\n\nexport type CurrentRefinementsCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list?: string | string[];\n\n  /**\n   * CSS class to add to the each item element.\n   */\n  item?: string | string[];\n\n  /**\n   * CSS class to add to the label element.\n   */\n  label?: string | string[];\n\n  /**\n   * CSS class to add to the category element.\n   */\n  category?: string | string[];\n\n  /**\n   * CSS class to add to the categoryLabel element.\n   */\n  categoryLabel?: string | string[];\n\n  /**\n   * CSS class to add to the delete element.\n   */\n  delete?: string | string[];\n};\n\nexport type CurrentRefinementsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: CurrentRefinementsCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n});\nconst suit = component('CurrentRefinements');\n\nconst renderer = ({ items, widgetParams }, isFirstRender) => {\n  if (isFirstRender) {\n    return;\n  }\n\n  const { container, cssClasses } = widgetParams;\n\n  render(\n    <CurrentRefinements cssClasses={cssClasses} items={items} />,\n    container\n  );\n};\n\nexport type CurrentRefinementsWidget = WidgetFactory<\n  CurrentRefinementsWidgetDescription & {\n    $$widgetType: 'ais.currentRefinements';\n  },\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsWidgetParams\n>;\n\nconst currentRefinements: CurrentRefinementsWidget = function currentRefinements(\n  widgetParams\n) {\n  const {\n    container,\n    includedAttributes,\n    excludedAttributes,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    category: cx(suit({ descendantName: 'category' }), userCssClasses.category),\n    categoryLabel: cx(\n      suit({ descendantName: 'categoryLabel' }),\n      userCssClasses.categoryLabel\n    ),\n    delete: cx(suit({ descendantName: 'delete' }), userCssClasses.delete),\n  };\n\n  const makeWidget = connectCurrentRefinements<CurrentRefinementsWidgetParams>(\n    renderer,\n    () => render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      container: containerNode,\n      cssClasses,\n      includedAttributes,\n      excludedAttributes,\n      transformItems,\n    }),\n    $$widgetType: 'ais.currentRefinements',\n  };\n};\n\nexport default currentRefinements;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\nimport Template from '../Template/Template';\nimport {\n  AnswersCSSClasses,\n  AnswersTemplates,\n} from '../../widgets/answers/answers';\nimport { ComponentCSSClasses, Hits } from '../../types';\n\nexport type AnswerComponentCSSClasses = ComponentCSSClasses<AnswersCSSClasses>;\n\nexport type AnswersProps = {\n  hits: Hits;\n  isLoading: boolean;\n  cssClasses: AnswerComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: AnswersTemplates;\n  };\n};\n\nconst Answers = ({\n  hits,\n  isLoading,\n  cssClasses,\n  templateProps,\n}: AnswersProps) => (\n  <div\n    className={cx(cssClasses.root, {\n      [cssClasses.emptyRoot]: hits.length === 0,\n    })}\n  >\n    <Template\n      {...templateProps}\n      templateKey=\"header\"\n      rootProps={{ className: cssClasses.header }}\n      data={{\n        hits,\n        isLoading,\n      }}\n    />\n    {isLoading ? (\n      <Template\n        {...templateProps}\n        templateKey=\"loader\"\n        rootProps={{ className: cssClasses.loader }}\n      />\n    ) : (\n      <ul className={cssClasses.list}>\n        {hits.map((hit, position) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: position,\n            }}\n          />\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\nexport default Answers;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport PropTypes from 'prop-types';\n\nconst GeoSearchButton = ({ className, disabled, onClick, children }) => (\n  <button className={className} onClick={onClick} disabled={disabled}>\n    {children}\n  </button>\n);\n\nGeoSearchButton.propTypes = {\n  className: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n};\n\nGeoSearchButton.defaultProps = {\n  disabled: false,\n};\n\nexport default GeoSearchButton;\n","export default {\n  home: 'Home',\n  separator: '>',\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\nimport connectBreadcrumb, {\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams,\n} from '../../connectors/breadcrumb/connectBreadcrumb';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  prepareTemplateProps,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { WidgetFactory, Template } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'breadcrumb' });\nconst suit = component('Breadcrumb');\n\nconst renderer = ({ containerNode, cssClasses, renderState, templates }) => (\n  { canRefine, createURL, instantSearchInstance, items, refine },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  render(\n    <Breadcrumb\n      canRefine={canRefine}\n      cssClasses={cssClasses}\n      createURL={createURL}\n      items={items}\n      refine={refine}\n      templateProps={renderState.templateProps}\n    />,\n    containerNode\n  );\n};\n\nexport type BreadcrumbCSSClasses = {\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot?: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list?: string | string[];\n\n  /**\n   * CSS class to add to the items of the list. The items contains the link and the separator.\n   */\n  item?: string | string[];\n\n  /**\n   * CSS class to add to the selected item in the list: the last one or the home if there are no refinements.\n   */\n  selectedItem?: string | string[];\n\n  /**\n   * CSS class to add to the separator.\n   */\n  separator?: string | string[];\n\n  /**\n   * CSS class to add to the links in the items.\n   */\n  link?: string | string[];\n};\n\nexport type BreadcrumbTemplates = {\n  /**\n   * Label of the breadcrumb's first element.\n   */\n  home?: Template;\n\n  /**\n   * Symbol used to separate the elements of the breadcrumb.\n   */\n  separator?: Template;\n};\n\nexport type BreadcrumbWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: BreadcrumbTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: BreadcrumbCSSClasses;\n};\n\nexport type BreadcrumbWidget = WidgetFactory<\n  BreadcrumbWidgetDescription & { $$widgetType: 'ais.breadcrumb' },\n  BreadcrumbConnectorParams,\n  BreadcrumbWidgetParams\n>;\n\nconst breadcrumb: BreadcrumbWidget = function breadcrumb(widgetParams) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    transformItems,\n    templates = defaultTemplates,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectBreadcrumb(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attributes, separator, rootPath, transformItems }),\n    $$widgetType: 'ais.breadcrumb',\n  };\n};\n\nexport default breadcrumb;\n","export default {\n  resetLabel: 'Clear refinements',\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport ClearRefinements from '../../components/ClearRefinements/ClearRefinements';\nimport cx from 'classnames';\nimport connectClearRefinements, {\n  ClearRefinementsConnectorParams,\n  ClearRefinementsWidgetDescription,\n} from '../../connectors/clear-refinements/connectClearRefinements';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  prepareTemplateProps,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { WidgetFactory, Template } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n});\nconst suit = component('ClearRefinements');\n\nconst renderer = ({ containerNode, cssClasses, renderState, templates }) => (\n  { refine, hasRefinements, instantSearchInstance },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  render(\n    <ClearRefinements\n      refine={refine}\n      cssClasses={cssClasses}\n      hasRefinements={hasRefinements}\n      templateProps={renderState.templateProps}\n    />,\n    containerNode\n  );\n};\n\nexport type ClearRefinementsCSSClasses = {\n  /**\n   * CSS class to add to the wrapper element.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the button of the widget.\n   */\n  button?: string | string[];\n\n  /**\n   * CSS class to add to the button when there are no refinements.\n   */\n  disabledButton?: string | string[];\n};\n\nexport type ClearRefinementsTemplates = {\n  /**\n   * Template for the content of the button\n   */\n  resetLabel?: Template;\n};\n\nexport type ClearRefinementsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ClearRefinementsTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ClearRefinementsCSSClasses;\n};\n\nexport type ClearRefinementsWidget = WidgetFactory<\n  ClearRefinementsWidgetDescription & { $$widgetType: 'ais.clearRefinements' },\n  ClearRefinementsConnectorParams,\n  ClearRefinementsWidgetParams\n>;\n\nconst clearRefinements: ClearRefinementsWidget = widgetParams => {\n  const {\n    container,\n    templates = defaultTemplates,\n    includedAttributes,\n    excludedAttributes,\n    transformItems,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    disabledButton: cx(\n      suit({ descendantName: 'button', modifierName: 'disabled' }),\n      userCssClasses.disabledButton\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectClearRefinements(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      includedAttributes,\n      excludedAttributes,\n      transformItems,\n    }),\n    $$widgetType: 'ais.clearRefinements',\n  };\n};\n\nexport default clearRefinements;\n","export default {\n  header: '',\n  loader: '',\n  item: item => JSON.stringify(item),\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport { WidgetFactory, Template, Hit, Renderer } from '../../types';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  prepareTemplateProps,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport Answers from '../../components/Answers/Answers';\nimport connectAnswers, {\n  AnswersRenderState,\n  AnswersConnectorParams,\n  AnswersWidgetDescription,\n} from '../../connectors/answers/connectAnswers';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'answers' });\nconst suit = component('Answers');\n\nconst renderer = ({\n  renderState,\n  cssClasses,\n  containerNode,\n  templates,\n}): Renderer<AnswersRenderState, Partial<AnswersWidgetParams>> => (\n  { hits, isLoading, instantSearchInstance },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  render(\n    <Answers\n      cssClasses={cssClasses}\n      hits={hits}\n      isLoading={isLoading}\n      templateProps={renderState.templateProps}\n    />,\n    containerNode\n  );\n};\n\nexport type AnswersTemplates = {\n  /**\n   * Template to use for the header. This template will receive an object containing `hits` and `isLoading`.\n   */\n  header: Template<{\n    hits: Hit[];\n    isLoading: boolean;\n  }>;\n\n  /**\n   * Template to use for the loader.\n   */\n  loader: Template;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   */\n  item: Template<Hit>;\n};\n\nexport type AnswersCSSClasses = {\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot?: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header?: string | string[];\n\n  /**\n   * CSS classes to add to the loader.\n   */\n  loader?: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list?: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item?: string | string[];\n};\n\nexport type AnswersWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: Partial<AnswersTemplates>;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: AnswersCSSClasses;\n};\n\nexport type AnswersWidget = WidgetFactory<\n  AnswersWidgetDescription & { $$widgetType: 'ais.answers' },\n  AnswersConnectorParams,\n  AnswersWidgetParams\n>;\n\nconst answersWidget: AnswersWidget = widgetParams => {\n  const {\n    container,\n    attributesForPrediction,\n    queryLanguages,\n    nbHits,\n    searchDebounceTime,\n    renderDebounceTime,\n    escapeHTML,\n    extraParameters,\n    templates = defaultTemplates,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    loader: cx(suit({ descendantName: 'loader' }), userCssClasses.loader),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectAnswers(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributesForPrediction,\n      queryLanguages,\n      nbHits,\n      searchDebounceTime,\n      renderDebounceTime,\n      escapeHTML,\n      extraParameters,\n    }),\n    $$widgetType: 'ais.answers',\n  };\n};\n\nexport default answersWidget;\n","import connectDynamicWidgets, {\n  DynamicWidgetsConnectorParams,\n  DynamicWidgetsWidgetDescription,\n} from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport { component } from '../../lib/suit';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getWidgetAttribute,\n} from '../../lib/utils';\nimport { Widget, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n});\nconst suit = component('DynamicWidgets');\n\nexport type DynamicWidgetsWidgetParams = {\n  container: HTMLElement | string;\n  widgets: Array<(container: HTMLElement) => Widget>;\n};\n\nexport type DynamicWidgets = WidgetFactory<\n  DynamicWidgetsWidgetDescription & { $$widgetType: 'ais.dynamicWidgets' },\n  Omit<DynamicWidgetsConnectorParams, 'widgets'>,\n  DynamicWidgetsWidgetParams\n>;\n\nconst dynamicWidgets: DynamicWidgets = function dynamicWidgets(widgetParams) {\n  const { container: containerSelector, transformItems, widgets } =\n    widgetParams || {};\n\n  if (!containerSelector) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (\n    !widgets ||\n    !Array.isArray(widgets) ||\n    widgets.some(widget => typeof widget !== 'function')\n  ) {\n    throw new Error(\n      withUsage('The `widgets` option expects an array of callbacks.')\n    );\n  }\n\n  const userContainer = getContainerNode(containerSelector);\n  const rootContainer = document.createElement('div');\n  rootContainer.className = suit();\n\n  const containers = new Map<string, HTMLElement>();\n  const connectorWidgets: Widget[] = [];\n\n  const makeWidget = connectDynamicWidgets(\n    ({ attributesToRender }, isFirstRender) => {\n      if (isFirstRender) {\n        userContainer.appendChild(rootContainer);\n      }\n\n      attributesToRender.forEach(attribute => {\n        if (!containers.has(attribute)) {\n          return;\n        }\n        const container = containers.get(attribute)!;\n        rootContainer.appendChild(container);\n      });\n    },\n    () => {\n      userContainer.removeChild(rootContainer);\n    }\n  );\n\n  const widget = makeWidget({\n    transformItems,\n    widgets: connectorWidgets,\n  });\n\n  return {\n    ...widget,\n    init(initOptions) {\n      widgets.forEach(cb => {\n        const container = document.createElement('div');\n        container.className = suit({ descendantName: 'widget' });\n        rootContainer.appendChild(container);\n\n        const childWidget = cb(container);\n        const attribute = getWidgetAttribute(childWidget, initOptions);\n\n        containers.set(attribute, container);\n        connectorWidgets.push(childWidget);\n      });\n\n      widget.init!(initOptions);\n    },\n    $$widgetType: 'ais.dynamicWidgets',\n  };\n};\nexport default dynamicWidgets;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport PropTypes from 'prop-types';\n\nconst GeoSearchToggle = ({\n  classNameLabel,\n  classNameInput,\n  checked,\n  onToggle,\n  children,\n}) => (\n  <label className={classNameLabel}>\n    <input\n      className={classNameInput}\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onToggle}\n    />\n    {children}\n  </label>\n);\n\nGeoSearchToggle.propTypes = {\n  classNameLabel: PropTypes.string.isRequired,\n  classNameInput: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default GeoSearchToggle;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Template from '../Template/Template';\nimport GeoSearchButton from './GeoSearchButton';\nimport GeoSearchToggle from './GeoSearchToggle';\n\nconst GeoSearchControls = ({\n  cssClasses,\n  enableRefine,\n  enableRefineControl,\n  enableClearMapRefinement,\n  isRefineOnMapMove,\n  isRefinedWithMap,\n  hasMapMoveSinceLastRefine,\n  onRefineToggle,\n  onRefineClick,\n  onClearClick,\n  templateProps,\n}) =>\n  enableRefine && (\n    <div>\n      {enableRefineControl && (\n        <div className={cssClasses.control}>\n          {isRefineOnMapMove || !hasMapMoveSinceLastRefine ? (\n            <GeoSearchToggle\n              classNameLabel={cx(cssClasses.label, {\n                [cssClasses.selectedLabel]: isRefineOnMapMove,\n              })}\n              classNameInput={cssClasses.input}\n              checked={isRefineOnMapMove}\n              onToggle={onRefineToggle}\n            >\n              <Template\n                {...templateProps}\n                templateKey=\"toggle\"\n                rootTagName=\"span\"\n              />\n            </GeoSearchToggle>\n          ) : (\n            <GeoSearchButton\n              className={cssClasses.redo}\n              disabled={!hasMapMoveSinceLastRefine}\n              onClick={onRefineClick}\n            >\n              <Template\n                {...templateProps}\n                templateKey=\"redo\"\n                rootTagName=\"span\"\n              />\n            </GeoSearchButton>\n          )}\n        </div>\n      )}\n\n      {!enableRefineControl && !isRefineOnMapMove && (\n        <div className={cssClasses.control}>\n          <GeoSearchButton\n            className={cx(cssClasses.redo, {\n              [cssClasses.disabledRedo]: !hasMapMoveSinceLastRefine,\n            })}\n            disabled={!hasMapMoveSinceLastRefine}\n            onClick={onRefineClick}\n          >\n            <Template\n              {...templateProps}\n              templateKey=\"redo\"\n              rootTagName=\"span\"\n            />\n          </GeoSearchButton>\n        </div>\n      )}\n\n      {enableClearMapRefinement && isRefinedWithMap && (\n        <GeoSearchButton className={cssClasses.reset} onClick={onClearClick}>\n          <Template {...templateProps} templateKey=\"reset\" rootTagName=\"span\" />\n        </GeoSearchButton>\n      )}\n    </div>\n  );\n\nconst CSSClassesPropTypes = PropTypes.shape({\n  control: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selectedLabel: PropTypes.string.isRequired,\n  input: PropTypes.string.isRequired,\n  redo: PropTypes.string.isRequired,\n  disabledRedo: PropTypes.string.isRequired,\n  reset: PropTypes.string.isRequired,\n});\n\nGeoSearchControls.propTypes = {\n  cssClasses: CSSClassesPropTypes.isRequired,\n  enableRefine: PropTypes.bool.isRequired,\n  enableRefineControl: PropTypes.bool.isRequired,\n  enableClearMapRefinement: PropTypes.bool.isRequired,\n  isRefineOnMapMove: PropTypes.bool.isRequired,\n  isRefinedWithMap: PropTypes.bool.isRequired,\n  hasMapMoveSinceLastRefine: PropTypes.bool.isRequired,\n  onRefineToggle: PropTypes.func.isRequired,\n  onRefineClick: PropTypes.func.isRequired,\n  onClearClick: PropTypes.func.isRequired,\n  templateProps: PropTypes.object.isRequired,\n};\n\nexport default GeoSearchControls;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { prepareTemplateProps } from '../../lib/utils';\nimport GeoSearchControls from '../../components/GeoSearchControls/GeoSearchControls';\n\nconst refineWithMap = ({ refine, mapInstance }) =>\n  refine({\n    northEast: mapInstance\n      .getBounds()\n      .getNorthEast()\n      .toJSON(),\n    southWest: mapInstance\n      .getBounds()\n      .getSouthWest()\n      .toJSON(),\n  });\n\nconst collectMarkersForNextRender = (markers, nextIds) =>\n  markers.reduce(\n    ([update, exit], marker) => {\n      const persist = nextIds.includes(marker.__id);\n\n      return persist\n        ? [update.concat(marker), exit]\n        : [update, exit.concat(marker)];\n    },\n    [[], []]\n  );\n\nconst createBoundingBoxFromMarkers = (google, markers) => {\n  const latLngBounds = markers.reduce(\n    (acc, marker) => acc.extend(marker.getPosition()),\n    new google.maps.LatLngBounds()\n  );\n\n  return {\n    northEast: latLngBounds.getNorthEast().toJSON(),\n    southWest: latLngBounds.getSouthWest().toJSON(),\n  };\n};\n\nconst lockUserInteraction = (renderState, functionThatAltersTheMapPosition) => {\n  renderState.isUserInteraction = false;\n  functionThatAltersTheMapPosition();\n  renderState.isUserInteraction = true;\n};\n\nconst renderer = (\n  {\n    items,\n    position,\n    currentRefinement,\n    refine,\n    clearMapRefinement,\n    toggleRefineOnMapMove,\n    isRefineOnMapMove,\n    setMapMoveSinceLastRefine,\n    hasMapMoveSinceLastRefine,\n    isRefinedWithMap,\n    widgetParams,\n    instantSearchInstance,\n  },\n  isFirstRendering\n) => {\n  const {\n    container,\n    googleReference,\n    cssClasses,\n    templates,\n    initialZoom,\n    initialPosition,\n    enableRefine,\n    enableClearMapRefinement,\n    enableRefineControl,\n    mapOptions,\n    createMarker,\n    markerOptions,\n    renderState,\n  } = widgetParams;\n\n  if (isFirstRendering) {\n    renderState.isUserInteraction = true;\n    renderState.isPendingRefine = false;\n    renderState.markers = [];\n\n    const rootElement = document.createElement('div');\n    rootElement.className = cssClasses.root;\n    container.appendChild(rootElement);\n\n    const mapElement = document.createElement('div');\n    mapElement.className = cssClasses.map;\n    rootElement.appendChild(mapElement);\n\n    const treeElement = document.createElement('div');\n    treeElement.className = cssClasses.tree;\n    rootElement.appendChild(treeElement);\n\n    renderState.mapInstance = new googleReference.maps.Map(mapElement, {\n      mapTypeControl: false,\n      fullscreenControl: false,\n      streetViewControl: false,\n      clickableIcons: false,\n      zoomControlOptions: {\n        position: googleReference.maps.ControlPosition.LEFT_TOP,\n      },\n      ...mapOptions,\n    });\n\n    const setupListenersWhenMapIsReady = () => {\n      const onChange = () => {\n        if (renderState.isUserInteraction && enableRefine) {\n          setMapMoveSinceLastRefine();\n\n          if (isRefineOnMapMove()) {\n            renderState.isPendingRefine = true;\n          }\n        }\n      };\n\n      renderState.mapInstance.addListener('center_changed', onChange);\n      renderState.mapInstance.addListener('zoom_changed', onChange);\n      renderState.mapInstance.addListener('dragstart', onChange);\n\n      renderState.mapInstance.addListener('idle', () => {\n        if (renderState.isUserInteraction && renderState.isPendingRefine) {\n          renderState.isPendingRefine = false;\n\n          refineWithMap({\n            mapInstance: renderState.mapInstance,\n            refine,\n          });\n        }\n      });\n    };\n\n    googleReference.maps.event.addListenerOnce(\n      renderState.mapInstance,\n      'idle',\n      setupListenersWhenMapIsReady\n    );\n\n    renderState.templateProps = prepareTemplateProps({\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  // Collect markers that need to be updated or removed\n  const nextItemsIds = items.map(_ => _.objectID);\n  const [updateMarkers, exitMarkers] = collectMarkersForNextRender(\n    renderState.markers,\n    nextItemsIds\n  );\n\n  // Collect items that will be added\n  const updateMarkerIds = updateMarkers.map(_ => _.__id);\n  const nextPendingItems = items.filter(\n    item => !updateMarkerIds.includes(item.objectID)\n  );\n\n  // Remove all markers that need to be removed\n  exitMarkers.forEach(marker => marker.setMap(null));\n\n  // Create the markers from the items\n  renderState.markers = updateMarkers.concat(\n    nextPendingItems.map(item => {\n      const marker = createMarker({\n        map: renderState.mapInstance,\n        item,\n      });\n\n      Object.keys(markerOptions.events).forEach(eventName => {\n        marker.addListener(eventName, event => {\n          markerOptions.events[eventName]({\n            map: renderState.mapInstance,\n            event,\n            item,\n            marker,\n          });\n        });\n      });\n\n      return marker;\n    })\n  );\n\n  const shouldUpdate = !hasMapMoveSinceLastRefine();\n\n  // We use this value for differentiate the padding to apply during\n  // fitBounds. When we don't have a currenRefinement (boundingBox)\n  // we let Google Maps compute the automatic padding. But when we\n  // provide the currentRefinement we explicitly set the padding\n  // to `0` otherwise the map will decrease the zoom on each refine.\n  const boundingBoxPadding = currentRefinement ? 0 : null;\n  const boundingBox =\n    !currentRefinement && Boolean(renderState.markers.length)\n      ? createBoundingBoxFromMarkers(googleReference, renderState.markers)\n      : currentRefinement;\n\n  if (boundingBox && shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.fitBounds(\n        new googleReference.maps.LatLngBounds(\n          boundingBox.southWest,\n          boundingBox.northEast\n        ),\n        boundingBoxPadding\n      );\n    });\n  } else if (shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.setCenter(position || initialPosition);\n      renderState.mapInstance.setZoom(initialZoom);\n    });\n  }\n\n  render(\n    <GeoSearchControls\n      cssClasses={cssClasses}\n      enableRefine={enableRefine}\n      enableRefineControl={enableRefineControl}\n      enableClearMapRefinement={enableClearMapRefinement}\n      isRefineOnMapMove={isRefineOnMapMove()}\n      isRefinedWithMap={isRefinedWithMap()}\n      hasMapMoveSinceLastRefine={hasMapMoveSinceLastRefine()}\n      onRefineToggle={toggleRefineOnMapMove}\n      onRefineClick={() =>\n        refineWithMap({\n          mapInstance: renderState.mapInstance,\n          refine,\n        })\n      }\n      onClearClick={clearMapRefinement}\n      templateProps={renderState.templateProps}\n    />,\n    container.querySelector(`.${cssClasses.tree}`)\n  );\n};\n\nexport default renderer;\n","export default {\n  HTMLMarker: '<p>Your custom HTML Marker</p>',\n  reset: 'Clear the map refinement',\n  toggle: 'Search as I move the map',\n  redo: 'Redo search here',\n};\n","// global for TypeScript alone\n/* global google */\nimport cx from 'classnames';\nimport { render } from 'preact';\nimport {\n  getContainerNode,\n  renderTemplate,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport connectGeoSearch, {\n  GeoSearchConnectorParams,\n  GeoSearchWidgetDescription,\n  GeoHit,\n} from '../../connectors/geo-search/connectGeoSearch';\nimport renderer from './GeoSearchRenderer';\nimport defaultTemplates from './defaultTemplates';\nimport createHTMLMarker, { HTMLMarkerArguments } from './createHTMLMarker';\nimport { GeoLoc, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'geo-search' });\nconst suit = component('GeoSearch');\n\nexport type GeoSearchTemplates = {\n  /** Template to use for the marker. */\n  HTMLMarker: Template<GeoHit>;\n  /** Template for the reset button. */\n  reset: Template;\n  /** Template for the toggle label. */\n  toggle: Template;\n  /** Template for the redo button. */\n  redo: Template;\n};\n\nexport type GeoSearchCSSClasses = {\n  /** The root div of the widget. */\n  root?: string | string[];\n  /** The map container of the widget. */\n  map?: string | string[];\n  /** The control element of the widget. */\n  control?: string | string[];\n  /** The label of the control element. */\n  label?: string | string[];\n  /** The selected label of the control element. */\n  selectedLabel?: string | string[];\n  /** The input of the control element. */\n  input?: string | string[];\n  /** The redo search button. */\n  redo?: string | string[];\n  /** The disabled redo search button. */\n  disabledRedo?: string | string[];\n  /** The reset refinement button. */\n  reset?: string | string[];\n};\n\nexport type GeoSearchMarker<TOptions> = {\n  /**\n   * Function used to create the options passed to the Google Maps marker.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MarkerOptions\n   */\n  createOptions?(item: GeoHit): TOptions;\n  /**\n   * Object that takes an event type (ex: `click`, `mouseover`) as key and a\n   * listener as value. The listener is provided with an object that contains:\n   * `event`, `item`, `marker`, `map`.\n   */\n  events: {\n    [key: string]: (event: {\n      item: any;\n      marker: any;\n      map: any;\n      event: any;\n    }) => void;\n  };\n};\n\nexport type GeoSearchWidgetParams = {\n  /**\n   * By default the map will set the zoom accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we\n   * need to provide a zoom to render the map.\n   * @default 1\n   */\n  initialZoom?: number;\n  /**\n   * By default the map will set the position accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we need\n   * to provide a position to render the map. This option is ignored when the `position`\n   * is provided.\n   * @default { lat: 0, lng: 0 }\n   */\n  initialPosition?: GeoLoc;\n  /** Templates to use for the widget. */\n  templates?: Partial<GeoSearchTemplates>;\n  /** CSS classes to add to the wrapping elements. */\n  cssClasses?: GeoSearchCSSClasses;\n  /**\n   * Options for customize the built-in Google Maps marker. This option is\n   * ignored when the `customHTMLMarker` is provided.\n   */\n  builtInMarker?: Partial<GeoSearchMarker<google.maps.MarkerOptions>>;\n  /**\n   * Options to customize the HTML marker. We provide an alternative to the\n   * built-in Google Maps marker in order to have a full control of the marker\n   * rendering. You can use plain HTML to build your marker.\n   */\n  customHTMLMarker?:\n    | Partial<GeoSearchMarker<Partial<HTMLMarkerArguments>>>\n    | boolean;\n  /**\n   * If true, the map is used to search - otherwise it's for display purposes only.\n   * @default true\n   */\n  enableRefine?: boolean;\n  /**\n   * If true, a button is displayed on the map when the refinement is coming from\n   * the map in order to remove it.\n   * @default true\n   */\n  enableClearMapRefinement?: boolean;\n  /**\n   * If true, the user can toggle the option `enableRefineOnMapMove` directly from the map.\n   * @default true\n   */\n  enableRefineControl?: boolean;\n  /**\n   * Option forwarded to the Google Maps constructor.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MapOptions\n   */\n  mapOptions?: google.maps.MapOptions;\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Reference to the global `window.google` object.\n   * See [the documentation](https://developers.google.com/maps/documentation/javascript/tutorial) for more information.\n   */\n  googleReference: typeof window['google'];\n};\n\nexport type GeoSearchWidget = WidgetFactory<\n  GeoSearchWidgetDescription & { $$widgetType: 'ais.geoSearch' },\n  GeoSearchConnectorParams,\n  GeoSearchWidgetParams\n>;\n\n/**\n * The **GeoSearch** widget displays the list of results from the search on a Google Maps. It also provides a way to search for results based on their position. The widget also provide some of the common GeoSearch patterns like search on map interaction.\n *\n * @requirements\n *\n * Note that the GeoSearch widget uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be displayed on the map.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n *\n * You are also responsible for loading the Google Maps library, it's not shipped with InstantSearch. You need to load the Google Maps library and pass a reference to the widget. You can find more information about how to install the library in [the Google Maps documentation](https://developers.google.com/maps/documentation/javascript/tutorial).\n *\n * Don't forget to explicitly set the `height` of the map container (default class `.ais-geo-search--map`), otherwise it won't be shown (it's a requirement of Google Maps).\n */\nconst geoSearch: GeoSearchWidget = widgetParams => {\n  const {\n    initialZoom = 1,\n    initialPosition = { lat: 0, lng: 0 },\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    builtInMarker: userBuiltInMarker = {},\n    customHTMLMarker: userCustomHTMLMarker,\n    enableRefine = true,\n    enableClearMapRefinement = true,\n    enableRefineControl = true,\n    container,\n    googleReference,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  const defaultBuiltInMarker: GeoSearchMarker<google.maps.MarkerOptions> = {\n    createOptions: () => ({}),\n    events: {},\n  };\n\n  const defaultCustomHTMLMarker: GeoSearchMarker<Partial<\n    Partial<HTMLMarkerArguments>\n  >> = {\n    createOptions: () => ({}),\n    events: {},\n  };\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (!googleReference) {\n    throw new Error(withUsage('The `googleReference` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    // Required only to mount / unmount the Preact tree\n    tree: suit({ descendantName: 'tree' }),\n    map: cx(suit({ descendantName: 'map' }), userCssClasses.map),\n    control: cx(suit({ descendantName: 'control' }), userCssClasses.control),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    selectedLabel: cx(\n      suit({ descendantName: 'label', modifierName: 'selected' }),\n      userCssClasses.selectedLabel\n    ),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    redo: cx(suit({ descendantName: 'redo' }), userCssClasses.redo),\n    disabledRedo: cx(\n      suit({ descendantName: 'redo', modifierName: 'disabled' }),\n      userCssClasses.disabledRedo\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n  };\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const builtInMarker = {\n    ...defaultBuiltInMarker,\n    ...userBuiltInMarker,\n  };\n\n  const isCustomHTMLMarker =\n    Boolean(userCustomHTMLMarker) || Boolean(userTemplates.HTMLMarker);\n\n  const customHTMLMarker = isCustomHTMLMarker && {\n    ...defaultCustomHTMLMarker,\n    ...(userCustomHTMLMarker as Partial<\n      GeoSearchMarker<Partial<HTMLMarkerArguments>>\n    >),\n  };\n\n  const createBuiltInMarker = ({ item, ...rest }) =>\n    new googleReference.maps.Marker({\n      ...builtInMarker.createOptions!(item),\n      ...rest,\n      // @ts-expect-error @types/googlemaps doesn't document this\n      __id: item.objectID,\n      position: item._geoloc,\n    });\n\n  const HTMLMarker = createHTMLMarker(googleReference);\n  const createCustomHTMLMarker = ({\n    item,\n    ...rest\n  }: {\n    item: GeoHit;\n    map: google.maps.Map;\n  }) =>\n    new HTMLMarker({\n      // this is only called when customHTMLMarker is defined\n      ...(customHTMLMarker as GeoSearchMarker<Partial<HTMLMarkerArguments>>)\n        .createOptions!(item),\n      ...rest,\n      __id: item.objectID,\n      position: item._geoloc,\n      className: cx(suit({ descendantName: 'marker' })),\n      template: renderTemplate({\n        templateKey: 'HTMLMarker',\n        templates,\n        data: item,\n      }),\n    });\n\n  const createMarker = !customHTMLMarker\n    ? createBuiltInMarker\n    : createCustomHTMLMarker;\n\n  // prettier-ignore\n  const markerOptions = !customHTMLMarker\n    ? builtInMarker\n    : customHTMLMarker;\n\n  const makeWidget = connectGeoSearch(renderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      ...otherWidgetParams,\n      // @ts-expect-error pattern not used in other widgets, but the\n      // renderState is stored on the connectorParams for usage in the renderer\n      renderState: {},\n      container: containerNode,\n      googleReference,\n      initialZoom,\n      initialPosition,\n      templates,\n      cssClasses,\n      createMarker,\n      markerOptions,\n      enableRefine,\n      enableClearMapRefinement,\n      enableRefineControl,\n    }),\n    $$widgetType: 'ais.geoSearch',\n  };\n};\n\nexport default geoSearch;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport Template from '../Template/Template';\n\nexport type RefinementListItemProps = {\n  facetValueToRefine: string;\n  handleClick: (args: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) => void;\n  isRefined: boolean;\n  subItems?: h.JSX.Element;\n  templateData: Record<string, any>;\n  templateKey: string;\n  templateProps?: Record<string, any>;\n  className: string;\n};\n\nfunction RefinementListItem({\n  className,\n  handleClick,\n  facetValueToRefine,\n  isRefined,\n  templateProps,\n  templateKey,\n  templateData,\n  subItems,\n}: RefinementListItemProps) {\n  return (\n    <li\n      className={className}\n      onClick={originalEvent => {\n        handleClick({\n          facetValueToRefine,\n          isRefined,\n          originalEvent,\n        });\n      }}\n    >\n      <Template\n        {...templateProps}\n        templateKey={templateKey}\n        data={templateData}\n      />\n      {subItems}\n    </li>\n  );\n}\n\nexport default RefinementListItem;\n","/** @jsx h */\n\nimport { h, createRef, Component } from 'preact';\nimport { noop } from '../../lib/utils';\nimport Template from '../Template/Template';\nimport {\n  SearchBoxCSSClasses,\n  SearchBoxTemplates,\n} from '../../widgets/search-box/search-box';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type SearchBoxComponentCSSClasses = ComponentCSSClasses<\n  SearchBoxCSSClasses\n>;\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  cssClasses: SearchBoxComponentCSSClasses;\n  templates?: SearchBoxTemplates;\n  query?: string;\n  showSubmit?: boolean;\n  showReset?: boolean;\n  showLoadingIndicator?: boolean;\n  refine?: (value: string) => void;\n  autofocus?: boolean;\n  searchAsYouType?: boolean;\n  isSearchStalled?: boolean;\n  disabled?: boolean;\n  onChange?: (event: Event) => void;\n  onSubmit?: (event: Event) => void;\n  onReset?: (event: Event) => void;\n};\n\nconst defaultProps = {\n  query: '',\n  showSubmit: true,\n  showReset: true,\n  showLoadingIndicator: true,\n  autofocus: false,\n  searchAsYouType: true,\n  isSearchStalled: false,\n  disabled: false,\n  onChange: noop,\n  onSubmit: noop,\n  onReset: noop,\n  refine: noop,\n};\n\ntype SearchBoxPropsWithDefaultProps = SearchBoxProps &\n  Readonly<typeof defaultProps>;\n\ntype SearchBoxState = {\n  query: string;\n  focused: boolean;\n};\n\nclass SearchBox extends Component<\n  SearchBoxPropsWithDefaultProps,\n  SearchBoxState\n> {\n  public static defaultProps = defaultProps;\n\n  public state = {\n    query: this.props.query,\n    focused: false,\n  };\n\n  private input = createRef<HTMLInputElement>();\n\n  /**\n   * This public method is used in the RefinementList SFFV search box\n   * to reset the input state when an item is selected.\n   *\n   * @see RefinementList#componentWillReceiveProps\n   * @return {undefined}\n   */\n  public resetInput() {\n    this.setState({ query: '' });\n  }\n\n  private onInput = (event: Event) => {\n    const { searchAsYouType, refine, onChange } = this.props;\n    const query = (event.target as HTMLInputElement).value;\n\n    if (searchAsYouType) {\n      refine(query);\n    }\n    this.setState({ query });\n\n    onChange(event);\n  };\n\n  public componentWillReceiveProps(nextProps: SearchBoxPropsWithDefaultProps) {\n    /**\n     * when the user is typing, we don't want to replace the query typed\n     * by the user (state.query) with the query exposed by the connector (props.query)\n     * see: https://github.com/algolia/instantsearch.js/issues/4141\n     */\n    if (!this.state.focused && nextProps.query !== this.state.query) {\n      this.setState({ query: nextProps.query });\n    }\n  }\n\n  private onSubmit = (event: Event) => {\n    const { searchAsYouType, refine, onSubmit } = this.props;\n\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.input.current) {\n      this.input.current.blur();\n    }\n\n    if (!searchAsYouType) {\n      refine(this.state.query);\n    }\n\n    onSubmit(event);\n\n    return false;\n  };\n\n  private onReset = (event: Event) => {\n    const { refine, onReset } = this.props;\n    const query = '';\n\n    if (this.input.current) {\n      this.input.current.focus();\n    }\n\n    refine(query);\n    this.setState({ query });\n\n    onReset(event);\n  };\n\n  private onBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  private onFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  public render() {\n    const {\n      cssClasses,\n      placeholder,\n      autofocus,\n      showSubmit,\n      showReset,\n      showLoadingIndicator,\n      templates,\n      isSearchStalled,\n    } = this.props;\n\n    return (\n      <div className={cssClasses.root}>\n        <form\n          action=\"\"\n          role=\"search\"\n          className={cssClasses.form}\n          noValidate\n          onSubmit={this.onSubmit}\n          // @ts-expect-error `onReset` attibute is missing in preact 10.0.0 JSX types\n          onReset={this.onReset}\n        >\n          <input\n            ref={this.input}\n            value={this.state.query}\n            disabled={this.props.disabled}\n            className={cssClasses.input}\n            type=\"search\"\n            placeholder={placeholder}\n            autoFocus={autofocus}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            // @ts-expect-error `autoCapitalize` attibute is missing in preact 10.0.0 JSX types\n            autoCapitalize=\"off\"\n            spellCheck=\"false\"\n            maxLength={512}\n            onInput={this.onInput}\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n\n          <Template\n            templateKey=\"submit\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.submit,\n              type: 'submit',\n              title: 'Submit the search query.',\n              hidden: !showSubmit,\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          <Template\n            templateKey=\"reset\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.reset,\n              type: 'reset',\n              title: 'Clear the search query.',\n              hidden: !(\n                showReset &&\n                this.state.query.trim() &&\n                !isSearchStalled\n              ),\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          {showLoadingIndicator && (\n            <Template\n              templateKey=\"loadingIndicator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.loadingIndicator,\n                hidden: !isSearchStalled,\n              }}\n              templates={templates}\n              data={{ cssClasses }}\n            />\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n","/** @jsx h */\n\nimport { h, createRef, Component } from 'preact';\nimport cx from 'classnames';\nimport { isSpecialClick, isEqual } from '../../lib/utils';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\nimport Template from '../Template/Template';\nimport RefinementListItem from './RefinementListItem';\nimport SearchBox, {\n  SearchBoxComponentCSSClasses,\n} from '../SearchBox/SearchBox';\nimport { RefinementListItem as TRefinementListItem } from '../../connectors/refinement-list/connectRefinementList';\nimport { HierarchicalMenuItem } from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport { SearchBoxTemplates } from '../../widgets/search-box/search-box';\nimport { ComponentCSSClasses, CreateURL, Templates } from '../../types';\nimport { RefinementListOwnCSSClasses } from '../../widgets/refinement-list/refinement-list';\nimport { RatingMenuComponentCSSClasses } from '../../widgets/rating-menu/rating-menu';\nimport { HierarchicalMenuComponentCSSClasses } from '../../widgets/hierarchical-menu/hierarchical-menu';\n\ntype RefinementListOptionalClasses =\n  | 'noResults'\n  | 'checkbox'\n  | 'labelText'\n  | 'showMore'\n  | 'disabledShowMore'\n  | 'searchBox';\n\ntype RefinementListWidgetCSSClasses = ComponentCSSClasses<\n  RefinementListOwnCSSClasses\n>;\n\ntype RefinementListRequired = Omit<\n  RefinementListWidgetCSSClasses,\n  RefinementListOptionalClasses\n> &\n  Partial<Pick<RefinementListWidgetCSSClasses, RefinementListOptionalClasses>>;\n\nexport type RefinementListComponentCSSClasses = RefinementListRequired & {\n  searchable?: SearchBoxComponentCSSClasses;\n} & Partial<Pick<RatingMenuComponentCSSClasses, 'disabledItem'>> &\n  Partial<\n    Pick<HierarchicalMenuComponentCSSClasses, 'childList' | 'parentItem'>\n  >;\n\ntype FacetValue = TRefinementListItem | HierarchicalMenuItem;\ntype FacetValues = TRefinementListItem[] | HierarchicalMenuItem[];\n\nexport type RefinementListProps<TTemplates extends Templates> = {\n  createURL: CreateURL<string>;\n  cssClasses: RefinementListComponentCSSClasses;\n  depth?: number;\n  facetValues?: FacetValues;\n  attribute?: string;\n  templateProps?: PreparedTemplateProps<TTemplates>;\n  searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxTemplates>;\n  toggleRefinement: (value: string) => void;\n  searchFacetValues?: (query: string) => void;\n  searchPlaceholder?: string;\n  isFromSearch?: boolean;\n  showMore?: boolean;\n  toggleShowMore?: () => void;\n  isShowingMore?: boolean;\n  hasExhaustiveItems?: boolean;\n  canToggleShowMore?: boolean;\n  searchIsAlwaysActive?: boolean;\n  className?: string;\n  children?: h.JSX.Element;\n};\n\nconst defaultProps = {\n  cssClasses: {},\n  depth: 0,\n};\n\ntype RefinementListPropsWithDefaultProps<\n  TTemplates extends Templates\n> = RefinementListProps<TTemplates> & Readonly<typeof defaultProps>;\n\ntype RefinementListItemTemplateData<\n  TTemplates extends Templates\n> = FacetValue & {\n  url: string;\n} & Pick<\n    RefinementListProps<TTemplates>,\n    'attribute' | 'cssClasses' | 'isFromSearch'\n  >;\n\nfunction isHierarchicalMenuItem(\n  facetValue: FacetValue\n): facetValue is HierarchicalMenuItem {\n  return (facetValue as HierarchicalMenuItem).data !== undefined;\n}\n\nclass RefinementList<TTemplates extends Templates> extends Component<\n  RefinementListPropsWithDefaultProps<TTemplates>\n> {\n  public static defaultProps = defaultProps;\n\n  private searchBox = createRef<SearchBox>();\n\n  public constructor(props: RefinementListPropsWithDefaultProps<TTemplates>) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  public shouldComponentUpdate(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    const areFacetValuesDifferent = !isEqual(\n      this.props.facetValues,\n      nextProps.facetValues\n    );\n\n    return areFacetValuesDifferent;\n  }\n\n  private refine(facetValueToRefine: string) {\n    this.props.toggleRefinement(facetValueToRefine);\n  }\n\n  private _generateFacetItem(facetValue: FacetValue) {\n    let subItems;\n    if (\n      isHierarchicalMenuItem(facetValue) &&\n      Array.isArray(facetValue.data) &&\n      facetValue.data.length > 0\n    ) {\n      const { root, ...cssClasses } = this.props.cssClasses;\n\n      subItems = (\n        <RefinementList\n          {...this.props}\n          // We want to keep `root` required for external usage but not for the\n          // sub items.\n          cssClasses={cssClasses as RefinementListComponentCSSClasses}\n          depth={this.props.depth + 1}\n          facetValues={facetValue.data}\n          showMore={false}\n          className={this.props.cssClasses.childList}\n        />\n      );\n    }\n\n    const url = this.props.createURL(facetValue.value);\n    const templateData: RefinementListItemTemplateData<TTemplates> = {\n      ...facetValue,\n      url,\n      attribute: this.props.attribute,\n      cssClasses: this.props.cssClasses,\n      isFromSearch: this.props.isFromSearch,\n    };\n\n    let { value: key } = facetValue;\n    if (facetValue.isRefined !== undefined) {\n      key += `/${facetValue.isRefined}`;\n    }\n\n    if (facetValue.count !== undefined) {\n      key += `/${facetValue.count}`;\n    }\n\n    const refinementListItemClassName = cx(this.props.cssClasses.item, {\n      [this.props.cssClasses.selectedItem]: facetValue.isRefined,\n      // cx allows `undefined` as a key but typescript doesn't\n      [this.props.cssClasses.disabledItem!]: !facetValue.count,\n      [this.props.cssClasses.parentItem!]:\n        isHierarchicalMenuItem(facetValue) &&\n        Array.isArray(facetValue.data) &&\n        facetValue.data.length > 0,\n    });\n\n    return (\n      <RefinementListItem\n        templateKey=\"item\"\n        key={key}\n        facetValueToRefine={facetValue.value}\n        handleClick={this.handleItemClick}\n        isRefined={facetValue.isRefined}\n        className={refinementListItemClassName}\n        subItems={subItems}\n        templateData={templateData}\n        templateProps={this.props.templateProps}\n      />\n    );\n  }\n\n  // Click events on DOM tree like LABEL > INPUT will result in two click events\n  // instead of one.\n  // No matter the framework, see https://www.google.com/search?q=click+label+twice\n  //\n  // Thus making it hard to distinguish activation from deactivation because both click events\n  // are very close. Debounce is a solution but hacky.\n  //\n  // So the code here checks if the click was done on or in a LABEL. If this LABEL\n  // has a checkbox inside, we ignore the first click event because we will get another one.\n  //\n  // We also check if the click was done inside a link and then e.preventDefault() because we already\n  // handle the url\n  //\n  // Finally, we always stop propagation of the event to avoid multiple levels RefinementLists to fail: click\n  // on child would click on parent also\n  private handleItemClick({\n    facetValueToRefine,\n    isRefined,\n    originalEvent,\n  }: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) {\n    if (isSpecialClick(originalEvent)) {\n      // do not alter the default browser behavior\n      // if one special key is down\n      return;\n    }\n\n    if (\n      !(originalEvent.target instanceof HTMLElement) ||\n      !(originalEvent.target.parentNode instanceof HTMLElement)\n    ) {\n      return;\n    }\n\n    if (\n      isRefined &&\n      originalEvent.target.parentNode.querySelector(\n        'input[type=\"radio\"]:checked'\n      )\n    ) {\n      // Prevent refinement for being reset if the user clicks on an already checked radio button\n      return;\n    }\n\n    if (originalEvent.target.tagName === 'INPUT') {\n      this.refine(facetValueToRefine);\n      return;\n    }\n\n    let parent = originalEvent.target;\n\n    while (parent !== originalEvent.currentTarget) {\n      if (\n        parent.tagName === 'LABEL' &&\n        (parent.querySelector('input[type=\"checkbox\"]') ||\n          parent.querySelector('input[type=\"radio\"]'))\n      ) {\n        return;\n      }\n\n      if (parent.tagName === 'A' && (parent as HTMLAnchorElement).href) {\n        originalEvent.preventDefault();\n      }\n\n      parent = parent.parentNode as HTMLElement;\n    }\n\n    originalEvent.stopPropagation();\n\n    this.refine(facetValueToRefine);\n  }\n\n  public componentWillReceiveProps(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    if (this.searchBox.current && !nextProps.isFromSearch) {\n      this.searchBox.current.resetInput();\n    }\n  }\n\n  private refineFirstValue() {\n    const firstValue = this.props.facetValues && this.props.facetValues[0];\n    if (firstValue) {\n      const actualValue = firstValue.value;\n      this.props.toggleRefinement(actualValue);\n    }\n  }\n\n  public render() {\n    const showMoreButtonClassName = cx(this.props.cssClasses.showMore, {\n      [this.props.cssClasses.disabledShowMore!]: !(\n        this.props.showMore === true && this.props.canToggleShowMore\n      ),\n    });\n\n    const showMoreButton = this.props.showMore === true && (\n      <Template\n        {...this.props.templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: showMoreButtonClassName,\n          disabled: !this.props.canToggleShowMore,\n          onClick: this.props.toggleShowMore,\n        }}\n        data={{\n          isShowingMore: this.props.isShowingMore,\n        }}\n      />\n    );\n\n    const shouldDisableSearchBox =\n      this.props.searchIsAlwaysActive !== true &&\n      !(this.props.isFromSearch || !this.props.hasExhaustiveItems);\n\n    const templates = this.props.searchBoxTemplateProps\n      ? this.props.searchBoxTemplateProps.templates\n      : undefined;\n\n    const searchBox = this.props.searchFacetValues && (\n      <div className={this.props.cssClasses.searchBox}>\n        <SearchBox\n          ref={this.searchBox}\n          placeholder={this.props.searchPlaceholder}\n          disabled={shouldDisableSearchBox}\n          cssClasses={this.props.cssClasses.searchable!}\n          templates={templates}\n          onChange={(event: Event) =>\n            this.props.searchFacetValues!(\n              (event.target as HTMLInputElement).value\n            )\n          }\n          onReset={() => this.props.searchFacetValues!('')}\n          onSubmit={() => this.refineFirstValue()}\n          // This sets the search box to a controlled state because\n          // we don't rely on the `refine` prop but on `onChange`.\n          searchAsYouType={false}\n        />\n      </div>\n    );\n\n    const facetValues = this.props.facetValues &&\n      this.props.facetValues.length > 0 && (\n        <ul className={this.props.cssClasses.list}>\n          {this.props.facetValues.map(this._generateFacetItem, this)}\n        </ul>\n      );\n\n    const noResults = this.props.searchFacetValues &&\n      this.props.isFromSearch &&\n      (!this.props.facetValues || this.props.facetValues.length === 0) && (\n        <Template\n          {...this.props.templateProps}\n          templateKey=\"searchableNoResults\"\n          rootProps={{ className: this.props.cssClasses.noResults }}\n        />\n      );\n\n    const rootClassName = cx(\n      this.props.cssClasses.root,\n      {\n        [this.props.cssClasses.noRefinementRoot]:\n          !this.props.facetValues || this.props.facetValues.length === 0,\n      },\n      this.props.className\n    );\n\n    return (\n      <div className={rootClassName}>\n        {this.props.children}\n        {searchBox}\n        {facetValues}\n        {noResults}\n        {showMoreButton}\n      </div>\n    );\n  }\n}\n\nexport default RefinementList;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\nimport Template from '../Template/Template';\nimport { SearchResults } from 'algoliasearch-helper';\nimport { BindEventForHits, SendEventForHits } from '../../lib/utils';\nimport { ComponentCSSClasses, Hits as HitsArray } from '../../types';\nimport { HitsCSSClasses, HitsTemplates } from '../../widgets/hits/hits';\n\nexport type HitsComponentCSSClasses = ComponentCSSClasses<HitsCSSClasses>;\n\nexport type HitsProps = {\n  results: SearchResults;\n  hits: HitsArray;\n  sendEvent?: SendEventForHits;\n  bindEvent?: BindEventForHits;\n  cssClasses: HitsComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: HitsTemplates;\n  };\n};\n\nconst Hits = ({\n  results,\n  hits,\n  bindEvent,\n  cssClasses,\n  templateProps,\n}: HitsProps) => {\n  if (results.hits.length === 0) {\n    return (\n      <Template\n        {...templateProps}\n        templateKey=\"empty\"\n        rootProps={{\n          className: cx(cssClasses.root, cssClasses.emptyRoot),\n        }}\n        data={results}\n      />\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      <ol className={cssClasses.list}>\n        {hits.map((hit, index) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: index,\n            }}\n            bindEvent={bindEvent}\n          />\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nHits.defaultProps = {\n  results: { hits: [] },\n  hits: [],\n};\n\nexport default Hits;\n","export default {\n  item:\n    '<a class=\"{{cssClasses.link}}\" href=\"{{url}}\">' +\n    '<span class=\"{{cssClasses.label}}\">{{label}}</span>' +\n    '<span class=\"{{cssClasses.count}}\">{{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}}</span>' +\n    '</a>',\n  showMoreText: `\n    {{#isShowingMore}}\n      Show less\n    {{/isShowingMore}}\n    {{^isShowingMore}}\n      Show more\n    {{/isShowingMore}}\n  `,\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectHierarchicalMenu, {\n  HierarchicalMenuItem,\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuRenderState,\n  HierarchicalMenuWidgetDescription,\n} from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport defaultTemplates from './defaultTemplates';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport {\n  TransformItems,\n  Template,\n  WidgetFactory,\n  RendererOptions,\n  SortBy,\n  ComponentCSSClasses,\n} from '../../types';\nimport { component } from '../../lib/suit';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n});\nconst suit = component('HierarchicalMenu');\n\ntype HierarchicalMenuTemplates = {\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n};\n\nexport type HierarchicalMenuCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot?: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list?: string | string[];\n  /**\n   * CSS class to add to the child list element.\n   */\n  childList?: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item?: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem?: string | string[];\n  /**\n   * CSS class to add to each parent item element.\n   */\n  parentItem?: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link?: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label?: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count?: string | string[];\n  /**\n   * CSS class to add to the show more element.\n   */\n  showMore?: string | string[];\n  /**\n   * CSS class to add to the disabled show more element.\n   */\n  disabledShowMore?: string | string[];\n};\n\nexport type HierarchicalMenuComponentCSSClasses = ComponentCSSClasses<\n  HierarchicalMenuCSSClasses\n>;\n\nexport type HierarchicalMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n  /**\n   * Show the siblings of the selected parent level of the current refined value.\n   *\n   * With `showParentLevel` set to `true` (default):\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   *     - lvl2\n   *     - lvl2\n   *   - lvl 1\n   *   - lvl 1\n   * - Parent lvl0\n   * - Parent lvl0\n   *\n   * With `showParentLevel` set to `false`:\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   * - Parent lvl0\n   * - Parent lvl0\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   * does not impact the root level.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   */\n  sortBy?: SortBy<HierarchicalMenuItem>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: Partial<HierarchicalMenuTemplates>;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: HierarchicalMenuCSSClasses;\n};\n\nconst renderer = ({\n  cssClasses,\n  containerNode,\n  showMore,\n  templates,\n  renderState,\n}: {\n  cssClasses: HierarchicalMenuComponentCSSClasses;\n  containerNode: HTMLElement;\n  showMore: boolean;\n  templates: Partial<HierarchicalMenuTemplates>;\n  renderState: {\n    templateProps?: PreparedTemplateProps<HierarchicalMenuTemplates>;\n  };\n}) => (\n  {\n    createURL,\n    items,\n    refine,\n    instantSearchInstance,\n    isShowingMore,\n    toggleShowMore,\n    canToggleShowMore,\n  }: HierarchicalMenuRenderState &\n    RendererOptions<HierarchicalMenuConnectorParams>,\n  isFirstRendering: boolean\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  render(\n    <RefinementList\n      createURL={createURL}\n      cssClasses={cssClasses}\n      facetValues={items}\n      templateProps={renderState.templateProps}\n      toggleRefinement={refine}\n      showMore={showMore}\n      toggleShowMore={toggleShowMore}\n      isShowingMore={isShowingMore}\n      canToggleShowMore={canToggleShowMore}\n    />,\n    containerNode\n  );\n};\n\n/**\n * The hierarchical menu widget is used to create a navigation based on a hierarchy of facet attributes.\n *\n * It is commonly used for categories with subcategories.\n *\n * All attributes (lvl0, lvl1 here) must be declared as [attributes for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting) in your\n * Algolia settings.\n *\n * By default, the separator we expect is ` > ` (with spaces) but you can use\n * a different one by using the `separator` option.\n * @requirements\n * Your objects must be formatted in a specific way to be\n * able to display hierarchical menus. Here's an example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": \"fruits\",\n *     \"lvl1\": \"fruits > citrus\"\n *   }\n * }\n * ```\n *\n * Every level must be specified entirely.\n * It's also possible to have multiple values per level, for example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": [\"fruits\", \"vitamins\"],\n *     \"lvl1\": [\"fruits > citrus\", \"vitamins > C\"]\n *   }\n * }\n * ```\n * @type {WidgetFactory}\n * @devNovel HierarchicalMenu\n * @category filter\n * @param {HierarchicalMenuWidgetParams} widgetParams The HierarchicalMenu widget options.\n * @return {Widget} A new HierarchicalMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.hierarchicalMenu({\n *     container: '#hierarchical-categories',\n *     attributes: ['hierarchicalCategories.lvl0', 'hierarchicalCategories.lvl1', 'hierarchicalCategories.lvl2'],\n *   })\n * ]);\n */\nexport type HierarchicalMenuWidget = WidgetFactory<\n  HierarchicalMenuWidgetDescription & { $$widgetType: 'ais.hierarchicalMenu' },\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuWidgetParams\n>;\n\nconst hierarchicalMenu: HierarchicalMenuWidget = function hierarchicalMenu(\n  widgetParams\n) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    showParentLevel,\n    limit,\n    showMore = false,\n    showMoreLimit,\n    sortBy,\n    transformItems,\n    templates = defaultTemplates,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    childList: cx(\n      suit({ descendantName: 'list', modifierName: 'child' }),\n      userCssClasses.childList\n    ),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    parentItem: cx(\n      suit({ descendantName: 'item', modifierName: 'parent' }),\n      userCssClasses.parentItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    cssClasses,\n    containerNode,\n    templates,\n    showMore,\n    renderState: {},\n  });\n\n  const makeWidget = connectHierarchicalMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributes,\n      separator,\n      rootPath,\n      showParentLevel,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.hierarchicalMenu',\n  };\n};\n\nexport default hierarchicalMenu;\n","export default {\n  empty: 'No results',\n  item(data) {\n    return JSON.stringify(data, null, 2);\n  },\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport connectHits, {\n  HitsConnectorParams,\n  HitsRenderState,\n  HitsWidgetDescription,\n} from '../../connectors/hits/connectHits';\nimport Hits from '../../components/Hits/Hits';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { withInsights, withInsightsListener } from '../../lib/insights';\nimport {\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  WidgetFactory,\n  Renderer,\n  InsightsClientWrapper,\n} from '../../types';\nimport { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'hits' });\nconst suit = component('Hits');\nconst HitsWithInsightsListener = withInsightsListener(Hits);\n\nconst renderer = ({\n  renderState,\n  cssClasses,\n  containerNode,\n  templates,\n}): Renderer<HitsRenderState, Partial<HitsWidgetParams>> => (\n  { hits: receivedHits, results, instantSearchInstance, insights, bindEvent },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  render(\n    <HitsWithInsightsListener\n      cssClasses={cssClasses}\n      hits={receivedHits}\n      results={results}\n      templateProps={renderState.templateProps}\n      insights={insights as InsightsClientWrapper}\n      sendEvent={(event: InsightsEvent) => {\n        instantSearchInstance.sendEventToInsights(event);\n      }}\n      bindEvent={bindEvent}\n    />,\n    containerNode\n  );\n};\n\nexport type HitsCSSClasses = {\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot?: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list?: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item?: string | string[];\n};\n\nexport type HitsTemplates = {\n  /**\n   * Template to use when there are no results.\n   *\n   * @default 'No Results'\n   */\n  empty?: Template;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   *\n   * @default ''\n   */\n  item?: TemplateWithBindEvent<\n    Hit & {\n      // @deprecated the index in the hits array, use __position instead, which is the absolute position\n      __hitIndex: number;\n    }\n  >;\n};\n\nexport type HitsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HitsTemplates;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: HitsCSSClasses;\n};\n\nexport type HitsWidget = WidgetFactory<\n  HitsWidgetDescription & { $$widgetType: 'ais.hits' },\n  HitsConnectorParams,\n  HitsWidgetParams\n>;\n\nconst hits: HitsWidget = function hits(widgetParams) {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = defaultTemplates,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = withInsights(connectHits)(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ escapeHTML, transformItems }),\n    $$widgetType: 'ais.hits',\n  };\n};\n\nexport default hits;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\n\nexport type SelectorOption = {\n  value?: string | number;\n  label: string;\n};\n\nexport type SelectorComponentCSSClasses = {\n  root: string;\n  select: string;\n  option: string;\n};\n\nexport type SelectorProps = {\n  cssClasses: SelectorComponentCSSClasses;\n  currentValue?: string | number;\n  options: SelectorOption[];\n  setValue(value: SelectorOption['value']): void;\n};\n\nfunction Selector({\n  currentValue,\n  options,\n  cssClasses,\n  setValue,\n}: SelectorProps) {\n  return (\n    <select\n      className={cx(cssClasses.select)}\n      onChange={event => setValue((event.target as HTMLSelectElement).value)}\n      value={`${currentValue}`}\n    >\n      {options.map(option => (\n        <option\n          className={cx(cssClasses.option)}\n          key={option.label + option.value}\n          value={`${option.value}`}\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Selector;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport Selector from '../../components/Selector/Selector';\nimport connectHitsPerPage, {\n  HitsPerPageConnectorParams,\n  HitsPerPageRenderState,\n  HitsPerPageWidgetDescription,\n} from '../../connectors/hits-per-page/connectHitsPerPage';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n  find,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n});\nconst suit = component('HitsPerPage');\n\nconst renderer = ({ containerNode, cssClasses }) => (\n  { items, refine }: HitsPerPageRenderState,\n  isFirstRendering: boolean\n) => {\n  if (isFirstRendering) return;\n\n  const { value: currentValue } =\n    find(items, ({ isRefined }) => isRefined) || {};\n\n  render(\n    <div className={cssClasses.root}>\n      <Selector\n        cssClasses={cssClasses}\n        currentValue={currentValue}\n        options={items}\n        setValue={refine}\n      />\n    </div>,\n    containerNode\n  );\n};\n\nexport type HitsPerPageCSSClasses = {\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select?: string | string[];\n\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option?: string | string[];\n};\n\nexport type HitsPerPageWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: HitsPerPageCSSClasses;\n};\n\nexport type HitsPerPageWidget = WidgetFactory<\n  HitsPerPageWidgetDescription & { $$widgetType: 'ais.hitsPerPage' },\n  HitsPerPageConnectorParams,\n  HitsPerPageWidgetParams\n>;\n\nconst hitsPerPage: HitsPerPageWidget = function hitsPerPage(widgetParams) {\n  const { container, items, cssClasses: userCssClasses = {}, transformItems } =\n    widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectHitsPerPage(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ items, transformItems }),\n    $$widgetType: 'ais.hitsPerPage',\n  };\n};\n\nexport default hitsPerPage;\n","export default {\n  empty: 'No results',\n  showPreviousText: 'Show previous results',\n  showMoreText: 'Show more results',\n  item(data) {\n    return JSON.stringify(data, null, 2);\n  },\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport { SearchResults } from 'algoliasearch-helper';\nimport InfiniteHits from '../../components/InfiniteHits/InfiniteHits';\nimport connectInfiniteHits, {\n  InfiniteHitsConnectorParams,\n  InfiniteHitsRenderState,\n  InfiniteHitsCache,\n  InfiniteHitsWidgetDescription,\n} from '../../connectors/infinite-hits/connectInfiniteHits';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { withInsights, withInsightsListener } from '../../lib/insights';\nimport {\n  WidgetFactory,\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  InsightsClientWrapper,\n  Renderer,\n} from '../../types';\nimport defaultTemplates from './defaultTemplates';\nimport { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n});\nconst suit = component('InfiniteHits');\nconst InfiniteHitsWithInsightsListener = withInsightsListener(InfiniteHits);\n\nexport type InfiniteHitsCSSClasses = {\n  /**\n   * The root element of the widget.\n   */\n  root?: string | string[];\n\n  /**\n   * The root container without results.\n   */\n  emptyRoot?: string | string[];\n\n  /**\n   * The list of results.\n   */\n  list?: string | string[];\n\n  /**\n   * The list item.\n   */\n  item?: string | string[];\n\n  /**\n   * The “Show previous” button.\n   */\n  loadPrevious?: string | string[];\n\n  /**\n   * The disabled “Show previous” button.\n   */\n  disabledLoadPrevious?: string | string[];\n\n  /**\n   * The “Show more” button.\n   */\n  loadMore?: string | string[];\n\n  /**\n   * The disabled “Show more” button.\n   */\n  disabledLoadMore?: string | string[];\n};\n\nexport type InfiniteHitsTemplates = {\n  /**\n   * The template to use when there are no results.\n   */\n  empty?: Template<{ results: SearchResults }>;\n\n  /**\n   * The template to use for the “Show previous” label.\n   */\n  showPreviousText?: Template;\n\n  /**\n   * The template to use for the “Show more” label.\n   */\n  showMoreText?: Template;\n\n  /**\n   * The template to use for each result.\n   */\n  item?: TemplateWithBindEvent<\n    Hit & {\n      // @deprecated the index in the hits array, use __position instead, which is the absolute position\n      __hitIndex: number;\n    }\n  >;\n};\n\nexport type InfiniteHitsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: InfiniteHitsCSSClasses;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: InfiniteHitsTemplates;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache;\n};\n\nexport type InfiniteHitsWidget = WidgetFactory<\n  InfiniteHitsWidgetDescription & { $$widgetType: 'ais.infiniteHits' },\n  InfiniteHitsConnectorParams,\n  InfiniteHitsWidgetParams\n>;\n\nconst renderer = ({\n  cssClasses,\n  containerNode,\n  renderState,\n  templates,\n  showPrevious: hasShowPrevious,\n}): Renderer<InfiniteHitsRenderState, Partial<InfiniteHitsWidgetParams>> => (\n  {\n    hits,\n    results,\n    showMore,\n    showPrevious,\n    isFirstPage,\n    isLastPage,\n    instantSearchInstance,\n    insights,\n    bindEvent,\n  },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  render(\n    <InfiniteHitsWithInsightsListener\n      cssClasses={cssClasses}\n      hits={hits}\n      results={results}\n      hasShowPrevious={hasShowPrevious}\n      showPrevious={showPrevious}\n      showMore={showMore}\n      templateProps={renderState.templateProps}\n      isFirstPage={isFirstPage}\n      isLastPage={isLastPage}\n      insights={insights as InsightsClientWrapper}\n      sendEvent={(event: InsightsEvent) => {\n        instantSearchInstance.sendEventToInsights(event);\n      }}\n      bindEvent={bindEvent}\n    />,\n    containerNode\n  );\n};\n\nconst infiniteHits: InfiniteHitsWidget = widgetParams => {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = defaultTemplates,\n    cssClasses: userCssClasses = {},\n    showPrevious,\n    cache,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    loadPrevious: cx(\n      suit({ descendantName: 'loadPrevious' }),\n      userCssClasses.loadPrevious\n    ),\n    disabledLoadPrevious: cx(\n      suit({ descendantName: 'loadPrevious', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadPrevious\n    ),\n    loadMore: cx(suit({ descendantName: 'loadMore' }), userCssClasses.loadMore),\n    disabledLoadMore: cx(\n      suit({ descendantName: 'loadMore', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showPrevious,\n    renderState: {},\n  });\n\n  const makeWidget = withInsights(connectInfiniteHits)(\n    specializedRenderer,\n    () => render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      escapeHTML,\n      transformItems,\n      showPrevious,\n      cache,\n    }),\n    $$widgetType: 'ais.infiniteHits',\n  };\n};\n\nexport default infiniteHits;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\nimport Template from '../Template/Template';\nimport { SearchResults } from 'algoliasearch-helper';\nimport { ComponentCSSClasses, Hits } from '../../types';\nimport {\n  InfiniteHitsCSSClasses,\n  InfiniteHitsTemplates,\n} from '../../widgets/infinite-hits/infinite-hits';\nimport { SendEventForHits, BindEventForHits } from '../../lib/utils';\n\nexport type InfiniteHitsComponentCSSClasses = ComponentCSSClasses<\n  InfiniteHitsCSSClasses\n>;\n\nexport type InfiniteHitsProps = {\n  cssClasses: InfiniteHitsComponentCSSClasses;\n  hits: Hits;\n  results: SearchResults;\n  hasShowPrevious: boolean;\n  showPrevious: () => void;\n  showMore: () => void;\n  templateProps: {\n    [key: string]: any;\n    templates: InfiniteHitsTemplates;\n  };\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  sendEvent: SendEventForHits;\n  bindEvent: BindEventForHits;\n};\n\nconst InfiniteHits = ({\n  results,\n  hits,\n  bindEvent,\n  hasShowPrevious,\n  showPrevious,\n  showMore,\n  isFirstPage,\n  isLastPage,\n  cssClasses,\n  templateProps,\n}: InfiniteHitsProps) => {\n  if (results.hits.length === 0) {\n    return (\n      <Template\n        {...templateProps}\n        templateKey=\"empty\"\n        rootProps={{\n          className: cx(cssClasses.root, cssClasses.emptyRoot),\n        }}\n        data={results}\n      />\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      {hasShowPrevious && (\n        <Template\n          {...templateProps}\n          templateKey=\"showPreviousText\"\n          rootTagName=\"button\"\n          rootProps={{\n            className: cx(cssClasses.loadPrevious, {\n              [cssClasses.disabledLoadPrevious]: isFirstPage,\n            }),\n            disabled: isFirstPage,\n            onClick: showPrevious,\n          }}\n        />\n      )}\n\n      <ol className={cssClasses.list}>\n        {hits.map((hit, position) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: position,\n            }}\n            bindEvent={bindEvent}\n          />\n        ))}\n      </ol>\n\n      <Template\n        {...templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cx(cssClasses.loadMore, {\n            [cssClasses.disabledLoadMore]: isLastPage,\n          }),\n          disabled: isLastPage,\n          onClick: showMore,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default InfiniteHits;\n","export default {\n  item:\n    '<a class=\"{{cssClasses.link}}\" href=\"{{url}}\">' +\n    '<span class=\"{{cssClasses.label}}\">{{label}}</span>' +\n    '<span class=\"{{cssClasses.count}}\">{{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}}</span>' +\n    '</a>',\n  showMoreText: `\n    {{#isShowingMore}}\n      Show less\n    {{/isShowingMore}}\n    {{^isShowingMore}}\n      Show more\n    {{/isShowingMore}}\n  `,\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectMenu, {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu' });\nconst suit = component('Menu');\n\nexport type MenuCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot?: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list?: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item?: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem?: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link?: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label?: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count?: string | string[];\n  /**\n   * CSS class to add to the show more button.\n   */\n  showMore?: string | string[];\n  /**\n   * CSS class to add to the disabled show more button.\n   */\n  disabledShowMore?: string | string[];\n};\n\nexport type MenuTemplates = {\n  /**\n   * Item template. The string template gets the same values as the function.\n   */\n  item: Template<{\n    count: number;\n    cssClasses: MenuCSSClasses;\n    isRefined: boolean;\n    label: string;\n    url: string;\n    value: string;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{\n    isShowingMore: boolean;\n  }>;\n};\n\nexport type MenuComponentCSSClasses = ComponentCSSClasses<MenuCSSClasses>;\n\nexport type MenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: Partial<MenuTemplates>;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuCSSClasses;\n};\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  renderState,\n  templates,\n  showMore,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: MenuComponentCSSClasses;\n  renderState: { templateProps?: PreparedTemplateProps<MenuTemplates> };\n  templates: Partial<MenuTemplates>;\n  showMore?: boolean;\n}) => (\n  {\n    refine,\n    items,\n    createURL,\n    instantSearchInstance,\n    isShowingMore,\n    toggleShowMore,\n    canToggleShowMore,\n  }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n  isFirstRendering: boolean\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  const facetValues = items.map(facetValue => ({\n    ...facetValue,\n    url: createURL(facetValue.value),\n  }));\n\n  render(\n    <RefinementList\n      createURL={createURL}\n      cssClasses={cssClasses}\n      facetValues={facetValues}\n      showMore={showMore}\n      templateProps={renderState.templateProps}\n      toggleRefinement={refine}\n      toggleShowMore={toggleShowMore}\n      isShowingMore={isShowingMore}\n      canToggleShowMore={canToggleShowMore}\n    />,\n    containerNode\n  );\n};\n\nexport type MenuWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menu' },\n  MenuConnectorParams,\n  MenuWidgetParams\n>;\n\nconst menu: MenuWidget = function menu(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    cssClasses: userCssClasses = {},\n    templates = defaultTemplates,\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n    showMore,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.menu',\n  };\n};\n\nexport default menu;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\nimport { find } from '../../lib/utils';\nimport Template from '../Template/Template';\nimport {\n  MenuSelectCSSClasses,\n  MenuSelectTemplates,\n} from '../../widgets/menu-select/menu-select';\nimport { MenuRenderState } from '../../connectors/menu/connectMenu';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type MenuSelectComponentCSSClasses = ComponentCSSClasses<\n  MenuSelectCSSClasses\n>;\n\ntype MenuItem = {\n  /**\n   * The value of the menu item.\n   **/\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   **/\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   **/\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   **/\n  isRefined: boolean;\n};\n\ntype Props = {\n  cssClasses: MenuSelectComponentCSSClasses;\n  items: MenuItem[];\n  refine: MenuRenderState['refine'];\n  templateProps: {\n    templates: MenuSelectTemplates;\n  };\n};\n\nfunction MenuSelect({ cssClasses, templateProps, items, refine }: Props) {\n  const { value: selectedValue } = find(items, item => item.isRefined) || {\n    value: '',\n  };\n\n  return (\n    <div\n      className={cx(cssClasses.root, {\n        [cssClasses.noRefinementRoot]: items.length === 0,\n      })}\n    >\n      <select\n        className={cssClasses.select}\n        value={selectedValue}\n        onChange={event => {\n          refine((event.target as HTMLSelectElement).value);\n        }}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"defaultOption\"\n          rootTagName=\"option\"\n          rootProps={{\n            value: '',\n            className: cssClasses.option,\n          }}\n        />\n\n        {items.map(item => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"option\"\n            rootProps={{\n              value: item.value,\n              className: cssClasses.option,\n            }}\n            key={item.value}\n            data={item}\n          />\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default MenuSelect;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nexport type PaginationLinkComponentCSSClasses = {\n  item: string;\n  link: string;\n};\n\nexport type PaginationLinkProps = {\n  ariaLabel: string;\n  cssClasses: PaginationLinkComponentCSSClasses;\n  handleClick(pageNumber: number, event: MouseEvent): void;\n  isDisabled: boolean;\n  label: string;\n  pageNumber: number;\n  url?: string;\n};\n\nconst PaginationLink = ({\n  cssClasses,\n  label,\n  ariaLabel,\n  url,\n  isDisabled,\n  handleClick,\n  pageNumber,\n}: PaginationLinkProps) => {\n  if (isDisabled) {\n    return (\n      <li className={cssClasses.item}>\n        <span\n          className={cssClasses.link}\n          dangerouslySetInnerHTML={{\n            __html: label,\n          }}\n        />\n      </li>\n    );\n  }\n\n  return (\n    <li className={cssClasses.item}>\n      <a\n        className={cssClasses.link}\n        aria-label={ariaLabel}\n        href={url}\n        onClick={event => handleClick(pageNumber, event)}\n        dangerouslySetInnerHTML={{\n          __html: label,\n        }}\n      />\n    </li>\n  );\n};\n\nexport default PaginationLink;\n","export default {\n  item:\n    '{{label}} ({{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}})',\n  defaultOption: 'See all',\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport connectMenu, {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport MenuSelect, {\n  MenuSelectComponentCSSClasses,\n} from '../../components/MenuSelect/MenuSelect';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { RendererOptions, Template, WidgetFactory } from '../../types';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu-select' });\nconst suit = component('MenuSelect');\n\nexport type MenuSelectCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the root when there are no items to display\n   */\n  noRefinementRoot?: string | string[];\n  /**\n   * CSS class to add to the select element.\n   */\n  select?: string | string[];\n  /**\n   * CSS class to add to the option element.\n   */\n  option?: string | string[];\n};\n\nexport type MenuSelectTemplates = {\n  /**\n   * Item template, provided with `label`, `count`, `isRefined` and `value` data properties.\n   */\n  item: Template<{\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n  }>;\n  /**\n   * Label of the \"see all\" option in the select.\n   */\n  defaultOption: Template;\n};\n\nexport type MenuSelectWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: Partial<MenuSelectTemplates>;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuSelectCSSClasses;\n};\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  renderState,\n  templates,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: MenuSelectComponentCSSClasses;\n  renderState: { templateProps?: PreparedTemplateProps<MenuSelectTemplates> };\n  templates: Partial<MenuSelectTemplates>;\n}) => (\n  {\n    refine,\n    items,\n    instantSearchInstance,\n  }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n  isFirstRendering: boolean\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  render(\n    <MenuSelect\n      cssClasses={cssClasses}\n      items={items}\n      refine={refine}\n      templateProps={renderState.templateProps!}\n    />,\n    containerNode\n  );\n};\n\nexport type MenuSelectWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menuSelect' },\n  MenuConnectorParams,\n  MenuSelectWidgetParams\n>;\n\nconst menuSelect: MenuSelectWidget = function menuSelect(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy = ['name:asc'],\n    limit = 10,\n    cssClasses: userCssClasses = {},\n    templates = defaultTemplates,\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, limit, sortBy, transformItems }),\n    $$widgetType: 'ais.menuSelect',\n  };\n};\n\nexport default menuSelect;\n","export default {\n  item: `<label class=\"{{cssClasses.label}}\">\n  <input type=\"radio\" class=\"{{cssClasses.radio}}\" name=\"{{attribute}}\"{{#isRefined}} checked{{/isRefined}} />\n  <span class=\"{{cssClasses.labelText}}\">{{label}}</span>\n</label>`,\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectNumericMenu, {\n  NumericMenuConnectorParams,\n  NumericMenuWidgetDescription,\n} from '../../connectors/numeric-menu/connectNumericMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { ComponentCSSClasses, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'numeric-menu' });\nconst suit = component('NumericMenu');\n\nconst renderer = ({\n  containerNode,\n  attribute,\n  cssClasses,\n  renderState,\n  templates,\n}) => (\n  { createURL, instantSearchInstance, refine, items },\n  isFirstRendering: boolean\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  render(\n    <RefinementList\n      createURL={createURL}\n      cssClasses={cssClasses}\n      facetValues={items}\n      templateProps={renderState.templateProps}\n      toggleRefinement={refine}\n      attribute={attribute}\n    />,\n    containerNode\n  );\n};\n\nexport type NumericMenuCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot?: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list?: string | string[];\n\n  /**\n   * CSS class to add to each item element.\n   */\n  item?: string | string[];\n\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem?: string | string[];\n\n  /**\n   * CSS class to add to each label element.\n   */\n  label?: string | string[];\n\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText?: string | string[];\n\n  /**\n   * CSS class to add to each radio element (when using the default template).\n   */\n  radio?: string | string[];\n};\n\nexport type NumericMenuComponentCSSClasses = ComponentCSSClasses<\n  NumericMenuCSSClasses\n>;\n\nexport type NumericMenuTemplates = {\n  /**\n   * Item template, provided with `label` (the name in the configuration), `isRefined`, `url`, `value` (the setting for the filter) data properties.\n   */\n  item?: Template<{\n    /**\n     * The name of the attribute.\n     */\n    attribute: string;\n\n    /**\n     * The label for the option.\n     */\n    label: string;\n\n    /**\n     * The encoded URL of the bounds object with a {start, end} form. This\n     * value can be used verbatim in the webpage and can be read by refine\n     * directly. If you want to inspect the value, you can do JSON.parse(window.decodeURI(value))\n     * to get the object.\n     */\n    value: string;\n\n    /**\n     *  Whether or not the refinement is selected.\n     */\n    isRefined: boolean;\n\n    /**\n     * The URL with the applied refinement.\n     */\n    url: string;\n\n    /**\n     * The CSS classes provided to the widget.\n     */\n    cssClasses: NumericMenuComponentCSSClasses;\n  }>;\n};\n\nexport type NumericMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: NumericMenuTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: NumericMenuCSSClasses;\n};\n\nexport type NumericMenuWidget = WidgetFactory<\n  NumericMenuWidgetDescription & { $$widgetType: 'ais.numericMenu' },\n  NumericMenuConnectorParams,\n  NumericMenuWidgetParams\n>;\n\nconst numericMenu: NumericMenuWidget = function numericMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    items,\n    cssClasses: userCssClasses = {},\n    templates = defaultTemplates,\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    radio: cx(suit({ descendantName: 'radio' }), userCssClasses.radio),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectNumericMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      items,\n      transformItems,\n    }),\n    $$widgetType: 'ais.numericMenu',\n  };\n};\n\nexport default numericMenu;\n","/** @jsx h */\n\nimport { Component, h } from 'preact';\nimport cx from 'classnames';\n\nimport PaginationLink from './PaginationLink';\nimport { isSpecialClick } from '../../lib/utils';\nimport {\n  PaginationCSSClasses,\n  PaginationTemplates,\n} from '../../widgets/pagination/pagination';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type PaginationComponentCSSClasses = ComponentCSSClasses<\n  PaginationCSSClasses\n>;\n\nexport type PaginationProps = {\n  createURL(value: number): string;\n  cssClasses: PaginationComponentCSSClasses;\n  currentPage: number;\n  templates: PaginationTemplates;\n  nbPages?: number;\n  pages?: number[];\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  setCurrentPage(value: number): void;\n  showFirst?: boolean;\n  showLast?: boolean;\n  showPrevious?: boolean;\n  showNext?: boolean;\n};\n\ntype PageLink = {\n  label: string;\n  ariaLabel: string;\n  pageNumber: number;\n  additionalClassName: string | null;\n  isDisabled?: boolean;\n  isSelected?: boolean;\n  createURL(value: number): string;\n};\n\nconst defaultProps = {\n  currentPage: 0,\n  nbPages: 0,\n  pages: [],\n};\n\nclass Pagination extends Component<PaginationProps> {\n  public static defaultProps = defaultProps;\n\n  private pageLink({\n    label,\n    ariaLabel,\n    pageNumber,\n    additionalClassName = null,\n    isDisabled = false,\n    isSelected = false,\n    createURL,\n  }: PageLink) {\n    const cssClasses = {\n      item: cx(this.props.cssClasses.item, additionalClassName),\n      link: this.props.cssClasses.link,\n    };\n\n    if (isDisabled) {\n      cssClasses.item = cx(cssClasses.item, this.props.cssClasses.disabledItem);\n    } else if (isSelected) {\n      cssClasses.item = cx(cssClasses.item, this.props.cssClasses.selectedItem);\n    }\n\n    const url = !isDisabled ? createURL(pageNumber) : '#';\n\n    return (\n      <PaginationLink\n        ariaLabel={ariaLabel}\n        cssClasses={cssClasses}\n        handleClick={this.handleClick}\n        isDisabled={isDisabled}\n        key={label + pageNumber + ariaLabel}\n        label={label}\n        pageNumber={pageNumber}\n        url={url}\n      />\n    );\n  }\n\n  public handleClick = (pageNumber: number, event: MouseEvent) => {\n    if (isSpecialClick(event)) {\n      // do not alter the default browser behavior\n      // if one special key is down\n      return;\n    }\n    event.preventDefault();\n    this.props.setCurrentPage(pageNumber);\n  };\n\n  private previousPageLink = () => {\n    return this.pageLink({\n      ariaLabel: 'Previous',\n      additionalClassName: this.props.cssClasses.previousPageItem,\n      isDisabled: this.props.isFirstPage,\n      label: this.props.templates.previous,\n      pageNumber: this.props.currentPage - 1,\n      createURL: this.props.createURL,\n    });\n  };\n\n  private nextPageLink = () => {\n    return this.pageLink({\n      ariaLabel: 'Next',\n      additionalClassName: this.props.cssClasses.nextPageItem,\n      isDisabled: this.props.isLastPage,\n      label: this.props.templates.next,\n      pageNumber: this.props.currentPage + 1,\n      createURL: this.props.createURL,\n    });\n  };\n\n  private firstPageLink = () => {\n    return this.pageLink({\n      ariaLabel: 'First',\n      additionalClassName: this.props.cssClasses.firstPageItem,\n      isDisabled: this.props.isFirstPage,\n      label: this.props.templates.first,\n      pageNumber: 0,\n      createURL: this.props.createURL,\n    });\n  };\n\n  private lastPageLink = () => {\n    return this.pageLink({\n      ariaLabel: 'Last',\n      additionalClassName: this.props.cssClasses.lastPageItem,\n      isDisabled: this.props.isLastPage,\n      label: this.props.templates.last,\n      pageNumber: this.props.nbPages! - 1,\n      createURL: this.props.createURL,\n    });\n  };\n\n  private pages = () => {\n    return this.props.pages!.map(pageNumber =>\n      this.pageLink({\n        ariaLabel: `${pageNumber + 1}`,\n        additionalClassName: this.props.cssClasses.pageItem,\n        isSelected: pageNumber === this.props.currentPage,\n        label: `${pageNumber + 1}`,\n        pageNumber,\n        createURL: this.props.createURL,\n      })\n    );\n  };\n\n  public render() {\n    return (\n      <div\n        className={cx(this.props.cssClasses.root, {\n          [this.props.cssClasses.noRefinementRoot]: this.props.nbPages! <= 1,\n        })}\n      >\n        <ul className={this.props.cssClasses.list}>\n          {this.props.showFirst && this.firstPageLink()}\n          {this.props.showPrevious && this.previousPageLink()}\n          {this.pages()}\n          {this.props.showNext && this.nextPageLink()}\n          {this.props.showLast && this.lastPageLink()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Pagination;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport Pagination from '../../components/Pagination/Pagination';\nimport connectPagination, {\n  PaginationConnectorParams,\n  PaginationRenderState,\n  PaginationWidgetDescription,\n} from '../../connectors/pagination/connectPagination';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('Pagination');\nconst withUsage = createDocumentationMessageGenerator({ name: 'pagination' });\n\nconst defaultTemplates: PaginationTemplates = {\n  previous: '‹',\n  next: '›',\n  first: '«',\n  last: '»',\n};\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  templates,\n  showFirst,\n  showLast,\n  showPrevious,\n  showNext,\n  scrollToNode,\n}): Renderer<PaginationRenderState, Partial<PaginationWidgetParams>> => (\n  {\n    createURL,\n    currentRefinement,\n    nbPages,\n    pages,\n    isFirstPage,\n    isLastPage,\n    refine,\n  },\n  isFirstRendering\n) => {\n  if (isFirstRendering) return;\n\n  const setCurrentPage = (pageNumber: number) => {\n    refine(pageNumber);\n\n    if (scrollToNode !== false) {\n      scrollToNode.scrollIntoView();\n    }\n  };\n\n  render(\n    <Pagination\n      createURL={createURL}\n      cssClasses={cssClasses}\n      currentPage={currentRefinement}\n      templates={templates}\n      nbPages={nbPages}\n      pages={pages}\n      isFirstPage={isFirstPage}\n      isLastPage={isLastPage}\n      setCurrentPage={setCurrentPage}\n      showFirst={showFirst}\n      showLast={showLast}\n      showPrevious={showPrevious}\n      showNext={showNext}\n    />,\n    containerNode\n  );\n};\n\nexport type PaginationCSSClasses = {\n  /**\n   * CSS classes added to the root element of the widget.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot?: string | string[];\n\n  /**\n   * CSS classes added to the wrapping `<ul>`.\n   */\n  list?: string | string[];\n\n  /**\n   * CSS classes added to each `<li>`.\n   */\n  item?: string | string[];\n\n  /**\n   * CSS classes added to the first `<li>`.\n   */\n  firstPageItem?: string | string[];\n\n  /**\n   * CSS classes added to the last `<li>`.\n   */\n  lastPageItem?: string | string[];\n\n  /**\n   * CSS classes added to the previous `<li>`.\n   */\n  previousPageItem?: string | string[];\n\n  /**\n   * CSS classes added to the next `<li>`.\n   */\n  nextPageItem?: string | string[];\n\n  /**\n   * CSS classes added to page `<li>`.\n   */\n  pageItem?: string | string[];\n\n  /**\n   * CSS classes added to the selected `<li>`.\n   */\n  selectedItem?: string | string[];\n\n  /**\n   * CSS classes added to the disabled `<li>`.\n   */\n  disabledItem?: string | string[];\n\n  /**\n   * CSS classes added to each link.\n   */\n  link?: string | string[];\n};\n\nexport type PaginationTemplates = {\n  /**\n   * Label for the Previous link.\n   */\n  previous: string;\n\n  /**\n   * Label for the Next link.\n   */\n  next: string;\n\n  /**\n   * Label for the First link.\n   */\n  first: string;\n\n  /**\n   * Label for the Last link.\n   */\n  last: string;\n};\n\nexport type PaginationWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The max number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The number of pages to display on each side of the current page.\n   * @default 3\n   */\n  padding?: number;\n\n  /**\n   * Where to scroll after a click, set to `false` to disable.\n   * @default body\n   */\n  scrollTo?: string | HTMLElement | boolean;\n\n  /**\n   * Whether to show the \"first page\" control\n   * @default true\n   */\n  showFirst?: boolean;\n\n  /**\n   * Whether to show the \"last page\" control\n   * @default true\n   */\n  showLast?: boolean;\n\n  /**\n   * Whether to show the \"next page\" control\n   * @default true\n   */\n  showNext?: boolean;\n\n  /**\n   * Whether to show the \"previous page\" control\n   * @default true\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Text to display in the links.\n   */\n  templates?: Partial<PaginationTemplates>;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: PaginationCSSClasses;\n};\n\nexport type PaginationWidget = WidgetFactory<\n  PaginationWidgetDescription & { $$widgetType: 'ais.pagination' },\n  PaginationConnectorParams,\n  PaginationWidgetParams\n>;\n\nconst pagination: PaginationWidget = function pagination(widgetParams) {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    totalPages,\n    padding,\n    showFirst = true,\n    showLast = true,\n    showPrevious = true,\n    showNext = true,\n    scrollTo: userScrollTo = 'body',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const scrollTo = userScrollTo === true ? 'body' : userScrollTo;\n  const scrollToNode = scrollTo !== false ? getContainerNode(scrollTo) : false;\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    firstPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'firstPage' }),\n      userCssClasses.firstPageItem\n    ),\n    lastPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'lastPage' }),\n      userCssClasses.lastPageItem\n    ),\n    previousPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'previousPage' }),\n      userCssClasses.previousPageItem\n    ),\n    nextPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'nextPage' }),\n      userCssClasses.nextPageItem\n    ),\n    pageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'page' }),\n      userCssClasses.pageItem\n    ),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const templates: PaginationTemplates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  });\n\n  const makeWidget = connectPagination(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ totalPages, padding }),\n    $$widgetType: 'ais.pagination',\n  };\n};\n\nexport default pagination;\n","import{options as n}from\"preact\";var t,r,u=[],i=n.__r;n.__r=function(n){i&&i(n),t=0,(r=n.__c).__H&&(r.__H.t=A(r.__H.t))};var f=n.diffed;n.diffed=function(n){f&&f(n);var t=n.__c;if(t){var r=t.__H;r&&(r.u=(r.u.some(function(n){n.ref&&(n.ref.current=n.createHandle())}),[]),r.i=A(r.i))}};var o=n.unmount;function e(t){n.__h&&n.__h(r);var u=r.__H||(r.__H={o:[],t:[],i:[],u:[]});return t>=u.o.length&&u.o.push({}),u.o[t]}function c(n){return a(q,n)}function a(n,u,i){var f=e(t++);return f.__c||(f.__c=r,f.v=[i?i(u):q(void 0,u),function(t){var r=n(f.v[0],t);f.v[0]!==r&&(f.v[0]=r,f.__c.setState({}))}]),f.v}function v(n,u){var i=e(t++);h(i.m,u)&&(i.v=n,i.m=u,r.__H.t.push(i),T(r))}function m(n,u){var i=e(t++);h(i.m,u)&&(i.v=n,i.m=u,r.__H.i.push(i))}function d(n){return l(function(){return{current:n}},[])}function p(n,u,i){var f=e(t++);h(f.m,i)&&(f.m=i,r.__H.u.push({ref:n,createHandle:u}))}function l(n,r){var u=e(t++);return h(u.m,r)?(u.m=r,u.p=n,u.v=n()):u.v}function s(n,t){return l(function(){return n},t)}function y(n){var u=r.context[n.__c];if(!u)return n.__p;var i=e(t++);return null==i.v&&(i.v=!0,u.sub(r)),u.props.value}function _(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}n.unmount=function(n){o&&o(n);var t=n.__c;if(t){var r=t.__H;r&&r.o.forEach(function(n){return n.l&&n.l()})}};var T=function(){};function g(){u.some(function(n){n.s=!1,n.__P&&(n.__H.t=A(n.__H.t))}),u=[]}if(\"undefined\"!=typeof window){var w=n.requestAnimationFrame;T=function(t){(!t.s&&(t.s=!0)&&1===u.push(t)||w!==n.requestAnimationFrame)&&(w=n.requestAnimationFrame,(n.requestAnimationFrame||function(n){var t=function(){clearTimeout(r),cancelAnimationFrame(u),setTimeout(n)},r=setTimeout(t,100),u=requestAnimationFrame(t)})(g))}}function A(n){return n.forEach(E),n.forEach(F),[]}function E(n){n.l&&n.l()}function F(n){var t=n.v();\"function\"==typeof t&&(n.l=t)}function h(n,t){return!n||t.some(function(t,r){return t!==n[r]})}function q(n,t){return\"function\"==typeof t?t(n):t}export{c as useState,a as useReducer,v as useEffect,m as useLayoutEffect,d as useRef,p as useImperativeHandle,l as useMemo,s as useCallback,y as useContext,_ as useDebugValue};\n//# sourceMappingURL=hooks.module.js.map\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport cx from 'classnames';\nimport Template from '../Template/Template';\nimport { PanelCSSClasses, PanelTemplates } from '../../widgets/panel/panel';\nimport {\n  ComponentCSSClasses,\n  RenderOptions,\n  UnknownWidgetFactory,\n} from '../../types';\n\nexport type PanelComponentCSSClasses = ComponentCSSClasses<\n  // `collapseIcon` is only used in the default templates of the widget\n  Omit<PanelCSSClasses, 'collapseIcon'>\n>;\n\nexport type PanelProps<TWidget extends UnknownWidgetFactory> = {\n  hidden: boolean;\n  collapsible: boolean;\n  isCollapsed: boolean;\n  data: RenderOptions;\n  cssClasses: PanelComponentCSSClasses;\n  templates: Required<PanelTemplates<TWidget>>;\n  bodyElement: HTMLElement;\n};\n\nfunction Panel<TWidget extends UnknownWidgetFactory>(\n  props: PanelProps<TWidget>\n) {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(props.isCollapsed);\n  const [isControlled, setIsControlled] = useState<boolean>(false);\n  const bodyRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    if (!bodyRef.current) {\n      return undefined;\n    }\n\n    bodyRef.current.appendChild(props.bodyElement);\n\n    return () => {\n      bodyRef!.current!.removeChild(props.bodyElement);\n    };\n  }, [bodyRef, props.bodyElement]);\n\n  if (!isControlled && props.isCollapsed !== isCollapsed) {\n    setIsCollapsed(props.isCollapsed);\n  }\n\n  return (\n    <div\n      className={cx(props.cssClasses.root, {\n        [props.cssClasses.noRefinementRoot]: props.hidden,\n        [props.cssClasses.collapsibleRoot]: props.collapsible,\n        [props.cssClasses.collapsedRoot]: isCollapsed,\n      })}\n      hidden={props.hidden}\n    >\n      {props.templates.header && (\n        <div className={props.cssClasses.header}>\n          <Template\n            templates={props.templates}\n            templateKey=\"header\"\n            rootTagName=\"span\"\n            data={props.data}\n          />\n\n          {props.collapsible && (\n            <button\n              className={props.cssClasses.collapseButton}\n              aria-expanded={!isCollapsed}\n              onClick={event => {\n                event.preventDefault();\n\n                setIsControlled(true);\n                setIsCollapsed(prevIsCollapsed => !prevIsCollapsed);\n              }}\n            >\n              <Template\n                templates={props.templates}\n                templateKey=\"collapseButtonText\"\n                rootTagName=\"span\"\n                data={{ collapsed: isCollapsed }}\n              />\n            </button>\n          )}\n        </div>\n      )}\n\n      <div className={props.cssClasses.body} ref={bodyRef} />\n\n      {props.templates.footer && (\n        <Template\n          templates={props.templates}\n          templateKey=\"footer\"\n          rootProps={{\n            className: props.cssClasses.footer,\n          }}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Panel;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { ComponentCSSClasses } from '../../types';\nimport { PoweredByCSSClasses } from '../../widgets/powered-by/powered-by';\n\nexport type PoweredByComponentCSSClasses = ComponentCSSClasses<\n  PoweredByCSSClasses\n>;\n\nexport type PoweredByProps = {\n  url: string;\n  theme: string;\n  cssClasses: PoweredByComponentCSSClasses;\n};\n\nconst PoweredBy = ({ url, theme, cssClasses }: PoweredByProps) => (\n  <div className={cssClasses.root}>\n    <a\n      href={url}\n      target=\"_blank\"\n      className={cssClasses.link}\n      aria-label=\"Search by Algolia\"\n      rel=\"noopener noreferrer\"\n    >\n      <svg\n        height=\"1.2em\"\n        className={cssClasses.logo}\n        viewBox=\"0 0 168 24\"\n        // This style is necessary as long as it's not included in InstantSearch.css.\n        // For now, InstantSearch.css sets a maximum width of 70px.\n        style={{\n          width: 'auto',\n        }}\n      >\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#5D6494'}\n          d=\"M6.97 6.68V8.3a4.47 4.47 0 00-2.42-.67 2.2 2.2 0 00-1.38.4c-.34.26-.5.6-.5 1.02 0 .43.16.77.49 1.03.33.25.83.53 1.51.83a7.04 7.04 0 011.9 1.08c.34.24.58.54.73.89.15.34.23.74.23 1.18 0 .95-.33 1.7-1 2.24a4 4 0 01-2.6.81 5.71 5.71 0 01-2.94-.68v-1.71c.84.63 1.81.94 2.92.94.58 0 1.05-.14 1.39-.4.34-.28.5-.65.5-1.13 0-.29-.1-.55-.3-.8a2.2 2.2 0 00-.65-.53 23.03 23.03 0 00-1.64-.78 13.67 13.67 0 01-1.11-.64c-.12-.1-.28-.22-.46-.4a1.72 1.72 0 01-.39-.5 4.46 4.46 0 01-.22-.6c-.07-.23-.1-.48-.1-.75 0-.91.33-1.63 1-2.17a4 4 0 012.57-.8c.97 0 1.8.18 2.47.52zm7.47 5.7v-.3a2.26 2.26 0 00-.5-1.44c-.3-.35-.74-.53-1.32-.53-.53 0-.99.2-1.37.58a2.9 2.9 0 00-.72 1.68h3.91zm1 2.79v1.4c-.6.34-1.38.51-2.36.51a4.02 4.02 0 01-3-1.13 4.04 4.04 0 01-1.11-2.97c0-1.3.34-2.32 1.02-3.06a3.38 3.38 0 012.6-1.1c1.03 0 1.85.32 2.46.96.6.64.9 1.57.9 2.78 0 .33-.03.68-.09 1.04h-5.31c.1.7.4 1.24.89 1.61.49.38 1.1.56 1.85.56.86 0 1.58-.2 2.15-.6zm6.61-1.78h-1.21c-.6 0-1.05.12-1.35.36-.3.23-.46.53-.46.89 0 .37.12.66.36.88.23.2.57.32 1.02.32.5 0 .9-.15 1.2-.43.3-.28.44-.65.44-1.1v-.92zm-4.07-2.55V9.33a4.96 4.96 0 012.5-.55c2.1 0 3.17 1.03 3.17 3.08V17H22.1v-.96c-.42.68-1.15 1.02-2.19 1.02-.76 0-1.38-.22-1.84-.66-.46-.44-.7-1-.7-1.68 0-.78.3-1.38.88-1.81.59-.43 1.4-.65 2.46-.65h1.34v-.46c0-.55-.13-.97-.4-1.25-.26-.29-.7-.43-1.32-.43-.86 0-1.65.24-2.35.72zm9.34-1.93v1.42c.39-1 1.1-1.5 2.12-1.5.15 0 .31.02.5.05v1.53c-.23-.1-.48-.14-.76-.14-.54 0-.99.24-1.34.71a2.8 2.8 0 00-.52 1.71V17h-1.57V8.91h1.57zm5 4.09a3 3 0 00.76 2.01c.47.53 1.14.8 2 .8.64 0 1.24-.18 1.8-.53v1.4c-.53.32-1.2.48-2 .48a3.98 3.98 0 01-4.17-4.18c0-1.16.38-2.15 1.14-2.98a4 4 0 013.1-1.23c.7 0 1.34.15 1.92.44v1.44a3.24 3.24 0 00-1.77-.5A2.65 2.65 0 0032.33 13zm7.92-7.28v4.58c.46-1 1.3-1.5 2.5-1.5.8 0 1.42.24 1.9.73.48.5.72 1.17.72 2.05V17H43.8v-5.1c0-.56-.14-.99-.43-1.29-.28-.3-.65-.45-1.1-.45-.54 0-1 .2-1.42.6-.4.4-.61 1.02-.61 1.85V17h-1.56V5.72h1.56zM55.2 15.74c.6 0 1.1-.25 1.5-.76.4-.5.6-1.16.6-1.95 0-.92-.2-1.62-.6-2.12-.4-.5-.92-.74-1.55-.74-.56 0-1.05.22-1.5.67-.44.45-.66 1.13-.66 2.06 0 .96.22 1.67.64 2.14.43.47.95.7 1.57.7zM53 5.72v4.42a2.74 2.74 0 012.43-1.34c1.03 0 1.86.38 2.51 1.15.65.76.97 1.78.97 3.05 0 1.13-.3 2.1-.92 2.9-.62.81-1.47 1.21-2.54 1.21s-1.9-.45-2.46-1.34V17h-1.58V5.72H53zm9.9 11.1l-3.22-7.9h1.74l1 2.62 1.26 3.42c.1-.32.48-1.46 1.15-3.42l.91-2.63h1.66l-2.92 7.87c-.78 2.07-1.96 3.1-3.56 3.1-.28 0-.53-.02-.73-.07v-1.34c.17.04.35.06.54.06 1.03 0 1.76-.57 2.17-1.7z\"\n        />\n        <path\n          fill=\"#5468FF\"\n          d=\"M78.99.94h16.6a2.97 2.97 0 012.96 2.96v16.6a2.97 2.97 0 01-2.97 2.96h-16.6a2.97 2.97 0 01-2.96-2.96V3.9A2.96 2.96 0 0179 .94\"\n        />\n        <path\n          fill=\"#FFF\"\n          d=\"M89.63 5.97v-.78a.98.98 0 00-.98-.97h-2.28a.98.98 0 00-.97.97V6c0 .09.08.15.17.13a7.13 7.13 0 013.9-.02c.08.02.16-.04.16-.13m-6.25 1L83 6.6a.98.98 0 00-1.38 0l-.46.46a.97.97 0 000 1.38l.38.39c.06.06.15.04.2-.02a7.49 7.49 0 011.63-1.62c.07-.04.08-.14.02-.2m4.16 2.45v3.34c0 .1.1.17.2.12l2.97-1.54c.06-.03.08-.12.05-.18a3.7 3.7 0 00-3.08-1.87c-.07 0-.14.06-.14.13m0 8.05a4.49 4.49 0 110-8.98 4.49 4.49 0 010 8.98m0-10.85a6.37 6.37 0 100 12.74 6.37 6.37 0 000-12.74\"\n        />\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#5468FF'}\n          d=\"M120.92 18.8c-4.38.02-4.38-3.54-4.38-4.1V1.36l2.67-.42v13.25c0 .32 0 2.36 1.71 2.37v2.24zm-10.84-2.18c.82 0 1.43-.04 1.85-.12v-2.72a5.48 5.48 0 00-1.57-.2c-.3 0-.6.02-.9.07-.3.04-.57.12-.81.24-.24.11-.44.28-.58.49a.93.93 0 00-.22.65c0 .63.22 1 .61 1.23.4.24.94.36 1.62.36zm-.23-9.7c.88 0 1.62.11 2.23.33.6.22 1.09.53 1.44.92.36.4.61.92.76 1.48.16.56.23 1.17.23 1.85v6.87a21.69 21.69 0 01-4.68.5c-.69 0-1.32-.07-1.9-.2a4 4 0 01-1.46-.63 3.3 3.3 0 01-.96-1.13 4.3 4.3 0 01-.34-1.8 3.13 3.13 0 011.43-2.63c.45-.3.95-.5 1.54-.62a8.8 8.8 0 013.79.05v-.44c0-.3-.04-.6-.11-.87a1.78 1.78 0 00-1.1-1.22 3.2 3.2 0 00-1.15-.2 9.75 9.75 0 00-2.95.46l-.33-2.19a11.43 11.43 0 013.56-.53zm52.84 9.63c.82 0 1.43-.05 1.85-.13V13.7a5.42 5.42 0 00-1.57-.2c-.3 0-.6.02-.9.07-.3.04-.57.12-.81.24-.24.12-.44.28-.58.5a.93.93 0 00-.22.65c0 .63.22.99.61 1.23.4.24.94.36 1.62.36zm-.23-9.7c.88 0 1.63.11 2.23.33.6.22 1.1.53 1.45.92.35.39.6.92.76 1.48.15.56.23 1.18.23 1.85v6.88c-.41.08-1.03.19-1.87.31-.83.12-1.77.18-2.81.18-.7 0-1.33-.06-1.9-.2a4 4 0 01-1.47-.63c-.4-.3-.72-.67-.95-1.13a4.3 4.3 0 01-.34-1.8c0-.66.13-1.08.38-1.53.26-.45.61-.82 1.05-1.1.44-.3.95-.5 1.53-.62a8.8 8.8 0 013.8.05v-.43c0-.31-.04-.6-.12-.88-.07-.28-.2-.52-.38-.73a1.78 1.78 0 00-.73-.5c-.3-.1-.68-.2-1.14-.2a9.85 9.85 0 00-2.95.47l-.32-2.19a11.63 11.63 0 013.55-.53zm-8.03-1.27a1.62 1.62 0 000-3.24 1.62 1.62 0 100 3.24zm1.35 13.22h-2.7V7.27l2.7-.42V18.8zm-4.72 0c-4.38.02-4.38-3.54-4.38-4.1l-.01-13.34 2.67-.42v13.25c0 .32 0 2.36 1.72 2.37v2.24zm-8.7-5.9a4.7 4.7 0 00-.74-2.79 2.4 2.4 0 00-2.07-1 2.4 2.4 0 00-2.06 1 4.7 4.7 0 00-.74 2.8c0 1.16.25 1.94.74 2.62a2.4 2.4 0 002.07 1.02c.88 0 1.57-.34 2.07-1.02a4.2 4.2 0 00.73-2.63zm2.74 0a6.46 6.46 0 01-1.52 4.23c-.49.53-1.07.94-1.76 1.22-.68.29-1.73.45-2.26.45a6.6 6.6 0 01-2.25-.45 5.1 5.1 0 01-2.88-3.13 7.3 7.3 0 01-.01-4.84 5.13 5.13 0 012.9-3.1 5.67 5.67 0 012.22-.42c.81 0 1.56.14 2.24.42.69.29 1.28.69 1.75 1.22.49.52.87 1.15 1.14 1.89a7 7 0 01.43 2.5zm-20.14 0c0 1.11.25 2.36.74 2.88.5.52 1.13.78 1.91.78a4.07 4.07 0 002.12-.6V9.33c-.19-.04-.99-.2-1.76-.23a2.67 2.67 0 00-2.23 1 4.73 4.73 0 00-.78 2.8zm7.44 5.27c0 1.82-.46 3.16-1.4 4-.94.85-2.37 1.27-4.3 1.27-.7 0-2.17-.13-3.34-.4l.43-2.11c.98.2 2.27.26 2.95.26 1.08 0 1.84-.22 2.3-.66.46-.43.68-1.08.68-1.94v-.44a5.2 5.2 0 01-2.54.6 5.6 5.6 0 01-2.01-.36 4.2 4.2 0 01-2.58-2.71 9.88 9.88 0 01.02-5.35 4.92 4.92 0 012.93-2.96 6.6 6.6 0 012.43-.46 19.64 19.64 0 014.43.66v10.6z\"\n        />\n      </svg>\n    </a>\n  </div>\n);\n\nexport default PoweredBy;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { ComponentCSSClasses } from '../../types';\nimport {\n  QueryRuleCustomDataCSSClasses,\n  QueryRuleCustomDataTemplates,\n} from '../../widgets/query-rule-custom-data/query-rule-custom-data';\nimport Template from '../Template/Template';\n\nexport type QueryRuleCustomDataComponentCSSClasses = ComponentCSSClasses<\n  QueryRuleCustomDataCSSClasses\n>;\n\nexport type QueryRuleCustomDataProps = {\n  cssClasses: QueryRuleCustomDataComponentCSSClasses;\n  templates: QueryRuleCustomDataTemplates;\n  items: any[];\n};\n\nconst QueryRuleCustomData = ({\n  cssClasses,\n  templates,\n  items,\n}: QueryRuleCustomDataProps) => (\n  <Template\n    templateKey=\"default\"\n    templates={templates}\n    rootProps={{ className: cssClasses.root }}\n    data={{ items }}\n  />\n);\n\nexport default QueryRuleCustomData;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getObjectType,\n  warning,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport Panel from '../../components/Panel/Panel';\nimport { Template, RenderOptions, WidgetFactory } from '../../types';\n\nexport type PanelCSSClasses = {\n  /**\n   * CSS classes to add to the root element of the widget.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS classes to add to the root element of the widget when there's no refinements.\n   */\n  noRefinementRoot?: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsible (`collapse` is defined).\n   */\n  collapsibleRoot?: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsed.\n   */\n  collapsedRoot?: string | string[];\n\n  /**\n   * CSS classes to add to the collapse button element.\n   */\n  collapseButton?: string | string[];\n\n  /**\n   * CSS classes to add to the collapse icon of the button.\n   */\n  collapseIcon?: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header?: string | string[];\n\n  /**\n   * CSS classes to add to the body.\n   */\n  body?: string | string[];\n\n  /**\n   * CSS classes to add to the footer.\n   */\n  footer?: string | string[];\n};\n\ntype AnyWidgetFactory = WidgetFactory<\n  {\n    $$type: string;\n  },\n  Record<string, any>,\n  // @TODO: this really should be _at least_ { container: string | HTMLElement }\n  // but that or { container: string | HTMLElement; [key: string]: any }\n  // still doesn't allow wider types with another key required.\n  any\n>;\n\nexport type PanelTemplates<TWidget extends AnyWidgetFactory> = {\n  /**\n   * Template to use for the header.\n   */\n  header?: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for the footer.\n   */\n  footer?: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for collapse button.\n   */\n  collapseButtonText?: Template<{ collapsed: boolean }>;\n};\n\ntype GetWidgetRenderState<TWidgetFactory extends AnyWidgetFactory> = ReturnType<\n  TWidgetFactory\n>['getWidgetRenderState'] extends (renderOptions: any) => infer TRenderState\n  ? TRenderState extends Record<string, unknown>\n    ? TRenderState\n    : never\n  : Record<string, unknown>;\n\nexport type PanelRenderOptions<\n  TWidgetFactory extends AnyWidgetFactory\n> = RenderOptions & GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelWidgetParams<TWidgetFactory extends AnyWidgetFactory> = {\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be hidden based on the render options.\n   */\n  hidden?(options: PanelRenderOptions<TWidgetFactory>): boolean;\n\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be collapsed based on the render options.\n   */\n  collapsed?(options: PanelRenderOptions<TWidgetFactory>): boolean;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: PanelTemplates<TWidgetFactory>;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: PanelCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'panel' });\nconst suit = component('Panel');\n\nconst renderer = <TWidget extends AnyWidgetFactory>({\n  containerNode,\n  bodyContainerNode,\n  cssClasses,\n  templates,\n}) => ({ options, hidden, collapsible, collapsed }) => {\n  render(\n    <Panel<TWidget>\n      cssClasses={cssClasses}\n      hidden={hidden}\n      collapsible={collapsible}\n      isCollapsed={collapsed}\n      templates={templates}\n      data={options}\n      bodyElement={bodyContainerNode}\n    />,\n    containerNode\n  );\n};\n\nexport type PanelWidget = <TWidgetFactory extends AnyWidgetFactory>(\n  panelWidgetParams?: PanelWidgetParams<TWidgetFactory>\n) => (\n  widgetFactory: TWidgetFactory\n) => (\n  widgetParams: Parameters<TWidgetFactory>[0]\n) => ReturnType<TWidgetFactory>;\n\n/**\n * The panel widget wraps other widgets in a consistent panel design.\n * It also reacts, indicates and sets CSS classes when widgets are no longer relevant for refining.\n */\nconst panel: PanelWidget = panelWidgetParams => {\n  const {\n    templates = {},\n    hidden = () => false,\n    collapsed,\n    cssClasses: userCssClasses = {},\n  } = panelWidgetParams || {};\n\n  warning(\n    typeof hidden === 'function',\n    `The \\`hidden\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      hidden\n    )}).`\n  );\n\n  warning(\n    typeof collapsed === 'undefined' || typeof collapsed === 'function',\n    `The \\`collapsed\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      collapsed\n    )}).`\n  );\n\n  const bodyContainerNode = document.createElement('div');\n  const collapsible = Boolean(collapsed);\n  const collapsedFn = typeof collapsed === 'function' ? collapsed : () => false;\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    collapsibleRoot: cx(\n      suit({ modifierName: 'collapsible' }),\n      userCssClasses.collapsibleRoot\n    ),\n    collapsedRoot: cx(\n      suit({ modifierName: 'collapsed' }),\n      userCssClasses.collapsedRoot\n    ),\n    collapseButton: cx(\n      suit({ descendantName: 'collapseButton' }),\n      userCssClasses.collapseButton\n    ),\n    collapseIcon: cx(\n      suit({ descendantName: 'collapseIcon' }),\n      userCssClasses.collapseIcon\n    ),\n    body: cx(suit({ descendantName: 'body' }), userCssClasses.body),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    footer: cx(suit({ descendantName: 'footer' }), userCssClasses.footer),\n  };\n\n  return widgetFactory => widgetParams => {\n    if (!(widgetParams && widgetParams.container)) {\n      throw new Error(\n        withUsage(\n          `The \\`container\\` option is required in the widget within the panel.`\n        )\n      );\n    }\n\n    const containerNode = getContainerNode(widgetParams.container);\n\n    const defaultTemplates = {\n      header: '',\n      footer: '',\n      collapseButtonText: ({ collapsed: isCollapsed }) =>\n        `<svg\n          class=\"${cssClasses.collapseIcon}\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 500 500\"\n        >\n        <path d=\"${\n          isCollapsed ? 'M100 250l300-150v300z' : 'M250 400l150-300H100z'\n        }\" fill=\"currentColor\" />\n        </svg>`,\n    };\n\n    const renderPanel = renderer<typeof widgetFactory>({\n      containerNode,\n      bodyContainerNode,\n      cssClasses,\n      templates: {\n        ...defaultTemplates,\n        ...templates,\n      },\n    });\n\n    renderPanel({\n      options: {},\n      hidden: true,\n      collapsible,\n      collapsed: false,\n    });\n\n    const widget = widgetFactory({\n      ...widgetParams,\n      container: bodyContainerNode,\n    });\n\n    // TypeScript somehow loses track of the ...widget type, since it's\n    // not directly returned. Eventually the \"as ReturnType<typeof widgetFactory>\"\n    // will not be needed anymore.\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return {\n      ...widget,\n      dispose(...args) {\n        render(null, containerNode);\n\n        if (typeof widget.dispose === 'function') {\n          return widget.dispose.call(this, ...args);\n        }\n\n        return undefined;\n      },\n      render(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...((widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}) as GetWidgetRenderState<typeof widgetFactory>),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: Boolean(hidden(options)),\n          collapsible,\n          collapsed: Boolean(collapsedFn(options)),\n        });\n\n        if (typeof widget.render === 'function') {\n          widget.render.call(this, ...args);\n        }\n      },\n    } as ReturnType<typeof widgetFactory>;\n  };\n};\n\nexport default panel;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport PoweredBy from '../../components/PoweredBy/PoweredBy';\nimport connectPoweredBy, {\n  PoweredByConnectorParams,\n  PoweredByRenderState,\n  PoweredByWidgetDescription,\n} from '../../connectors/powered-by/connectPoweredBy';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('PoweredBy');\nconst withUsage = createDocumentationMessageGenerator({ name: 'powered-by' });\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n}): Renderer<PoweredByRenderState, Partial<PoweredByWidgetParams>> => (\n  { url, widgetParams },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    const { theme = 'light' } = widgetParams;\n\n    render(\n      <PoweredBy cssClasses={cssClasses} url={url} theme={theme} />,\n      containerNode\n    );\n\n    return;\n  }\n};\n\nexport type PoweredByCSSClasses = {\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the link.\n   */\n  link?: string | string[];\n\n  /**\n   * CSS class to add to the SVG logo.\n   */\n  logo?: string | string[];\n};\n\nexport type PoweredByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The theme of the logo.\n   * @default 'light'\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: PoweredByCSSClasses;\n};\n\nexport type PoweredByWidget = WidgetFactory<\n  PoweredByWidgetDescription & { $$widgetType: 'ais.poweredBy' },\n  PoweredByConnectorParams,\n  PoweredByWidgetParams\n>;\n\nconst poweredBy: PoweredByWidget = function poweredBy(widgetParams) {\n  const { container, cssClasses: userCssClasses = {}, theme = 'light' } =\n    widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(\n      suit(),\n      suit({ modifierName: theme === 'dark' ? 'dark' : 'light' }),\n      userCssClasses.root\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    logo: cx(suit({ descendantName: 'logo' }), userCssClasses.logo),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectPoweredBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ theme }),\n    $$widgetType: 'ais.poweredBy',\n  };\n};\n\nexport default poweredBy;\n","import { WidgetFactory } from '../../types';\nimport { createDocumentationMessageGenerator, noop } from '../../lib/utils';\nimport connectQueryRules, {\n  ParamTrackedFilters,\n  ParamTransformRuleContexts,\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\n\ntype QueryRuleContextWidgetParams = {\n  trackedFilters: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n};\n\ntype QueryRuleContext = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleContext' },\n  QueryRulesConnectorParams,\n  QueryRuleContextWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-context',\n});\n\nconst queryRuleContext: QueryRuleContext = (\n  widgetParams = {} as QueryRuleContextWidgetParams\n) => {\n  if (!widgetParams.trackedFilters) {\n    throw new Error(withUsage('The `trackedFilters` option is required.'));\n  }\n\n  return {\n    ...connectQueryRules<QueryRuleContextWidgetParams>(noop)(widgetParams),\n    $$widgetType: 'ais.queryRuleContext',\n  };\n};\n\nexport default queryRuleContext;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { WidgetFactory, Template } from '../../types';\nimport connectQueryRules, {\n  QueryRulesConnectorParams,\n  QueryRulesRenderState,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport CustomData, {\n  QueryRuleCustomDataComponentCSSClasses,\n} from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\n\nexport type QueryRuleCustomDataCSSClasses = {\n  root?: string | string[];\n};\n\nexport type QueryRuleCustomDataTemplates = {\n  default: Template<{ items: any[] }>;\n};\n\ntype QueryRuleCustomDataWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: QueryRuleCustomDataCSSClasses;\n  templates?: QueryRuleCustomDataTemplates;\n};\n\ntype QueryRuleCustomDataWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleCustomData' },\n  QueryRulesConnectorParams,\n  QueryRuleCustomDataWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-custom-data',\n});\n\nconst suit = component('QueryRuleCustomData');\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  templates,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: QueryRuleCustomDataComponentCSSClasses;\n  renderState: {\n    templateProps?: PreparedTemplateProps<QueryRuleCustomDataTemplates>;\n  };\n  templates: QueryRuleCustomDataTemplates;\n}) => ({ items }: QueryRulesRenderState) => {\n  render(\n    <CustomData\n      cssClasses={cssClasses as QueryRuleCustomDataComponentCSSClasses}\n      templates={templates}\n      items={items}\n    />,\n    containerNode\n  );\n};\n\nconst queryRuleCustomData: QueryRuleCustomDataWidget = widgetParams => {\n  const {\n    container,\n    cssClasses: userCssClasses = {} as QueryRuleCustomDataCSSClasses,\n    templates: userTemplates = {},\n    transformItems = (items =>\n      items) as QueryRulesConnectorParams['transformItems'],\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n  };\n\n  const containerNode = getContainerNode(container);\n  const defaultTemplates = {\n    default: ({ items }) => JSON.stringify(items, null, 2),\n  };\n  const templates: QueryRuleCustomDataTemplates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectQueryRules(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({\n      transformItems,\n    }),\n    $$widgetType: 'ais.queryRuleCustomData',\n  };\n};\n\nexport default queryRuleCustomData;\n","/** @jsx h */\n\nimport { h, Component } from 'preact';\nimport cx from 'classnames';\nimport Template from '../Template/Template';\nimport {\n  RangeInputCSSClasses,\n  RangeInputTemplates,\n} from '../../widgets/range-input/range-input';\nimport { Range, RangeBoundaries } from '../../connectors/range/connectRange';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type RangeInputComponentCSSClasses = ComponentCSSClasses<\n  RangeInputCSSClasses\n>;\n\nexport type RangeInputProps = {\n  min?: number;\n  max?: number;\n  step: number;\n  values: Partial<Range>;\n  cssClasses: RangeInputComponentCSSClasses;\n  templateProps: {\n    templates: RangeInputTemplates;\n  };\n  refine(rangeValue: RangeBoundaries): void;\n};\n\nclass RangeInput extends Component<RangeInputProps, Partial<Range>> {\n  public state = {\n    min: this.props.values.min,\n    max: this.props.values.max,\n  };\n\n  public componentWillReceiveProps(nextProps: RangeInputProps) {\n    this.setState({\n      min: nextProps.values.min,\n      max: nextProps.values.max,\n    });\n  }\n\n  private onInput = (key: string) => (event: Event) => {\n    const { value } = event.currentTarget as HTMLInputElement;\n\n    this.setState({\n      [key]: Number(value),\n    });\n  };\n\n  private onSubmit = (event: Event) => {\n    event.preventDefault();\n\n    this.props.refine([this.state.min, this.state.max]);\n  };\n\n  public render() {\n    const { min: minValue, max: maxValue } = this.state;\n    const { min, max, step, cssClasses, templateProps } = this.props;\n    const isDisabled = min && max ? min >= max : false;\n    const hasRefinements = Boolean(minValue || maxValue);\n    const rootClassNames = cx(cssClasses.root, {\n      [cssClasses.noRefinement]: !hasRefinements,\n    });\n\n    return (\n      <div className={rootClassNames}>\n        <form className={cssClasses.form} onSubmit={this.onSubmit}>\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMin)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={minValue ?? ''}\n              onInput={this.onInput('min')}\n              placeholder={min?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"separatorText\"\n            rootTagName=\"span\"\n            rootProps={{\n              className: cssClasses.separator,\n            }}\n          />\n\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMax)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={maxValue ?? ''}\n              onInput={this.onInput('max')}\n              placeholder={max?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"submitText\"\n            rootTagName=\"button\"\n            rootProps={{\n              type: 'submit',\n              className: cssClasses.submit,\n              disabled: isDisabled,\n            }}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RangeInput;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport RangeInput from '../../components/RangeInput/RangeInput';\nimport connectRange, {\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { Renderer, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-input' });\nconst suit = component('RangeInput');\n\nconst defaultTemplates: RangeInputTemplates = {\n  separatorText: 'to',\n  submitText: 'Go',\n};\n\nexport type RangeInputTemplates = {\n  /**\n   * The label of the separator, between min and max.\n   * @default \"to\"\n   */\n  separatorText: Template;\n  /**\n   * The label of the submit button\n   * @default \"Go\"\n   */\n  submitText: Template;\n};\n\nexport type RangeInputCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinement?: string | string[];\n  /**\n   * CSS class to add to the form element.\n   */\n  form?: string | string[];\n  /**\n   * CSS class to add to the label element.\n   */\n  label?: string | string[];\n  /**\n   * CSS class to add to the input element.\n   */\n  input?: string | string[];\n  /**\n   * CSS class to add to the min input element.\n   */\n  inputMin?: string | string[];\n  /**\n   * CSS class to add to the max input element.\n   */\n  separator?: string | string[];\n  /**\n   * CSS class to add to the separator of the form.\n   */\n  inputMax?: string | string[];\n  /**\n   * CSS class to add to the submit button of the form.\n   */\n  submit?: string | string[];\n};\n\nexport type RangeInputWidgetParams = {\n  /**\n   * Valid CSS Selector as a string or DOMElement.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Labels to use for the widget.\n   */\n  templates?: Partial<RangeInputTemplates>;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RangeInputCSSClasses;\n};\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  renderState,\n  templates,\n}): Renderer<RangeRenderState, Partial<RangeInputWidgetParams>> => (\n  { refine, range, start, widgetParams, instantSearchInstance },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    return;\n  }\n\n  const { min: rangeMin, max: rangeMax } = range;\n  const [minValue, maxValue] = start;\n\n  const step = 1 / Math.pow(10, widgetParams.precision || 0);\n\n  const values = {\n    min: minValue !== -Infinity && minValue !== rangeMin ? minValue : undefined,\n    max: maxValue !== Infinity && maxValue !== rangeMax ? maxValue : undefined,\n  };\n\n  render(\n    <RangeInput\n      min={rangeMin}\n      max={rangeMax}\n      step={step}\n      values={values}\n      cssClasses={cssClasses}\n      refine={refine}\n      templateProps={renderState.templateProps}\n    />,\n    containerNode\n  );\n};\n\nexport type RangeInputWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeInput';\n    $$type: 'ais.rangeInput';\n  },\n  RangeConnectorParams,\n  RangeInputWidgetParams\n>;\n\nconst rangeInput: RangeInputWidget = function rangeInput(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    precision = 0,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinement: cx(suit({ modifierName: 'noRefinement' })),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    inputMin: cx(\n      suit({ descendantName: 'input', modifierName: 'min' }),\n      userCssClasses.inputMin\n    ),\n    inputMax: cx(\n      suit({ descendantName: 'input', modifierName: 'max' }),\n      userCssClasses.inputMax\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      min,\n      max,\n      precision,\n    }),\n\n    $$type: 'ais.rangeInput',\n    $$widgetType: 'ais.rangeInput',\n  };\n};\n\nexport default rangeInput;\n","/**\n * This is a fork of Rheostat for Preact X.\n *\n * @see https://github.com/airbnb/rheostat\n */\n\n/** @jsx h */\n\nimport {\n  h,\n  Component,\n  ComponentChildren,\n  ComponentType,\n  createRef,\n} from 'preact';\n\ntype BoundingBox = {\n  height: number;\n  left: number;\n  top: number;\n  width: number;\n};\n\nconst KEYS = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  LEFT: 37,\n  PAGE_DOWN: 34,\n  PAGE_UP: 33,\n  RIGHT: 39,\n  UP: 38,\n} as const;\nconst PERCENT_EMPTY = 0;\nconst PERCENT_FULL = 100;\n\nfunction getPosition(value: number, min: number, max: number) {\n  return ((value - min) / (max - min)) * 100;\n}\n\nfunction getValue(pos: number, min: number, max: number) {\n  const decimal = pos / 100;\n\n  if (pos === 0) {\n    return min;\n  } else if (pos === 100) {\n    return max;\n  }\n\n  return Math.round((max - min) * decimal + min);\n}\n\nfunction getClassName(props: Props) {\n  const orientation =\n    props.orientation === 'vertical'\n      ? 'rheostat-vertical'\n      : 'rheostat-horizontal';\n\n  return ['rheostat', orientation]\n    .concat(props.className!.split(' '))\n    .join(' ');\n}\n\nfunction getHandleFor(ev: Event) {\n  return Number(\n    (ev.currentTarget as HTMLElement).getAttribute('data-handle-key')\n  );\n}\n\nfunction killEvent(ev: Event) {\n  ev.stopPropagation();\n  ev.preventDefault();\n}\n\nfunction Button(props: h.JSX.IntrinsicElements['button']) {\n  return <button {...props} type=\"button\" />;\n}\n\n// Preact doesn't have builtin types for Style, h.JSX.HTMLAttributes['style'] is just object\n// maybe migrate to csstype later?\ntype Style = {\n  position?: 'absolute';\n  top?: number | string;\n  left?: number | string;\n  height?: string;\n  width?: string;\n};\n\nexport type PitProps = {\n  children: number | string;\n  style: Style;\n};\n\ntype Props = {\n  children?: ComponentChildren;\n  className?: string;\n  disabled?: boolean;\n  handle?: ComponentType<h.JSX.HTMLAttributes>;\n  max?: number;\n  min?: number;\n  onClick?(...args: unknown[]): unknown;\n  onChange?(...args: unknown[]): unknown;\n  onKeyPress?(...args: unknown[]): unknown;\n  onSliderDragEnd?(...args: unknown[]): unknown;\n  onSliderDragMove?(...args: unknown[]): unknown;\n  onSliderDragStart?(...args: unknown[]): unknown;\n  onValuesUpdated?(...args: unknown[]): unknown;\n  orientation?: 'horizontal' | 'vertical';\n  pitComponent?: ComponentType<PitProps>;\n  pitPoints?: number[];\n  progressBar?: ComponentType<h.JSX.HTMLAttributes>;\n  snap?: boolean;\n  snapPoints?: number[];\n  values?: number[];\n};\n\ntype State = {\n  className: string;\n  handlePos: number[];\n  handleDimensions: number;\n  mousePos: { x: number; y: number } | null;\n  sliderBox: Partial<BoundingBox>;\n  slidingIndex: number | null;\n  values: number[];\n};\n\nclass Rheostat extends Component<Props, State> {\n  public static defaultProps = {\n    className: '',\n    children: null,\n    disabled: false,\n    handle: Button,\n    max: PERCENT_FULL,\n    min: PERCENT_EMPTY,\n    onClick: null,\n    onChange: null,\n    onKeyPress: null,\n    onSliderDragEnd: null,\n    onSliderDragMove: null,\n    onSliderDragStart: null,\n    onValuesUpdated: null,\n    orientation: 'horizontal',\n    pitComponent: null,\n    pitPoints: [],\n    progressBar: 'div',\n    snap: false,\n    snapPoints: [],\n    values: [PERCENT_EMPTY],\n  };\n\n  public state: State = {\n    className: getClassName(this.props),\n    // non-null thanks to defaultProps\n    handlePos: this.props.values!.map(value =>\n      getPosition(value, this.props.min!, this.props.max!)\n    ),\n    handleDimensions: 0,\n    mousePos: null,\n    sliderBox: {},\n    slidingIndex: null,\n    // non-null thanks to defaultProps\n    values: this.props.values!,\n  };\n\n  private rheostat = createRef<HTMLAnchorElement>();\n\n  public constructor(props: Props) {\n    super(props);\n\n    this.getPublicState = this.getPublicState.bind(this);\n    this.getSliderBoundingBox = this.getSliderBoundingBox.bind(this);\n    this.getProgressStyle = this.getProgressStyle.bind(this);\n    this.getMinValue = this.getMinValue.bind(this);\n    this.getMaxValue = this.getMaxValue.bind(this);\n    this.getHandleDimensions = this.getHandleDimensions.bind(this);\n    this.getClosestSnapPoint = this.getClosestSnapPoint.bind(this);\n    this.getSnapPosition = this.getSnapPosition.bind(this);\n    this.getNextPositionForKey = this.getNextPositionForKey.bind(this);\n    this.getNextState = this.getNextState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getClosestHandle = this.getClosestHandle.bind(this);\n    this.setStartSlide = this.setStartSlide.bind(this);\n    this.startMouseSlide = this.startMouseSlide.bind(this);\n    this.startTouchSlide = this.startTouchSlide.bind(this);\n    this.handleMouseSlide = this.handleMouseSlide.bind(this);\n    this.handleTouchSlide = this.handleTouchSlide.bind(this);\n    this.handleSlide = this.handleSlide.bind(this);\n    this.endSlide = this.endSlide.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.validatePosition = this.validatePosition.bind(this);\n    this.validateValues = this.validateValues.bind(this);\n    this.canMove = this.canMove.bind(this);\n    this.fireChangeEvent = this.fireChangeEvent.bind(this);\n    this.slideTo = this.slideTo.bind(this);\n    this.updateNewValues = this.updateNewValues.bind(this);\n  }\n\n  public componentWillReceiveProps(nextProps: Required<Props>) {\n    const { className, disabled, min, max, orientation } = this.props;\n    const { values, slidingIndex } = this.state;\n\n    const minMaxChanged = nextProps.min !== min || nextProps.max !== max;\n\n    const valuesChanged =\n      values.length !== nextProps.values.length ||\n      values.some((value, idx) => nextProps.values[idx] !== value);\n\n    const orientationChanged =\n      nextProps.className !== className ||\n      nextProps.orientation !== orientation;\n\n    const willBeDisabled = nextProps.disabled && !disabled;\n\n    if (orientationChanged) {\n      this.setState({\n        className: getClassName(nextProps),\n      });\n    }\n\n    if (minMaxChanged || valuesChanged) this.updateNewValues(nextProps);\n\n    if (willBeDisabled && slidingIndex !== null) {\n      this.endSlide();\n    }\n  }\n\n  private getPublicState() {\n    const { min, max } = this.props;\n    const { values } = this.state;\n\n    return { max, min, values };\n  }\n\n  private getSliderBoundingBox(): BoundingBox {\n    // only gets called after render, so it will always be defined\n    const node = this.rheostat.current!;\n    const rect = node.getBoundingClientRect();\n\n    return {\n      height: rect.height || node.clientHeight,\n      left: rect.left,\n      top: rect.top,\n      width: rect.width || node.clientWidth,\n    };\n  }\n\n  private getProgressStyle(idx: number): Style {\n    const { handlePos } = this.state;\n\n    const value = handlePos[idx];\n\n    if (idx === 0) {\n      return this.props.orientation === 'vertical'\n        ? { height: `${value}%`, top: 0 }\n        : { left: 0, width: `${value}%` };\n    }\n\n    const prevValue = handlePos[idx - 1];\n    const diffValue = value - prevValue;\n\n    return this.props.orientation === 'vertical'\n      ? { height: `${diffValue}%`, top: `${prevValue}%` }\n      : { left: `${prevValue}%`, width: `${diffValue}%` };\n  }\n\n  private getMinValue(idx: number) {\n    return this.state.values[idx - 1]\n      ? Math.max(this.props.min!, this.state.values[idx - 1])\n      : this.props.min;\n  }\n\n  private getMaxValue(idx: number) {\n    return this.state.values[idx + 1]\n      ? Math.min(this.props.max!, this.state.values[idx + 1])\n      : this.props.max;\n  }\n\n  private getHandleDimensions(ev: Event, sliderBox: BoundingBox) {\n    const handleNode = (ev.currentTarget as HTMLElement) || null;\n\n    if (!handleNode) return 0;\n\n    return this.props.orientation === 'vertical'\n      ? ((handleNode.clientHeight / sliderBox.height) * PERCENT_FULL) / 2\n      : ((handleNode.clientWidth / sliderBox.width) * PERCENT_FULL) / 2;\n  }\n\n  private getClosestSnapPoint(value: number) {\n    // non-null thanks to defaultProps\n    if (!this.props.snapPoints!.length) return value;\n\n    return this.props.snapPoints!.reduce((snapTo, snap) =>\n      Math.abs(snapTo - value) < Math.abs(snap - value) ? snapTo : snap\n    );\n  }\n\n  private getSnapPosition(positionPercent: number) {\n    if (!this.props.snap) return positionPercent;\n\n    const { max, min } = this.props as Required<Props>;\n\n    const value = getValue(positionPercent, min, max);\n\n    const snapValue = this.getClosestSnapPoint(value);\n\n    return getPosition(snapValue, min, max);\n  }\n\n  private getNextPositionForKey(idx: number, keyCode: number) {\n    const { handlePos, values } = this.state;\n    const { max, min, snapPoints } = this.props as Required<Props>;\n\n    const shouldSnap = this.props.snap;\n\n    let proposedValue = values[idx];\n    let proposedPercentage = handlePos[idx];\n    const originalPercentage = proposedPercentage;\n    let stepValue = 1;\n\n    if (max >= 100) {\n      proposedPercentage = Math.round(proposedPercentage);\n    } else {\n      stepValue = 100 / (max - min);\n    }\n\n    let currentIndex: number | null = null;\n\n    if (shouldSnap) {\n      currentIndex = snapPoints.indexOf(this.getClosestSnapPoint(values[idx]));\n    }\n\n    type StepMultiplier = { [key: number]: (value: number) => number };\n\n    const stepMultiplier: StepMultiplier = {\n      [KEYS.LEFT]: v => v * -1,\n      [KEYS.RIGHT]: v => v,\n      [KEYS.UP]: v => v,\n      [KEYS.DOWN]: v => v * -1,\n      [KEYS.PAGE_DOWN]: v => (v > 1 ? -v : v * -10),\n      [KEYS.PAGE_UP]: v => (v > 1 ? v : v * 10),\n    };\n\n    if (Object.prototype.hasOwnProperty.call(stepMultiplier, keyCode)) {\n      proposedPercentage += stepMultiplier[keyCode](stepValue);\n\n      if (shouldSnap) {\n        if (!currentIndex) {\n          // nothing happens\n        } else if (proposedPercentage > originalPercentage) {\n          // move cursor right unless overflow\n          if (currentIndex < snapPoints.length - 1) {\n            proposedValue = snapPoints[currentIndex + 1];\n          }\n          // move cursor left unless there is overflow\n        } else if (currentIndex > 0) {\n          proposedValue = snapPoints[currentIndex - 1];\n        }\n      }\n    } else if (keyCode === KEYS.HOME) {\n      proposedPercentage = PERCENT_EMPTY;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[0];\n      }\n    } else if (keyCode === KEYS.END) {\n      proposedPercentage = PERCENT_FULL;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[snapPoints.length - 1];\n      }\n    } else {\n      return null;\n    }\n\n    return shouldSnap\n      ? getPosition(proposedValue, min, max)\n      : proposedPercentage;\n  }\n\n  private getNextState(idx, proposedPosition) {\n    const { handlePos } = this.state;\n    const { max, min } = this.props as Required<Props>;\n\n    const actualPosition = this.validatePosition(idx, proposedPosition);\n\n    const nextHandlePos = handlePos.map((pos, index) =>\n      index === idx ? actualPosition : pos\n    );\n\n    return {\n      handlePos: nextHandlePos,\n      values: nextHandlePos.map(pos => getValue(pos, min, max)),\n    };\n  }\n\n  private getClosestHandle(positionPercent: number) {\n    const { handlePos } = this.state;\n\n    return handlePos.reduce((closestIdx, _node, idx) => {\n      const challenger = Math.abs(handlePos[idx] - positionPercent);\n      const current = Math.abs(handlePos[closestIdx] - positionPercent);\n      return challenger < current ? idx : closestIdx;\n    }, 0);\n  }\n\n  private setStartSlide(ev: MouseEvent, x: number, y: number) {\n    const sliderBox = this.getSliderBoundingBox();\n\n    this.setState({\n      handleDimensions: this.getHandleDimensions(ev, sliderBox),\n      mousePos: { x, y },\n      sliderBox,\n      slidingIndex: getHandleFor(ev),\n    });\n  }\n\n  private startMouseSlide(ev: MouseEvent) {\n    this.setStartSlide(ev, ev.clientX, ev.clientY);\n\n    document.addEventListener('mousemove', this.handleMouseSlide, false);\n    document.addEventListener('mouseup', this.endSlide, false);\n\n    killEvent(ev);\n  }\n\n  private startTouchSlide(ev) {\n    if (ev.changedTouches.length > 1) return;\n\n    const touch = ev.changedTouches[0];\n\n    this.setStartSlide(ev, touch.clientX, touch.clientY);\n\n    document.addEventListener('touchmove', this.handleTouchSlide, false);\n    document.addEventListener('touchend', this.endSlide, false);\n\n    if (this.props.onSliderDragStart) this.props.onSliderDragStart();\n\n    killEvent(ev);\n  }\n\n  private handleMouseSlide(ev) {\n    if (this.state.slidingIndex === null) return;\n    this.handleSlide(ev.clientX, ev.clientY);\n    killEvent(ev);\n  }\n\n  private handleTouchSlide(ev) {\n    if (this.state.slidingIndex === null) return;\n\n    if (ev.changedTouches.length > 1) {\n      this.endSlide();\n      return;\n    }\n\n    const touch = ev.changedTouches[0];\n\n    this.handleSlide(touch.clientX, touch.clientY);\n    killEvent(ev);\n  }\n\n  private handleSlide(x: number, y: number) {\n    const { slidingIndex: idx, sliderBox } = this.state;\n\n    const positionPercent =\n      this.props.orientation === 'vertical'\n        ? ((y - sliderBox.top!) / sliderBox.height!) * PERCENT_FULL\n        : ((x - sliderBox.left!) / sliderBox.width!) * PERCENT_FULL;\n\n    this.slideTo(idx!, positionPercent);\n\n    if (this.canMove(idx!, positionPercent)) {\n      // update mouse positions\n      this.setState({ mousePos: { x, y } });\n      if (this.props.onSliderDragMove) this.props.onSliderDragMove();\n    }\n  }\n\n  private endSlide() {\n    const idx = this.state.slidingIndex;\n\n    this.setState({ slidingIndex: null });\n\n    document.removeEventListener('mouseup', this.endSlide, false);\n    document.removeEventListener('touchend', this.endSlide, false);\n    document.removeEventListener('touchmove', this.handleTouchSlide, false);\n    document.removeEventListener('mousemove', this.handleMouseSlide, false);\n\n    if (this.props.onSliderDragEnd) this.props.onSliderDragEnd();\n    if (this.props.snap) {\n      const positionPercent = this.getSnapPosition(this.state.handlePos[idx!]);\n      this.slideTo(idx!, positionPercent, () => this.fireChangeEvent());\n    } else {\n      this.fireChangeEvent();\n    }\n  }\n\n  private handleClick(ev: MouseEvent) {\n    if ((ev.target as HTMLDivElement).getAttribute('data-handle-key')) {\n      return;\n    }\n\n    // Calculate the position of the slider on the page so we can determine\n    // the position where you click in relativity.\n    const sliderBox = this.getSliderBoundingBox();\n\n    const positionDecimal =\n      this.props.orientation === 'vertical'\n        ? (ev.clientY - sliderBox.top) / sliderBox.height\n        : (ev.clientX - sliderBox.left) / sliderBox.width;\n\n    const positionPercent = positionDecimal * PERCENT_FULL;\n\n    const handleId = this.getClosestHandle(positionPercent);\n\n    const validPositionPercent = this.getSnapPosition(positionPercent);\n\n    // Move the handle there\n    this.slideTo(handleId, validPositionPercent, () => this.fireChangeEvent());\n\n    if (this.props.onClick) this.props.onClick();\n  }\n\n  private handleKeydown(ev: KeyboardEvent) {\n    const idx = getHandleFor(ev);\n\n    if (ev.keyCode === KEYS.ESC) {\n      (ev.currentTarget as HTMLElement).blur();\n      return;\n    }\n\n    const proposedPercentage = this.getNextPositionForKey(idx, ev.keyCode);\n\n    if (proposedPercentage === null) return;\n\n    if (this.canMove(idx, proposedPercentage)) {\n      this.slideTo(idx, proposedPercentage, () => this.fireChangeEvent());\n      if (this.props.onKeyPress) this.props.onKeyPress();\n    }\n\n    killEvent(ev);\n  }\n\n  // Make sure the proposed position respects the bounds and\n  // does not collide with other handles too much.\n  private validatePosition(idx: number, proposedPosition: number) {\n    const { handlePos, handleDimensions } = this.state;\n\n    return Math.max(\n      Math.min(\n        proposedPosition,\n        handlePos[idx + 1] !== undefined\n          ? handlePos[idx + 1] - handleDimensions\n          : PERCENT_FULL // 100% is the highest value\n      ),\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : PERCENT_EMPTY // 0% is the lowest value\n    );\n  }\n\n  private validateValues(proposedValues: number[], props: Required<Props>) {\n    const { max, min } = props || this.props;\n\n    return proposedValues.map((value, idx, values) => {\n      const realValue = Math.max(Math.min(value, max), min);\n\n      if (values.length && realValue < values[idx - 1]) {\n        return values[idx - 1];\n      }\n\n      return realValue;\n    });\n  }\n\n  public canMove(idx: number, proposedPosition: number) {\n    const { handlePos, handleDimensions } = this.state;\n\n    if (proposedPosition < PERCENT_EMPTY) return false;\n    if (proposedPosition > PERCENT_FULL) return false;\n\n    const nextHandlePosition =\n      handlePos[idx + 1] !== undefined\n        ? handlePos[idx + 1] - handleDimensions\n        : Infinity;\n\n    if (proposedPosition > nextHandlePosition) return false;\n\n    const prevHandlePosition =\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : -Infinity;\n\n    if (proposedPosition < prevHandlePosition) return false;\n\n    return true;\n  }\n\n  public fireChangeEvent() {\n    const { onChange } = this.props;\n    if (onChange) onChange(this.getPublicState());\n  }\n\n  public slideTo(\n    idx: number,\n    proposedPosition: number,\n    onAfterSet?: () => void\n  ) {\n    const nextState = this.getNextState(idx, proposedPosition);\n\n    this.setState(nextState, () => {\n      const { onValuesUpdated } = this.props;\n      if (onValuesUpdated) onValuesUpdated(this.getPublicState());\n      if (onAfterSet) onAfterSet();\n    });\n  }\n\n  public updateNewValues(nextProps: Required<Props>) {\n    const { slidingIndex } = this.state;\n\n    // Don't update while the slider is sliding\n    if (slidingIndex !== null) {\n      return;\n    }\n\n    const { max, min, values } = nextProps;\n\n    const nextValues = this.validateValues(values, nextProps);\n\n    this.setState(\n      {\n        handlePos: nextValues.map(value => getPosition(value, min, max)),\n        values: nextValues,\n      },\n      () => this.fireChangeEvent()\n    );\n  }\n\n  public render() {\n    const {\n      children,\n      disabled,\n      handle: Handle,\n      max,\n      min,\n      orientation,\n      pitComponent: PitComponent,\n      pitPoints,\n      progressBar: ProgressBar,\n    } = this.props as Required<Props>; // all required thanks to defaultProps\n    const { className, handlePos, values } = this.state;\n\n    return (\n      <div\n        className={className}\n        ref={this.rheostat}\n        onClick={disabled ? undefined : this.handleClick}\n        style={{ position: 'relative' }}\n      >\n        <div className=\"rheostat-background\" />\n        {handlePos.map((pos, idx) => {\n          const handleStyle: Style =\n            orientation === 'vertical'\n              ? { top: `${pos}%`, position: 'absolute' }\n              : { left: `${pos}%`, position: 'absolute' };\n\n          return (\n            <Handle\n              aria-valuemax={this.getMaxValue(idx)}\n              aria-valuemin={this.getMinValue(idx)}\n              aria-valuenow={values[idx]}\n              aria-disabled={disabled}\n              data-handle-key={idx}\n              className=\"rheostat-handle\"\n              key={`handle-${idx}`}\n              onClick={killEvent}\n              onKeyDown={disabled ? undefined : this.handleKeydown}\n              onMouseDown={disabled ? undefined : this.startMouseSlide}\n              onTouchStart={disabled ? undefined : this.startTouchSlide}\n              role=\"slider\"\n              style={handleStyle}\n              tabIndex={0}\n            />\n          );\n        })}\n\n        {handlePos.map((_node, idx, arr) => {\n          if (idx === 0 && arr.length > 1) {\n            return null;\n          }\n\n          return (\n            <ProgressBar\n              className=\"rheostat-progress\"\n              key={`progress-bar-${idx}`}\n              style={this.getProgressStyle(idx)}\n            />\n          );\n        })}\n\n        {PitComponent &&\n          pitPoints.map(n => {\n            const pos = getPosition(n, min, max);\n            const pitStyle: Style =\n              orientation === 'vertical'\n                ? { top: `${pos}%`, position: 'absolute' }\n                : { left: `${pos}%`, position: 'absolute' };\n\n            return (\n              <PitComponent key={`pit-${n}`} style={pitStyle}>\n                {n}\n              </PitComponent>\n            );\n          })}\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Rheostat;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\nimport { PitProps } from './Rheostat';\n\nconst Pit = ({ style, children }: PitProps) => {\n  // first, end & middle\n  const positionValue = Math.round(parseFloat(style.left as string));\n  const shouldDisplayValue = [0, 50, 100].includes(positionValue);\n\n  const value = children as string;\n  const pitValue = Math.round(parseInt(value, 10) * 100) / 100;\n\n  return (\n    <div\n      style={{ ...style, marginLeft: positionValue === 100 ? '-2px' : 0 }}\n      className={cx('rheostat-marker', 'rheostat-marker-horizontal', {\n        'rheostat-marker-large': shouldDisplayValue,\n      })}\n    >\n      {shouldDisplayValue && <div className={'rheostat-value'}>{pitValue}</div>}\n    </div>\n  );\n};\n\nexport default Pit;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport Template from '../Template/Template';\nimport {\n  RelevantSortCSSClasses,\n  RelevantSortTemplates,\n} from '../../widgets/relevant-sort/relevant-sort';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type RelevantSortComponentCSSClasses = ComponentCSSClasses<\n  RelevantSortCSSClasses\n>;\n\ntype RelevantSortProps = {\n  cssClasses: RelevantSortComponentCSSClasses;\n  templates: RelevantSortTemplates;\n  isRelevantSorted: boolean;\n  isVirtualReplica: boolean;\n  refine(relevancyStrictness: number | undefined): void;\n};\n\nconst RelevantSort = ({\n  cssClasses,\n  templates,\n  isRelevantSorted,\n  isVirtualReplica,\n  refine,\n}: RelevantSortProps) =>\n  isVirtualReplica ? (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"text\"\n        templates={templates}\n        rootProps={{\n          className: cssClasses.text,\n        }}\n        data={{ isRelevantSorted }}\n      />\n      <button\n        type=\"button\"\n        className={cssClasses.button}\n        onClick={() => {\n          if (isRelevantSorted) {\n            refine(0);\n          } else {\n            refine(undefined);\n          }\n        }}\n      >\n        <Template\n          rootTagName=\"span\"\n          templateKey=\"button\"\n          templates={templates}\n          data={{ isRelevantSorted }}\n        />\n      </button>\n    </div>\n  ) : null;\n\nexport default RelevantSort;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport cx from 'classnames';\nimport { StatsCSSClasses, StatsTemplates } from '../../widgets/stats/stats';\nimport Template from '../Template/Template';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type StatsComponentCSSClasses = ComponentCSSClasses<StatsCSSClasses>;\n\ntype StatsProps = {\n  cssClasses: StatsComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: StatsTemplates;\n  };\n  hitsPerPage: number | undefined;\n  nbHits: number;\n  nbSortedHits: number | undefined;\n  areHitsSorted: boolean;\n  nbPages: number;\n  page: number;\n  processingTimeMS: number;\n  query: string;\n};\n\nconst Stats = ({\n  nbHits,\n  nbSortedHits,\n  cssClasses,\n  templateProps,\n  ...rest\n}: StatsProps) => (\n  <div className={cx(cssClasses.root)}>\n    <Template\n      {...templateProps}\n      templateKey=\"text\"\n      rootTagName=\"span\"\n      rootProps={{ className: cssClasses.text }}\n      data={{\n        hasManySortedResults: nbSortedHits && nbSortedHits > 1,\n        hasNoSortedResults: nbSortedHits === 0,\n        hasOneSortedResults: nbSortedHits === 1,\n        hasManyResults: nbHits > 1,\n        hasNoResults: nbHits === 0,\n        hasOneResult: nbHits === 1,\n        nbHits,\n        nbSortedHits,\n        cssClasses,\n        ...rest,\n      }}\n    />\n  </div>\n);\n\nexport default Stats;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport {\n  ToggleRefinementRenderState,\n  ToggleRefinementValue,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\nimport { ComponentCSSClasses } from '../../types';\nimport {\n  ToggleRefinementTemplates,\n  ToggleRefinementCSSClasses,\n} from '../../widgets/toggle-refinement/toggle-refinement';\n\nimport Template from '../Template/Template';\n\nexport type ToggleRefinementComponentCSSClasses = ComponentCSSClasses<\n  ToggleRefinementCSSClasses\n>;\n\nexport type ToggleRefinementProps = {\n  currentRefinement: ToggleRefinementValue;\n  refine: ToggleRefinementRenderState['refine'];\n  cssClasses: ToggleRefinementComponentCSSClasses;\n  templateProps: PreparedTemplateProps<ToggleRefinementTemplates>;\n};\n\nconst ToggleRefinement = ({\n  currentRefinement,\n  refine,\n  cssClasses,\n  templateProps,\n}: ToggleRefinementProps) => (\n  <div className={cssClasses.root}>\n    <label className={cssClasses.label}>\n      <input\n        className={cssClasses.checkbox}\n        type=\"checkbox\"\n        checked={currentRefinement.isRefined}\n        onChange={event =>\n          refine({ isRefined: !(event.target as HTMLInputElement).checked })\n        }\n      />\n\n      <Template\n        {...templateProps}\n        rootTagName=\"span\"\n        rootProps={{ className: cssClasses.labelText }}\n        templateKey=\"labelText\"\n        data={currentRefinement}\n      />\n    </label>\n  </div>\n);\n\nexport default ToggleRefinement;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport Template from '../Template/Template';\n\nimport {\n  VoiceSearchCSSClasses,\n  VoiceSearchTemplates,\n} from '../../widgets/voice-search/voice-search';\nimport { VoiceListeningState } from '../../lib/voiceSearchHelper/types';\nimport { ComponentCSSClasses } from '../../types';\n\nexport type VoiceSearchComponentCSSClasses = ComponentCSSClasses<\n  VoiceSearchCSSClasses\n>;\n\nexport type VoiceSearchProps = {\n  cssClasses: VoiceSearchComponentCSSClasses;\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n  templates: VoiceSearchTemplates;\n};\n\nconst VoiceSearch = ({\n  cssClasses,\n  isBrowserSupported,\n  isListening,\n  toggleListening,\n  voiceListeningState,\n  templates,\n}: VoiceSearchProps) => {\n  const handleClick = (event: MouseEvent): void => {\n    if (event.currentTarget instanceof HTMLElement) {\n      event.currentTarget.blur();\n    }\n    toggleListening();\n  };\n\n  const { status, transcript, isSpeechFinal, errorCode } = voiceListeningState;\n  return (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"buttonText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cssClasses.button,\n          type: 'button',\n          title: `Search by voice${\n            isBrowserSupported ? '' : ' (not supported on this browser)'\n          }`,\n          onClick: handleClick,\n          disabled: !isBrowserSupported,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n      <Template\n        templateKey=\"status\"\n        rootProps={{\n          className: cssClasses.status,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n    </div>\n  );\n};\n\nexport default VoiceSearch;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport { PlainSearchParameters } from 'algoliasearch-helper';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport connectVoiceSearch, {\n  VoiceSearchConnectorParams,\n  VoiceSearchRenderState,\n  VoiceSearchWidgetDescription,\n} from '../../connectors/voice-search/connectVoiceSearch';\nimport VoiceSearchComponent, {\n  VoiceSearchComponentCSSClasses,\n} from '../../components/VoiceSearch/VoiceSearch';\nimport defaultTemplates from './defaultTemplates';\nimport { WidgetFactory, Template, Renderer } from '../../types';\nimport { CreateVoiceSearchHelper } from '../../lib/voiceSearchHelper/types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'voice-search' });\nconst suit = component('VoiceSearch');\n\nexport type VoiceSearchCSSClasses = {\n  root?: string | string[];\n  button?: string | string[];\n  status?: string | string[];\n};\n\ntype VoiceSearchTemplateProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n  transcript: string;\n  isSpeechFinal: boolean;\n  isBrowserSupported: boolean;\n};\n\nexport type VoiceSearchTemplates = {\n  buttonText: Template<VoiceSearchTemplateProps>;\n  status: Template<VoiceSearchTemplateProps>;\n};\n\nexport type VoiceSearchWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: VoiceSearchCSSClasses;\n  templates?: Partial<VoiceSearchTemplates>;\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\ntype VoiceSearchRendererWidgetParams = {\n  container: HTMLElement;\n  cssClasses: VoiceSearchComponentCSSClasses;\n  templates: VoiceSearchTemplates;\n} & VoiceSearchWidgetParams;\n\ntype VoiceSearch = WidgetFactory<\n  VoiceSearchWidgetDescription & { $$type: 'ais.voiceSearch' },\n  VoiceSearchConnectorParams,\n  VoiceSearchWidgetParams\n>;\n\nconst renderer: Renderer<\n  VoiceSearchRenderState,\n  VoiceSearchRendererWidgetParams\n> = ({\n  isBrowserSupported,\n  isListening,\n  toggleListening,\n  voiceListeningState,\n  widgetParams,\n}) => {\n  const { container, cssClasses, templates } = widgetParams;\n\n  render(\n    <VoiceSearchComponent\n      cssClasses={cssClasses}\n      templates={templates}\n      isBrowserSupported={isBrowserSupported}\n      isListening={isListening}\n      toggleListening={toggleListening}\n      voiceListeningState={voiceListeningState}\n    />,\n    container\n  );\n};\n\nconst voiceSearch: VoiceSearch = widgetParams => {\n  const {\n    container,\n    cssClasses: userCssClasses = {} as VoiceSearchCSSClasses,\n    templates,\n    searchAsYouSpeak = false,\n    language,\n    additionalQueryParameters,\n    createVoiceSearchHelper,\n  }: VoiceSearchWidgetParams = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    status: cx(suit({ descendantName: 'status' }), userCssClasses.status),\n  };\n\n  const makeWidget = connectVoiceSearch(renderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      container: containerNode,\n      cssClasses,\n      templates: { ...defaultTemplates, ...templates },\n      searchAsYouSpeak,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper,\n    }),\n    $$widgetType: 'ais.voiceSearch',\n  };\n};\n\nexport default voiceSearch;\n","/** @jsx h */\n\nimport { h, Component } from 'preact';\nimport Rheostat from './Rheostat';\nimport cx from 'classnames';\nimport { range } from '../../lib/utils';\nimport Pit from './Pit';\nimport { RangeBoundaries } from '../../connectors/range/connectRange';\n\nexport type SliderProps = {\n  refine(values: RangeBoundaries): void;\n  min?: number;\n  max?: number;\n  values: RangeBoundaries;\n  pips?: boolean;\n  step: number;\n  tooltips?:\n    | boolean\n    | {\n        format(value: number): string;\n      };\n  cssClasses: {\n    root: string;\n    disabledRoot: string;\n  };\n};\n\nclass Slider extends Component<SliderProps> {\n  private get isDisabled() {\n    return this.props.min! >= this.props.max!;\n  }\n\n  private handleChange = ({ values }) => {\n    if (!this.isDisabled) {\n      this.props.refine(values);\n    }\n  };\n\n  // creates an array number where to display a pit point on the slider\n  private computeDefaultPitPoints({ min, max }) {\n    const totalLength = max - min;\n    const steps = 34;\n    const stepsLength = totalLength / steps;\n\n    const pitPoints = [\n      min,\n      ...range({\n        end: steps - 1,\n      }).map(step => min + stepsLength * (step + 1)),\n      max,\n    ];\n\n    return pitPoints;\n  }\n\n  // creates an array of values where the slider should snap to\n  private computeSnapPoints({ min, max, step }) {\n    if (!step) return undefined;\n    return [...range({ start: min, end: max, step }), max];\n  }\n\n  private createHandleComponent = tooltips => props => {\n    // display only two decimals after comma,\n    // and apply `tooltips.format()` if any\n    const roundedValue =\n      Math.round(parseFloat(props['aria-valuenow']) * 100) / 100;\n    const value =\n      tooltips && tooltips.format\n        ? tooltips.format(roundedValue)\n        : roundedValue;\n\n    const className = cx(props.className, {\n      'rheostat-handle-lower': props['data-handle-key'] === 0,\n      'rheostat-handle-upper': props['data-handle-key'] === 1,\n    });\n\n    return (\n      <div {...props} className={className}>\n        {tooltips && <div className=\"rheostat-tooltip\">{value}</div>}\n      </div>\n    );\n  };\n\n  public render() {\n    const { tooltips, step, pips, values, cssClasses } = this.props;\n\n    const { min, max } = this.isDisabled\n      ? { min: this.props.min, max: this.props.max! + 0.001 }\n      : this.props;\n\n    const snapPoints = this.computeSnapPoints({ min, max, step });\n    const pitPoints =\n      pips === false ? [] : this.computeDefaultPitPoints({ min, max });\n\n    return (\n      <div\n        className={cx(cssClasses.root, {\n          [cssClasses.disabledRoot]: this.isDisabled,\n        })}\n      >\n        <Rheostat\n          handle={this.createHandleComponent(tooltips)}\n          onChange={this.handleChange}\n          min={min}\n          max={max}\n          pitComponent={Pit}\n          pitPoints={pitPoints}\n          snap={true}\n          snapPoints={snapPoints}\n          values={(this.isDisabled ? [min, max] : values) as number[]}\n          disabled={this.isDisabled}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport Slider from '../../components/Slider/Slider';\nimport connectRange, {\n  RangeBoundaries,\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { Renderer, WidgetFactory } from '../../types';\nimport { RangeInputWidgetParams } from '../range-input/range-input';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-slider' });\nconst suit = component('RangeSlider');\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  pips,\n  step,\n  tooltips,\n}): Renderer<RangeRenderState, Partial<RangeInputWidgetParams>> => (\n  { refine, range, start },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    // There's no information at this point, let's render nothing.\n    return;\n  }\n\n  const { min: minRange, max: maxRange } = range;\n\n  const [minStart, maxStart] = start;\n  const minFinite = minStart === -Infinity ? minRange : minStart;\n  const maxFinite = maxStart === Infinity ? maxRange : maxStart;\n\n  // Clamp values to the range for avoid extra rendering & refinement\n  // Should probably be done on the connector side, but we need to stay\n  // backward compatible so we still need to pass [-Infinity, Infinity]\n  const values: RangeBoundaries = [\n    minFinite! > maxRange! ? maxRange : minFinite,\n    maxFinite! < minRange! ? minRange : maxFinite,\n  ];\n\n  render(\n    <Slider\n      cssClasses={cssClasses}\n      refine={refine}\n      min={minRange}\n      max={maxRange}\n      values={values}\n      tooltips={tooltips}\n      step={step}\n      pips={pips}\n    />,\n    containerNode\n  );\n};\n\nexport type RangeSliderCssClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the disabled root element.\n   */\n  disabledRoot?: string | string[];\n};\n\ntype RangeSliderTooltipOptions = {\n  /**\n   * The function takes the raw value as input, and should return\n   * a string for the label that should be used for this value.\n   * @example\n   * { format(rawValue) {return '$' + Math.round(rawValue).toLocaleString() } }\n   */\n  format(value: number): string;\n};\n\nexport type RangeSliderWidgetParams = {\n  /**\n   * CSS Selector or DOMElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.;\n   */\n  attribute: string;\n  /**\n   * Should we show tooltips or not.\n   * The default tooltip will show the raw value.\n   * You can also provide an object with a format function as an attribute.\n   * So that you can format the tooltip display value as you want.\n   * @default true\n   */\n  tooltips?: boolean | RangeSliderTooltipOptions;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RangeSliderCssClasses;\n  /**\n   * Show slider pips.\n   * @default true\n   */\n  pips?: boolean;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Every handle move will jump that number of steps.\n   */\n  step?: number;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n};\n\nexport type RangeSliderWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeSlider';\n    $$type: 'ais.rangeSlider';\n  },\n  RangeConnectorParams,\n  RangeSliderWidgetParams\n>;\n\n/**\n * The range slider is a widget which provides a user-friendly way to filter the\n * results based on a single numeric range.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n */\nconst rangeSlider: RangeSliderWidget = function rangeSlider(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    cssClasses: userCssClasses = {},\n    step,\n    pips = true,\n    precision = 0,\n    tooltips = true,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    disabledRoot: cx(\n      suit({ modifierName: 'disabled' }),\n      userCssClasses.disabledRoot\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    step,\n    pips,\n    tooltips,\n    cssClasses,\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, min, max, precision }),\n\n    $$type: 'ais.rangeSlider',\n    $$widgetType: 'ais.rangeSlider',\n  };\n};\n\nexport default rangeSlider;\n","export default {\n  item: `{{#count}}<a class=\"{{cssClasses.link}}\" aria-label=\"{{value}} & up\" href=\"{{url}}\">{{/count}}{{^count}}<div class=\"{{cssClasses.link}}\" aria-label=\"{{value}} & up\" disabled>{{/count}}\n  {{#stars}}<svg class=\"{{cssClasses.starIcon}} {{#.}}{{cssClasses.fullStarIcon}}{{/.}}{{^.}}{{cssClasses.emptyStarIcon}}{{/.}}\" aria-hidden=\"true\" width=\"24\" height=\"24\">\n    {{#.}}<use xlink:href=\"#ais-RatingMenu-starSymbol\"></use>{{/.}}{{^.}}<use xlink:href=\"#ais-RatingMenu-starEmptySymbol\"></use>{{/.}}\n  </svg>{{/stars}}\n  <span class=\"{{cssClasses.label}}\">& Up</span>\n  {{#count}}<span class=\"{{cssClasses.count}}\">{{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}}</span>{{/count}}\n{{#count}}</a>{{/count}}{{^count}}</div>{{/count}}`,\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectRatingMenu, {\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams,\n  RatingMenuRenderState,\n} from '../../connectors/rating-menu/connectRatingMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport {\n  ComponentCSSClasses,\n  RendererOptions,\n  WidgetFactory,\n} from '../../types';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'rating-menu' });\nconst suit = component('RatingMenu');\n\nexport type RatingMenuTemplates = {\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: string | ((data: any) => string);\n};\n\nexport type RatingMenuCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinementRoot?: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list?: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item?: string | string[];\n  /**\n   * CSS class to add the selected item element.\n   */\n  selectedItem?: string | string[];\n  /**\n   * CSS class to add a disabled item element.\n   */\n  disabledItem?: string | string[];\n  /**\n   * CSS class to add to each link element.\n   */\n  link?: string | string[];\n  /**\n   * CSS class to add to each star element (when using the default template).\n   */\n  starIcon?: string | string[];\n  /**\n   * CSS class to add to each full star element (when using the default template).\n   */\n  fullStarIcon?: string | string[];\n  /**\n   * CSS class to add to each empty star element (when using the default template).\n   */\n  emptyStarIcon?: string | string[];\n  /**\n   * CSS class to add to each label.\n   */\n  label?: string | string[];\n  /**\n   * CSS class to add to each counter.\n   */\n  count?: string | string[];\n};\n\nexport type RatingMenuComponentCSSClasses = ComponentCSSClasses<\n  RatingMenuCSSClasses\n>;\n\nexport type RatingMenuWidgetParams = {\n  /**\n   * Place where to insert the widget in your webpage.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute in your records that contains the ratings.\n   */\n  attribute: string;\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: Partial<RatingMenuTemplates>;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RatingMenuCSSClasses;\n};\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  templates,\n  renderState,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: RatingMenuComponentCSSClasses;\n  templates: Partial<RatingMenuTemplates>;\n  renderState: { templateProps?: PreparedTemplateProps<RatingMenuTemplates> };\n}) => (\n  {\n    refine,\n    items,\n    createURL,\n    instantSearchInstance,\n  }: RatingMenuRenderState & RendererOptions<RatingMenuConnectorParams>,\n  isFirstRendering: boolean\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  render(\n    <RefinementList\n      createURL={createURL}\n      cssClasses={cssClasses}\n      facetValues={items}\n      templateProps={renderState.templateProps}\n      toggleRefinement={refine}\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display:none;\">\n        <symbol id={suit({ descendantName: 'starSymbol' })} viewBox=\"0 0 24 24\">\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\n        </symbol>\n        <symbol\n          id={suit({ descendantName: 'starEmptySymbol' })}\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n        </symbol>\n      </svg>\n    </RefinementList>,\n    containerNode\n  );\n};\n\n/**\n * Rating menu is used for displaying grade like filters. The values are normalized within boundaries.\n *\n * The maximum value can be set (with `max`), the minimum is always 0.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n *\n * @type {WidgetFactory}\n * @devNovel RatingMenu\n * @category filter\n * @param {RatingMenuWidgetParams} widgetParams RatingMenu widget options.\n * @return {Widget} A new RatingMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.ratingMenu({\n *     container: '#stars',\n *     attribute: 'rating',\n *     max: 5,\n *   })\n * ]);\n */\nexport type RatingMenuWidget = WidgetFactory<\n  RatingMenuWidgetDescription & { $$widgetType: 'ais.ratingMenu' },\n  RatingMenuConnectorParams,\n  RatingMenuWidgetParams\n>;\n\nconst ratingMenu: RatingMenuWidget = function ratingMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    max = 5,\n    cssClasses: userCssClasses = {},\n    templates = defaultTemplates,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    starIcon: cx(suit({ descendantName: 'starIcon' }), userCssClasses.starIcon),\n    fullStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'full' }),\n      userCssClasses.fullStarIcon\n    ),\n    emptyStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'empty' }),\n      userCssClasses.emptyStarIcon\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRatingMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, max }),\n    $$widgetType: 'ais.ratingMenu',\n  };\n};\n\nexport default ratingMenu;\n","/* eslint max-len: 0 */\n\nexport default {\n  reset: `\n<svg class=\"{{cssClasses.resetIcon}}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" width=\"10\" height=\"10\">\n  <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n</svg>\n  `,\n  submit: `\n<svg class=\"{{cssClasses.submitIcon}}\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 40 40\">\n  <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n</svg>\n  `,\n  loadingIndicator: `\n<svg class=\"{{cssClasses.loadingIcon}}\" width=\"16\" height=\"16\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#444\">\n  <g fill=\"none\" fillRule=\"evenodd\">\n    <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n      <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n      <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          from=\"0 18 18\"\n          to=\"360 18 18\"\n          dur=\"1s\"\n          repeatCount=\"indefinite\"\n        />\n      </path>\n    </g>\n  </g>\n</svg>\n  `,\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport RefinementList, {\n  RefinementListComponentCSSClasses,\n} from '../../components/RefinementList/RefinementList';\nimport connectRefinementList, {\n  RefinementListRenderState,\n  RefinementListConnectorParams,\n  RefinementListWidgetDescription,\n} from '../../connectors/refinement-list/connectRefinementList';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { Template, WidgetFactory, RendererOptions } from '../../types';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\nimport searchBoxDefaultTemplates from '../search-box/defaultTemplates';\nimport { SearchBoxTemplates } from '../search-box/search-box';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n});\nconst suit = component('RefinementList');\nconst searchBoxSuit = component('SearchBox');\n\ntype RefinementListOwnTemplates = {\n  /**\n   * Item template, provided with `label`, `highlighted`, `value`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<RefinementListItemData>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template;\n  /**\n   * Templates to use for search for facet values when there are no results.\n   */\n  searchableNoResults: Template;\n};\n\ntype RefinementListSearchableTemplates = {\n  /**\n   * Templates to use for search for facet values submit button.\n   */\n  searchableSubmit: SearchBoxTemplates['submit'];\n  /**\n   * Templates to use for search for facet values reset button.\n   */\n  searchableReset: SearchBoxTemplates['reset'];\n  /**\n   * Templates to use for the search for facet values loading indicator.\n   */\n  searchableLoadingIndicator: SearchBoxTemplates['loadingIndicator'];\n};\n\nexport type RefinementListTemplates = RefinementListSearchableTemplates &\n  RefinementListOwnTemplates;\n\nexport type RefinementListItemData = {\n  /**\n   * The number of occurrences of the facet in the result set.\n   */\n  count: number;\n  /**\n   * True if the value is selected.\n   */\n  isRefined: boolean;\n  /**\n   * The label to display.\n   */\n  label: string;\n  /**\n   * The value used for refining.\n   */\n  value: string;\n  /**\n   * The label highlighted (when using search for facet values). This value is displayed in the default template.\n   */\n  highlighted: string;\n  /**\n   * The url with this refinement selected.\n   */\n  url: string;\n  /**\n   * Object containing all the classes computed for the item.\n   */\n  cssClasses: RefinementListCSSClasses;\n};\n\nexport type RefinementListOwnCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot?: string | string[];\n  /**\n   * CSS class to add to the root element with no results.\n   */\n  noResults?: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list?: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item?: string | string[];\n  /**\n   * CSS class to add to each selected element.\n   */\n  selectedItem?: string | string[];\n  /**\n   * CSS class to add to each label element (when using the default template).\n   */\n  label?: string | string[];\n  /**\n   * CSS class to add to each checkbox element (when using the default template).\n   */\n  checkbox?: string | string[];\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText?: string | string[];\n  /**\n   * CSS class to add to the show more element\n   */\n  showMore?: string | string[];\n  /**\n   * CSS class to add to the disabled show more element\n   */\n  disabledShowMore?: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count?: string | string[];\n  /**\n   * CSS class to add to the searchable container.\n   */\n  searchBox?: string | string[];\n};\n\ntype RefinementListSearchableCSSClasses = {\n  searchableRoot?: string | string[];\n  searchableForm?: string | string[];\n  searchableInput?: string | string[];\n  searchableSubmit?: string | string[];\n  searchableSubmitIcon?: string | string[];\n  searchableReset?: string | string[];\n  searchableResetIcon?: string | string[];\n  searchableLoadingIndicator?: string | string[];\n  searchableLoadingIcon?: string | string[];\n};\n\nexport type RefinementListCSSClasses = RefinementListOwnCSSClasses &\n  RefinementListSearchableCSSClasses;\n\nexport type RefinementListWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Add a search input to let the user search for more facet values. In order\n   * to make this feature work, you need to make the attribute searchable\n   * [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting)\n   * or [the dashboard](https://www.algolia.com/explorer/display/)\n   */\n  searchable?: boolean;\n  /**\n   * Value of the search field placeholder.\n   */\n  searchablePlaceholder?: string;\n  /**\n   * When `false` the search field will become disabled if there are less items\n   * to display than the `options.limit`, otherwise the search field is always usable.\n   */\n  searchableIsAlwaysActive?: boolean;\n  /**\n   * When activated, it will escape the facet values that are returned from Algolia.\n   * In this case, the surrounding tags will always be `<mark></mark>`.\n   */\n  searchableEscapeFacetValues?: boolean;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: Partial<RefinementListTemplates>;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RefinementListCSSClasses;\n};\n\nexport const defaultTemplates: RefinementListOwnTemplates = {\n  item: `<label class=\"{{cssClasses.label}}\">\n  <input type=\"checkbox\"\n         class=\"{{cssClasses.checkbox}}\"\n         value=\"{{value}}\"\n         {{#isRefined}}checked{{/isRefined}} />\n  <span class=\"{{cssClasses.labelText}}\">{{#isFromSearch}}{{{highlighted}}}{{/isFromSearch}}{{^isFromSearch}}{{highlighted}}{{/isFromSearch}}</span>\n  <span class=\"{{cssClasses.count}}\">{{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}}</span>\n</label>`,\n  showMoreText: `\n    {{#isShowingMore}}\n      Show less\n    {{/isShowingMore}}\n    {{^isShowingMore}}\n      Show more\n    {{/isShowingMore}}\n    `,\n  searchableNoResults: 'No results',\n};\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  templates,\n  searchBoxTemplates,\n  renderState,\n  showMore,\n  searchable,\n  searchablePlaceholder,\n  searchableIsAlwaysActive,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: RefinementListComponentCSSClasses;\n  renderState: {\n    templateProps?: PreparedTemplateProps<RefinementListOwnTemplates>;\n    searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxTemplates>;\n  };\n  templates: Partial<RefinementListOwnTemplates>;\n  searchBoxTemplates: Partial<SearchBoxTemplates>;\n  showMore?: boolean;\n  searchable?: boolean;\n  searchablePlaceholder?: string;\n  searchableIsAlwaysActive?: boolean;\n}) => (\n  {\n    refine,\n    items,\n    createURL,\n    searchForItems,\n    isFromSearch,\n    instantSearchInstance,\n    toggleShowMore,\n    isShowingMore,\n    hasExhaustiveItems,\n    canToggleShowMore,\n  }: RefinementListRenderState & RendererOptions<RefinementListConnectorParams>,\n  isFirstRendering: boolean\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n    renderState.searchBoxTemplateProps = prepareTemplateProps({\n      defaultTemplates: searchBoxDefaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates: searchBoxTemplates,\n    });\n    return;\n  }\n\n  render(\n    <RefinementList\n      createURL={createURL}\n      cssClasses={cssClasses}\n      facetValues={items}\n      templateProps={renderState.templateProps}\n      searchBoxTemplateProps={renderState.searchBoxTemplateProps}\n      toggleRefinement={refine}\n      searchFacetValues={searchable ? searchForItems : undefined}\n      searchPlaceholder={searchablePlaceholder}\n      searchIsAlwaysActive={searchableIsAlwaysActive}\n      isFromSearch={isFromSearch}\n      showMore={showMore && !isFromSearch && items.length > 0}\n      toggleShowMore={toggleShowMore}\n      isShowingMore={isShowingMore}\n      hasExhaustiveItems={hasExhaustiveItems}\n      canToggleShowMore={canToggleShowMore}\n    />,\n    containerNode\n  );\n};\n\nexport type RefinementListWidget = WidgetFactory<\n  RefinementListWidgetDescription & { $$widgetType: 'ais.refinementList' },\n  RefinementListConnectorParams,\n  RefinementListWidgetParams\n>;\n\n/**\n * The refinement list widget is one of the most common widget that you can find\n * in a search UI. With this widget, the user can filter the dataset based on facets.\n *\n * The refinement list displays only the most relevant facets for the current search\n * context. The sort option only affects the facet that are returned by the engine,\n * not which facets are returned.\n *\n * This widget also implements search for facet values, which is a mini search inside the\n * values of the facets. This makes easy to deal with uncommon facet values.\n *\n * @requirements\n *\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * If you also want to use search for facet values on this attribute, you need to make it searchable using the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).\n */\nconst refinementList: RefinementListWidget = function refinementList(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    operator,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    searchable = false,\n    searchablePlaceholder = 'Search...',\n    searchableEscapeFacetValues = true,\n    searchableIsAlwaysActive = true,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = defaultTemplates as RefinementListTemplates,\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const escapeFacetValues = searchable\n    ? Boolean(searchableEscapeFacetValues)\n    : false;\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    searchBox: cx(\n      suit({ descendantName: 'searchBox' }),\n      userCssClasses.searchBox\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    noResults: cx(\n      suit({ descendantName: 'noResults' }),\n      userCssClasses.noResults\n    ),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n    searchable: {\n      root: cx(searchBoxSuit(), userCssClasses.searchableRoot),\n      form: cx(\n        searchBoxSuit({ descendantName: 'form' }),\n        userCssClasses.searchableForm\n      ),\n      input: cx(\n        searchBoxSuit({ descendantName: 'input' }),\n        userCssClasses.searchableInput\n      ),\n      submit: cx(\n        searchBoxSuit({ descendantName: 'submit' }),\n        userCssClasses.searchableSubmit\n      ),\n      submitIcon: cx(\n        searchBoxSuit({ descendantName: 'submitIcon' }),\n        userCssClasses.searchableSubmitIcon\n      ),\n      reset: cx(\n        searchBoxSuit({ descendantName: 'reset' }),\n        userCssClasses.searchableReset\n      ),\n      resetIcon: cx(\n        searchBoxSuit({ descendantName: 'resetIcon' }),\n        userCssClasses.searchableResetIcon\n      ),\n      loadingIndicator: cx(\n        searchBoxSuit({ descendantName: 'loadingIndicator' }),\n        userCssClasses.searchableLoadingIndicator\n      ),\n      loadingIcon: cx(\n        searchBoxSuit({ descendantName: 'loadingIcon' }),\n        userCssClasses.searchableLoadingIcon\n      ),\n    },\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates: userTemplates,\n    searchBoxTemplates: {\n      submit: userTemplates.searchableSubmit,\n      reset: userTemplates.searchableReset,\n      loadingIndicator: userTemplates.searchableLoadingIndicator,\n    },\n    renderState: {},\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n    showMore,\n  });\n\n  const makeWidget = connectRefinementList(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      operator,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      escapeFacetValues,\n      transformItems,\n    }),\n    $$widgetType: 'ais.refinementList',\n  };\n};\n\nexport default refinementList;\n","export default {\n  text: '',\n  button: ({ isRelevantSorted }) =>\n    isRelevantSorted ? 'See all results' : 'See relevant results',\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { WidgetFactory, Template } from '../../types';\nimport connectRelevantSort, {\n  RelevantSortConnectorParams,\n  RelevantSortRenderState,\n  RelevantSortWidgetDescription,\n} from '../../connectors/relevant-sort/connectRelevantSort';\nimport RelevantSort, {\n  RelevantSortComponentCSSClasses,\n} from '../../components/RelevantSort/RelevantSort';\nimport defaultTemplates from './defaultTemplates';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\n\nexport type RelevantSortCSSClasses = {\n  root?: string;\n  text?: string;\n  button?: string;\n};\n\nexport type RelevantSortTemplates = Partial<{\n  text: Template<{ isRelevantSorted: boolean }>;\n  button: Template<{ isRelevantSorted: boolean }>;\n}>;\n\nexport type RelevantSortWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: RelevantSortCSSClasses;\n  templates?: RelevantSortTemplates;\n};\n\ntype RelevantSortWidget = WidgetFactory<\n  RelevantSortWidgetDescription & { $$widgetType: 'ais.relevantSort' },\n  RelevantSortConnectorParams,\n  RelevantSortWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'relevant-sort',\n});\n\nconst suit = component('RelevantSort');\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  templates,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: RelevantSortComponentCSSClasses;\n  renderState: {\n    templateProps?: PreparedTemplateProps<RelevantSortTemplates>;\n  };\n  templates: RelevantSortTemplates;\n}) => ({\n  isRelevantSorted,\n  isVirtualReplica,\n  refine,\n}: RelevantSortRenderState) => {\n  render(\n    <RelevantSort\n      cssClasses={cssClasses}\n      templates={templates}\n      isRelevantSorted={isRelevantSorted}\n      isVirtualReplica={isVirtualReplica}\n      refine={refine}\n    />,\n    containerNode\n  );\n};\n\nconst relevantSort: RelevantSortWidget = widgetParams => {\n  const {\n    container,\n    templates: userTemplates = {} as RelevantSortTemplates,\n    cssClasses: userCssClasses = {} as RelevantSortCSSClasses,\n  } = widgetParams;\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses: RelevantSortComponentCSSClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n  };\n  const templates: RelevantSortTemplates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRelevantSort(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.relevantSort',\n  };\n};\n\nexport default relevantSort;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { WidgetFactory, Template, RendererOptions } from '../../types';\nimport connectSearchBox, {\n  SearchBoxConnectorParams,\n  SearchBoxRenderState,\n  SearchBoxWidgetDescription,\n} from '../../connectors/search-box/connectSearchBox';\nimport SearchBox, {\n  SearchBoxComponentCSSClasses,\n} from '../../components/SearchBox/SearchBox';\nimport defaultTemplates from './defaultTemplates';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'search-box' });\nconst suit = component('SearchBox');\n\nexport type SearchBoxTemplates = {\n  /**\n   * Template used for displaying the submit button. Can accept a function or a Hogan string.\n   */\n  submit: Template;\n  /**\n   * Template used for displaying the reset button. Can accept a function or a Hogan string.\n   */\n  reset: Template;\n  /**\n   * Template used for displaying the loading indicator. Can accept a function or a Hogan string.\n   */\n  loadingIndicator: Template;\n};\n\nexport type SearchBoxCSSClasses = {\n  /**\n   * CSS class to add to the wrapping `<div>`\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the form\n   */\n  form?: string | string[];\n  /**\n   * CSS class to add to the input.\n   */\n  input?: string | string[];\n  /**\n   * CSS classes added to the submit button.\n   */\n  submit?: string | string[];\n  /**\n   * CSS classes added to the submit icon.\n   */\n  submitIcon?: string | string[];\n  /**\n   * CSS classes added to the reset button.\n   */\n  reset?: string | string[];\n  /**\n   * CSS classes added to the reset icon.\n   */\n  resetIcon?: string | string[];\n  /**\n   * CSS classes added to the loading indicator element.\n   */\n  loadingIndicator?: string | string[];\n  /**\n   * CSS classes added to the loading indicator icon.\n   */\n  loadingIcon?: string | string[];\n};\n\nexport type SearchBoxWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget\n   */\n  container: string | HTMLElement;\n  /**\n   * The placeholder of the input\n   */\n  placeholder?: string;\n  /**\n   * Whether the input should be autofocused\n   */\n  autofocus?: boolean;\n  /**\n   * If set, trigger the search\n   * once `<Enter>` is pressed only.\n   */\n  searchAsYouType?: boolean;\n  /**\n   * Whether to show the reset button\n   */\n  showReset?: boolean;\n  /**\n   * Whether to show the submit button\n   */\n  showSubmit?: boolean;\n  /**\n   * Whether to show the loading indicator (replaces the submit if\n   * the search is stalled)\n   */\n  showLoadingIndicator?: boolean;\n  /**\n   * CSS classes to add\n   */\n  cssClasses?: SearchBoxCSSClasses;\n\n  /**\n   * Templates used for customizing the rendering of the searchbox\n   */\n  templates?: Partial<SearchBoxTemplates>;\n  /**\n   * A function that is called every time a new search is done. You\n   * will get the query as the first parameter and a search (query) function to call as the second parameter.\n   * This `queryHook` can be used to debounce the number of searches done from the search box.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  placeholder,\n  templates,\n  autofocus,\n  searchAsYouType,\n  showReset,\n  showSubmit,\n  showLoadingIndicator,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: SearchBoxComponentCSSClasses;\n  placeholder: string;\n  templates: SearchBoxTemplates;\n  autofocus: boolean;\n  searchAsYouType: boolean;\n  showReset: boolean;\n  showSubmit: boolean;\n  showLoadingIndicator: boolean;\n}) => ({\n  refine,\n  query,\n  isSearchStalled,\n}: SearchBoxRenderState & RendererOptions<SearchBoxConnectorParams>) => {\n  render(\n    <SearchBox\n      query={query}\n      placeholder={placeholder}\n      autofocus={autofocus}\n      refine={refine}\n      searchAsYouType={searchAsYouType}\n      templates={templates}\n      showSubmit={showSubmit}\n      showReset={showReset}\n      showLoadingIndicator={showLoadingIndicator}\n      isSearchStalled={isSearchStalled}\n      cssClasses={cssClasses}\n    />,\n    containerNode\n  );\n};\n\n/**\n * The searchbox widget is used to let the user set a text based query.\n *\n * This is usually the  main entry point to start the search in an instantsearch context. For that\n * reason is usually placed on top, and not hidden so that the user can start searching right\n * away.\n *\n */\nexport type SearchBoxWidget = WidgetFactory<\n  SearchBoxWidgetDescription & { $$widgetType: 'ais.searchBox' },\n  SearchBoxConnectorParams,\n  SearchBoxWidgetParams\n>;\n\nconst searchBox: SearchBoxWidget = function searchBox(widgetParams) {\n  const {\n    container,\n    placeholder = '',\n    cssClasses: userCssClasses = {},\n    autofocus = false,\n    searchAsYouType = true,\n    showReset = true,\n    showSubmit = true,\n    showLoadingIndicator = true,\n    queryHook,\n    templates,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n    submitIcon: cx(\n      suit({ descendantName: 'submitIcon' }),\n      userCssClasses.submitIcon\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n    resetIcon: cx(\n      suit({ descendantName: 'resetIcon' }),\n      userCssClasses.resetIcon\n    ),\n    loadingIndicator: cx(\n      suit({ descendantName: 'loadingIndicator' }),\n      userCssClasses.loadingIndicator\n    ),\n    loadingIcon: cx(\n      suit({ descendantName: 'loadingIcon' }),\n      userCssClasses.loadingIcon\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates: { ...defaultTemplates, ...templates },\n    autofocus,\n    searchAsYouType,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  });\n\n  const makeWidget = connectSearchBox(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ queryHook }),\n    $$widgetType: 'ais.searchBox',\n  };\n};\n\nexport default searchBox;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport Selector from '../../components/Selector/Selector';\nimport connectSortBy, {\n  SortByConnectorParams,\n  SortByItem,\n  SortByRenderState,\n  SortByWidgetDescription,\n} from '../../connectors/sort-by/connectSortBy';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { Renderer, TransformItems, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'sort-by' });\nconst suit = component('SortBy');\n\nexport type SortByWidgetCssClasses = {\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n};\n\nexport type SortByIndexDefinition = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByIndexDefinition[];\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: Partial<SortByWidgetCssClasses>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByWidget = WidgetFactory<\n  SortByWidgetDescription & { $$widgetType: 'ais.sortBy' },\n  SortByConnectorParams,\n  SortByWidgetParams\n>;\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n}): Renderer<SortByRenderState, SortByWidgetParams> => (\n  { currentRefinement, options, refine },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    return;\n  }\n\n  render(\n    <div className={cssClasses.root}>\n      <Selector\n        cssClasses={cssClasses}\n        currentValue={currentRefinement}\n        options={options}\n        setValue={refine}\n      />\n    </div>,\n    containerNode\n  );\n};\n\n/**\n * Sort by selector is a widget used for letting the user choose between different\n * indices that contains the same data with a different order / ranking formula.\n */\nconst sortBy: SortByWidget = widgetParams => {\n  const { container, items, cssClasses: userCssClasses = {}, transformItems } =\n    widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectSortBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ container: containerNode, items, transformItems }),\n    $$widgetType: 'ais.sortBy',\n  };\n};\n\nexport default sortBy;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport Stats from '../../components/Stats/Stats';\nimport connectStats, {\n  StatsConnectorParams,\n  StatsRenderState,\n  StatsWidgetDescription,\n} from '../../connectors/stats/connectStats';\nimport {\n  prepareTemplateProps,\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport { Renderer, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'stats' });\nconst suit = component('Stats');\n\nexport type StatsCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n\n  /**\n   * CSS class to add to the text span element.\n   */\n  text?: string | string[];\n};\n\nexport type StatsTemplates = {\n  /**\n   * Text template, provided with `hasManyResults`, `hasNoResults`, `hasOneResult`, `hitsPerPage`, `nbHits`, `nbSortedHits`, `nbPages`, `areHitsSorted`, `page`, `processingTimeMS`, `query`.\n   */\n  text: Template<\n    {\n      hasManyResults: boolean;\n      hasNoResults: boolean;\n      hasOneResult: boolean;\n    } & StatsRenderState\n  >;\n};\n\nexport type StatsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: Partial<StatsTemplates>;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: StatsCSSClasses;\n};\n\nexport type StatsWidget = WidgetFactory<\n  StatsWidgetDescription & { $$widgetType: 'ais.stats' },\n  StatsConnectorParams,\n  StatsWidgetParams\n>;\n\nexport const defaultTemplates: StatsTemplates = {\n  text: `\n    {{#areHitsSorted}}\n      {{#hasNoSortedResults}}No relevant results{{/hasNoSortedResults}}\n      {{#hasOneSortedResults}}1 relevant result{{/hasOneSortedResults}}\n      {{#hasManySortedResults}}{{#helpers.formatNumber}}{{nbSortedHits}}{{/helpers.formatNumber}} relevant results{{/hasManySortedResults}}\n      sorted out of {{#helpers.formatNumber}}{{nbHits}}{{/helpers.formatNumber}}\n    {{/areHitsSorted}}\n    {{^areHitsSorted}}\n      {{#hasNoResults}}No results{{/hasNoResults}}\n      {{#hasOneResult}}1 result{{/hasOneResult}}\n      {{#hasManyResults}}{{#helpers.formatNumber}}{{nbHits}}{{/helpers.formatNumber}} results{{/hasManyResults}}\n    {{/areHitsSorted}}\n    found in {{processingTimeMS}}ms`,\n};\n\nconst renderer = ({\n  renderState,\n  cssClasses,\n  containerNode,\n  templates,\n}): Renderer<StatsRenderState, Partial<StatsWidgetParams>> => (\n  {\n    hitsPerPage,\n    nbHits,\n    nbSortedHits,\n    areHitsSorted,\n    nbPages,\n    page,\n    processingTimeMS,\n    query,\n    instantSearchInstance,\n  },\n  isFirstRendering\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  render(\n    <Stats\n      cssClasses={cssClasses}\n      hitsPerPage={hitsPerPage}\n      nbHits={nbHits}\n      nbSortedHits={nbSortedHits}\n      areHitsSorted={areHitsSorted}\n      nbPages={nbPages}\n      page={page}\n      processingTimeMS={processingTimeMS}\n      query={query}\n      templateProps={renderState.templateProps}\n    />,\n    containerNode\n  );\n};\n\n/**\n * The `stats` widget is used to display useful insights about the current results.\n *\n * By default, it will display the **number of hits** and the time taken to compute the\n * results inside the engine.\n */\nconst stats: StatsWidget = widgetParams => {\n  const {\n    container,\n    cssClasses: userCssClasses = {} as StatsCSSClasses,\n    templates = defaultTemplates,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses: StatsCSSClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectStats(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.stats',\n  };\n};\n\nexport default stats;\n","export default {\n  labelText: '{{name}}',\n};\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport cx from 'classnames';\nimport ToggleRefinement, {\n  ToggleRefinementComponentCSSClasses,\n} from '../../components/ToggleRefinement/ToggleRefinement';\nimport connectToggleRefinement, {\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementValue,\n  ToggleRefinementRenderState,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  prepareTemplateProps,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { RendererOptions, Template, WidgetFactory } from '../../types';\nimport { component } from '../../lib/suit';\nimport { PreparedTemplateProps } from '../../lib/utils/prepareTemplateProps';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n});\nconst suit = component('ToggleRefinement');\n\nconst renderer = ({\n  containerNode,\n  cssClasses,\n  renderState,\n  templates,\n}: {\n  containerNode: HTMLElement;\n  cssClasses: ToggleRefinementComponentCSSClasses;\n  renderState: {\n    templateProps?: PreparedTemplateProps<ToggleRefinementTemplates>;\n  };\n  templates: Partial<ToggleRefinementTemplates>;\n}) => (\n  {\n    value,\n    refine,\n    instantSearchInstance,\n  }: ToggleRefinementRenderState &\n    RendererOptions<ToggleRefinementConnectorParams>,\n  isFirstRendering: boolean\n) => {\n  if (isFirstRendering) {\n    renderState.templateProps = prepareTemplateProps({\n      defaultTemplates,\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  render(\n    <ToggleRefinement\n      cssClasses={cssClasses}\n      currentRefinement={value}\n      templateProps={renderState.templateProps!}\n      refine={refine}\n    />,\n    containerNode\n  );\n};\n\nexport type ToggleRefinementCSSClasses = {\n  /**\n   * CSS class to add to the root element.\n   */\n  root?: string | string[];\n  /**\n   * CSS class to add to the label wrapping element.\n   */\n  label?: string | string[];\n  /**\n   * CSS class to add to the checkbox.\n   */\n  checkbox?: string | string[];\n  /**\n   * CSS class to add to the label text.\n   */\n  labelText?: string | string[];\n};\n\nexport type ToggleRefinementTemplates = {\n  /** the text that describes the toggle action */\n  labelText: Template<ToggleRefinementValue>;\n};\n\nexport type ToggleRefinementWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: Partial<ToggleRefinementTemplates>;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ToggleRefinementCSSClasses;\n};\n\nexport type ToggleRefinementWidget = WidgetFactory<\n  ToggleRefinementWidgetDescription & {\n    $$widgetType: 'ais.toggleRefinement';\n  },\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetParams\n>;\n\n/**\n * The toggleRefinement widget lets the user either:\n *  - switch between two values for a single facetted attribute (free_shipping / not_free_shipping)\n *  - toggleRefinement a faceted value on and off (only 'canon' for brands)\n *\n * This widget is particularly useful if you have a boolean value in the records.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n */\nconst toggleRefinement = function toggleRefinement(widgetParams) {\n  const {\n    container,\n    attribute,\n    cssClasses: userCssClasses = {},\n    templates = defaultTemplates,\n    on = true,\n    off,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectToggleRefinement(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, on, off }),\n    $$widgetType: 'ais.toggleRefinement',\n  };\n};\n\nexport default toggleRefinement;\n","import { VoiceSearchTemplates } from './voice-search';\n\nconst getButtonInnerElement = (\n  status: string,\n  errorCode: string,\n  isListening: boolean\n) => {\n  if (status === 'error' && errorCode === 'not-allowed') {\n    return `<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n            <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path>\n            <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path>\n            <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n            <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>`;\n  }\n  return `<path\n            d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n            fill=\"${isListening ? 'currentColor' : 'none'}\">\n          </path>\n          <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>`;\n};\n\nconst defaultTemplates: VoiceSearchTemplates = {\n  buttonText({ status, errorCode, isListening }) {\n    return `<svg\n       xmlns=\"http://www.w3.org/2000/svg\"\n       width=\"16\"\n       height=\"16\"\n       viewBox=\"0 0 24 24\"\n       fill=\"none\"\n       stroke=\"currentColor\"\n       stroke-width=\"2\"\n       stroke-linecap=\"round\"\n       stroke-linejoin=\"round\"\n     >\n       ${getButtonInnerElement(status, errorCode, isListening)}\n     </svg>`;\n  },\n  status: `<p>{{transcript}}</p>`,\n};\n\nexport default defaultTemplates;\n","import connectConfigure, {\n  ConfigureConnectorParams,\n  ConfigureWidgetDescription,\n} from '../../connectors/configure/connectConfigure';\nimport { Widget } from '../../types';\nimport { noop } from '../../lib/utils';\n\n/**\n * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n * to enable when the widget mounts.\n */\nexport type ConfigureWidgetParams = ConfigureConnectorParams['searchParameters'];\n\nexport type ConfigureWidget = (\n  widgetParams: ConfigureWidgetParams\n) => Widget<\n  ConfigureWidgetDescription & {\n    $$widgetType: 'ais.configure';\n    widgetParams: ConfigureConnectorParams;\n  }\n>;\n\nconst configure: ConfigureWidget = function configure(widgetParams) {\n  // This is a renderless widget that falls back to the connector's\n  // noop render and unmount functions.\n  const makeWidget = connectConfigure(noop);\n\n  return {\n    ...makeWidget({ searchParameters: widgetParams }),\n    $$widgetType: 'ais.configure',\n  };\n};\n\nexport default configure;\n","import { PlainSearchParameters } from 'algoliasearch-helper';\nimport { noop } from '../../lib/utils';\nimport connectConfigureRelatedItems, {\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetDescription,\n} from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport { WidgetFactory } from '../../types';\n\nexport type ConfigureRelatedItemsWidget = WidgetFactory<\n  ConfigureRelatedItemsWidgetDescription & {\n    $$widgetType: 'ais.configureRelatedItems';\n  },\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetParams\n>;\n\nexport type ConfigureRelatedItemsWidgetParams = PlainSearchParameters;\n\nconst configureRelatedItems: ConfigureRelatedItemsWidget = function configureRelatedItems(\n  widgetParams\n) {\n  const makeWidget = connectConfigureRelatedItems(noop);\n\n  return {\n    ...makeWidget(widgetParams),\n    $$widgetType: 'ais.configureRelatedItems',\n  };\n};\n\nexport default configureRelatedItems;\n","/* global google EventListener */\n\nexport type HTMLMarkerArguments = {\n  __id: string;\n  position: google.maps.LatLngLiteral;\n  map: google.maps.Map;\n  template: string;\n  title?: string;\n  className: string;\n  anchor?: { x: number; y: number };\n};\n\ninterface Marker {\n  __id: string;\n  anchor: { x: number; y: number };\n  offset?: { x: number; y: number };\n  listeners: { [key: string]: EventListener };\n  latLng: google.maps.LatLng;\n  element: HTMLDivElement;\n  getPosition(): google.maps.LatLng;\n}\n\nconst createHTMLMarker = (\n  googleReference: typeof google\n): new (args: HTMLMarkerArguments) => google.maps.OverlayView & Marker => {\n  class HTMLMarker extends googleReference.maps.OverlayView {\n    public __id: string;\n    public anchor: {\n      x: number;\n      y: number;\n    };\n    public offset?: {\n      x: number;\n      y: number;\n    };\n    public listeners: { [key: string]: EventListener };\n    public latLng: google.maps.LatLng;\n    public element: HTMLDivElement;\n\n    public constructor({\n      __id,\n      position,\n      map,\n      template,\n      className,\n      anchor = {\n        x: 0,\n        y: 0,\n      },\n    }: HTMLMarkerArguments) {\n      super();\n\n      this.__id = __id;\n      this.anchor = anchor;\n      this.listeners = {};\n      this.latLng = new googleReference.maps.LatLng(position);\n\n      this.element = document.createElement('div');\n      this.element.className = className;\n      this.element.style.position = 'absolute';\n      this.element.innerHTML = template;\n\n      this.setMap(map);\n    }\n\n    public onAdd() {\n      // Append the element to the map\n      this.getPanes()!.overlayMouseTarget.appendChild(this.element);\n\n      // Compute the offset onAdd & cache it because afterwards\n      // it won't retrieve the correct values, we also avoid\n      // to read the values on every draw\n      const bbBox = this.element.getBoundingClientRect();\n\n      this.offset = {\n        x: this.anchor.x + bbBox.width / 2,\n        y: this.anchor.y + bbBox.height,\n      };\n\n      // Force the width of the element will avoid the\n      // content to collapse when we move the map\n      this.element.style.width = `${bbBox.width}px`;\n    }\n\n    public draw() {\n      const position = this.getProjection().fromLatLngToDivPixel(this.latLng)!;\n\n      this.element.style.left = `${Math.round(position.x - this.offset!.x)}px`;\n      this.element.style.top = `${Math.round(position.y - this.offset!.y)}px`;\n\n      // Markers to the south are in front of markers to the north\n      // This is the default behaviour of Google Maps\n      this.element.style.zIndex = String(parseInt(this.element.style.top, 10));\n    }\n\n    public onRemove() {\n      if (this.element) {\n        this.element.parentNode!.removeChild(this.element);\n\n        Object.keys(this.listeners).forEach(eventName => {\n          this.element.removeEventListener(\n            eventName,\n            this.listeners[eventName]\n          );\n        });\n\n        // after onRemove the class is no longer used, thus it can be deleted\n        // @ts-expect-error\n        delete this.element;\n        // @ts-expect-error\n        delete this.listeners;\n      }\n    }\n\n    public addListener(eventName: string, listener: EventListener) {\n      this.listeners[eventName] = listener;\n\n      const element = this.element;\n\n      element.addEventListener(eventName, listener);\n\n      return {\n        remove() {\n          return element.removeEventListener(eventName, listener);\n        },\n      };\n    }\n\n    public getPosition() {\n      return this.latLng;\n    }\n  }\n\n  return HTMLMarker;\n};\n\nexport default createHTMLMarker;\n","/** @ts-ignore */\nimport * as Places from 'places.js';\nimport { WidgetFactory, WidgetRenderState } from '../../types';\n\n// using the type like this requires only one ts-ignore\ntype StaticOptions = Places.StaticOptions;\ntype ChangeEvent = Places.ChangeEvent;\ntype PlacesInstance = Places.PlacesInstance;\ntype ReconfigurableOptions = Places.ReconfigurableOptions;\n\nexport type PlacesWidgetParams = {\n  /**\n   * The Algolia Places reference to use.\n   *\n   * @see https://github.com/algolia/places\n   */\n  placesReference: (\n    options: StaticOptions & ReconfigurableOptions\n  ) => PlacesInstance;\n  /**\n   * The default position when the input is empty.\n   */\n  defaultPosition?: string[];\n} & StaticOptions;\n\ntype PlacesWidgetState = {\n  query: string;\n  initialLatLngViaIP: boolean | undefined;\n  isInitialLatLngViaIPSet: boolean;\n};\n\nexport type PlacesWidgetDescription = {\n  $$type: 'ais.places';\n  $$widgetType: 'ais.places';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    places: WidgetRenderState<Record<string, unknown>, PlacesWidgetParams>;\n  };\n  indexUiState: {\n    places: {\n      query: string;\n      position: string;\n    };\n  };\n};\n\nexport type PlacesWidget = WidgetFactory<\n  PlacesWidgetDescription,\n  PlacesWidgetParams,\n  PlacesWidgetParams\n>;\n\n/**\n * This widget sets the geolocation value for the search based on the selected\n * result in the Algolia Places autocomplete.\n */\nconst placesWidget: PlacesWidget = widgetParams => {\n  const { placesReference, defaultPosition = [], ...placesOptions } =\n    widgetParams || {};\n\n  if (typeof placesReference !== 'function') {\n    throw new Error(\n      'The `placesReference` option requires a valid Places.js reference.'\n    );\n  }\n\n  const placesAutocomplete = placesReference(placesOptions);\n\n  const state: PlacesWidgetState = {\n    query: '',\n    initialLatLngViaIP: undefined,\n    isInitialLatLngViaIPSet: false,\n  };\n\n  return {\n    $$type: 'ais.places',\n    $$widgetType: 'ais.places',\n\n    init({ helper }) {\n      placesAutocomplete.on('change', (eventOptions: ChangeEvent) => {\n        const {\n          suggestion: {\n            value,\n            latlng: { lat, lng },\n          },\n        } = eventOptions;\n\n        state.query = value;\n\n        helper\n          .setQueryParameter('insideBoundingBox', undefined)\n          .setQueryParameter('aroundLatLngViaIP', false)\n          .setQueryParameter('aroundLatLng', `${lat},${lng}`)\n          .search();\n      });\n\n      placesAutocomplete.on('clear', () => {\n        state.query = '';\n\n        helper.setQueryParameter('insideBoundingBox', undefined);\n\n        if (defaultPosition.length > 1) {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', false)\n            .setQueryParameter('aroundLatLng', defaultPosition.join(','));\n        } else {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', state.initialLatLngViaIP)\n            .setQueryParameter('aroundLatLng', undefined);\n        }\n\n        helper.search();\n      });\n    },\n\n    getWidgetUiState(uiState, { searchParameters }) {\n      const position =\n        searchParameters.aroundLatLng || defaultPosition.join(',');\n      const hasPositionSet = position !== defaultPosition.join(',');\n\n      if (!hasPositionSet && !state.query) {\n        const { places, ...uiStateWithoutPlaces } = uiState;\n\n        return uiStateWithoutPlaces;\n      }\n\n      return {\n        ...uiState,\n        places: {\n          query: state.query,\n          position,\n        },\n      };\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      const { query = '', position = defaultPosition.join(',') } =\n        uiState.places || {};\n\n      state.query = query;\n\n      if (!state.isInitialLatLngViaIPSet) {\n        state.isInitialLatLngViaIPSet = true;\n        state.initialLatLngViaIP = searchParameters.aroundLatLngViaIP;\n      }\n\n      placesAutocomplete.setVal(query);\n      placesAutocomplete.close();\n\n      return searchParameters\n        .setQueryParameter('insideBoundingBox', undefined)\n        .setQueryParameter('aroundLatLngViaIP', false)\n        .setQueryParameter('aroundLatLng', position || undefined);\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        places: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default placesWidget;\n","import {\n  InsightsClient,\n  InsightsClientMethod,\n  InternalMiddleware,\n  Hit,\n} from '../types';\nimport { getInsightsAnonymousUserTokenInternal } from '../helpers';\nimport { warning, noop, getAppIdAndApiKey, find } from '../lib/utils';\n\nexport type InsightsEvent = {\n  insightsMethod?: InsightsClientMethod;\n  payload: any;\n  widgetType: string;\n  eventType: string; // 'view' | 'click' | 'conversion', but we're not restricting.\n  hits?: Hit[];\n  attribute?: string;\n};\n\nexport type InsightsProps = {\n  insightsClient: null | InsightsClient;\n  insightsInitParams?: {\n    userHasOptedOut?: boolean;\n    useCookie?: boolean;\n    cookieDuration?: number;\n    region?: 'de' | 'us';\n  };\n  onEvent?: (\n    event: InsightsEvent,\n    insightsClient: null | InsightsClient\n  ) => void;\n};\n\nexport type CreateInsightsMiddleware = (\n  props: InsightsProps\n) => InternalMiddleware;\n\nexport const createInsightsMiddleware: CreateInsightsMiddleware = props => {\n  const { insightsClient: _insightsClient, insightsInitParams, onEvent } =\n    props || {};\n  if (_insightsClient !== null && !_insightsClient) {\n    if (__DEV__) {\n      throw new Error(\n        \"The `insightsClient` option is required if you want userToken to be automatically set in search calls. If you don't want this behaviour, set it to `null`.\"\n      );\n    } else {\n      throw new Error(\n        'The `insightsClient` option is required. To disable, set it to `null`.'\n      );\n    }\n  }\n\n  const hasInsightsClient = Boolean(_insightsClient);\n  const insightsClient =\n    _insightsClient === null ? (noop as InsightsClient) : _insightsClient;\n\n  return ({ instantSearchInstance }) => {\n    const [appId, apiKey] = getAppIdAndApiKey(instantSearchInstance.client);\n    let queuedUserToken: string | undefined = undefined;\n    let userTokenBeforeInit: string | undefined = undefined;\n\n    if (Array.isArray(insightsClient.queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      [, queuedUserToken] =\n        find(\n          insightsClient.queue.slice().reverse(),\n          ([method]) => method === 'setUserToken'\n        ) || [];\n    }\n    insightsClient('getUserToken', null, (_error: any, userToken: string) => {\n      // If user has called `aa('setUserToken', 'my-user-token')` before creating\n      // the `insights` middleware, we store them temporarily and\n      // set it later on.\n      //\n      // Otherwise, the `init` call might override it with anonymous user token.\n      userTokenBeforeInit = userToken;\n    });\n    insightsClient('init', { appId, apiKey, ...insightsInitParams });\n\n    return {\n      onStateChange() {},\n      subscribe() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n\n        // At the time this middleware is subscribed, `mainIndex.init()` is already called.\n        // It means `mainIndex.getHelper()` exists.\n        const helper = instantSearchInstance.mainIndex.getHelper()!;\n\n        const setUserTokenToSearch = (userToken?: string) => {\n          if (userToken) {\n            helper.setState(\n              helper.state.setQueryParameter('userToken', userToken)\n            );\n          }\n        };\n        const hasUserToken = () => Boolean((helper.state as any).userToken);\n\n        helper.setState(helper.state.setQueryParameter('clickAnalytics', true));\n\n        const anonymousUserToken = getInsightsAnonymousUserTokenInternal();\n        if (hasInsightsClient && anonymousUserToken) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken.\n          setUserTokenToSearch(anonymousUserToken);\n        }\n\n        // We consider the `userToken` coming from a `init` call to have a higher\n        // importance than the one coming from the queue.\n        if (userTokenBeforeInit) {\n          insightsClient('setUserToken', userTokenBeforeInit);\n        } else if (queuedUserToken) {\n          insightsClient('setUserToken', queuedUserToken);\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', setUserTokenToSearch, {\n          immediate: true,\n        });\n\n        instantSearchInstance.sendEventToInsights = (event: InsightsEvent) => {\n          if (onEvent) {\n            onEvent(event, _insightsClient);\n          } else if (event.insightsMethod) {\n            if (hasUserToken()) {\n              insightsClient(event.insightsMethod, event.payload);\n            } else {\n              warning(\n                false,\n                `\nCannot send event to Algolia Insights because \\`userToken\\` is not set.\n\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\n`\n              );\n            }\n          } else {\n            warning(\n              false,\n              'Cannot send event to Algolia Insights because `insightsMethod` option is missing.'\n            );\n          }\n        };\n      },\n      unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n      },\n    };\n  };\n};\n","export function getAppIdAndApiKey(searchClient) {\n  if (searchClient.transporter) {\n    // searchClient v4\n    const { headers, queryParameters } = searchClient.transporter;\n    const APP_ID = 'x-algolia-application-id';\n    const API_KEY = 'x-algolia-api-key';\n    const appId = headers[APP_ID] || queryParameters[APP_ID];\n    const apiKey = headers[API_KEY] || queryParameters[API_KEY];\n    return [appId, apiKey];\n  } else {\n    // searchClient v3\n    return [searchClient.applicationID, searchClient.apiKey];\n  }\n}\n","import { StateMapping, IndexUiState } from '../../types';\n\nfunction getIndexStateWithoutConfigure(uiState: IndexUiState): IndexUiState {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState;\n}\n\nexport default function singleIndexStateMapping(\n  indexName: string\n): StateMapping {\n  return {\n    stateToRoute(uiState) {\n      return getIndexStateWithoutConfigure(uiState[indexName] || {});\n    },\n    routeToState(routeState = {}) {\n      return {\n        [indexName]: getIndexStateWithoutConfigure(routeState),\n      };\n    },\n  };\n}\n","import { isEqual } from '../utils';\nimport { InfiniteHitsCache } from '../../connectors/infinite-hits/connectInfiniteHits';\n\nfunction getStateWithoutPage(state) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nconst KEY = 'ais.infiniteHits';\n\nfunction hasSessionStorage() {\n  return (\n    typeof window !== 'undefined' &&\n    typeof window.sessionStorage !== 'undefined'\n  );\n}\n\nexport default function createInfiniteHitsSessionStorageCache(): InfiniteHitsCache {\n  return {\n    read({ state }) {\n      if (!hasSessionStorage()) {\n        return null;\n      }\n      try {\n        const cache = JSON.parse(\n          // @ts-expect-error JSON.parse() requires a string, but it actually accepts null, too.\n          window.sessionStorage.getItem(KEY)\n        );\n\n        return cache && isEqual(cache.state, getStateWithoutPage(state))\n          ? cache.hits\n          : null;\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          try {\n            window.sessionStorage.removeItem(KEY);\n          } catch (err) {\n            // do nothing\n          }\n        }\n        return null;\n      }\n    },\n    write({ state, hits }) {\n      if (!hasSessionStorage()) {\n        return;\n      }\n      try {\n        window.sessionStorage.setItem(\n          KEY,\n          JSON.stringify({\n            state: getStateWithoutPage(state),\n            hits,\n          })\n        );\n      } catch (error) {\n        // do nothing\n      }\n    },\n  };\n}\n","import InstantSearch from './InstantSearch';\nimport version from './version';\n\nimport * as connectors from '../connectors/index';\nimport * as widgets from '../widgets/index';\nimport * as helpers from '../helpers/index';\nimport * as middlewares from '../middlewares/index';\n\nimport * as routers from './routers/index';\nimport * as stateMappings from './stateMappings/index';\nimport { createInfiniteHitsSessionStorageCache } from './infiniteHitsCache/index';\nimport { InstantSearchOptions } from '../types';\n\n/**\n * InstantSearch is the main component of InstantSearch.js. This object\n * manages the widget and lets you add new ones.\n *\n * Two parameters are required to get you started with InstantSearch.js:\n *  - `indexName`: the main index that you will use for your new search UI\n *  - `searchClient`: the search client to plug to InstantSearch.js\n *\n * The [search client provided by Algolia](https://github.com/algolia/algoliasearch-client-javascript)\n * needs an `appId` and an `apiKey`. Those parameters can be found in your\n * [Algolia dashboard](https://www.algolia.com/api-keys).\n *\n * If you want to get up and running quickly with InstantSearch.js, have a\n * look at the [getting started](getting-started.html).\n * @function instantsearch\n * @param {InstantSearchOptions} options The options\n */\nconst instantsearch = (options: InstantSearchOptions) =>\n  new InstantSearch(options);\n\ninstantsearch.routers = routers;\ninstantsearch.stateMappings = stateMappings;\ninstantsearch.connectors = connectors;\ninstantsearch.widgets = widgets;\ninstantsearch.version = version;\ninstantsearch.createInfiniteHitsSessionStorageCache = createInfiniteHitsSessionStorageCache;\ninstantsearch.highlight = helpers.highlight;\ninstantsearch.reverseHighlight = helpers.reverseHighlight;\ninstantsearch.snippet = helpers.snippet;\ninstantsearch.reverseSnippet = helpers.reverseSnippet;\ninstantsearch.insights = helpers.insights;\ninstantsearch.middlewares = middlewares;\n\nexport default instantsearch;\n"],"names":["isObjectOrArrayOrFunction","value","Array","isArray","Object","prototype","toString","call","_merge","target","source","key","hasOwnProperty","sourceVal","targetVal","slice","arguments","reduceRight","acc","keys","forEach","undefined","i","l","length","arr1","arr2","filter","index","indexOf","array","comparator","valToNumber","v","parseFloat","map","Error","excluded","sourceKeys","obj","userToken","test","lib","addRefinement","refinementList","attribute","isRefined","valueAsString","facetRefinement","concat","mod","defaultsPure","removeRefinement","clearRefinement","f","toggleRefinement","refinementType","objectHasKeys","omit","hasChanged","newRefinementList","reduce","memo","values","facetList","refinementValue","containsRefinements","refinementValueAsString","isEqualNumericRefinement","a","b","every","el","SearchParameters","newParameters","params","_parseNumbers","isValidUserToken","console","warn","this","facets","disjunctiveFacets","hierarchicalFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacetsRefinements","self","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","k","parsedValue","isNaN","insideBoundingBox","geoRect","operators","operator","parsedValues","vPrime","merge","make","instance","facet","rootPath","currentRefinement","getHierarchicalRefinement","name","clearRefinements","toggleHierarchicalFacetRefinement","validate","currentState","parameters","tagFilters","numericFilters","constructor","patch","_clearNumericRefinements","RefinementList","setQueryParameters","clearTags","setIndex","setQuery","newQuery","query","setPage","newPage","page","setFacets","setDisjunctiveFacets","setHitsPerPage","n","hitsPerPage","setTypoTolerance","typoTolerance","addNumericRefinement","isNumericRefined","push","getConjunctiveRefinements","facetName","isConjunctiveFacet","getDisjunctiveRefinements","isDisjunctiveFacet","getExcludeRefinements","removeNumericRefinement","paramValue","op","val","getNumericRefinements","getNumericRefinement","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","hierarchicalFacet","isHierarchicalFacet","addFacetRefinement","addExcludeRefinement","addDisjunctiveFacetRefinement","addTagRefinement","tag","isTagRefined","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","removeFacetRefinement","removeExcludeRefinement","removeDisjunctiveFacetRefinement","removeTagRefinement","t","toggleFacetRefinement","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","separator","_getHierarchicalFacetSeparator","getHierarchicalFacetByName","lastIndexOf","addHierarchicalFacetRefinement","path","isHierarchicalFacetRefined","removeHierarchicalFacetRefinement","toggleTagRefinement","isFacetRefined","isExcludeRefined","isDisjunctiveFacetRefined","refinements","isOperatorDefined","isAttributeValueDefined","searchedValue","find","currentValue","findArray","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","intersection","getRefinedHierarchicalFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","setQueryParameter","parameter","error","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","resetPage","_getHierarchicalFacetSortBy","sortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","getHierarchicalFacetBreadcrumb","refinement","split","part","trim","JSON","stringify","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","Boolean","defaults","defaultInstructions","sort","out","sortInstruction","matchingDefault","defaultInstruction","collection","iteratees","orders","result","criteria","iteratee","object","res","state","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","level","data","subtree","picked","facetValue","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","parts","count","format","generateHierarchicalTree","results","getIndices","attributes","indices","idx","assignFacetStats","dest","facetStats","stats","SearchResults","mainSubResponse","_rawResults","processingTimeMS","sum","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","facetValueObject","hierarchicalAttributeName","findMatchingHierarchicalFacetFromAttributeName","facetIndex","idxAttributeName","findIndex","exhaustiveFacetsCount","position","isFacetDisjunctive","isFacetConjunctive","facets_stats","compact","disjunctiveFacet","dfacet","facetResults","attributeIndex","dataFromMainRequest","refinedFacet","defaultData","root","excludes","_state","recSort","sortFn","node","children","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","type","attributeName","resultsFacets","getFacetByName","predicate","DEFAULT_SORT","getFacetValues","opts","facetValues","isExcluded","extractNormalizedFacetValues","options","order","formatSort","hierarchicalFacetValues","vanillaSortFn","getFacetStats","getRefinements","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","EventEmitter","_events","_maxListeners","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNumber","TypeError","emit","er","handler","len","args","listeners","err","context","apply","on","addListener","listener","m","newListener","warned","trace","once","fired","g","removeListener","list","splice","removeAllListeners","listenerCount","evlistener","emitter","ctor","superCtor","create","enumerable","writable","configurable","DerivedHelper","mainHelper","fn","main","lastResults","events","detach","detachDerivedHelper","getModifiedState","requestBuilder","_getQueries","queries","indexName","_getHitsSearchParams","_getDisjunctiveFacetSearchParams","_getHitsHierarchicalFacetsAttributes","facetFilters","_getFacetFilters","_getNumericFilters","additionalParams","_getTagFilters","hierarchicalRootLevel","attributesToRetrieve","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","join","orFilters","attributeToRefine","attributesIndex","allAttributes","hierarchicalRefinement","newAttributes","rootLevel","parentLevel","getSearchForFacetQuery","maxFacetHits","stateForSearchForFacetValues","searchForFacetSearchParameters","facetQuery","AlgoliaSearchHelper","client","addAlgoliaAgent","setClient","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","then","content","_originalResponse","e","catch","findAnswers","derivedHelper","Promise","resolve","derivedState","attributesForPrediction","nbHits","errorMessage","initIndex","queryLanguages","searchForFacetValues","userState","clientHasSFFV","isDisjunctive","algoliaQuery","facetHits","q","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","isDisjunctiveRefined","hasTag","hasTagRefinements","getIndex","getPage","getTags","r","states","mainQueries","queriesCount","helper","derivedQueries","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","s","specificResults","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","pos","hasPendingRequests","algoliasearchHelper","version","require$$0","defer","callback","progress","nextMicroTask","cancelled","wait","cancel","getContainerNode","selectorOrHTMLElement","isSelectorString","domElement","document","querySelector","HTMLElement","nodeType","isDomElement","isSpecialClick","button","altKey","ctrlKey","metaKey","shiftKey","uniq","prepareTemplateProps","defaultTemplates","templates","templatesConfig","config","defaultTemplate","customTemplate","isCustomTemplate","useCustomCompileOptions","prepareTemplates","Hogan","rIsWhitespace","rQuot","rNewline","rCr","rSlash","rLineSep","rParagraphSep","cleanTripleStache","token","substr","substring","replace","tagChange","text","charAt","tags","#","^","<","$","/","!",">","=","_v","{","&","_t","scan","delimiters","close","closeIndex","tagType","buf","tokens","seenTag","lineStart","otag","ctag","addBuf","String","filterLine","haveSeenTag","noNewLine","isAllWhitespace","j","match","lineIsWhitespace","next","indent","allowedInSuper","\n","isOpener","o","isCloser","open","c","stringifyPartials","codeObj","partials","esc","items","stringifySubstitutions","subs","wrapMain","code","serialNo","chooseMethod","createPartial","sym","prefix","tripleStache","write","generate","tree","walk","asString","makeTemplate","template","Template","makePartials","Function","codegen","end","nodes","ctx","inPartial","last","nodelist","func","parse","buildTree","kind","stack","customTags","tail","instructions","opener","shift","pop","sectionTags","cache","cacheKey","disableLambda","modelGet","compile","exports","findInScope","scope","doModelGet","get","compiler","str","coerceToString","hChars","rAmp","rLt","rGt","rApos","render","ri","ep","symbol","partial","base","stackText","activeSub","stackSubs","stackPartials","PartialTemplate","Substitutions","subsText","createSpecializedPartial","rp","rs","section","inverted","start","pass","ms","d","returnFound","found","names","cx","mv","ls","oldTags","ct","fl","textSource","sub","renderTemplate","templateKey","compileOptions","helpers","bindEvent","transformedHelpers","helperKey","hogan","_this","transformHelpersToHogan","spaces","unescapeRefinement","resultsFacet","nameParts","facetData","refinementKey","getFacetRefinement","includesQuery","refinementName","exclude","operatorOriginal","valueOrValues","attributesToClear","finalState","escapeRefinement","checkRendering","rendering","usage","getObjectType","noop","getPropertyByPath","current","isFiniteNumber","isFinite","isPlainObject","_typeof","isObjectLike","getTag","getPrototypeOf","proto","range","step","limitStep","arrayLength","Math","round","_toConsumableArray","_","isPrimitive","isEqual","first","second","htmlEscapes","regexUnescapedHtml","regexHasUnescapedHtml","RegExp","regexEscapedHtml","regexHasEscapedHtml","TAG_PLACEHOLDER","highlightPreTag","highlightPostTag","TAG_REPLACEMENT","replaceTagsAndEscape","character","escape","recursiveEscape","input","escapeHits","hits","__escaped","hit","_highlightResult","_snippetResult","concatHighlightedParts","isHighlighted","getHighlightedParts","highlightedValue","splitByPreTag","firstValue","elements","splitByPostTag","hasAlphanumeric","getHighlightFromSiblings","isNextHighlighted","isPreviousHighlighted","unescape","reverseHighlightedParts","some","mergeHierarchicalFacets","left","right","nextFacets","hierarchicalFacetsRefinementsMerged","mergeHierarchicalFacetsRefinements","ruleContexts","rest","mergeWithRest","mergeFacets","mergeRuleContexts","mergeDisjunctiveFacets","mergeFacetRefinements","mergeFacetsExcludes","mergeDisjunctiveFacetsRefinements","mergeNumericRefinements","mergeTagRefinements","toArray","createDocumentationMessageGenerator","widgets","links","widget","connector","createDocumentationLink","message","latLngRegExp","insideBoundingBoxToBoundingBox","neLat","neLng","swLat","swLng","northEast","lat","lng","southWest","insideBoundingBoxArrayToBoundingBox","insideBoundingBoxStringToBoundingBox","addAbsolutePosition","__position","addQueryID","queryID","__queryID","createSendEventForFacet","instantSearchInstance","widgetType","eventType","eventName","sendEventToInsights","insightsMethod","payload","filters","serializePayload","btoa","encodeURIComponent","deserializePayload","decodeURIComponent","atob","buildPayload","methodName","hitsArray","removeEscapedFromHits","objectIDs","objectID","positions","createSendEventForHits","createBindEventForHits","convertNumericRefinementsToFilters","filtersObj","debounce","lastTimeout","reject","clearTimeout","setTimeout","getWidgetAttribute","initOptions","widgetParams","getWidgetRenderState","withUsage","isIndexWidget","$$type","privateHelperSetState","_uiState","getLocalWidgetsUiState","widgetStateOptions","initialUiState","uiState","getWidgetUiState","getWidgetState","getLocalWidgetsSearchParameters","widgetSearchParametersOptions","initialSearchParameters","getWidgetSearchParameters","indexId","localWidgets","localUiState","localInstantSearchInstance","localParent","$$widgetType","getIndexName","getIndexId","getHelper","getResults","getScopedResults","widgetParent","getParent","resolveScopedResultsFromWidgets","scopedResults","getWidgets","createURL","nextState","_createURL","searchParameters","addWidgets","init","getRenderState","storeRenderState","renderState","_initialUiState","searchMetadata","isSearchStalled","_isSearchStalled","scheduleSearch","removeWidgets","dispose","_this2","onStateChange","mainIndex","setUiState","searchWithoutTriggeringOnStateChange","mergeSearchParameters","resolveSearchParameters","_this3","resetPageFromWidgets","indexWidgets","widgetHelper","scheduleStalledRender","scheduleRender","onInternalStateChange","_this4","_this5","previousUiState","innerIndex","refreshUiState","parentIndexName","component","componentName","descendantName","modifierName","descendent","modifier","suit","highlight","highlightedTagName","cssClasses","attributeValue","className","highlighted","reverseHighlight","snippet","reverseSnippet","insights","method","serializedPayload","writeDataAttributes","getInsightsAnonymousUserTokenInternal","cookies","cookie","getCookie","getIndexStateWithoutConfigure","configure","simpleStateMapping","stateToRoute","routeToState","routeState","arrayToObject","plainObjects","pushToArray","arr","valueOrArray","generateArrayPrefix","strictNullHandling","skipNulls","encoder","allowDots","serializeDate","formatter","encodeValuesOnly","charset","Date","isNonNullishPrimitive","utils","isBuffer","objKeys","parseKeys","givenKey","child","segment","depth","exec","has","allowPrototypes","chain","leaf","parseArrays","cleanRoot","parseInt","arrayLimit","0","parseObject","defaultCreateURL","qsModule","location","protocol","hostname","port","pathname","hash","queryString","portWithPrefix","defaultParseURL","setWindowTitle","title","window","hexTable","toUpperCase","assign","combine","queue","prop","refs","item","compacted","compactQueue","decode","decoder","strWithoutPlus","encode","defaultEncoder","string","Symbol","$0","charCodeAt","isRegExp","mergeTarget","targetItem","percentTwenties","Format","RFC1738","RFC3986","util","default","formatters","arrayPrefixGenerators","brackets","comma","repeat","toISO","toISOString","defaultFormat","formats","addQueryPrefix","charsetSentinel","delimiter","date","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","normalizeParseOptions","tempObj","cleanStr","limit","Infinity","skipIndex","bracketEqualsPos","numberStr","fromCharCode","parseValues","newObj","normalizeStringifyOptions","arrayFormat","joined","BrowserHistory","windowTitle","writeDelay","parseURL","writeTimer","read","qs","url","history","pushState","_onPopState","addEventListener","removeEventListener","props","createRouterMiddleware","router","historyRouter","stateMapping","route","lastRouteState","subscribe","onUpdate","unsubscribe","isMetadataEnabled","navigator","userAgent","createMetadataMiddleware","payloadContainer","createElement","refNode","ua","transporter","_ua","extractPayload","appendChild","remove","connectClearRefinements","renderFn","unmountFn","includedAttributes","excludedAttributes","transformItems","cachedRefine","connectorState","refine","cachedCreateURL","renderOptions","scopedResult","getAttributesToClear","indexHelper","canRefine","attributeToClear","InstantSearch","started","_searchStalledTimer","nextUiState","middleware","numberLocale","routing","searchFunction","stalledSearchDelay","searchClient","insightsClient","formatNumber","Number","toLocaleString","createHelpers","_stalledSearchDelay","_searchFunction","routerOptions","use","newMiddlewareList","newMiddleware","creator","middlewareToUnuse","includes","fakeClient","_mainHelperSearch","mainIndexHelper","searchFunctionHelper","setIndexHelperState","indexWidget","connectCurrentRefinements","currentRefinements","accResults","getRefinementsItems","clearRefinementFromState","filterFunction","normalizeRefinement","allItems","currentItem","label","getOperatorSymbol","normalizedRefinement","connectHierarchicalMenu","showMore","showMoreLimit","sendEvent","_refine","toggleShowMore","cachedToggleShowMore","isShowingMore","getLimit","createToggleShowMore","hierarchicalMenu","canToggleShowMore","facetItems","hasExhaustiveItems","maxValuesPerFacet","_prepareFacetValues","withFacetConfiguration","currentMaxValuesPerFacet","nextMaxValuesPerFacet","max","withMaxValuesPerFacet","connectHits","escapeHTML","initialEscaped","inferPayload","selectedHits","selectedObjectIDs","h","getSelectedHits","queryIDs","getQueryID","getPositions","withInsights","isFirstRender","aa","withInstantSearchUsage","inferredPayload","wrapInsightsClient","u","parentNode","removeChild","defaultProps","ref","__k","__p","__b","__e","__c","vnode","w","__d","debounceRendering","__v","__P","__n","ownerSVGElement","p","y","x","nextSibling","insertBefore","D","A","P","setProperty","N","style","cssText","toLowerCase","T","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","C","contextType","__E","H","__h","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","__r","getChildContext","getSnapshotBeforeUpdate","componentDidUpdate","localName","createTextNode","createElementNS","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","z","diffed","unmount","componentWillUnmount","I","forceUpdate","getDerivedStateFromError","componentDidCatch","findInsightsTarget","startElement","endElement","validator","element","parentElement","insightsListener","BaseComponent","onClick","targetWithEvent","currentTarget","hasAttribute","getAttribute","parseInsightsEvent","insightsTarget","hasDataAttributes","readDataAttributes","connectHitsPerPage","userItems","defaultItems","defaultItem","normalizeItems","hasNoResults","connectHitsWithInsights","getStateWithoutPage","connectInfiniteHits","getFirstReceivedPage","cachedHits","pages","min","getLastReceivedPage","showPrevious","cachedState","getInMemoryCache","widgetRenderState","currentPageHits","infiniteHits","isFirstPage","getShowPrevious","getShowMore","extractHitsFromCachedHits","isLastPage","nbPages","stateWithoutPage","widgetSearchParameters","connectMenu","menu","refinedItem","connectNumericMenu","equal","numericMenu","withoutRefinements","withMinRefinement","refinedState","getRefinedState","createSendEvent","encodeURI","prepareItems","connectInfiniteHitsWithInsights","option","hasNumericRefinement","resolvedState","refinedOption","decodeURI","connectPagination","totalPages","padding","pager","Paginator","currentPage","total","getMaxPage","pagination","totalDisplayedPages","nbPagesDisplayed","paddingLeft","calculatePaddingLeft","toPrecision","precision","pow","floor","ceil","connectRange","minBound","maxBound","currentRange","nextMin","nextMax","newNextMin","newNextMax","currentRangeMin","currentRangeMax","isResetMin","isResetMax","nextMinAsNumber","nextMaxAsNumber","isResetNewNextMin","isGreaterThanCurrentRange","isMinValid","isResetNewNextMax","isLowerThanRange","isMaxValid","sendEventWithRefinedState","rangeFormatter","from","to","toFixed","formatToNumber","_getCurrentRange","minValue","maxValue","_getCurrentRefinement","lowerBound","upperBound","connectRefinementList","escapeFacetValues","formatItems","lastResultsFromMainSearch","triggerRefine","lastItemsFromMainSearch","createSearchForFacetValues","escapeFacets","normalizedFacetValues","isFromSearch","maxValuesPerFacetConfig","currentLimit","searchFacetValues","searchForItems","withoutMaxValuesPerFacet","connectSearchBox","queryHook","_clear","_cachedClear","searchBox","setQueryAndSearch","clear","connectSortBy","currentIndex","initialIndex","connectRatingMenu","getRefinedStar","_values$","emptyState","ratingMenu","refinedStar","maxDecimalPlaces","decimal","getFacetsMaxDecimalPlaces","star","stars","reverse","withDisjunctiveFacet","connectStats","nbSortedHits","areHitsSorted","appliedRelevancyStrictness","connectToggleRefinement","userOn","userOff","off","hasAnOffValue","valuesToRemove","valuesToAdd","onFacetValue","offFacetValue","offValue","allFacetValues","onData","offData","nextRefinement","toggleRefinementFactory","toggle","connectBreadcrumb","breadcrumb","shiftItemsValues","getItems","getBoundingBoxAsString","setBoundingBoxAsString","connectGeoSearch","getPositionFromState","aroundLatLng","pattern","aroundLatLngToPosition","toggleRefineOnMapMove","widgetState","internalToggleRefineOnMapMove","createInternalToggleRefinementOnMapMove","isRefineOnMapMove","setMapMoveSinceLastRefine","internalSetMapMoveSinceLastRefine","createInternalSetMapMoveSinceLastRefine","shouldTriggerRender","hasMapMoveSinceLastRefine","enableRefineOnMapMove","lastRefinePosition","lastRefineBoundingBox","initArgs","renderArgs","positionChangedSinceLastRefine","boundingBoxChangedSinceLastRefine","_geoloc","getCurrentRefinementFromState","ne","sw","boundingBox","clearMapRefinement","isRefinedWithMap","geoSearch","connectPoweredBy","defaultUrl","poweredBy","getInitialSearchParameters","connectConfigure","_renderState$configur","actualState","nextSearchParameters","createOptionalFilter","attributeScore","connectConfigureRelatedItems","matchingPatterns","transformSearchParameters","optionalFilters","score","attributeSubValue","sumOrFiltersScores","makeWidget","applyRuleContexts","initialRuleContexts","trackedFilters","transformRuleContexts","sharedHelperState","previousRuleContexts","newRuleContexts","facetRefinements","trackedFacetValues","getTrackedFacetValues","ruleName","escapeRuleContext","getRuleContextsFromTrackedFilters","connectQueryRules","rules","onHelperChange","hasTrackedFilters","hasStateRefinements","userData","queryRules","createVoiceSearchHelper","getDefaultState","status","transcript","isSpeechFinal","errorCode","resetState","onStart","onError","onResult","isFinal","searchAsYouSpeak","onQueryChange","onEnd","recognition","stop","language","SpeechRecognitionAPI","webkitSpeechRecognition","SpeechRecognition","getState","isBrowserSupported","isListening","startListening","interimResults","lang","stopListening","connectVoiceSearch","additionalQueryParameters","builtInCreateVoiceSearchHelper","voiceSearch","ignorePlurals","removeStopWords","optionalWords","_voiceSearchHelper","toggleListening","voiceListeningState","additional","toReset","connectAnswers","renderDebounceTime","searchDebounceTime","extraParameters","lastResult","debouncedRefine","runConcurrentSafePromise","basePromiseId","latestResolvedId","latestResolvedValue","promise","currentPromiseId","createConcurrentSafePromise","isLoading","debouncedRender","answersIndex","hasFindAnswersMethod","answers","connectRelevantSort","relevantSort","relevancyStrictness","isVirtualReplica","isRelevantSorted","connectDynamicWidgets","Map","set","isMounted","widgetsToUnmount","widgetsToMount","shouldMount","attributesToRender","toRemove","dynamicWidgets","renderingContent","_results$renderingCon2","facetOrdering","_results$renderingCon3","_results$renderingCon4","autocomplete","stateWithoutQuery","classNames","classes","argType","inner","hasOwn","module","Component","nextProps","rootProps","RootTagName","rootTagName","Breadcrumb","templateProps","noRefinementRoot","selectedItem","link","href","preventDefault","isLast","ClearRefinements","disabledButton","disabled","CurrentRefinements","capitalize","createItemKey","category","categoryLabel","delete","handleClick","renderer","container","Answers","emptyRoot","header","loader","__hitIndex","GeoSearchButton","home","resetLabel","GeoSearchToggle","classNameLabel","classNameInput","onToggle","onChange","GeoSearchControls","enableRefine","enableRefineControl","enableClearMapRefinement","onRefineToggle","onRefineClick","onClearClick","control","selectedLabel","redo","disabledRedo","reset","refineWithMap","mapInstance","getBounds","getNorthEast","toJSON","getSouthWest","lockUserInteraction","functionThatAltersTheMapPosition","isUserInteraction","isFirstRendering","googleReference","initialZoom","initialPosition","mapOptions","createMarker","markerOptions","isPendingRefine","markers","rootElement","mapElement","treeElement","maps","mapTypeControl","fullscreenControl","streetViewControl","clickableIcons","zoomControlOptions","ControlPosition","LEFT_TOP","addListenerOnce","nextItemsIds","nextIds","marker","update","exit","__id","collectMarkersForNextRender","updateMarkers","exitMarkers","updateMarkerIds","nextPendingItems","setMap","shouldUpdate","boundingBoxPadding","google","latLngBounds","extend","getPosition","LatLngBounds","createBoundingBoxFromMarkers","fitBounds","setCenter","setZoom","HTMLMarker","RefinementListItem","facetValueToRefine","templateData","subItems","originalEvent","showSubmit","showReset","showLoadingIndicator","autofocus","searchAsYouType","onSubmit","onReset","SearchBox","focused","stopPropagation","blur","focus","placeholder","action","role","form","noValidate","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","maxLength","onInput","onBlur","onFocus","submit","hidden","loadingIndicator","isHierarchicalMenuItem","handleItemClick","childList","refinementListItemClassName","disabledItem","parentItem","tagName","resetInput","actualValue","showMoreButtonClassName","disabledShowMore","showMoreButton","shouldDisableSearchBox","searchIsAlwaysActive","searchBoxTemplateProps","searchPlaceholder","searchable","refineFirstValue","_generateFacetItem","noResults","Hits","showMoreText","empty","HitsWithInsightsListener","withInsightsListener","Selector","setValue","select","showPreviousText","InfiniteHitsWithInsightsListener","hasShowPrevious","loadPrevious","disabledLoadPrevious","loadMore","disabledLoadMore","MenuSelect","selectedValue","PaginationLink","ariaLabel","isDisabled","pageNumber","defaultOption","Pagination","pageLink","additionalClassName","previousPageItem","nextPageItem","firstPageItem","lastPageItem","pageItem","isSelected","showFirst","firstPageLink","previousPageLink","showNext","nextPageLink","showLast","lastPageLink","__H","createHandle","requestAnimationFrame","cancelAnimationFrame","E","F","Panel","useState","isCollapsed","setIsCollapsed","isControlled","setIsControlled","bodyRef","useRef","useEffect","bodyElement","collapsibleRoot","collapsible","collapsedRoot","collapseButton","prevIsCollapsed","collapsed","body","footer","PoweredBy","theme","rel","height","logo","viewBox","width","fill","QueryRuleCustomData","RangeInput","noRefinement","inputMin","inputMax","separatorText","submitText","KEYS","PERCENT_FULL","getValue","getClassName","orientation","getHandleFor","ev","killEvent","Rheostat","handlePos","handleDimensions","mousePos","sliderBox","slidingIndex","getPublicState","getSliderBoundingBox","getProgressStyle","getMinValue","getMaxValue","getHandleDimensions","getClosestSnapPoint","getSnapPosition","getNextPositionForKey","getNextState","getClosestHandle","setStartSlide","startMouseSlide","startTouchSlide","handleMouseSlide","handleTouchSlide","handleSlide","endSlide","handleKeydown","validatePosition","validateValues","canMove","fireChangeEvent","slideTo","updateNewValues","minMaxChanged","valuesChanged","orientationChanged","willBeDisabled","rheostat","rect","getBoundingClientRect","clientHeight","top","clientWidth","prevValue","diffValue","handleNode","snapPoints","snapTo","snap","abs","positionPercent","keyCode","shouldSnap","proposedValue","proposedPercentage","originalPercentage","stepValue","stepMultiplier","proposedPosition","actualPosition","nextHandlePos","closestIdx","_node","clientX","clientY","changedTouches","touch","onSliderDragStart","onSliderDragMove","onSliderDragEnd","handleId","validPositionPercent","onKeyPress","proposedValues","realValue","onAfterSet","onValuesUpdated","nextValues","_this6","Handle","handle","PitComponent","pitComponent","pitPoints","ProgressBar","progressBar","handleStyle","_this7","onKeyDown","onMouseDown","onTouchStart","tabIndex","pitStyle","Pit","positionValue","shouldDisplayValue","pitValue","marginLeft","RelevantSort","Stats","hasManySortedResults","hasNoSortedResults","hasOneSortedResults","hasManyResults","hasOneResult","ToggleRefinement","checkbox","labelText","VoiceSearch","VoiceSearchComponent","Slider","tooltips","roundedValue","stepsLength","steps","pips","computeSnapPoints","computeDefaultPitPoints","disabledRoot","createHandleComponent","handleChange","searchBoxSuit","searchableNoResults","buttonText","getButtonInnerElement","pushFunction","delay","triggerOnUIInteraction","pushInitialSearch","pushPagination","sendAnalytics","analyticsState","serializedParams","serializedRefinements","serializeRefinements","serializedNumericRefinements","equals","serializeNumericRefinements","stringifiedParams","dataToSend","lastSentData","pushTimeout","isInitialSearch","onUnload","userCssClasses","containerNode","specializedRenderer","containerSelector","userContainer","rootContainer","containers","connectorWidgets","childWidget","userTemplates","builtInMarker","userBuiltInMarker","userCustomHTMLMarker","customHTMLMarker","otherWidgetParams","createOptions","OverlayView","anchor","latLng","LatLng","getPanes","overlayMouseTarget","bbBox","offset","getProjection","fromLatLngToDivPixel","zIndex","createHTMLMarker","Marker","receivedHits","radio","scrollTo","userScrollTo","scrollToNode","scrollIntoView","panelWidgetParams","bodyContainerNode","collapsedFn","collapseIcon","widgetFactory","renderPanel","collapseButtonText","placesReference","defaultPosition","placesOptions","placesAutocomplete","initialLatLngViaIP","isInitialLatLngViaIPSet","eventOptions","suggestion","latlng","places","aroundLatLngViaIP","setVal","CustomData","rangeMin","rangeMax","minRange","maxRange","minStart","maxStart","minFinite","maxFinite","starIcon","fullStarIcon","emptyStarIcon","xmlns","id","searchablePlaceholder","searchableEscapeFacetValues","searchableIsAlwaysActive","searchableRoot","searchableForm","searchableInput","searchableSubmit","submitIcon","searchableSubmitIcon","searchableReset","resetIcon","searchableResetIcon","searchableLoadingIndicator","loadingIcon","searchableLoadingIcon","searchBoxTemplates","searchBoxDefaultTemplates","_insightsClient","insightsInitParams","onEvent","hasInsightsClient","headers","queryParameters","APP_ID","API_KEY","applicationID","apiKey","getAppIdAndApiKey","appId","queuedUserToken","userTokenBeforeInit","_error","setUserTokenToSearch","anonymousUserToken","immediate","KEY","hasSessionStorage","sessionStorage","instantsearch","routers","stateMappings","connectors","createInfiniteHitsSessionStorageCache","getItem","SyntaxError","removeItem","setItem","middlewares"],"mappings":"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"}